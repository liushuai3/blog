-- MySQL dump 10.13  Distrib 5.7.27, for Linux (x86_64)
--
-- Host: 118.24.120.220    Database: dblog
-- ------------------------------------------------------
-- Server version	5.7.21

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `biz_article`
--

DROP TABLE IF EXISTS `biz_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `biz_article` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '文章标题',
  `user_id` bigint(20) unsigned NOT NULL COMMENT '用户ID',
  `cover_image` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '文章封面图片',
  `qrcode_path` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '文章专属二维码地址',
  `is_markdown` tinyint(1) unsigned DEFAULT '1',
  `content` mediumtext COLLATE utf8mb4_unicode_ci COMMENT '文章内容',
  `content_md` mediumtext COLLATE utf8mb4_unicode_ci COMMENT 'markdown版的文章内容',
  `top` tinyint(1) DEFAULT '0' COMMENT '是否置顶',
  `type_id` bigint(20) unsigned NOT NULL COMMENT '类型',
  `status` tinyint(1) unsigned DEFAULT NULL COMMENT '状态',
  `recommended` tinyint(1) unsigned DEFAULT '0' COMMENT '是否推荐',
  `original` tinyint(1) unsigned DEFAULT '1' COMMENT '是否原创',
  `description` varchar(300) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '文章简介，最多200字',
  `keywords` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '文章关键字，优化搜索',
  `comment` tinyint(1) unsigned DEFAULT '1' COMMENT '是否开启评论',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=133 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `biz_article`
--

LOCK TABLES `biz_article` WRITE;
/*!40000 ALTER TABLE `biz_article` DISABLE KEYS */;
INSERT INTO `biz_article` VALUES (1,'OneBlog简介',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,1,'<h1 id=\"oneblog-\">OneBlog简介</h1>\n<p>OneBlog是一款简洁美观、自适应的Java博客系统。使用springboot开发，前端使用Bootstrap。支持移动端自适应，配有完备的前台和后台管理功能。</p>\n<p><strong>网站预览</strong>    </p>\n<p><a href=\"https://www.zhyd.me\">https://www.zhyd.me</a>  </p>\n<p><strong>开源地址</strong>   </p>\n<ol>\n<li><a href=\"https://gitee.com/yadong.zhang/DBlog\">Gitee</a>    </li>\n<li><a href=\"https://github.com/zhangyd-c/DBlog\">Github</a>    </li>\n</ol>\n<h2 id=\"-\">写在前面的话</h2>\n<p>ps: 虽然我知道，大部分人都是来了<strong>直接下载源代码</strong>后就潇洒的离开，并且只有等到下次<strong>突然想到</strong>“我天~~我得去看看OneBlog这烂项目更新新功能了吗”的时候才会重新来到这儿，即使你重新来过，我估计你也只有两个选择：    </p>\n<p>发现更新代码了 --&gt; 下载源码后重复上面的步骤<br>发现没更新代码 --&gt; 直接关闭浏览器</p>\n<p>虽然我知道现实就是如此的残酷，但我还是要以我萤虫之力对各位到来的同仁发出一声诚挚的嘶吼：</p>\n<p><strong>如果喜欢，请多多分享！！多多Star！！fork可以，但还是请star一下！！</strong></p>\n<h3 id=\"-\">开发环境</h3>\n<table>\n<thead>\n<tr>\n<th>工具</th>\n<th>版本或描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OS</td>\n<td>Windows 7</td>\n</tr>\n<tr>\n<td>JDK</td>\n<td>1.7+</td>\n</tr>\n<tr>\n<td>IDE</td>\n<td>IntelliJ IDEA 2017.3</td>\n</tr>\n<tr>\n<td>Maven</td>\n<td>3.3.1</td>\n</tr>\n<tr>\n<td>MySQL</td>\n<td>5.6.4</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"-\">模块划分</h3>\n<table>\n<thead>\n<tr>\n<th>模块</th>\n<th>释义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>blog-core</td>\n<td>核心业务类模块，提供基本的数据操作、工具处理等</td>\n</tr>\n<tr>\n<td>blog-admin</td>\n<td>后台管理模块</td>\n</tr>\n<tr>\n<td>blog-web</td>\n<td>前台模块</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"-\">技术栈</h3>\n<ul>\n<li>Springboot 1.5.9</li>\n<li>Apache Shiro 1.2.2</li>\n<li>Logback</li>\n<li>Redis</li>\n<li>Lombok</li>\n<li>Websocket</li>\n<li>MySQL、Mybatis、Mapper、Pagehelper</li>\n<li>Freemarker</li>\n<li>Bootstrap 3.3.0</li>\n<li>wangEditor</li>\n<li>jQuery 1.11.1、jQuery Lazyload 1.9.7、fancybox、iCheck</li>\n<li>阿里云OSS</li>\n<li>kaptcha</li>\n<li>Qiniu</li>\n<li>...</li>\n</ul>\n<h3 id=\"-\">使用方法</h3>\n<ol>\n<li>使用IDE导入本项目</li>\n<li>新建数据库<code>CREATE DATABASE dblog;</code></li>\n<li>导入数据库<code>docs/db/dblog.sql</code></li>\n<li>修改(<code>resources/application.yml</code>)配置文件<ol>\n<li>数据库链接属性(可搜索<code>datasource</code>或定位到L.19) </li>\n<li>redis配置(可搜索<code>redis</code>或定位到L.69)</li>\n<li>mail配置(可搜索<code>mail</code>或定位到L.89)</li>\n<li>【<a href=\"http://qiniu.com\">七牛云</a>】配置(见sys<em>config表中qiniu</em>*开头的字段)<br>注：因为系统存在redis缓存，如果是第一次使用，可以直接修改sys_config表内容，如果不是第一次用，建议使用admin项目中的<code>系统配置</code>页面修改相关配置内容</li>\n</ol>\n</li>\n<li>运行项目(三种方式)<ol>\n<li>项目根目录下执行<code>mvn -X clean package -Dmaven.test.skip=true</code>编译打包，然后执行<code>java -jar target/blog-web.jar</code></li>\n<li>项目根目录下执行<code>mvn springboot:run</code></li>\n<li>直接运行<code>BlogWebApplication.java</code></li>\n</ol>\n</li>\n<li>浏览器访问<code>http://127.0.0.1:8443</code></li>\n</ol>\n<p><strong>后台用户</strong></p>\n<p><em>超级管理员</em>： 账号：root  密码：123456  （本地测试使用这个账号，admin没设置权限）</p>\n<p><em>普通管理员</em>： 账号：admin  密码：123456</p>\n<p><em>评论审核管理员</em>： 账号：comment-admin  密码：123456</p>\n<p>注：后台用户的创建，尽可能做到<strong>权限最小化</strong></p>\n<p>更多详情，请参考【<a href=\"https://gitee.com/yadong.zhang/DBlog/wikis\">Wiki</a>】</p>\n<h3 id=\"-\">更新日志</h3>\n<p>2018-06-10</p>\n<p><strong>修改功能：</strong></p>\n<p>新增：<br>    markdown版的编辑器、评论框<br>    控制文章的评论框是否显示<br>    修改密码功能<br>优化：相关页面进行优化    </p>\n<p>2018-06-05</p>\n<p><strong>修改功能：</strong></p>\n<p>修复： admin用户首页报错的问题    </p>\n<p>优化：</p>\n<ol>\n<li>ROOT用户默认拥有所有权限</li>\n<li>admin页面改为macro引用的方式</li>\n<li>登录界面</li>\n<li>日志记录</li>\n</ol>\n<p>2018-05-25</p>\n<p><strong>修改功能：</strong></p>\n<ol>\n<li>修复后台标签等分页失败的问题</li>\n<li>修复前台自动申请友链失败的问题</li>\n<li>其他一些问题</li>\n</ol>\n<p>2018-05-22</p>\n<p><strong>修改功能：</strong></p>\n<ol>\n<li>完善shiro权限（数据库、页面）。注：需要重新执行下<code>sys_resources</code>和<code>sys_role_resources</code>两张表的<code>insert</code>语句</li>\n<li>redis配置默认不含密码（鉴于大多数朋友的redis都没有密码做此修改，不过本人 <strong>强烈建议</strong>设置下密码）</li>\n</ol>\n<p>2018-05-18</p>\n<p><strong>修复bug：</strong></p>\n<ol>\n<li>web端自动申请友链后不显示的问题</li>\n<li>config表修改后不能实时刷新的问题</li>\n</ol>\n<p><strong>增加功能：</strong></p>\n<ol>\n<li>网站赞赏码</li>\n<li>百度推送功能(链接提交到百度站长平台)</li>\n</ol>\n<p><strong>修改功能：</strong></p>\n<ol>\n<li>百度api的ak和百度推送的token以及七牛云的配置改为通过config表管理</li>\n<li>admin模块菜单通过标签实时获取</li>\n<li>弹窗工具类js结构调整</li>\n</ol>\n<p>你能看到这儿已经很不容易了，剩下的自己先摸索摸索吧，实在不行，加QQ群<a href=\"http://shang.qq.com/wpa/qunwpa?idkey=9f986e9b33b1de953e1ef9a96cdeec990affd0ac7855e00ff103514de2027b60\">190886500</a>，进群可以选择性的备注：<del>欧巴群主我爱你</del>(咳咳，鉴于部分群友的抗议，该备注就不用了)，麻烦大家换成：<code>我猜群主一定很帅</code></p>\n<h3 id=\"-\">图片预览</h3>\n<p><strong>前台页面</strong><br><img src=\"https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/pc-index.png?v=1.0\" alt=\"PC-首页\"><br><img src=\"https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/pc-detail.png?v=1.0\" alt=\"PC-文章详情页\"><br><img src=\"https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/m.png?v=1.0\" alt=\"手机\"><br><strong>后台页面</strong><br><img src=\"https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-index.png?v=1.0\" alt=\"首页\"><br><img src=\"https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-menu.png?v=1.0\" alt=\"菜单\"><br><img src=\"https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-articles.png?v=1.0\" alt=\"文章列表\"><br><img src=\"https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-article2.png?v=1.0\" alt=\"发表文章\"><br><img src=\"https://gitee.com/uploads/images/2018/0610/145228_06541ada_784199.png?v=1.0\" alt=\"markdown版的编辑器\" title=\"markdown版的编辑器\"><br><img src=\"https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-role.png?v=1.0\" alt=\"角色列表\"><br><img src=\"https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-role2.png?v=1.0\" alt=\"角色分配\"></p>\n<h3 id=\"-\">生命不息，折腾不止！ 更多信息，请关注：</h3>\n<ol>\n<li><a href=\"https://www.zhyd.me\">我的博客</a></li>\n<li><a href=\"http://weibo.com/211230415\">我的微博</a></li>\n<li><a href=\"http://www.toutiao.com/c/user/3286958681/\">我的头条号</a></li>\n<li><p><a href=\"http://www.imooc.com/u/1175248/articles\">我的mooc</a></p>\n<h3 id=\"-\">有任何问题可以</h3>\n<ul>\n<li><a href=\"https://www.zhyd.me/guestbook\">给我留言</a></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"-\">开源协议</h3>\n<p> <a href=\"https://gitee.com/yadong.zhang/OneBlog/blob/master/LICENSE\">MIT</a></p>\n','# OneBlog简介\nOneBlog是一款简洁美观、自适应的Java博客系统。使用springboot开发，前端使用Bootstrap。支持移动端自适应，配有完备的前台和后台管理功能。\n  \n**网站预览**    \n \n[https://www.zhyd.me](https://www.zhyd.me)  \n\n**开源地址**   \n1. [Gitee](https://gitee.com/yadong.zhang/DBlog)    \n2. [Github](https://github.com/zhangyd-c/DBlog)    \n\n## 写在前面的话\nps: 虽然我知道，大部分人都是来了**直接下载源代码**后就潇洒的离开，并且只有等到下次**突然想到**“我天~~我得去看看OneBlog这烂项目更新新功能了吗”的时候才会重新来到这儿，即使你重新来过，我估计你也只有两个选择：    \n\n发现更新代码了 --> 下载源码后重复上面的步骤    \n发现没更新代码 --> 直接关闭浏览器\n\n虽然我知道现实就是如此的残酷，但我还是要以我萤虫之力对各位到来的同仁发出一声诚挚的嘶吼：\n\n**如果喜欢，请多多分享！！多多Star！！fork可以，但还是请star一下！！**\n\n\n### 开发环境\n\n| 工具    | 版本或描述                |\n| ----- | -------------------- |\n| OS    | Windows 7            |\n| JDK   | 1.7+                 |\n| IDE   | IntelliJ IDEA 2017.3 |\n| Maven | 3.3.1                |\n| MySQL | 5.6.4                |\n\n### 模块划分\n\n| 模块         | 释义                      |\n| ---------- | ----------------------- |\n| blog-core  | 核心业务类模块，提供基本的数据操作、工具处理等 |\n| blog-admin | 后台管理模块                  |\n| blog-web   | 前台模块                    |\n\n\n### 技术栈\n\n- Springboot 1.5.9\n- Apache Shiro 1.2.2\n- Logback\n- Redis\n- Lombok\n- Websocket\n- MySQL、Mybatis、Mapper、Pagehelper\n- Freemarker\n- Bootstrap 3.3.0\n- wangEditor\n- jQuery 1.11.1、jQuery Lazyload 1.9.7、fancybox、iCheck\n- 阿里云OSS\n- kaptcha\n- Qiniu\n- ...\n\n\n### 使用方法\n\n1. 使用IDE导入本项目\n2. 新建数据库`CREATE DATABASE dblog;`\n3. 导入数据库`docs/db/dblog.sql`\n4. 修改(`resources/application.yml`)配置文件\n   1. 数据库链接属性(可搜索`datasource`或定位到L.19) \n   2. redis配置(可搜索`redis`或定位到L.69)\n   3. mail配置(可搜索`mail`或定位到L.89)\n   4. 【[七牛云](http://qiniu.com)】配置(见sys_config表中qiniu_*开头的字段)    \n   注：因为系统存在redis缓存，如果是第一次使用，可以直接修改sys_config表内容，如果不是第一次用，建议使用admin项目中的`系统配置`页面修改相关配置内容\n5. 运行项目(三种方式)\n   1. 项目根目录下执行`mvn -X clean package -Dmaven.test.skip=true`编译打包，然后执行`java -jar target/blog-web.jar`\n   2. 项目根目录下执行`mvn springboot:run`\n   3. 直接运行`BlogWebApplication.java`\n6. 浏览器访问`http://127.0.0.1:8443`\n\n\n**后台用户**\n\n_超级管理员_： 账号：root  密码：123456  （本地测试使用这个账号，admin没设置权限）\n\n_普通管理员_： 账号：admin  密码：123456\n\n_评论审核管理员_： 账号：comment-admin  密码：123456\n\n注：后台用户的创建，尽可能做到**权限最小化**\n\n更多详情，请参考【[Wiki](https://gitee.com/yadong.zhang/DBlog/wikis)】\n\n### 更新日志\n\n2018-06-10\n\n**修改功能：**\n\n新增：    \n	markdown版的编辑器、评论框    \n	控制文章的评论框是否显示    \n	修改密码功能    \n优化：相关页面进行优化    \n\n2018-06-05\n\n**修改功能：**\n\n修复： admin用户首页报错的问题    \n\n优化：\n1. ROOT用户默认拥有所有权限\n2. admin页面改为macro引用的方式\n3. 登录界面\n4. 日志记录\n\n2018-05-25\n\n**修改功能：**\n\n1. 修复后台标签等分页失败的问题\n2. 修复前台自动申请友链失败的问题\n3. 其他一些问题\n\n\n2018-05-22\n\n**修改功能：**\n\n1. 完善shiro权限（数据库、页面）。注：需要重新执行下`sys_resources`和`sys_role_resources`两张表的`insert`语句\n2. redis配置默认不含密码（鉴于大多数朋友的redis都没有密码做此修改，不过本人 **强烈建议**设置下密码）\n\n2018-05-18\n\n**修复bug：**\n\n1. web端自动申请友链后不显示的问题\n2. config表修改后不能实时刷新的问题\n	\n**增加功能：**\n1. 网站赞赏码\n2. 百度推送功能(链接提交到百度站长平台)\n	\n**修改功能：**\n1. 百度api的ak和百度推送的token以及七牛云的配置改为通过config表管理\n3. admin模块菜单通过标签实时获取\n3. 弹窗工具类js结构调整\n\n你能看到这儿已经很不容易了，剩下的自己先摸索摸索吧，实在不行，加QQ群[190886500](http://shang.qq.com/wpa/qunwpa?idkey=9f986e9b33b1de953e1ef9a96cdeec990affd0ac7855e00ff103514de2027b60)，进群可以选择性的备注：~~欧巴群主我爱你~~(咳咳，鉴于部分群友的抗议，该备注就不用了)，麻烦大家换成：`我猜群主一定很帅`\n\n### 图片预览\n\n**前台页面**\n![PC-首页](https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/pc-index.png?v=1.0)\n![PC-文章详情页](https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/pc-detail.png?v=1.0)\n![手机](https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/m.png?v=1.0)\n**后台页面**\n![首页](https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-index.png?v=1.0)\n![菜单](https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-menu.png?v=1.0)\n![文章列表](https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-articles.png?v=1.0)\n![发表文章](https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-article2.png?v=1.0)\n![markdown版的编辑器](https://gitee.com/uploads/images/2018/0610/145228_06541ada_784199.png?v=1.0 \"markdown版的编辑器\")\n![角色列表](https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-role.png?v=1.0)\n![角色分配](https://gitee.com/yadong.zhang/DBlog/raw/master/docs/img/admin-role2.png?v=1.0)\n\n\n ### 生命不息，折腾不止！ 更多信息，请关注：\n 1. [我的博客](https://www.zhyd.me)\n 2. [我的微博](http://weibo.com/211230415)\n 3. [我的头条号](http://www.toutiao.com/c/user/3286958681/)\n 4. [我的mooc](http://www.imooc.com/u/1175248/articles)\n\n ### 有任何问题可以\n- [给我留言](https://www.zhyd.me/guestbook)\n\n\n### 开源协议\n\n [MIT](https://gitee.com/yadong.zhang/OneBlog/blob/master/LICENSE)',0,3,0,0,0,'OneBlog是一款简洁美观、自适应的Java博客系统。使用springboot开发，前端使用Bootstrap。支持移动端自适应，配有完备的前台和后台管理功能。','OneBlog,开源博客',1,'2019-09-06 01:21:57','2019-10-24 20:52:58'),(14,'SSH隧道技术----端口转发，socket代理',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p style=\"text-align: center;\">&nbsp;</p> \n<p>&nbsp;<span style=\"color: #3366ff;\">原文的原始出处不详，本文也是在复制引用了某篇转载，并做了必要的整理与编辑。</span></p> \n<h3><span style=\"font-size: 15px;\">本文的受众</span></h3> \n<p><span style=\"font-family: 宋体; font-size: 16px;\">如果你遇到了以下问题，那么你应该阅读这篇文章</span></p> \n<ol> \n <li><span style=\"font-family: 宋体; font-size: 16px;\">我听说过这种技术，我对它很感兴趣</span></li> \n <li><span style=\"font-family: 宋体; font-size: 16px;\">我想在家里访问我在公司的机器（写程序，查数据，下电影）。</span></li> \n <li><span style=\"font-family: 宋体; font-size: 16px;\">公司为了防止我们用XX软件封锁了它的端口或者服务器地址。</span></li> \n <li><span style=\"font-family: 宋体; font-size: 16px;\">公司不让我们上XX网站，限制了网址甚至IP。</span></li> \n <li><span style=\"font-family: 宋体; font-size: 16px;\">公司不让我们看关于XX的信息，甚至花血本买了XX设备，能够对内容进行过滤。一看XX内容，链接就中断了。</span></li> \n <li><span style=\"font-family: 宋体; font-size: 16px;\">我爸是搞电脑的，他在家里的路由器上动了手脚，我不能看XXX了。</span></li> \n</ol> \n<p><span style=\"font-family: 宋体; font-size: 16px;\">带着这些问题，我们先从什么是ssh隧道开始。</span></p> \n<p>&nbsp;</p> \n<h3><span style=\"font-size: 15px;\">什么是SSH隧道</span></h3> \n<p><span style=\"font-size: 15px;\">首 先看下面这张图，我们所面临的大部分情况都和它类似。我们的电脑在左上角，通过公司带有防火墙功能的路由器接入互联网（当然可能还有交换机什么的在中间连 接着你和路由器，但是在我们的问题中交换机并不起到什么关键性的作用）。左下脚的部分是一个网站的服务器，它是我们公司防火墙策略的一部分，也就是说公司 不希望我们访问这个服务器。在左上还有一台机器，它也是属于我们的。但是这台机器并不在我们公司里面，换句话说他不受到公司防火墙的限制。最后也是最重 要的一点是，我们能够在公司通过互联网直接访问这台机器。或者说这台位于公司防火墙外面的机器需要拥有一个独立的互联网IP，同时公司的防火墙规则不会屏 蔽这台机器，并且这台机器运行着一个OpenSSH服务器。</span></p> \n<p>&nbsp;</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918085755812.jpg\" title=\"\" alt=\"\"></p> \n<p><span style=\"font-size: 15px;\">现 在，我们清楚地知道了自己所处的网络环境。并且不难理解我们在公司无法访问那个服务器的原因是：线路A-B-C上A-B之间的防火墙屏蔽了对那个服务器的 访问。与此同时，我们也很快注意到，线路A-B-D之间、D-C之间是不受阻碍的。相信你已经想到了，在A-B之间的防火墙不会屏蔽对机器d的访问。因此 我们可以通过机器d建立一个通道A-B-D-C，从而访问到机器c上的数据。</span></p> \n<p><span style=\"font-size: 15px;\">这条通道可以用很多技术来建立，这里我们仅仅介绍如何使用SSH服务器来建立这样一个通道－他被称为SSH隧道。</span></p> \n<h1>&nbsp;</h1> \n<h1>一、如何建立本地SSH隧道</h1> \n<p><span style=\"font-size: 15px;\">在我们计划建立一个本地SSH隧道之前，我们必须清楚下面这些数据：</span></p> \n<ol> \n <li><span style=\"font-size: 15px;\">中间服务器d的IP地址</span></li> \n <li><span style=\"font-size: 15px;\">要访问服务器c的IP地址</span></li> \n <li><span style=\"font-size: 15px;\">要访问服务器c的端口</span></li> \n</ol> \n<p><span style=\"font-size: 15px;\">现在，我们把上面这张图变得具体一些，给这些机器加上IP地址。并且根据下面这张图列出我们的计划：</span></p> \n<p>&nbsp;</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918085756567.jpg\" title=\"\" alt=\"\"></p> \n<ol> \n <li><span style=\"font-size: 15px;\">需要访问234.234.234.234的FTP服务，也就是端口21</span></li> \n <li><span style=\"font-size: 15px;\">中间服务器是123.123.123.123</span></li> \n</ol> \n<p><span style=\"font-size: 15px;\">现在我们使用下面这条命令来达成我们的目的</span></p> \n<p>&nbsp;</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">ssh</span> -N -f -L <span style=\"color: #800080;\">2121</span>:<span style=\"color: #800080;\">234.234</span>.<span style=\"color: #800080;\">234.234</span>:<span style=\"color: #800080;\">21</span> <span style=\"color: #800080;\">123.123</span>.<span style=\"color: #800080;\">123.123</span>\n<span style=\"color: #0000ff;\">ftp</span> localhost:<span style=\"color: #800080;\">2121</span> # 现在访问本地2121端口，就能连接234.<span style=\"color: #800080;\">234.234</span>.234的21端口了</pre> \n</div> \n<p>&nbsp;</p> \n<p><span style=\"font-size: 15px;\">这里我们用到了SSH客户端的三个参数，下面我们一一做出解释：</span></p> \n<ul> \n <li><span style=\"font-size: 15px;\">-N 告诉SSH客户端，这个连接不需要执行任何命令。仅仅做端口转发</span></li> \n <li><span style=\"font-size: 15px;\">-f 告诉SSH客户端在后台运行</span></li> \n <li><span style=\"font-size: 15px;\">-L 做本地映射端口，被冒号分割的三个部分含义分别是最后一个参数是我们用来建立隧道的中间机器的IP地址(IP: 123.123.123.123)</span> \n  <ul> \n   <li>需要使用的本地端口号</li> \n   <li>需要访问的目标机器IP地址（IP: 234.234.234.234）</li> \n   <li>需要访问的目标机器端口（端口: 21)</li> \n  </ul> </li> \n</ul> \n<p><span style=\"font-size: 15px;\">我们再重复一下-L参数的行为。-L X:Y:Z的含义是，将IP为Y的机器的Z端口通过中间服务器映射到本地机器的X端口。</span></p> \n<p><span style=\"font-size: 15px;\">在这条命令成功执行之后，我们已经具有绕过公司防火墙的能力，并且成功访问到了我们喜欢的一个FTP服务器了。</span></p> \n<h1>&nbsp;</h1> \n<h1>二、如何建立远程SSH隧道</h1> \n<p><span style=\"font-size: 15px; font-family: 宋体;\">通 过建立本地SSH隧道，我们成功地绕过防火墙开始下载FTP上的资源了。那么当我们在家里的时候想要察看下载进度怎么办呢？大多数公司的网络是通过路由器 接入互联网的，公司内部的机器不会直接与互联网连接，也就是不能通过互联网直接访问。通过线路D-B-A访问公司里的机器a便是不可能的。也许你已经注意 到了，虽然D-B-A这个方向的连接不通，但是A-B-D这个方向的连接是没有问题的。那么，我们能否利用一条已经连接好的A-B-D方向的连接来完成 D-B-A方向的访问呢？答案是肯定的，这就是远程SSH隧道的用途。</span></p> \n<p><span style=\"font-size: 15px; font-family: 宋体;\">与本地SSH一样，我们在建立远程SSH隧道之前要清楚下面几个参数：</span></p> \n<ul> \n <li><span style=\"font-size: 15px; font-family: 宋体;\">需要访问内部机器的远程机器的IP地址（这里是123.123.123.123）</span></li> \n <li><span style=\"font-size: 15px; font-family: 宋体;\">需要让远程机器能访问的内部机器的IP地址(这里因为是想把本机映射出去，因此IP是127.0.0.1)</span></li> \n <li><span style=\"font-size: 15px; font-family: 宋体;\">需要让远程机器能访问的内部机器的端口号(端口:22)</span></li> \n</ul> \n<p><span style=\"font-size: 15px; font-family: 宋体;\">在清楚了上面的参数后，我们使用下面的命令来建立一个远程SSH隧道，在192.168.0.100的主机上执行下面的命令：</span></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">ssh</span> -Nf -R <span style=\"color: #800080;\">2222</span>:<span style=\"color: #800080;\">127.0</span>.<span style=\"color: #800080;\">0.1</span>:<span style=\"color: #800080;\">22</span> <span style=\"color: #800080;\">123.123</span>.<span style=\"color: #800080;\">123.123</span></pre> \n</div> \n<p><span style=\"font-size: 15px; font-family: 宋体;\">&nbsp;</span></p> \n<p><span style=\"font-size: 15px; font-family: 宋体;\">现在，在IP是123.123.123.123的机器上我们用下面的命令就可以登陆公司的IP是192.168.0.100的机器了。</span></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">ssh</span> -p <span style=\"color: #800080;\">2222</span> localhost</pre> \n</div> \n<p>&nbsp;</p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">-N，-f 这两个参数我们已经在本地SSH隧道中介绍过了。我们现在重点说说参数-R。该参数的三个部分的含义分别是:</span></p> \n<ul> \n <li><span style=\"font-family: 宋体; font-size: 15px;\">远程机器使用的端口（2222）</span></li> \n <li><span style=\"font-family: 宋体; font-size: 15px;\">需要映射的内部机器的IP地址(127.0.0.1)</span></li> \n <li><span style=\"font-family: 宋体; font-size: 15px;\">需要映射的内部机器的端口(22)</span></li> \n</ul> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">例如：-R X:Y:Z 就是把我们内部的Y机器的Z端口映射到远程机器的X端口上。</span></p> \n<h1>&nbsp;</h1> \n<h1>三、建立SSH隧道的几个技巧</h1> \n<p><strong>自动重连</strong></p> \n<p>　　<span style=\"font-family: 宋体; font-size: 16px;\">隧道可能因为某些原因断开，例如：机器重启，长时间没有数据通信而被路由器切断等等。因此我们可以用程序控制隧道的重新连接，例如一个简单的循环或者使用&nbsp;<a href=\"http://cr.yp.to/daemontools.html\">djb’s daemontools</a>&nbsp;. 不管用哪种方法，重连时都应避免因输入密码而卡死程序。关于如何安全的避免输入密码的方法，请参考我的<a href=\"http://blog.jianingy.com/node/73\">如何实现安全的免密码ssh登录</a>&nbsp;。这里请注意，如果通过其他程序控制隧道连接，应当避免将SSH客户端放到后台执行，也就是去掉-f参数。</span></p> \n<p><strong>保持长时间连接</strong></p> \n<p>　　<span style=\"font-size: 16px;\">有些路由器会把长时间没有通信的连接断开。SSH客户端的TCPKeepAlive选项可以避免这个问题的发生，默认情况下它是被开启的。如果它被关闭了，可以在ssh的命令上加上-o TCPKeepAlive=yes来开启。</span></p> \n<p><span style=\"font-size: 16px;\">另一种方法是，去掉-N参数，加入一个定期能产生输出的命令。例如: top或者vmstat。下面给出一个这种方法的例子：</span></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">ssh</span> -R <span style=\"color: #800080;\">2222</span>:localhost:<span style=\"color: #800080;\">22</span> <span style=\"color: #800080;\">123.123</span>.<span style=\"color: #800080;\">123.123</span> <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">vmstat 30</span><span style=\"color: #800000;\">\"<br></span></pre> \n</div> \n<p>&nbsp;</p> \n<p><strong>检查隧道状态</strong></p> \n<p><span style=\"font-size: 16px;\">　　有些时候隧道会因为一些原因通信不畅而卡死，例如：由于传输数据量太大，被路由器带入stalled状态。这种时候，往往SSH客户端并不退出，而是卡死在 那里。一种应对方法是，使用SSH客户端的ServerAliveInterval和ServerAliveCountMax选项。 ServerAliveInterval会在隧道无通信后的一段设置好的时间后发送一个请求给服务器要求服务器响应。如果服务器在 ServerAliveCountMax次请求后都没能响应，那么SSH客户端就自动断开连接并退出，将控制权交给你的监控程序。这两个选项的设置方法分 别是在ssh时加入-o ServerAliveInterval=n和-o ServerAliveCountMax=m。其中n, m可以自行定义。</span></p> \n<p><strong>如何将端口绑定到外部地址上</strong></p> \n<p><span style=\"font-size: 16px;\">　　使用上面的方法，映射的端口只能绑定在127.0.0.1这个接口上。也就是说，只能被本机自己访问到。如何才能让其他机器访问这个端口呢？我们可以把这个 映射的端口绑定在0.0.0.0的接口上，方法是加上参数-b 0.0.0.0。同时还需要打开SSH服务器端的一个选项－GatewayPorts。默认情况下它应当是被打开的。如果被关闭的话，可以在/etc /sshd_config中修改GatewayPorts no为GatewayPorts yes来打开它。</span></p> \n<p><strong>如何寻找中间服务器</strong></p> \n<p><span style=\"font-size: 15px;\">如果你家里使用ADSL上网，多半你会比较幸运。一般的ADSL（例如&nbsp;<a href=\"http://www.chinaunicom.com/\">联通</a>&nbsp;的ADSL）都是有互联网地址的。你只需要在家里的路由器上一台装有OpenSSH server机器的SSH端口映射出去即可。同时一些提供SSH访问的虚拟主机也可以用于这一用途。例如：&nbsp;<a href=\"http://www.hostmonster.com/\">Hostmonser</a>&nbsp;或者&nbsp;<a href=\"http://www.dreamhost.com/\">Dreamhost</a>&nbsp;.</span></p> \n<h1>&nbsp;</h1> \n<h1>四、通过SSH隧道建立SOCKS服务器</h1> \n<p><span style=\"font-size: 15px;\">如果我们需要借助一台中间服务器访问很多资源，一个个映射显然不是高明的办法（事实上，高明确实没有用这个方法）。幸好，SSH客户端为我们提供了通过SSH隧道建立SOCKS服务器的功能。</span></p> \n<p><span style=\"font-size: 15px;\">通过下面的命令我们可以建立一个通过123.123.123.123的SOCKS服务器。</span></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">ssh</span> -N -f -D <span style=\"color: #800080;\">1080</span> <span style=\"color: #800080;\">123.123</span>.<span style=\"color: #800080;\">123</span> # 将端口绑定在127.<span style=\"color: #800080;\">0.0</span><span style=\"color: #000000;\">.1上\n</span><span style=\"color: #0000ff;\">ssh</span> -N -f -D <span style=\"color: #800080;\">0.0</span>.<span style=\"color: #800080;\">0.0</span>:<span style=\"color: #800080;\">1080</span> <span style=\"color: #800080;\">123.123</span>.<span style=\"color: #800080;\">123.123</span> # 将端口绑定在0.<span style=\"color: #800080;\">0.0</span>.0上</pre> \n</div> \n<p>&nbsp;</p> \n<p><span style=\"font-size: 15px;\">通过SSH建立的SOCKS服务器使用的是SOCKS5协议，在为应用程序设置SOCKS代理的时候要特别注意。</span></p> \n<h1>&nbsp;</h1> \n<h1>五、总结</h1> \n<p><span style=\"font-size: 15px;\">至 此，我们已经对如何利用SSH隧道有一个基本的认识了。现在，文章开始时的那些问题应该迎刃而解了吧。这里要特别说一下，由于SSH隧道也使用了SSH加 密协议，因此是不会被防火墙上的内容过滤器监控到的。也就是说一切在隧道中传输的数据都是被加密的。当然，离开隧道后的数据还是会保持自己原有的样子，没 有加密的数据还是会被后续的路由设备监控到。</span></p> \n<p><span style=\"font-size: 15px;\">&nbsp;</span></p> \n<p>&nbsp;</p> \n<h2><span style=\"color: #0000ff;\">PS:编者另注</span></h2> \n<p>　<span style=\"font-size: 15px;\">　在大多数情况下，我们建立ssh隧道的时候，往往是想通过一台公网的主机或者是大家都可以访问的主机做跳转机，来访问内部或者外部不能直接访问的机器。所以一般像这种情况下，请将跳转机中的ssh服务器中的GatewayPorts设为yes</span></p> \n<p><span style=\"font-size: 15px;\">　　1.建立本地的ssh隧道时，可以指定本地主机的地址，如下：</span></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">ssh</span> -Nf -L <span style=\"color: #800080;\">192.168</span>.0<span style=\"color: #800080;\">.100</span>:<span style=\"color: #800080;\">2121</span>:<span style=\"color: #800080;\">234.234</span>.<span style=\"color: #800080;\">234.234</span>:<span style=\"color: #800080;\">21</span> <span style=\"color: #800080;\">123.123</span>.<span style=\"color: #800080;\">123.123</span></pre> \n</div> \n<p>&nbsp;　　<span style=\"font-size: 16px;\">那么本地局域网的任何机器访问192.168.0.100:2121都会自动被映射到234.234.234.234:21</span></p> \n<p><span style=\"font-size: 15px;\">　　</span></p> \n<p><span style=\"font-size: 15px;\">　　2.建立远程的ssh隧道时，可以指定公网的主机地址，不过一般情况是要访问内网的主机，所以这条命令应该在任何一台内网主机上执行，比如在192.168.0.102的主机上运行：</span></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">ssh</span> -Nf -R <span style=\"color: #800080;\">123.123</span>.<span style=\"color: #800080;\">123.123</span>:<span style=\"color: #800080;\">2222</span>:<span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">0.100</span>:<span style=\"color: #800080;\">22</span> <span style=\"color: #800080;\">123.123</span>.<span style=\"color: #800080;\">123.123</span></pre> \n</div> \n<p><span style=\"font-size: 15px;\">&nbsp;只要在局域网里192.168.0.102可以直接连接内网主机192.168.0.100，且192.168.0.102可以直接与公网主机123.123.123.123建立ssh连接。那么任何外网主机通过访问公网主机123.123.123.123:2222就会被连接到192.168.0.100:22，从而可以完成外网穿越NAT到内网的访问，而不需要在内网网关和路由器上做任何操作。</span></p> \n<p><span style=\"font-size: 15px;\">&nbsp;　　</span></p> \n<p><span>　　<span style=\"font-size: 15px;\">另外，你也可以通过Xshell、Putty等工具来实现linux主机与本地windows的端口转发、socket代理，还有一些像ProxyChains 工具的使用。</span></span></p> \n<p>&nbsp;</p> \n<p><span style=\"color: #0000ff;\"><strong>推荐链接：</strong></span></p> \n<p style=\"margin-left: 30px;\"><span style=\"font-size: 15px;\">通过ssh开启代理[1]xshell开socket代理：<a href=\"http://jingyan.baidu.com/article/3052f5a1b4dc2797f21f866d.html\" target=\"_blank\">http://jingyan.baidu.com/article/3052f5a1b4dc2797f21f866d.html</a></span></p> \n<p style=\"margin-left: 30px;\"><span style=\"font-size: 15px;\">通过ssh开启代理[2]xshell进行端口转发：<a href=\"http://jingyan.baidu.com/article/09ea3ededbb6b6c0aede39d2.html\" target=\"_blank\">http://jingyan.baidu.com/article/09ea3ededbb6b6c0aede39d2.html</a></span></p> \n<p style=\"margin-left: 30px;\"><span style=\"font-size: 15px;\">通过ssh tunnel访问内网Subversion：<a href=\"http://crazycode.iteye.com/blog/568754\" target=\"_blank\">http://crazycode.iteye.com/blog/568754</a></span></p> \n<p style=\"margin-left: 30px;\"><span style=\"font-size: 15px;\">Xshell通过SSH密钥、SSH代理连接Linux服务器详解：<a href=\"http://hi.baidu.com/kdsex/item/40205cc30a84d052ac00ef56\" target=\"_blank\">http://hi.baidu.com/kdsex/item/40205cc30a84d052ac00ef56</a></span></p> \n<p>&nbsp;</p> \n<h3>&nbsp;</h3> \n<p>&nbsp;</p>',NULL,1,2,1,1,0,'原文的原始出处不详，本文也是在复制引用了某篇转载，并做了必要的整理与编辑。本文的受众如果你遇到了以下问题，那么你应该阅读这篇文章带着这些问题，我们先从什么是ssh隧道开始。','SSH隧',1,'2019-09-18 08:57:57','2020-03-16 09:12:18'),(15,'十大经典排序算法（动图演示）',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h3 id=\"排序算法说明\">0、算法概述</h3> \n<h4>0.1 算法分类<strong><br></strong></h4> \n<p>十种常见排序算法可以分为两大类：</p> \n<ul> \n <li><strong>比较类排序</strong>：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此也称为非线性时间比较类排序。</li> \n <li><strong>非比较类排序</strong>：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此也称为线性时间非比较类排序。&nbsp;</li> \n</ul> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103022939.png\" title=\"\" alt=\"\"></p> \n<h4><span style=\"font-size: 1em;\">0.2 算法复杂度</span></h4> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103025214.png\" title=\"\" alt=\"\"></p> \n<p><strong>0.3 相关概念</strong></p> \n<ul> \n <li><strong>稳定</strong>：如果a原本在b前面，而a=b，排序之后a仍然在b的前面。</li> \n <li><strong>不稳定</strong>：如果a原本在b的前面，而a=b，排序之后 a 可能会出现在 b 的后面。</li> \n <li><strong>时间复杂度</strong>：对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。</li> \n <li><strong>空间复杂度：</strong>是指算法在计算机</li> \n</ul> \n<p>内执行时所需存储空间的度量，它也是数据规模n的函数。&nbsp;</p> \n<h3 id=\"1冒泡排序bubble-sort\">1、冒泡排序（Bubble Sort）</h3> \n<p>冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。&nbsp;</p> \n<h4 id=\"2算法描述和实现\">1.1 算法描述</h4> \n<ul> \n <li>比较相邻的元素。如果第一个比第二个大，就交换它们两个；</li> \n <li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；</li> \n <li>针对所有的元素重复以上的步骤，除了最后一个；</li> \n <li>重复步骤1~3，直到排序完成。</li> \n</ul> \n<p><strong>1.2 动图演示</strong></p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103046168.gif\" title=\"\" alt=\"\"></p> \n<h4 id=\"2算法描述和实现\">1.3 代码实现</h4> \n<div class=\"cnblogs_Highlighter\"> \n <pre class=\"brush:csharp;gutter:true;\">function bubbleSort(arr) {\n    var len = arr.length;\n    for (var i = 0; i &lt; len - 1; i++) {\n        for (var j = 0; j &lt; len - 1 - i; j++) {\n            if (arr[j] &gt; arr[j+1]) {        // 相邻元素两两对比\n                var temp = arr[j+1];        // 元素交换\n                arr[j+1] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    return arr;\n}</pre> \n</div> \n<h3 id=\"2选择排序selection-sort\">2、选择排序（Selection Sort）</h3> \n<p>选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。&nbsp;</p> \n<h4 id=\"2算法描述和实现-1\">2.1 算法描述</h4> \n<p>n个记录的直接选择排序可经过n-1趟直接选择排序得到有序结果。具体算法描述如下：</p> \n<ul> \n <li>初始状态：无序区为R[1..n]，有序区为空；</li> \n <li>第i趟排序(i=1,2,3…n-1)开始时，当前有序区和无序区分别为R[1..i-1]和R(i..n）。该趟排序从当前无序区中-选出关键字最小的记录 R[k]，将它与无序区的第1个记录R交换，使R[1..i]和R[i+1..n)分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；</li> \n <li>n-1趟结束，数组有序化了。</li> \n</ul> \n<h4 id=\"2算法描述和实现\"><strong>2.2 动图演示</strong></h4> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103027101.gif\" title=\"\" alt=\"\">　　</p> \n<h4 id=\"2算法描述和实现\">2.3 代码实现</h4> \n<div class=\"cnblogs_Highlighter\"> \n <pre class=\"brush:csharp;gutter:true;\">function selectionSort(arr) {\n    var len = arr.length;\n    var minIndex, temp;\n    for (var i = 0; i &lt; len - 1; i++) {\n        minIndex = i;\n        for (var j = i + 1; j &lt; len; j++) {\n            if (arr[j] &lt; arr[minIndex]) {     // 寻找最小的数\n                minIndex = j;                 // 将最小数的索引保存\n            }\n        }\n        temp = arr[i];\n        arr[i] = arr[minIndex];\n        arr[minIndex] = temp;\n    }\n    return arr;\n}&nbsp;</pre> \n</div> \n<h4>2.4 算法分析</h4> \n<p>表现最稳定的排序算法之一，因为无论什么数据进去都是O(n<sup>2</sup>)的时间复杂度，所以用到它的时候，数据规模越小越好。唯一的好处可能就是不占用额外的内存空间了吧。理论上讲，选择排序可能也是平时排序一般人想到的最多的排序方法了吧。</p> \n<h3 id=\"3插入排序insertion-sort\">3、插入排序（Insertion Sort）</h3> \n<p>插入排序（Insertion-Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。</p> \n<h4>3.1 算法描述</h4> \n<p>一般来说，插入排序都采用in-place在数组上实现。具体算法描述如下：</p> \n<ul> \n <li>从第一个元素开始，该元素可以认为已经被排序；</li> \n <li>取出下一个元素，在已经排序的元素序列中从后向前扫描；</li> \n <li>如果该元素（已排序）大于新元素，将该元素移到下一位置；</li> \n <li>重复步骤3，直到找到已排序的元素小于或者等于新元素的位置；</li> \n <li>将新元素插入到该位置后；</li> \n <li>重复步骤2~5。</li> \n</ul> \n<h4>3.2 动图演示</h4> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103105998.gif\" title=\"\" alt=\"\"></p> \n<h4>3.2 代码实现</h4> \n<div class=\"cnblogs_Highlighter\"> \n <pre class=\"brush:csharp;gutter:true;\">function insertionSort(arr) {\n    var len = arr.length;\n    var preIndex, current;\n    for (var i = 1; i &lt; len; i++) {\n        preIndex = i - 1;\n        current = arr[i];\n        while (preIndex &gt;= 0 &amp;&amp; arr[preIndex] &gt; current) {\n            arr[preIndex + 1] = arr[preIndex];\n            preIndex--;\n        }\n        arr[preIndex + 1] = current;\n    }\n    return arr;\n}</pre> \n</div> \n<h4>3.4 算法分析</h4> \n<p>插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。</p> \n<h3 id=\"4希尔排序shell-sort\">4、希尔排序（Shell Sort）</h3> \n<p>1959年Shell发明，第一个突破O(n<sup>2</sup>)的排序算法，是简单插入排序的改进版。它与插入排序的不同之处在于，它会优先比较距离较远的元素。希尔排序又叫<strong>缩小增量排序</strong>。</p> \n<h4><span style=\"font-size: 1em;\">4.1 算法描述</span></h4> \n<p>先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，具体算法描述：</p> \n<ul> \n <li>选择一个增量序列t1，t2，…，tk，其中ti&gt;tj，tk=1；</li> \n <li>按增量序列个数k，对序列进行k 趟排序；</li> \n <li>每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m 的子序列，分别对各子表进行直接插入排序。仅增量因子为1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。</li> \n</ul> \n<h4>4.2 动图演示</h4> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103037432.gif\" title=\"\" alt=\"\"></p> \n<h4>4.3 代码实现</h4> \n<div class=\"cnblogs_Highlighter\"> \n <pre class=\"brush:csharp;gutter:true;\">// 修改于 2019-03-06\nfunction shellSort(arr) {\n    var len = arr.length;\n    for (var gap = Math.floor(len / 2); gap &gt; 0; gap = Math.floor(gap / 2)) {\n        // 注意：这里和动图演示的不一样，动图是分组执行，实际操作是多个分组交替执行\n        for (var i = gap; i &lt; len; i++) {\n            var j = i;\n            var current = arr[i];\n            while (j - gap &gt;= 0 &amp;&amp; current &lt; arr[j - gap]) {\n                 arr[j] = arr[j - gap];\n                 j = j - gap; \n            }\n            arr[j] = current;\n        }\n    }\n    return arr;\n}</pre> \n</div> \n<h4>4.4 算法分析</h4> \n<p>希尔排序的核心在于间隔序列的设定。既可以提前设定好间隔序列，也可以动态的定义间隔序列。动态定义间隔序列的算法是《算法（第4版）》的合著者Robert Sedgewick提出的。　</p> \n<h3 id=\"5归并排序merge-sort\">5、归并排序（Merge Sort）</h3> \n<p>归并排序是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2-路归并。&nbsp;</p> \n<h4>5.1 算法描述</h4> \n<ul> \n <li>把长度为n的输入序列分成两个长度为n/2的子序列；</li> \n <li>对这两个子序列分别采用归并排序；</li> \n <li>将两个排序好的子序列合并成一个最终的排序序列。</li> \n</ul> \n<h4>5.2 动图演示</h4> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103032030.gif\" title=\"\" alt=\"\"></p> \n<h4>5.3 代码实现</h4> \n<div class=\"cnblogs_Highlighter\"> \n <pre class=\"brush:csharp;gutter:true;\">function mergeSort(arr) {\n    var len = arr.length;\n    if (len &lt; 2) {\n        return arr;\n    }\n    var middle = Math.floor(len / 2),\n        left = arr.slice(0, middle),\n        right = arr.slice(middle);\n    return merge(mergeSort(left), mergeSort(right));\n}\n\nfunction merge(left, right) {\n    var result = [];\n\n    while (left.length&gt;0 &amp;&amp; right.length&gt;0) {\n        if (left[0] &lt;= right[0]) {\n            result.push(left.shift());\n        } else {\n            result.push(right.shift());\n        }\n    }\n\n    while (left.length)\n        result.push(left.shift());\n\n    while (right.length)\n        result.push(right.shift());\n\n    return result;\n}</pre> \n</div> \n<h4>5.4 算法分析</h4> \n<p>归并排序是一种稳定的排序方法。和选择排序一样，归并排序的性能不受输入数据的影响，但表现比选择排序好的多，因为始终都是O(nlogn）的时间复杂度。代价是需要额外的内存空间。</p> \n<h3 id=\"6快速排序quick-sort\">6、快速排序（Quick Sort）</h3> \n<p>快速排序的基本思想：通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可分别对这两部分记录继续进行排序，以达到整个序列有序。</p> \n<h4 id=\"2算法描述和实现-5\">6.1 算法描述</h4> \n<p>快速排序使用分治法来把一个串（list）分为两个子串（sub-lists）。具体算法描述如下：</p> \n<ul> \n <li>从数列中挑出一个元素，称为 “基准”（pivot）；</li> \n <li>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</li> \n <li>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。</li> \n</ul> \n<h4>6.2 动图演示</h4> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103109027.gif\" title=\"\" alt=\"\"></p> \n<h4>6.3 代码实现</h4> \n<div class=\"cnblogs_Highlighter\"> \n <pre class=\"brush:csharp;gutter:true;\">function quickSort(arr, left, right) {\n    var len = arr.length,\n        partitionIndex,\n        left = typeof left != \'number\' ? 0 : left,\n        right = typeof right != \'number\' ? len - 1 : right;\n\n    if (left &lt; right) {\n        partitionIndex = partition(arr, left, right);\n        quickSort(arr, left, partitionIndex-1);\n        quickSort(arr, partitionIndex+1, right);\n    }\n    return arr;\n}\n\nfunction partition(arr, left ,right) {     // 分区操作\n    var pivot = left,                      // 设定基准值（pivot）\n        index = pivot + 1;\n    for (var i = index; i &lt;= right; i++) {\n        if (arr[i] &lt; arr[pivot]) {\n            swap(arr, i, index);\n            index++;\n        }        \n    }\n    swap(arr, pivot, index - 1);\n    return index-1;\n}\n\nfunction swap(arr, i, j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}</pre> \n</div> \n<h3 id=\"7堆排序heap-sort\">7、堆排序（Heap Sort）</h3> \n<p>堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。</p> \n<h4>7.1 算法描述</h4> \n<ul> \n <li>将初始待排序关键字序列(R1,R2….Rn)构建成大顶堆，此堆为初始的无序区；</li> \n <li>将堆顶元素R[1]与最后一个元素R[n]交换，此时得到新的无序区(R1,R2,……Rn-1)和新的有序区(Rn),且满足R[1,2…n-1]&lt;=R[n]；</li> \n <li>由于交换后新的堆顶R[1]可能违反堆的性质，因此需要对当前无序区(R1,R2,……Rn-1)调整为新堆，然后再次将R[1]与无序区最后一个元素交换，得到新的无序区(R1,R2….Rn-2)和新的有序区(Rn-1,Rn)。不断重复此过程直到有序区的元素个数为n-1，则整个排序过程完成。</li> \n</ul> \n<h4>7.2 动图演示</h4> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103049932.gif\" title=\"\" alt=\"\"></p> \n<h4>7.3 代码实现</h4> \n<div class=\"cnblogs_Highlighter\"> \n <pre class=\"brush:csharp;gutter:true;\">var len;    // 因为声明的多个函数都需要数据长度，所以把len设置成为全局变量\n\nfunction buildMaxHeap(arr) {   // 建立大顶堆\n    len = arr.length;\n    for (var i = Math.floor(len/2); i &gt;= 0; i--) {\n        heapify(arr, i);\n    }\n}\n\nfunction heapify(arr, i) {     // 堆调整\n    var left = 2 * i + 1,\n        right = 2 * i + 2,\n        largest = i;\n\n    if (left &lt; len &amp;&amp; arr[left] &gt; arr[largest]) {\n        largest = left;\n    }\n\n    if (right &lt; len &amp;&amp; arr[right] &gt; arr[largest]) {\n        largest = right;\n    }\n\n    if (largest != i) {\n        swap(arr, i, largest);\n        heapify(arr, largest);\n    }\n}\n\nfunction swap(arr, i, j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}\n\nfunction heapSort(arr) {\n    buildMaxHeap(arr);\n\n    for (var i = arr.length - 1; i &gt; 0; i--) {\n        swap(arr, 0, i);\n        len--;\n        heapify(arr, 0);\n    }\n    return arr;\n}</pre> \n</div> \n<h3 id=\"8计数排序counting-sort\">8、计数排序（Counting Sort）</h3> \n<p>计数排序不是基于比较的排序算法，其核心在于将输入的数据值转化为键存储在额外开辟的数组空间中。 作为一种线性时间复杂度的排序，计数排序要求输入的数据必须是有确定范围的整数。</p> \n<h4 id=\"3算法分析-5\">8.1 算法描述</h4> \n<ul> \n <li>找出待排序的数组中最大和最小的元素；</li> \n <li>统计数组中每个值为i的元素出现的次数，存入数组C的第i项；</li> \n <li>对所有的计数累加（从C中的第一个元素开始，每一项和前一项相加）；</li> \n <li>反向填充目标数组：将每个元素i放在新数组的第C(i)项，每放一个元素就将C(i)减去1。</li> \n</ul> \n<h4 id=\"3算法分析-5\">8.2 动图演示</h4> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103035056.gif\" title=\"\" alt=\"\"></p> \n<h4 id=\"3算法分析-5\">8.3 代码实现</h4> \n<div class=\"cnblogs_Highlighter\"> \n <pre class=\"brush:csharp;gutter:true;\">function countingSort(arr, maxValue) {\n    var bucket = new Array(maxValue + 1),\n        sortedIndex = 0;\n        arrLen = arr.length,\n        bucketLen = maxValue + 1;\n\n    for (var i = 0; i &lt; arrLen; i++) {\n        if (!bucket[arr[i]]) {\n            bucket[arr[i]] = 0;\n        }\n        bucket[arr[i]]++;\n    }\n\n    for (var j = 0; j &lt; bucketLen; j++) {\n        while(bucket[j] &gt; 0) {\n            arr[sortedIndex++] = j;\n            bucket[j]--;\n        }\n    }\n\n    return arr;\n}</pre> \n</div> \n<h4 id=\"3算法分析-5\">8.4 算法分析</h4> \n<p>计数排序是一个稳定的排序算法。当输入的元素是 n 个 0到 k 之间的整数时，时间复杂度是O(n+k)，空间复杂度也是O(n+k)，其排序速度快于任何比较排序算法。当k不是很大并且序列比较集中时，计数排序是一个很有效的排序算法。</p> \n<h3 id=\"9桶排序bucket-sort\">9、桶排序（Bucket Sort）</h3> \n<p>桶排序是计数排序的升级版。它利用了函数的映射关系，高效与否的关键就在于这个映射函数的确定。桶排序 (Bucket sort)的工作的原理：假设输入数据服从均匀分布，将数据分到有限数量的桶里，每个桶再分别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排）。</p> \n<h4 id=\"3算法分析-5\">9.1 算法描述</h4> \n<ul> \n <li>设置一个定量的数组当作空桶；</li> \n <li>遍历输入数据，并且把数据一个一个放到对应的桶里去；</li> \n <li>对每个不是空的桶进行排序；</li> \n <li>从不是空的桶里把排好序的数据拼接起来。&nbsp;</li> \n</ul> \n<h4>9.2 图片演示</h4> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103026783.png\" title=\"\" alt=\"\"></p> \n<h4>9.3 代码实现</h4> \n<div class=\"cnblogs_Highlighter\"> \n <pre class=\"brush:csharp;gutter:true;\">function bucketSort(arr, bucketSize) {\n    if (arr.length === 0) {\n      return arr;\n    }\n\n    var i;\n    var minValue = arr[0];\n    var maxValue = arr[0];\n    for (i = 1; i &lt; arr.length; i++) {\n      if (arr[i] &lt; minValue) {\n          minValue = arr[i];                // 输入数据的最小值\n      } else if (arr[i] &gt; maxValue) {\n          maxValue = arr[i];                // 输入数据的最大值\n      }\n    }\n\n    // 桶的初始化\n    var DEFAULT_BUCKET_SIZE = 5;            // 设置桶的默认数量为5\n    bucketSize = bucketSize || DEFAULT_BUCKET_SIZE;\n    var bucketCount = Math.floor((maxValue - minValue) / bucketSize) + 1;   \n    var buckets = new Array(bucketCount);\n    for (i = 0; i &lt; buckets.length; i++) {\n        buckets[i] = [];\n    }\n\n    // 利用映射函数将数据分配到各个桶中\n    for (i = 0; i &lt; arr.length; i++) {\n        buckets[Math.floor((arr[i] - minValue) / bucketSize)].push(arr[i]);\n    }\n\n    arr.length = 0;\n    for (i = 0; i &lt; buckets.length; i++) {\n        insertionSort(buckets[i]);                      // 对每个桶进行排序，这里使用了插入排序\n        for (var j = 0; j &lt; buckets[i].length; j++) {\n            arr.push(buckets[i][j]);                      \n        }\n    }\n\n    return arr;\n}\n</pre> \n</div> \n<h4 id=\"3算法分析-7\">9.4 算法分析</h4> \n<p>桶排序最好情况下使用线性时间O(n)，桶排序的时间复杂度，取决与对各个桶之间数据进行排序的时间复杂度，因为其它部分的时间复杂度都为O(n)。很显然，桶划分的越小，各个桶之间的数据越少，排序所用的时间也会越少。但相应的空间消耗就会增大。&nbsp;</p> \n<h3 id=\"10基数排序radix-sort\">10、基数排序（Radix Sort）</h3> \n<p>基数排序是按照低位先排序，然后收集；再按照高位排序，然后再收集；依次类推，直到最高位。有时候有些属性是有优先级顺序的，先按低优先级排序，再按高优先级排序。最后的次序就是高优先级高的在前，高优先级相同的低优先级高的在前。</p> \n<h4 id=\"2算法描述和实现-9\">10.1 算法描述</h4> \n<ul> \n <li>取得数组中的最大数，并取得位数；</li> \n <li>arr为原始数组，从最低位开始取每个位组成radix数组；</li> \n <li>对radix进行计数排序（利用计数排序适用于小范围数的特点）；</li> \n</ul> \n<h4>10.2 动图演示</h4> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190918103023557.gif\" title=\"\" alt=\"\">&nbsp;</p> \n<h4>10.3 代码实现</h4> \n<div class=\"cnblogs_Highlighter\"> \n <pre class=\"brush:csharp;gutter:true;\">var counter = [];\nfunction radixSort(arr, maxDigit) {\n    var mod = 10;\n    var dev = 1;\n    for (var i = 0; i &lt; maxDigit; i++, dev *= 10, mod *= 10) {\n        for(var j = 0; j &lt; arr.length; j++) {\n            var bucket = parseInt((arr[j] % mod) / dev);\n            if(counter[bucket]==null) {\n                counter[bucket] = [];\n            }\n            counter[bucket].push(arr[j]);\n        }\n        var pos = 0;\n        for(var j = 0; j &lt; counter.length; j++) {\n            var value = null;\n            if(counter[j]!=null) {\n                while ((value = counter[j].shift()) != null) {\n                      arr[pos++] = value;\n                }\n          }\n        }\n    }\n    return arr;\n}</pre> \n</div> \n<h4 id=\"3算法分析-8\">10.4 算法分析</h4> \n<p>基数排序基于分别排序，分别收集，所以是稳定的。但基数排序的性能比桶排序要略差，每一次关键字的桶分配都需要O(n)的时间复杂度，而且分配之后得到新的关键字序列又需要O(n)的时间复杂度。假如待排数据可以分为d个关键字，则基数排序的时间复杂度将是O(d*2n) ，当然d要远远小于n，因此基本上还是线性级别的。</p> \n<p>基数排序的空间复杂度为O(n+k)，其中k为桶的数量。一般来说n&gt;&gt;k，因此额外空间需要大概n个左右。</p> \n<p>&nbsp;</p> \n<p>&nbsp;</p> \n<p>　　</p>',NULL,0,2,1,0,0,'0、算法概述0.1算法分类十种常见排序算法可以分为两大类：比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此也称为非线性时间比较类排序。非比较类排序：','排序算法',1,'2019-09-18 10:31:12','2020-01-15 17:23:11'),(21,'聊一聊数据库中的锁',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h1 id=\"背景\">背景</h1> \n<p>数据库中有一张叫<code>后宫佳丽</code>的表,每天都有几百万新的小姐姐插到表中,光阴荏苒,夜以继日,日久生情,时间长了,表中就有了几十亿的<code>小姐姐</code>数据,看到几十亿的小姐姐,每到晚上,我可愁死了,这么多小姐姐,我翻张牌呢?<br> 办法当然是精兵简政,删除那些<code>age&gt;18</code>的,给年轻的小姐姐们留位置...<br> 于是我在数据库中添加了一个定时执行的小程序,每到周日,就自动运行如下的脚本</p> \n<pre class=\"sql\"><code>delete from `后宫佳丽` where age&gt;18</code></pre> \n<p>一开始还自我感觉良好,后面我就发现不对了,每到周日,这个脚本一执行就是一整天,运行的时间有点长是小事,重点是这大好周日,我再想读这张表的数据,怎么也读不出来了,怎是一句空虚了得,我好难啊!</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919112728181.gif\" title=\"\" alt=\"Alt text\"></p> \n<h1 id=\"为什么\">为什么</h1> \n<p>编不下去了,真实背景是公司中遇到的一张有海量数据表,每次一旦执行历史数据的清理,我们的程序就因为读不到这张表的数据,疯狂地报错,后面一查了解到,原来是因为定时删除的语句设计不合理,导致数据库中数据由行锁(<code>Row lock</code>)升级为表锁(<code>Table lock</code>)了?.<br> 解决这个问题的过程中把数据库锁相关的学习了一下,这里把学习成果,分享给大家,希望对大家有所帮助.<br> 我将讨论SQL Server锁机制以及如何使用SQL Server标准动态管理视图监视SQL Server 中的锁,相信其他数据的锁也大同小异,具有一定参考意义.</p> \n<h1 id=\"铺垫知识\">铺垫知识</h1> \n<p>在我开始解释SQL Server锁定体系结构之前，让我们花点时间来描述ACID（原子性，一致性，隔离性和持久性）是什么。ACID是指数据库管理系统（DBMS）在写入或更新资料的过程中，为保证事务（transaction）是正确可靠的，所必须具备的四个特性：原子性（atomicity，或称不可分割性）、一致性（consistency）、隔离性（isolation，又称独立性）、持久性（durability）。</p> \n<h2 id=\"acid\">ACID</h2> \n<h3 id=\"原子性atomicity\">原子性(Atomicity)</h3> \n<p>一个事务（transaction）中的所有操作，或者全部完成，或者全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。即，事务不可分割、不可约简。</p> \n<h3 id=\"一致性consistency\">一致性(Consistency)</h3> \n<p>在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设约束、触发器、级联回滚等。</p> \n<h3 id=\"隔离性isolation\">隔离性(Isolation)</h3> \n<p>数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括未提交读（Read uncommitted）、提交读（read committed）、可重复读（repeatable read）和串行化（Serializable）。</p> \n<h3 id=\"持久性durability\">持久性(Durability)</h3> \n<p>事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</p> \n<p>来源:维基百科 https://zh.wikipedia.org/wiki/ACID</p> \n<h2 id=\"事务-transaction\">事务 (Transaction:)</h2> \n<p>事务是进程中最小的堆栈，不能分成更小的部分。此外，某些事务处理组可以按顺序执行，但正如我们在原子性原则中所解释的那样，即使其中一个事务失败，所有事务块也将失败。</p> \n<h2 id=\"锁定-lock\">锁定 (Lock)</h2> \n<p>锁定是一种确保数据一致性的机制。SQL Server在事务启动时锁定对象。事务完成后，SQL Server将释放锁定的对象。可以根据SQL Server进程类型和隔离级别更改此锁定模式。这些锁定模式是：</p> \n<h3 id=\"锁定层次结构\">锁定层次结构</h3> \n<p>SQL Server具有锁定层次结构，用于获取此层次结构中的锁定对象。数据库位于层次结构的顶部，行位于底部。下图说明了SQL Server的锁层次结构。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919112758469.png\" title=\"\" alt=\"Alt text\"></p> \n<h3 id=\"共享s锁-shared-s-locks\">共享（S）锁 (Shared (S) Locks)</h3> \n<p>当需要读取对象时，会发生此锁定类型。这种锁定类型不会造成太大问题。</p> \n<h3 id=\"独占x锁定-exclusive-x-locks\">独占（X）锁定 (Exclusive (X) Locks)</h3> \n<p>发生此锁定类型时，会发生以防止其他事务修改或访问锁定对象。</p> \n<h3 id=\"更新u锁-update-u-locks\">更新（U）锁 (Update (U) Locks)</h3> \n<p>此锁类型与独占锁类似，但它有一些差异。我们可以将更新操作划分为不同的阶段：读取阶段和写入阶段。在读取阶段，SQL Server不希望其他事务有权访问此对象以进行更改,因此，SQL Server使用更新锁。</p> \n<h3 id=\"意图锁定-intent-locks\">意图锁定 (Intent Locks)</h3> \n<p>当SQL Server想要在锁定层次结构中较低的某些资源上获取共享（S）锁定或独占（X）锁定时，会发生意图锁定。实际上，当SQL Server获取页面或行上的锁时，表中需要设置意图锁。</p> \n<h1 id=\"sql-server-locking\">SQL Server locking</h1> \n<p>了解了这些背景知识后，我们尝试再SQL Server找到这些锁。SQL Server提供了许多动态管理视图来访问指标。要识别SQL Server锁，我们可以使用sys.dm_tran_locks视图。在此视图中，我们可以找到有关当前活动锁管理的大量信息。</p> \n<p>在第一个示例中，我们将创建一个不包含任何索引的演示表，并尝试更新此演示表。</p> \n<pre class=\"sql\"><code>CREATE TABLE TestBlock\n(Id INT ,\nNm VARCHAR(100))\n\nINSERT INTO TestBlock\nvalues(1,\'CodingSight\')\nIn this step, we will create an open transaction and analyze the locked resources.\nBEGIN TRAN\nUPDATE TestBlock SET   Nm=\'NewValue_CodingSight\' where Id=1\nselect @@SPID</code></pre> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919112748422.png\" title=\"\" alt=\"Alt text\"></p> \n<p>再获取到了SPID后，我们来看看<code>sys.dm_tran_lock</code>视图里有什么。</p> \n<pre class=\"sql\"><code>select * from sys.dm_tran_locks  WHERE request_session_id=74</code></pre> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919112746329.png\" title=\"\" alt=\"Alt text\"></p> \n<p>此视图返回有关活动锁资源的大量信息,但是是一些我们难以理解的一些数据。因此，我们必须将<code>sys.dm_tran_locks</code> join 一些其他表。</p> \n<pre class=\"sql\"><code>SELECT dm_tran_locks.request_session_id,\n       dm_tran_locks.resource_database_id,\n       DB_NAME(dm_tran_locks.resource_database_id) AS dbname,\n       CASE\n           WHEN resource_type = \'OBJECT\'\n               THEN OBJECT_NAME(dm_tran_locks.resource_associated_entity_id)\n           ELSE OBJECT_NAME(partitions.OBJECT_ID)\n       END AS ObjectName,\n       partitions.index_id,\n       indexes.name AS index_name,\n       dm_tran_locks.resource_type,\n       dm_tran_locks.resource_description,\n       dm_tran_locks.resource_associated_entity_id,\n       dm_tran_locks.request_mode,\n       dm_tran_locks.request_status\nFROM sys.dm_tran_locks\nLEFT JOIN sys.partitions ON partitions.hobt_id = dm_tran_locks.resource_associated_entity_id\nLEFT JOIN sys.indexes ON indexes.OBJECT_ID = partitions.OBJECT_ID AND indexes.index_id = partitions.index_id\nWHERE resource_associated_entity_id &gt; 0\n  AND resource_database_id = DB_ID()\n and request_session_id=74\nORDER BY request_session_id, resource_associated_entity_id</code></pre> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919112751232.png\" title=\"\" alt=\"Alt text\"></p> \n<p>在上图中，您可以看到锁定的资源。SQL Server获取该行中的独占锁。（RID：用于锁定堆中单个行的行标识符）同时，SQL Server获取页中的独占锁和TestBlock表意向锁。这意味着在SQL Server释放锁之前，任何其他进程都无法读取此资源,这是SQL Server中的基本锁定机制。</p> \n<p>现在，我们将在测试表上填充一些合成数据。</p> \n<pre class=\"sql\"><code>TRUNCATE TABLE    TestBlock\nDECLARE @K AS INT=0\nWHILE @K &lt;8000\nBEGIN\nINSERT TestBlock VALUES(@K, CAST(@K AS varchar(10)) + \' Value\' )\nSET @K=@K+1\n END\n--After completing this step, we will run two queries and check the sys.dm_tran_locks view.\nBEGIN TRAN\n UPDATE TestBlock  set Nm =\'New_Value\' where Id&lt;5000</code></pre> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919112759660.png\" title=\"\" alt=\"Alt text\"></p> \n<p>在上面的查询中，SQL Server获取每一行的独占锁。现在，我们将运行另一个查询。</p> \n<pre class=\"sql\"><code>BEGIN TRAN\n UPDATE TestBlock  set Nm =\'New_Value\' where Id&lt;7000</code></pre> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919112737835.png\" title=\"\" alt=\"Alt text\"></p> \n<p>在上面的查询中，SQL Server在表上创建了独占锁，因为SQL Server尝试为这些将要更新的行获取大量RID锁,这种情况会导致数据库引擎中的大量资源消耗,因此，SQL Server会自动将此独占锁定移动到锁定层次结构中的上级对象(Table)。我们将此机制定义为Lock Escalation, 这就是我开篇所说的锁升级,它由行锁升级成了表锁。</p> \n<p>根据官方文档的描述存在以下任一条件，则会触发锁定升级：</p> \n<ul> \n <li><p>单个Transact-SQL语句在单个非分区表或索引上获取至少5,000个锁。</p></li> \n <li><p>单个Transact-SQL语句在分区表的单个分区上获取至少5,000个锁，并且ALTER TABLE SET LOCK_ESCALATION选项设置为AUTO。</p></li> \n <li><p>数据库引擎实例中的锁数超过了内存或配置阈值。</p></li> \n</ul> \n<p>https://docs.microsoft.com/en-us/previous-versions/sql/sql-server-2008-r2/ms184286(v=sql.105)</p> \n<h1 id=\"如何避免锁升级\">如何避免锁升级</h1> \n<p>防止锁升级的最简单，最安全的方法是保持事务的简短，并减少昂贵查询的锁占用空间，以便不超过锁升级阈值,有几种方法可以实现这一目标.</p> \n<h2 id=\"将大批量操作分解为几个较小的操作\">将大批量操作分解为几个较小的操作</h2> \n<p>例如，在我开篇所说的在几十亿条数据中删除小姐姐的数据：</p> \n<pre class=\"sql\"><code>delete from `后宫佳丽` where age&gt;18</code></pre> \n<p>我们可以不要这么心急,一次只删除500个，可以显着减少每个事务累积的锁定数量并防止锁定升级。例如：</p> \n<pre class=\"sql\"><code>SET ROWCOUNT 500\ndelete_more:\n     delete from `后宫佳丽` where age&gt;18\nIF @@ROWCOUNT &gt; 0 GOTO delete_more\nSET ROWCOUNT 0</code></pre> \n<h2 id=\"创建索引使查询尽可能高效来减少查询的锁定占用空间\">创建索引使查询尽可能高效来减少查询的锁定占用空间</h2> \n<p>如果没有索引会造成表扫描可能会增加锁定升级的可能性, 更可怕的是，它增加了死锁的可能性，并且通常会对并发性和性能产生负面影响。<br> 根据查询条件创建合适的索引,最大化提升索引查找的效率,此优化的一个目标是使索引查找返回尽可能少的行，以最小化查询的的成本。</p> \n<h2 id=\"如果其他spid当前持有不兼容的表锁则不会发生锁升级\">如果其他SPID当前持有不兼容的表锁，则不会发生锁升级</h2> \n<p>锁定升级始总是升级成表锁，而不会升级到页面锁定。如果另一个SPID持有与升级的表锁冲突的IX（intent exclusive）锁定，则它会获取更细粒度的级别（行，key或页面）锁定，定期进行额外的升级尝试。表级别的IX（intent exclusive）锁定不会锁定任何行或页面，但它仍然与升级的S（共享）或X（独占）TAB锁定不兼容。<br> 如下所示,如果有个操作始终在不到一小时内完成，您可以创建包含以下代码的sql，并安排在操作的前执行</p> \n<pre class=\"sql\"><code>BEGIN TRAN\nSELECT * FROM mytable (UPDLOCK, HOLDLOCK) WHERE 1=0\nWAITFOR DELAY \'1:00:00\'\nCOMMIT TRAN</code></pre> \n<p>此查询在mytable上获取并保持IX锁定一小时，这可防止在此期间对表进行锁定升级。</p> \n<h1 id=\"happy-ending\">Happy Ending</h1> \n<p>好了,不说了,小姐姐们因为不想离我开又打起来了(死锁).</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919112740251.png\" title=\"\" alt=\"Alt text\"></p> \n<p>参考文献:<br> SQL Server Transaction Locking and Row Versioning Guide https://docs.microsoft.com/en-us/previous-versions/sql/sql-server-guides/jj856598(v=sql.110)<br> SQL Server, Locks Object https://docs.microsoft.com/en-us/sql/relational-databases/performance-monitor/sql-server-locks-object?view=sql-server-2017<br> How to resolve blocking problems that are caused by lock escalation in SQL Server https://support.microsoft.com/es-ve/help/323630/how-to-resolve-blocking-problems-that-are-caused-by-lock-escalation-in<br> Main concept of SQL Server locking https://codingsight.com/main-concept-of-sql-server-locking/</p>',NULL,0,2,1,0,0,'背景数据库中有一张叫的表,每天都有几百万新的小姐姐插到表中,光阴荏苒,夜以继日,日久生情,时间长了,表中就有了几十亿的数据,看到几十亿的小姐姐,每到晚上,我可愁死了,这么多小姐姐,我翻张牌呢?','数据库锁',1,'2019-09-19 11:28:10','2020-01-15 17:21:56'),(23,'【原创】我们还需要学jQuery吗?',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2 id=\"引言\">引言</h2> \n<p>最近撸Vue的项目，感觉的有点心累。恰巧近日，有读者来信，就是想咨询一下</p> \n<blockquote> \n <p><strong>烟哥，现在还有必要学习jQuery么？</strong></p> \n</blockquote> \n<p>我明白，现在MVVM框架逐渐占据了主要市场，很多老项目也逐渐的从jQuery转向了MVVM架构！<br> 例如，知名网站github在2018-09-06发了一篇文章叫《Removing jQuery from GitHub.com frontend》就提到了，已经改版并放弃了jQuery。</p> \n<p>于是一些读者就有此疑问啦！<br> so，针对这个问题，想都不用想！<br> <strong>jQuery必须学！</strong></p> \n<h2 id=\"正文\">正文</h2> \n<h3 id=\"jquery的那些事\">jQuery的那些事</h3> \n<p>光阴似箭，岁月如梭...时间回到了2005年8月！<br> 一个帅气的小伙子John Resig(不用说了，比烟哥帅多了，这是我男神)，如下图所示<br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919113242415.jpg\" title=\"\" alt=\"\"></p> \n<p>他在自己博客上发了一个文章，对Prototype的“Behavior”部分的一些语法改进意见。然后呢没过多久，他就开发出了jQuery，并迅速的风靡全球！<br> <code>ps：</code>Prototype也是一个JavaScript基础类库。</p> \n<p>OK，好，我们先来看看jQuery当时能迅速的风靡全球的原因有哪些！<br> 我想了想，无外乎下面三条<br> <strong>(1)出色的DOM操作封装</strong><br> 例如原来你要修改样式，原生JavaScript是这么写的</p> \n<pre><code>var dom = document.getElementById(\'test\');\ndom.style.color = \'blue\';</code></pre> \n<p>用上jQuery后，一行搞定</p> \n<pre><code>$(\'#test\').css(\'color\', \'blue\');</code></pre> \n<p><strong>(2)便捷的Ajax操作</strong><br> 原生的JavaScript在ajax请求上的代码，嗯，我就不贴代码了！具体多复杂，懂前端的人都明白。<br> 用上了jQuery后，简洁了不少！如下所示</p> \n<pre><code> $.ajax({url:\"/guduyan\",\n    success:function(result){\n        //dosomething\n    }});</code></pre> \n<p><strong>(3)出色的动画效果</strong><br> 例如，我们需要把 一个<code>&lt;div&gt;</code>元素移动到左边，直到left属性等于250像素为止。<br> 使用jQuery，我们可以这么写</p> \n<pre><code>$(\"div\").animate({left:\'250px\'});</code></pre> \n<p>总而言之，jQuery作为一个<strong>JavaScript库</strong>。这个库里有很多函数，可以简化你的DOM<br> 操作，提供一些特效功能...等等！它的目的就是让一些你不会写，不想写，没时间写的代码，那么库帮你准备好一些函数接口，让你调用直接完成功能。</p> \n<h3 id=\"mvvm的框架\">MVVM的框架</h3> \n<p>而Vue、React之类，它们是<strong>JavaScript框架</strong>，引入了组件化、模块化的概念，采用虚拟DOM取代原来的DOM操作！在Vue这类MVVM框架中，数据和视图完全分离开来了。对数据进行操作不再需要引用相应的DOM对象，达到了解耦的目的！</p> \n<p>针对原来的jQuery的几个优点<br> <em>(1)针对jQuery里便捷的Dom操作</em><br> 在Vue和React这类MVVM框架中，采用一种绑定元素渲染的概念，基本不用怎么操作Dom，某些特殊操作除外。</p> \n<p><code>ps</code>:Dom操作不可能完全消失，否则Vue没必要再提供$refs属性。某些文章中说可以完全替代，我不敢苟同。</p> \n<p><em>(2)针对jQuery里出色的动画效果</em><br> 这个有CSS 3可以取代。另外，还有专门的动画库Velocity.js可以负责这些动画效果！</p> \n<p><em>(3)针对jQuery便捷的Ajax操作</em><br> 这个被Axios等库完全替代，而且API都差不多，功能也一样。</p> \n<p>除了上面几点以外。像Vue这类的MVVM框架为了性能，不让开发者直接操作DOM树，引入虚拟DOM的概念。<br> 可能有的读者不太理解这个虚拟DOM,满扯一下这个虚拟DOM。<br> 传统DOM操作有一个问题，假设你一个js方法里涉及到对十个节点的更新操作，如下所示</p> \n<pre><code>node1.style.marginTop=50+\'px\'; \nnode2.style.width=50+\'px\';\nnode3.style.height=50+\'px\';\n.......10次</code></pre> \n<p>那么，每次DOM改变的时候，都需要在浏览器中进行渲染。每一次DOM改变的时候，浏览器都需要重新计算CSS，进行布局处理，然后重新渲染页面。这都需要时间。</p> \n<p>虚拟DOM就是为了解决这个浏览器性能问题而被设计出来的。例如前面的例子，假如一次操作中有10次更新DOM的动作，虚拟DOM不会立即操作DOM，而是将这10次更新的内容保存到本地的一个js对象中，最终将这个js对象一次性attach到DOM树上，通知浏览器去执行绘制工作，这样可以避免大量的重复工作。毕竟js对象是内存对象，直接操作js对象，比操作真实DOM，快很多。</p> \n<p>可能还是比较抽象，我拿vue来说明。<br> 如下图所示(图片出自浪里行舟)<br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919113241447.png\" title=\"\" alt=\"\"></p> \n<p>如上图所示，在Vue的底层实现上，Vue将模板编译成虚拟DOM渲染函数。结合Vue自带的响应系统，在状态改变时，Vue能够智能地计算出重新渲染组件的最小代价并应到DOM操作上。<br> 那么，实例图如下<br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919113243511.jpg\" title=\"\" alt=\"\"></p> \n<p>OK，上面两张图看完，应该能明白Vue这类MVVM框架使用虚拟DOM的好处了。我就不继续拓展了。因为<br> 再细节下去，我还可以扯一些怎么写这种虚拟DOM，如何映射到真实的DOM。考虑到写了也没人看，我还是不写了。</p> \n<p>那个那个那个，插播一下！！！！<br> 讲到这里，思考一下</p> \n<blockquote> \n <p><strong>面试官:\"可以说说你们项目为什么用Vue这种MVVM框架么？\"</strong></p> \n</blockquote> \n<p>现在，会答了么？</p> \n<p>接下来我们来谈一谈，既然MVVM框架这么好，那为什么还要学jQuery呢？</p> \n<h3 id=\"学jquery的必要性\">学jQuery的必要性</h3> \n<p><em>(1)目前大量网站在用jQuery</em><br> 虽然目前大量文章鼓吹什么jQuery不行啦，要退出潮流啦！<br> 然而，各位随便去个网站，按f12输入一个$，大部分还是会返回一个<br> \"function(a，b){return new r.fn.init(a,b,h)}\"<br> 烟哥在写这段话的时候，特意跑去京东试了一下，返回值如下<br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919113241663.png\" title=\"\" alt=\"\"></p> \n<p>至于其他的博客园啊，巴拉巴拉的，自己去试试，看看返回值是啥!<br> 这种时候你应该要问</p> \n<blockquote> \n <p><strong>我勒个去，说好的要退出历史舞台呢？怎么这么多网站还在用jQuery!</strong></p> \n</blockquote> \n<p>很简单，因为jQuery已经占领了市场。一个产品如果已经趋于稳定，再让他换另一套架构又是一笔成本。<br> 正是因为目前市面上还是大量网站再用jQuery,所以学好jQuery还是很有必要的！</p> \n<p><em>(2)jQuery能支持IE8以下版本</em><br> 由于Vue之类的框架，只能支持IE8以上的版本。所以老实说，我也不懂现在鼓吹什么，市面上都是什么IE8浏览器啊。<br> 实际情况是，现在很多那种事业单位里头的古董电脑，很多都还是IE7，像这种情况下，用vue之类的MVVM框架显然不适合。</p> \n<p><code>ps:</code>你给政府坐项目用Vue试试看，绝对被找茬!挣钱才是重点!技术是为金钱服务的！</p> \n<p><em>(3)jQuery适合快速入门</em><br> 曾记得我有一个同事，会点jQuery，就在那吹嘘自己全栈。对于这类人，我们应该是:\"啊，你真棒，可以教教我们嘛！\"没错，就是要让他膨胀，然后让他无心学习!</p> \n<p>当然，这反应出一点，其实jQuery很好上手。当然，如果职业是前端，那当然要懂mvvm，但更多公司甚至不请前端，后端处理，那后端处理其实都是jQuery。</p> \n<h2 id=\"总结\">总结</h2> \n<p>任何鼓吹jQuery要退出舞台的文章，都不能信，绝对是忽悠大家。jQuery目前还是很有必要学习的。</p>',NULL,0,1,1,0,0,'引言 最近撸Vue的项目，感觉的有点心累。恰巧近日，有读者来信，就是想咨询一下  \n<strong>烟哥，现在还有必要学习jQuery么？</strong>  我明白，现在MVVM框架逐渐占据了主要市','jq',1,'2019-09-19 11:32:44','2020-01-15 17:20:45'),(27,'Nginx配置详解',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h1><span style=\"font-family: 宋体; font-size: 18pt;\">序言</span></h1> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">Nginx是lgor Sysoev为俄罗斯访问量第二的rambler.ru站点设计开发的。从2004年发布至今，凭借开源的力量，已经接近成熟与完善。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">Nginx功能丰富，可作为HTTP服务器，也可作为反向代理服务器，邮件服务器。支持FastCGI、SSL、Virtual Host、URL Rewrite、Gzip等功能。并且支持很多第三方的模块扩展。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">Nginx的稳定性、功能集、示例配置文件和低系统资源的消耗让他后来居上，在全球活跃的网站中有12.18%的使用比率，大约为2220万个网站。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">牛逼吹的差不多啦，如果你还不过瘾，你可以百度百科或者一些书上找到这样的夸耀，比比皆是。</span></p> \n<h1><span style=\"font-family: 宋体; font-size: 18pt;\">Nginx常用功能</span></h1> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">1、Http代理，反向代理：作为web服务器最常用的功能之一，尤其是反向代理。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">这里我给来2张图，对正向代理与反响代理做个诠释，具体细节，大家可以翻阅下资料。</span></p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919193533242.jpg\" title=\"\" alt=\"\"></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">Nginx在做反向代理时，提供性能稳定，并且能够提供配置灵活的转发功能。Nginx可以根据不同的正则匹配，采取不同的转发策略，比如图片文件结尾的走文件服务器，动态页面走web服务器，只要你正则写的没问题，又有相对应的服务器解决方案，你就可以随心所欲的玩。并且Nginx对返回结果进行错误页跳转，异常判断等。如果被分发的服务器存在异常，他可以将请求重新转发给另外一台服务器，然后自动去除异常服务器。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">2、负载均衡</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">Nginx提供的负载均衡策略有2种：内置策略和扩展策略。内置策略为轮询，加权轮询，Ip hash。扩展策略，就天马行空，只有你想不到的没有他做不到的啦，你可以参照所有的负载均衡算法，给他一一找出来做下实现。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">上3个图，理解这三种负载均衡算法的实现</span></p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919193533820.jpg\" title=\"\" alt=\"\"></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">Ip hash算法，对客户端请求的ip进行hash操作，然后根据hash结果将同一个客户端ip的请求分发给同一台服务器进行处理，可以解决session不共享的问题。&nbsp;</span><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919193535535.jpg\" title=\"\" alt=\"\"></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">3、web缓存</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">Nginx可以对不同的文件做不同的缓存处理，配置灵活，并且支持FastCGI_Cache，主要用于对FastCGI的动态程序进行缓存。配合着第三方的ngx_cache_purge，对制定的URL缓存内容可以的进行增删管理。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">4、Nginx相关地址</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">源码：https://trac.nginx.org/nginx/browser</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">官网：http://www.nginx.org/</span></p> \n<h1><span style=\"font-family: 宋体; font-size: 18pt;\">Nginx配置文件结构</span></h1> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">如果你下载好啦，你的安装文件，不妨打开conf文件夹的nginx.conf文件，Nginx服务器的基础配置，默认的配置也存放在此。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">在nginx.conf的注释符号位#</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">nginx文件的结构，这个对刚入门的同学，可以多看两眼。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">默认的config</span>&nbsp;</p> \n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show(\'3bfa6209-5367-4167-89b8-5a46a5a0b9c2\')\">\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919193535460.gif\" title=\"\" alt=\"\">\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190919193532670.gif\" title=\"\" alt=\"\"> \n <div id=\"cnblogs_code_open_3bfa6209-5367-4167-89b8-5a46a5a0b9c2\" class=\"cnblogs_code_hide\"> \n  <pre><span style=\"color: #000000;\">#user  nobody;\nworker_processes  </span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">;\n\n#error_log  logs</span>/<span style=\"color: #000000;\">error.log;\n#error_log  logs</span>/<span style=\"color: #000000;\">error.log  notice;\n#error_log  logs</span>/<span style=\"color: #000000;\">error.log  info;\n\n#pid        logs</span>/<span style=\"color: #000000;\">nginx.pid;\n\n\nevents {\n    worker_connections  </span><span style=\"color: #800080;\">1024</span><span style=\"color: #000000;\">;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application</span>/octet-<span style=\"color: #000000;\">stream;\n\n    #log_format  main  </span><span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">$remote_addr - $remote_user [$time_local] \"$request\" </span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">\n    #                  </span><span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">$status $body_bytes_sent \"$http_referer\" </span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">\n    #                  </span><span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">\"$http_user_agent\" \"$http_x_forwarded_for\"</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">;\n\n    #access_log  logs</span>/<span style=\"color: #000000;\">access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  </span><span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n    keepalive_timeout  </span><span style=\"color: #800080;\">65</span><span style=\"color: #000000;\">;\n\n    #gzip  on;\n\n    server {\n        listen       </span><span style=\"color: #800080;\">80</span><span style=\"color: #000000;\">;\n        server_name  localhost;\n\n        #charset koi8</span>-<span style=\"color: #000000;\">r;\n\n        #access_log  logs</span>/<span style=\"color: #000000;\">host.access.log  main;\n\n        location </span>/<span style=\"color: #000000;\"> {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        #error_page  </span><span style=\"color: #800080;\">404</span>              /<span style=\"color: #800080;\">404</span><span style=\"color: #000000;\">.html;\n\n        # redirect server error pages to the </span><span style=\"color: #0000ff;\">static</span> page /<span style=\"color: #000000;\">50x.html\n        #\n        error_page   </span><span style=\"color: #800080;\">500</span> <span style=\"color: #800080;\">502</span> <span style=\"color: #800080;\">503</span> <span style=\"color: #800080;\">504</span>  /<span style=\"color: #000000;\">50x.html;\n        location </span>= /<span style=\"color: #000000;\">50x.html {\n            root   html;\n        }\n\n        # proxy the PHP scripts to Apache listening on </span><span style=\"color: #800080;\">127.0</span>.<span style=\"color: #800080;\">0.1</span>:<span style=\"color: #800080;\">80</span><span style=\"color: #000000;\">\n        #\n        #location </span>~<span style=\"color: #000000;\"> \\.php$ {\n        #    proxy_pass   http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">127.0.0.1;</span>\n<span style=\"color: #000000;\">        #}\n\n        # pass the PHP scripts to FastCGI server listening on </span><span style=\"color: #800080;\">127.0</span>.<span style=\"color: #800080;\">0.1</span>:<span style=\"color: #800080;\">9000</span><span style=\"color: #000000;\">\n        #\n        #location </span>~<span style=\"color: #000000;\"> \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   </span><span style=\"color: #800080;\">127.0</span>.<span style=\"color: #800080;\">0.1</span>:<span style=\"color: #800080;\">9000</span><span style=\"color: #000000;\">;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  </span>/<span style=\"color: #000000;\">scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, </span><span style=\"color: #0000ff;\">if</span> Apache<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s document root</span>\n        # concurs with nginx<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s one</span>\n<span style=\"color: #000000;\">        #\n        #location </span>~ /<span style=\"color: #000000;\">\\.ht {\n        #    deny  all;\n        #}\n    }\n\n\n    # another </span><span style=\"color: #0000ff;\">virtual</span> host <span style=\"color: #0000ff;\">using</span> mix of IP-, name-, and port-<span style=\"color: #000000;\">based configuration\n    #\n    #server {\n    #    listen       </span><span style=\"color: #800080;\">8000</span><span style=\"color: #000000;\">;\n    #    listen       somename:</span><span style=\"color: #800080;\">8080</span><span style=\"color: #000000;\">;\n    #    server_name  somename  alias  another.alias;\n\n    #    location </span>/<span style=\"color: #000000;\"> {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # HTTPS server\n    #\n    #server {\n    #    listen       </span><span style=\"color: #800080;\">443</span><span style=\"color: #000000;\"> ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  HIGH:</span>!aNULL:!<span style=\"color: #000000;\">MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location </span>/<span style=\"color: #000000;\"> {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}</span></pre> \n </div> \n <span class=\"cnblogs_code_collapse\">View Code</span>\n</div> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">nginx文件结构</span></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #000000;\">...              #全局块\n\nevents {         #events块\n   ...\n}\n\nhttp      #http块\n{\n    ...   #http全局块\n    server        #server块\n    { \n        ...       #server全局块\n        location [PATTERN]   #location块\n        {\n            ...\n        }\n        location [PATTERN] \n        {\n            ...\n        }\n    }\n    server\n    {\n      ...\n    }\n    ...     #http全局块\n}</span></pre> \n</div> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">1、全局块：配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">2、events块：配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">3、http块：可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">4、server块：配置虚拟主机的相关参数，一个http中可以有多个server。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">5、location块：配置请求的路由，以及各种页面的处理情况。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">下面给大家上一个配置文件，作为理解，同时也配入我搭建的一台测试机中，给大家示例。</span>&nbsp;</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #000000;\">########### 每个指令必须有分号结束。#################\n#user administrator administrators;  #配置用户或者组，默认为nobody nobody。\n#worker_processes </span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">;  #允许生成的进程数，默认为1\n#pid </span>/nginx/pid/<span style=\"color: #000000;\">nginx.pid;   #指定nginx进程运行文件存放地址\nerror_log log</span>/error.log debug;  #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|<span style=\"color: #000000;\">emerg\nevents {\n    accept_mutex on;   #设置网路连接序列化，防止惊群现象发生，默认为on\n    multi_accept on;  #设置一个进程是否同时接受多个网络连接，默认为off\n    #use epoll;      #事件驱动模型，</span><span style=\"color: #0000ff;\">select</span>|poll|kqueue|epoll|resig|/dev/poll|<span style=\"color: #000000;\">eventport\n    worker_connections  </span><span style=\"color: #800080;\">1024</span><span style=\"color: #000000;\">;    #最大连接数，默认为512\n}\nhttp {\n    include       mime.types;   #文件扩展名与文件类型映射表\n    default_type  application</span>/octet-stream; #默认文件类型，默认为text/<span style=\"color: #000000;\">plain\n    #access_log off; #取消服务日志    \n    log_format myFormat </span><span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">; #自定义格式\n    access_log log</span>/<span style=\"color: #000000;\">access.log myFormat;  #combined为日志格式的默认值\n    sendfile on;   #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。\n    sendfile_max_chunk 100k;  #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。\n    keepalive_timeout </span><span style=\"color: #800080;\">65</span><span style=\"color: #000000;\">;  #连接超时时间，默认为75s，可以在http，server，location块。\n\n    upstream mysvr {   \n      server </span><span style=\"color: #800080;\">127.0</span>.<span style=\"color: #800080;\">0.1</span>:<span style=\"color: #800080;\">7878</span><span style=\"color: #000000;\">;\n      server </span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">10.121</span>:<span style=\"color: #800080;\">3333</span><span style=\"color: #000000;\"> backup;  #热备\n    }\n    error_page </span><span style=\"color: #800080;\">404</span> https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.baidu.com; #错误页</span>\n<span style=\"color: #000000;\">    server {\n        keepalive_requests </span><span style=\"color: #800080;\">120</span><span style=\"color: #000000;\">; #单连接请求上限次数。\n        listen       </span><span style=\"color: #800080;\">4545</span><span style=\"color: #000000;\">;   #监听端口\n        server_name  </span><span style=\"color: #800080;\">127.0</span>.<span style=\"color: #800080;\">0.1</span><span style=\"color: #000000;\">;   #监听地址       \n        location  </span>~*^.+$ {       #请求的url过滤，正则匹配，~为区分大小写，~*<span style=\"color: #000000;\">为不区分大小写。\n           #root path;  #根目录\n           #index vv.txt;  #设置默认页\n           proxy_pass  http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mysvr;  #请求转向mysvr 定义的服务器列表</span>\n           deny <span style=\"color: #800080;\">127.0</span>.<span style=\"color: #800080;\">0.1</span><span style=\"color: #000000;\">;  #拒绝的ip\n           allow </span><span style=\"color: #800080;\">172.18</span>.<span style=\"color: #800080;\">5.54</span><span style=\"color: #000000;\">; #允许的ip           \n        } \n    }\n}</span><span style=\"font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 1.5; background-color: #ffffff;\">&nbsp;</span></pre> \n</div> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">上面是nginx的基本配置，需要注意的有以下几点：</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">1、1.$remote_addr 与$http_x_forwarded_for 用以记录客户端的ip地址；&nbsp;2.$remote_user ：用来记录客户端用户名称；&nbsp;3.$time_local ： 用来记录访问时间与时区；4.$request ： 用来记录请求的url与http协议；</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">&nbsp; 5.$status ： 用来记录请求状态；成功是200，&nbsp;6.$body_bytes_s ent ：记录发送给客户端文件主体内容大小；7.$http_referer ：用来记录从那个页面链接访问过来的；&nbsp;8.$http_user_agent ：记录客户端浏览器的相关信息；</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">2、惊群现象：一个网路连接到来，多个睡眠的进程被同事叫醒，但只有一个进程能获得链接，这样会影响系统性能。</span></p> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">3、每个指令必须有分号结束。</span></p> \n<h1><span style=\"font-family: 宋体; font-size: 18pt;\">总结</span></h1> \n<p><span style=\"font-family: 宋体; font-size: 15px;\">如果你在开发过程中使用啦这些技术，或者你要使用遇到啦什么问题，欢迎加入左上角的群，我们一起讨论学习，本篇未完待续。</span>&nbsp;</p>',NULL,0,2,1,0,0,'序言Nginx是lgorSysoev为俄罗斯访问量第二的rambler.ru站点设计开发的。从2004年发布至今，凭借开源的力量，已经接近成熟与完善。Nginx功能丰富，可作为HTTP服务器，也','nginx',1,'2019-09-19 19:35:38','2019-09-19 19:42:52'),(28,'玩转SpringBoot之定时任务详解',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2>序言</h2> \n<p data-source-line=\"3\">使用SpringBoot创建定时任务非常简单，目前主要有以下三种创建方式：</p> \n<ul data-source-line=\"4\"> \n <li>一、基于注解(@Scheduled)</li> \n <li>二、基于接口（SchedulingConfigurer） 前者相信大家都很熟悉，但是实际使用中我们往往想从数据库中读取指定时间来动态执行定时任务，这时候基于接口的定时任务就派上用场了。</li> \n <li>三、基于注解设定多线程定时任务</li> \n</ul> \n<h2 id=\"静态基于注解\" data-source-line=\"7\">一、静态：基于注解</h2> \n<p data-source-line=\"8\">基于注解@Scheduled默认为单线程，开启多个任务时，任务的执行时机会受上一个任务执行时间的影响。</p> \n<h4 id=\"创建定时器\" data-source-line=\"9\">1、创建定时器</h4> \n<p data-source-line=\"10\">使用SpringBoot基于注解来创建定时任务非常简单，只需几行代码便可完成。<span class=\"Apple-converted-space\">&nbsp;代码如下：</span></p> \n<div class=\"cnblogs_code\"> \n <pre>@Component\n@Configuration      //1.主要用于标记配置类，兼备Component的效果。\n@EnableScheduling   // 2.开启定时任务\npublic class SaticScheduleTask {\n    //3.添加定时任务\n    @Scheduled(cron = \"0/5 * * * * ?\")\n    //或直接指定时间间隔，例如：5秒\n    //@Scheduled(fixedRate=5000)\n    private void configureTasks() {\n        System.err.println(\"执行静态定时任务时间: \" + LocalDateTime.now());\n    }\n}</pre> \n</div> \n<p data-source-line=\"26\">&nbsp;</p> \n<p data-source-line=\"26\">Cron表达式参数分别表示：</p> \n<ul data-source-line=\"27\"> \n <li>秒（0~59） 例如0/5表示每5秒</li> \n <li>分（0~59）</li> \n <li>时（0~23）</li> \n <li>日（0~31）的某天，需计算</li> \n <li>月（0~11）</li> \n <li>周几（ 可填1-7 或 SUN/MON/TUE/WED/THU/FRI/SAT）</li> \n</ul> \n<p data-source-line=\"34\">@Scheduled：除了支持灵活的参数表达式cron之外，还支持简单的延时操作，例如 fixedDelay ，fixedRate 填写相应的毫秒数即可。</p> \n<p data-source-line=\"34\">&nbsp;</p> \n<h4 id=\"启动测试\" data-source-line=\"35\">2、启动测试</h4> \n<p data-source-line=\"36\">启动应用，可以看到控制台打印出如下信息：</p> \n<p data-source-line=\"36\"><img src=\"https%3A%2F%2Fimg-blog.csdnimg.cn%2F20181220161509852.png\" title=\"\" alt=\"在这里插入图片描述\"><span class=\"Apple-converted-space\">&nbsp;<br></span></p> \n<p data-source-line=\"36\"><span class=\"Apple-converted-space\">显然，使用@Scheduled 注解很方便，但缺点是当我们调整了执行周期的时候，需要重启应用才能生效，这多少有些不方便。为了达到实时生效的效果，可以使用接口来完成定时任务。</span></p> \n<p data-source-line=\"36\">&nbsp;</p> \n<h2 id=\"动态基于接口\" data-source-line=\"41\">二、动态：基于接口</h2> \n<p data-source-line=\"42\">基于接口（SchedulingConfigurer）</p> \n<h4 id=\"导入依赖包\" data-source-line=\"43\">1、导入依赖包：</h4> \n<div class=\"cnblogs_code\"> \n <pre>    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;\n        &lt;version&gt;2.0.4.RELEASE&lt;/version&gt;\n    &lt;/parent&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;&lt;!--添加Web依赖 --&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;&lt;!--添加MySql依赖 --&gt;\n             &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;&lt;!--添加Mybatis依赖 配置mybatis的一些初始化的东西--&gt;\n            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;1.3.1&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;&lt;!-- 添加mybatis依赖 --&gt;\n            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis&lt;/artifactId&gt;\n            &lt;version&gt;3.4.5&lt;/version&gt;\n            &lt;scope&gt;compile&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;</pre> \n</div> \n<p data-source-line=\"73\">&nbsp;</p> \n<h4 data-source-line=\"73\">2、添加数据库记录：</h4> \n<p data-source-line=\"74\">开启本地数据库mysql，随便打开查询窗口，然后执行脚本内容，如下：</p> \n<div class=\"cnblogs_code\"> \n <pre>DROP DATABASE IF EXISTS<span> `socks`;\nCREATE DATABASE<span> `socks`; USE<span> `SOCKS`; DROP TABLE IF EXISTS<span> `cron`; CREATE TABLE<span> `cron` ( `cron_id` varchar(30) NOT NULL PRIMARY KEY<span>, `cron` varchar(30) NOT NULL<span> ); INSERT INTO `cron` VALUES (\'1\', \'0/5 * * * * ?\');</span></span></span></span></span></span></span></pre> \n</div> \n<p data-source-line=\"86\"><img src=\"https%3A%2F%2Fimg-blog.csdnimg.cn%2F20181220161546371.png\" title=\"\" alt=\"在这里插入图片描述\"><span class=\"Apple-converted-space\">&nbsp;<br></span></p> \n<p data-source-line=\"86\"><span class=\"Apple-converted-space\">然后在项目中的application.yml 添加数据源：</span></p> \n<div class=\"cnblogs_code\"> \n <pre><span>spring:\n  datasource:\n    url: jdbc:mysql://localhost:3306/socks\n    username: root\n    password: 123456</span></pre> \n</div> \n<p data-source-line=\"96\">&nbsp;</p> \n<h4 id=\"创建定时器-2\" data-source-line=\"96\">3、创建定时器</h4> \n<p data-source-line=\"97\">数据库准备好数据之后，我们编写定时任务，注意这里添加的是TriggerTask，目的是循环读取我们在数据库设置好的执行周期，以及执行相关定时任务的内容。<br>具体代码如下：</p> \n<div class=\"cnblogs_code\"> \n <pre><span>@Component\n@Configuration      //1.主要用于标记配置类，兼备Component的效果。\n@EnableScheduling   // 2.开启定时任务\npublic class DynamicScheduleTask implements<span> SchedulingConfigurer { @Mapper public interface<span> CronMapper { @Select(\"select cron from cron limit 1\"<span>) public<span> String getCron(); } @Autowired //注入mapper @SuppressWarnings(\"all\"<span>) CronMapper cronMapper; /** * 执行定时任务. */<span> @Override public void<span> configureTasks(ScheduledTaskRegistrar taskRegistrar) { taskRegistrar.addTriggerTask( //1.添加任务内容(Runnable) () -&gt; System.out.println(\"执行动态定时任务: \" +<span> LocalDateTime.now().toLocalTime()), //2.设置执行周期(Trigger) triggerContext -&gt;<span> { //2.1 从数据库获取执行周期 String cron =<span> cronMapper.getCron(); //2.2 合法性校验. if<span> (StringUtils.isEmpty(cron)) { // Omitted Code .. <span> } //2.3 返回执行周期(Date) return new<span> CronTrigger(cron).nextExecutionTime(triggerContext); } ); } }</span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre> \n</div> \n<p data-source-line=\"140\">&nbsp;</p> \n<h4 id=\"启动测试-2\" data-source-line=\"140\">4、启动测试</h4> \n<p data-source-line=\"141\">启动应用后，查看控制台，打印时间是我们预期的每10秒一次：<br><img src=\"https%3A%2F%2Fimg-blog.csdnimg.cn%2F20181220161739406.png\" title=\"\" alt=\"在这里插入图片描述\"><span class=\"Apple-converted-space\">&nbsp;</span></p> \n<p data-source-line=\"141\"><span class=\"Apple-converted-space\">然后打开Navicat ，将执行周期修改为每6秒执行一次，如图：<br><img src=\"https%3A%2F%2Fimg-blog.csdnimg.cn%2F20181220161905131.png\" title=\"\" alt=\"在这里插入图片描述\"><span class=\"Apple-converted-space\">&nbsp;<br></span></span></p> \n<p data-source-line=\"141\"><span class=\"Apple-converted-space\">查看控制台，发现执行周期已经改变，并且不需要我们重启应用，十分方便。如图：<br><img src=\"https%3A%2F%2Fimg-blog.csdnimg.cn%2F20181220161911141.png\" title=\"\" alt=\"在这里插入图片描述\"><span class=\"Apple-converted-space\">&nbsp;<br></span></span></p> \n<p data-source-line=\"141\"><span class=\"Apple-converted-space\"><span class=\"Apple-converted-space\"><span class=\"Apple-converted-space\">注意：<span class=\"Apple-converted-space\">&nbsp;如果在数据库修改时格式出现错误，则定时任务会停止，即使重新修改正确；此时只能重新启动项目才能恢复。</span></span></span></span></p> \n<p data-source-line=\"141\">&nbsp;</p> \n<h2 id=\"多线程\" data-source-line=\"148\">三、多线程定时任务</h2> \n<p data-source-line=\"149\">基于注解设定多线程定时任务</p> \n<h4 id=\"创建多线程定时任务\" data-source-line=\"150\">1、创建多线程定时任务</h4> \n<div class=\"cnblogs_code\"> \n <pre>//@Component注解用于对那些比较中立的类进行注释；\n//相对与在持久层、业务层和控制层分别采用 @Repository、@Service 和 @Controller 对分层中的类进行注释\n@Component\n@EnableScheduling   // 1.开启定时任务\n@EnableAsync        // 2.开启多线程\npublic class MultithreadScheduleTask {\n\n        @Async\n        @Scheduled(fixedDelay = 1000)  //间隔1秒\n        public void first() throws InterruptedException {\n            System.out.println(\"第一个定时任务开始 : \" + LocalDateTime.now().toLocalTime() + \"\\r\\n线程 : \" + Thread.currentThread().getName());\n            System.out.println();\n            Thread.sleep(1000 * 10);\n        }\n\n        @Async\n        @Scheduled(fixedDelay = 2000)\n        public void second() {\n            System.out.println(\"第二个定时任务开始 : \" + LocalDateTime.now().toLocalTime() + \"\\r\\n线程 : \" + Thread.currentThread().getName());\n            System.out.println();\n        }\n    }</pre> \n</div> \n<p data-source-line=\"175\"><strong>注： </strong>这里的<a href=\"https://www.cnblogs.com/mmzs/p/11557583.html\" target=\"_blank\">@Async</a>注解很关键</p> \n<p data-source-line=\"175\">&nbsp;</p> \n<h4 id=\"启动测试-3\" data-source-line=\"175\">2、启动测试</h4> \n<p data-source-line=\"176\">启动应用后，查看控制台：<br><img src=\"https%3A%2F%2Fimg-blog.csdnimg.cn%2F20181220165535820.png%3Fx-oss-process%3Dimage%2Fwatermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01vYml1c1N0cmlw%2Csize_16%2Ccolor_FFFFFF%2Ct_70\" title=\"\" alt=\"在这里插入图片描述\"><span class=\"Apple-converted-space\">&nbsp;<br></span></p> \n<p data-source-line=\"176\"><span class=\"Apple-converted-space\">从控制台可以看出，第一个定时任务和第二个定时任务互不影响；</span></p> \n<p data-source-line=\"180\">并且，由于开启了多线程，第一个任务的执行时间也不受其本身执行时间的限制，所以需要注意可能会出现重复操作导致数据异常。</p> \n<p data-source-line=\"180\">&nbsp;</p> \n<p data-source-line=\"180\">代码地址：<a href=\"https://github.com/mmzsblog/springboot-schedule\">https://github.com/mmzsblog/springboot-schedule</a></p> \n<p data-source-line=\"180\">&nbsp;</p> \n<p data-source-line=\"180\">原文链接：<a href=\"https://www.mmzsblog.cn/articles/2019/08/08/1565247960802.html\">https://www.mmzsblog.cn/articles/2019/08/08/1565247960802.html</a></p> \n<p data-source-line=\"180\">&nbsp;</p> \n<p data-source-line=\"180\">&nbsp;</p>',NULL,0,2,1,0,0,'详细讲解SpringBoot利用注解创建静态定时任务，利用接口创建动态定时任务，利用@EnableAsync和@Async创建多线程定时任务','定时任务',1,'2019-09-23 16:48:36','2020-01-15 17:18:45'),(31,'ubuntu系统创建定时任务--crontab',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2><strong>关于crontab</strong></h2> \n<p>cron是一个Linux定时执行工具，可以在无需人工干预的情况下运行作业。在Ubuntu server 下，cron是被默认安装并启动的。通过/etc/crontab文件，可以看到以下内容：</p> \n<p><img src=\"http://jinbitou.net/wp-content/uploads/2016/02/wpid-ab576d10a037aeb9b10fc1e2c25f53e3_clipboard1.png\" title=\"\" alt=\"Ubuntu cron 定时执行任务\"></p> \n<p>ununtu 通过调用 run-parts 命令，定时运行四个目录下的所有脚本。<br> 1）/etc/cron.hourly，目录下的脚本会每个小时让执行一次，在每小时的2分钟时运行；<br> 2）/etc/cron.daily，目录下的脚本会每天让执行一次，在每天0点17分时运行；<br> 3）/etc/cron.weekly，目录下的脚本会每周让执行一次，在每周第七天的3点56分时运行；<br> 4）/etc/cron.mouthly，目录下的脚本会每月让执行一次，在每月19号的5点32分时运行；<br> 当然，以上的时间均是系统默认时间，可以根据自己的需求进行修改。</p> \n<h2><strong>cron 服务的启动与停止</strong></h2> \n<p>在Ubuntu 9.10下，cron是被默认安装并启动的。而 ubuntu 下启动，停止与重启cron，均是通过调用/etc/init.d/中的脚本进行。命令如下：<br> 1）service&nbsp;cron&nbsp;start&nbsp;&nbsp;/*启动服务*/</p> \n<p>2）service&nbsp;cron&nbsp;stop /*关闭服务*/&nbsp;</p> \n<p>3）service cron restart /&nbsp;*重启服务*/<br> 4）service cron reload /*重新载入配置*/&nbsp;<br> 可以通过以下命令查看cron是否在运行（如果在运行，则会返回一个进程ID）：<br> # pgrep cron</p> \n<p><img src=\"http://jinbitou.net/wp-content/uploads/2016/02/wpid-ab576d10a037aeb9b10fc1e2c25f53e3_e86655f6-08f7-461e-8d4e-061cd950fb53.png\" title=\"\" alt=\"Ubuntu cron 定时执行任务\"></p> \n<h2><strong>crontab命令</strong></h2> \n<p>crontab 命令用于安装、删除或者列出用于驱动cron后台进程的表格。也就是说，用户把需要执行的命令序列放到crontab文件中以获得执行，每个用户都可以有自己的crontab文件。以下是这个命令的一些参数与说明：<br> 1）crontab -u /*设定某个用户的cron服务*/&nbsp;<br> 2）crontab -l /*列出某个用户cron服务的详细内容*/&nbsp;<br> 3）crontab -r /*删除某个用户的cron服务*/&nbsp;<br> 4）crontab -e /*编辑某个用户的cron服务*/&nbsp;<br> 参数名称 含义 示例<br> -l 显示用户的Crontab文件的内容 crontabl –l<br> -i 删除用户的Crontab文件前给提示 crontabl -ri<br> -r 从Crontab目录中删除用户的Crontab文件 crontabl -r<br> -e 编辑用户的Crontab文件 crontabl -e<br> /etc/crontab文件语法如下：<br> Minute Hour Day Month Dayofweek command<br> 分钟 小时 天 月 天每星期 命令<br> 每个字段代表的含义及取值范围如下：<br> Minute ：分钟（0-59），表示每个小时的第几分钟执行该任务<br> Hour ： 小时（1-23），表示每天的第几个小时执行该任务<br> Day ： 日期（1-31），表示每月的第几天执行该任务<br> Month ： 月份（1-12），表示每年的第几个月执行该任务<br> DayOfWeek ： 星期（0-6，0代表星期天），表示每周的第几天执行该任务<br> Command ： 指定要执行的命令（如果要执行的命令太多，可以把这些命令写到一个脚本里面，然后在这里直接调用这个脚本就可以了，调用的时候记得写出命令的完整路径）<br> 在这些字段里，除了“Command”是每次都必须指定的字段以外，其它字段皆为可选字段，可视需要决定。对于不指定的字段，要用“*”来填补其位置。同时，cron支持类似正则表达式的书写，支持如下几个特殊符号定义：</p> \n<p>“*” ,代表所有的取值范围内的数字；<br> “/” , 代表”每”（“*/5”，表示每5个单位）；<br> “-” , 代表从某个数字到某个数字（“1-4”，表示1-4个单位）；<br> “,” ,分开几个离散的数字；<br> 举例如下：</p> \n<p>5 * * * * ls /*指定每小时的第5分钟执行一次ls命令*/&nbsp;<br> 30 5 * * * ls /*指定每天的 5:30 执行ls命令*/&nbsp;<br> 30 7 8 * * ls /*指定每月8号的7：30分执行ls命令*/&nbsp;<br> 50 7 * * * root run-parts /etc/cron.daily /*每天7：50以root 身份执行/etc/cron.daily目录中的所有可执行文件*/</p> \n<h2><strong>新增 cron 任务</strong></h2> \n<p>1.执行如下命令添加任务</p> \n<p># crontab -e<br> 1）直接执行命令行，比如每隔1分钟执行date命令并将结果保存至文件/tmp/testCron.txt中，cron 格式如下：<br> */1 * * * * date &gt;&gt; /tmp/testCron.txt</p> \n<p><img src=\"http://jinbitou.net/wp-content/uploads/2016/02/wpid-ab576d10a037aeb9b10fc1e2c25f53e3_8c24a545-3b48-4a61-8b55-31d416242343.png\" title=\"\" alt=\"Ubuntu cron 定时执行任务\"><br> 2）执行shell 脚本，比如每隔3分钟执行一次/var/backups/test.sh&nbsp;文件，cron 格式如下：<br> */3 * * * * /var/backups/test.sh</p> \n<p><br> 文件&nbsp;/var/backups/test.sh 的内容如下：<br> ———————————————————————————————————————–</p> \n<p>#!/bin/sh</p> \n<p>cd&nbsp;/var/backups/</p> \n<p>Now=`date&nbsp;‘+%Y%m%d’`</p> \n<p>tar&nbsp;-zcf&nbsp;/var/backups/${Now}Website.tar.gz&nbsp;/var/www/html/</p> \n<p>———————————————————————————————————————–</p> \n<p>2. 重启cron 服务</p> \n<p># service cron restart</p> \n<p><img src=\"http://jinbitou.net/wp-content/uploads/2016/02/wpid-ab576d10a037aeb9b10fc1e2c25f53e3_496a43f8-1a26-478f-b5bf-0c5fcfc46dc71.png\" title=\"\" alt=\"Ubuntu cron 定时执行任务\"></p> \n<p>&nbsp;</p> \n<h1><a href=\"https://blog.csdn.net/frank_ldw/article/details/81218501\" rel=\"nofollow\" data-token=\"48cf8fc96dd2656180b2d6390962a5b6\">https://blog.csdn.net/frank_ldw/article/details/81218501</a></h1> \n<p>ubuntu系统配置mail邮件服务器</p> \n<p>&nbsp;</p>',NULL,0,2,1,0,0,'<strong>关于crontab</strong> cron是一个Linux定时执行工具，可以在无需人工干预的情况下运行作业。在Ubuntu server 下，cron是被默认安装并启动的。通过/e','Linux定时执行工具',1,'2019-09-23 16:56:58','2020-01-15 17:18:01'),(32,'MySql数据库备份的几种方式',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h4 id=\"mysqldump工具备份\">mysqldump工具备份</h4> \n<p>备份整个数据库</p> \n<pre><code>$&gt; mysqldump -u root -h host -p dbname &gt; backdb.sql</code></pre> \n<p>备份数据库中的某个表</p> \n<pre><code>$&gt; mysqldump -u root -h host -p dbname tbname1, tbname2 &gt; backdb.sql</code></pre> \n<p>备份多个数据库</p> \n<pre><code>$&gt; mysqldump -u root -h host -p --databases dbname1, dbname2 &gt; backdb.sql</code></pre> \n<p>备份系统中所有数据库</p> \n<pre><code>$&gt; mysqldump -u root -h host -p --all-databases &gt; backdb.sql</code></pre> \n<h4 id=\"直接复制整个数据库目录对于innodb存储引擎不适用备份\">直接复制整个数据库目录(对于InnoDB存储引擎不适用)备份</h4> \n<p>windowns: installpath/mysql/data</p> \n<p>linux: /var/lib/mysql</p> \n<p>在复制前需要先执行如下命令：</p> \n<pre><code>MYSQL&gt; LOCK TABLES;\n# 在复制过程中允许客户继续查询表，\nMYSQL&gt; FLUSH TABLES;\n# 将激活的索引页写入硬盘。</code></pre> \n<h4 id=\"mysqlhotcopy工具备份\">mysqlhotcopy工具备份</h4> \n<p>备份数据库或表最快的途径，只能运行在数据库目录所在的机器上，并且只能备份MyISAM类型的表。</p> \n<p>要使用该备份方法必须可以访问备份的表文件。</p> \n<pre><code>$&gt; mysqlhotcopy -u root -p dbname /path/to/new_directory;\n#将数据库复制到new_directory目录。</code></pre> \n<h4 id=\"mysql命令导入sql文件还原\">mysql命令导入sql文件还原</h4> \n<pre><code>$&gt; mysql -u root -p [dbname] &lt; backup.sql\n# 执行前需要先创建dbname数据库，如果backup.sql是mysqldump创建的备份文件则执行是不需要dbname。\nMYSQL&gt; source backup.sql;\n# 执行source命令前需要先选择数据库。</code></pre> \n<h4 id=\"直接复制数据库目录还原\">直接复制数据库目录还原</h4> \n<p><strong>注： 该方式必须确保原数据库和待还原的数据库主版本号一致，并且只适用于MyISAM引擎的表。</strong></p> \n<ol> \n <li>关闭mysql服务。</li> \n <li>将备份的文件或目录覆盖mysql的data目录。</li> \n <li>启动mysql服务。</li> \n <li>对于linux系统，复制完文件后需要将文件的用户和组更改为mysql运行的用户和组。</li> \n</ol> \n<h4 id=\"mysqlhotcopy快速恢复\">mysqlhotcopy快速恢复</h4> \n<p>停止mysql服务，将备份数据库文件复制到存放数据的位置（mysql的data文件夹），重先启动mysql服务即可(可能需要指定数据库文件的所有者)。</p> \n<pre><code>$&gt; cp -R /usr/backup/test /usr/local/mysql/data\n# 如果恢复的数据库已经存在，则使用DROP语句删除已经存在的数据库之后，恢复才能成功，还需要保证数据库版本兼容。</code></pre> \n<h4 id=\"相同版本数据库之间迁移\">相同版本数据库之间迁移</h4> \n<pre><code>$&gt; mysqldump -h www.abc.com -uroot -p password dbname | \n$&gt; mysqldump -h www.bcd.com -uroot -p password\n# 将服务器www.abc.com的数据库dbname迁移到服务器www.bcd.com的相同版本数据库上。</code></pre> \n<h4 id=\"不同版本的mysql数据库之间的迁移\">不同版本的mysql数据库之间的迁移</h4> \n<p>备份原数据库。</p> \n<p>卸载原数据库。</p> \n<p>安装新数据库。</p> \n<p>在新数据库中还原备份的数据库数据。</p> \n<p>数据库用户访问信息需要备份mysql数据库。</p> \n<p>默认字符集问题，MySQL4.x中使用latin1作为默认字符集，mysql5.x使用utf8作为默认字符集。如果有中文数据需要对默认字符集进行更改。</p> \n<p>不同数据库之间的迁移</p> \n<p>MyODBC工具实现MySQL和SQL Server之间的迁移。</p> \n<p>MySQL Migration Toolkit工具。</p> \n<h4 id=\"表的导出和导入\">表的导出和导入</h4> \n<p>SELECT ...... INTO OUTFILE 导出文本文件,该方法只能导出到数据库服务器上，并且导出文件不能已存在。</p> \n<pre><code>MYSQL&gt; SELECT ...... INTO OUTFILE filename [OPTIONS]\nMYSQL&gt; SELECT * FROM test.person INTO OUTFILE \"C:\\person0.txt\";\n# 将表person里的数据导入为文本文件person0.txt。</code></pre> \n<p>mysqldump文件导出文本文件(和INTO OUTFILE不一样的是该方法所有的选项不需要添加引号)</p> \n<pre><code>$&gt; mysqldump -T path -u root -p dbname [tables] [OPTIONS]\n# -T参数表明导出文本文件。path导出数据的目录。\n$&gt; mysqldump -T C:\\test person -u root -p\n# 将test表中的person表导出到文本文件。执行成功后test目录下会有两个文件，person.sql和person.txt</code></pre> \n<p>mysql命令导出文本文件</p> \n<pre><code>MYSQL&gt; mysql -u root -p --execute=\"SELECT * FROM person;\" test &gt; C:\\person3.txt;\n# 将test数据库中的person表数据导出到person3.txt文本文件中。--vartical参数可以将一行分为多行显示。\nMYSQL&gt; mysql -u root -p --vartical --execute=\"SELECT * FROM person;\" test &gt; C:\\person3.txt;\n# --html将表导出为html文件，--xml文件将表导出为xml文件</code></pre> \n<p>LOAD DATA INFILE导入文本文件</p> \n<pre><code>MYSQL&gt; LOAD DATA INFILE \'filename.txt\' INTO TABLE tablename [OPTIONS] [IGNORE number LINES];\n# [IGNORE number LINES]表示忽略行数\nMYSQL&gt; LOAD DATA INFILE \'C:\\person0.txt\' INTO TABLE test.person;</code></pre> \n<p>mysqlimport导入文本文件</p> \n<pre><code>$&gt; mysqlimport -u root -p dbname filename.txt [OPSTONS]\n# 导入的表名有文件名决定，导入数据之前表必须存在\n$&gt; mysqlimport -uroot -p test C:\\backup\\person.txt\n# 将数据导入到test数据库的person表中。</code></pre> \n<h4 id=\"使用mysqlbinlog恢复数据\">使用mysqlbinlog恢复数据</h4> \n<pre><code>$&gt; mysqlbinlog [option] filename | mysql -u user -p password\n# filename为二进制日志文件，\n$&gt; mysqlbinlog --stop-date=\"2013-03-30 15:27:47\" D:\\MySQL\\log\\binlog\\binlog.000008 | mysql -u root -p password\n# 根据日志文件binlog.000008将数据恢复到2013-03-30 15:27:47以前的操作。</code></pre> \n<h4 id=\"启动二进制日志\">启动二进制日志</h4> \n<pre><code>log-bin = path/filename #日志文件存储目录和文件名\nexpire_log_days = 10    #日志自动删除时间\nmax_binlog_size = 100M  # 日志文件最大大小</code></pre> \n<h4 id=\"查看二进制日志\">查看二进制日志</h4> \n<pre><code>MYSQL&gt; SHOW VARIABLES LIKE \'log_%\';\nMYSQL&gt; SHOW BINARY LOGS;\n$&gt; mysqlbinlog filename\n# filename为二进制日志文件名。</code></pre> \n<h4 id=\"删除二进制日志\">删除二进制日志</h4> \n<pre><code>MYSQL&gt; RESET MASTER; #删除所有二进制日志\nMYSQL&gt; PURGE {MASTER | BINARY} LOGS TO \'log_name\';  #删除文件编号小于log_name编号的文件\nMYSQL&gt; PURGE {MASTER | BINARY} LOGS BEFORE \'date\';  #删除指定日期以前的文件</code></pre> \n<h4 id=\"暂时停止二进制日志不需要重启mysql服务\">暂时停止二进制日志（不需要重启mysql服务）</h4> \n<pre><code>MYSQL&gt; SET sql_log_bin = {0|1}  #暂停或启动二进制日志。</code></pre>',NULL,0,2,1,0,0,'mysqldump工具备份备份整个数据库$mysqldumpuroothhostpdbnamebackdb.sql备份数据库中的某个表$mysqldumpurooth','mysqldump',1,'2019-09-23 17:01:37','2020-01-15 17:17:16'),(33,'WPS合并Excel',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<ol><li>新建一个空白Excel文档<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190924155018451.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; max-width: 100%; height: auto; border-radius: 6px;\">&nbsp;<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190926115612431.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; max-width: 100%; height: auto; border-radius: 6px;\"></li><li>找到文档助手<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190924155720183.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; max-width: 100%; height: auto; border-radius: 6px;\"></li><li>点击工作表--》工作簿合并<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190924155948243.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; max-width: 100%; height: auto; border-radius: 6px;\"></li><li>添加需要合并的文件<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190924210848237.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; max-width: 100%; height: auto; border-radius: 6px;\"></li><li>添加文件后，点击开始合并，完成。<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190924210939996.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; max-width: 100%; height: auto; border-radius: 6px;\"></li></ol>',NULL,0,3,1,0,1,'WPS合并EXCEL','合并EXCEL',1,'2019-09-24 16:14:49','2019-12-25 11:29:57'),(35,'Integer、new Integer() 和 int 的面试题',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h1 style=\"margin-top: 0px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">基本概念的区分</h1><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">1、Integer 是 int 的包装类，int 则是 java 的一种基本数据类型</p><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">2、Integer 变量必须实例化后才能使用，而int变量不需要</p><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">3、Integer 实际是对象的引用，当new一个 Integer时，实际上是生成一个指针指向此对象；而 int 则是直接存储数据值</p><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">4、Integer的默认值是null，int的默认值是0</p><h1 style=\"margin-top: 35px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">Integer、new Integer() 和 int 的比较</h1><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">1、两个 new Integer() 变量比较 ，永远是 false 因为new生成的是两个对象，其内存地址不同</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\">Integer&nbsp;i&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">100</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">Integer&nbsp;j&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">100</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.out.<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">print</span>(i&nbsp;==&nbsp;j);&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(204, 102, 102); overflow-wrap: inherit !important; word-break: inherit !important;\">//</span><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">2、Integer变量 和 new Integer() 变量比较 ，永远为 false。因为 Integer变量 指向的是 java 常量池 中的对象， 而 new Integer() 的变量指向 堆中 新建的对象，两者在内存中的地址不同。</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\">Integer&nbsp;i&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">100</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">Integer&nbsp;j&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">100</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.out.<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">print</span>(i&nbsp;==&nbsp;j);&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(204, 102, 102); overflow-wrap: inherit !important; word-break: inherit !important;\">//</span><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">3、两个Integer 变量比较，如果两个变量的值在区间-128到127 之间，则比较结果为true，如果两个变量的值不在此区间，则比较结果为 false 。</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\">Integer&nbsp;i&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">100</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">Integer&nbsp;j&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">100</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.out.<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">print</span>(i&nbsp;==&nbsp;j);&nbsp;<span style=\"max-width: 100%; color: rgb(204, 102, 102); overflow-wrap: inherit !important; word-break: inherit !important;\">//</span><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">true</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">Integer&nbsp;i&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">Integer&nbsp;j&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.out.<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">print</span>(i&nbsp;==&nbsp;j);&nbsp;<span style=\"max-width: 100%; color: rgb(204, 102, 102); overflow-wrap: inherit !important; word-break: inherit !important;\">//</span><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">分析：Integer i = 100 在编译时，会翻译成为 Integer i = Integer.valueOf(100)，而 java 对 Integer类型的 valueOf 的定义如下：</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">public</span>&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">static</span>&nbsp;Integer&nbsp;<span style=\"max-width: 100%; color: rgb(129, 162, 190); overflow-wrap: inherit !important; word-break: inherit !important;\">valueOf</span><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">(<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">int</span>&nbsp;i)</span></span>{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">assert</span>&nbsp;IntegerCache.high&nbsp;&gt;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">127</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">if</span>&nbsp;(i&nbsp;&gt;=&nbsp;IntegerCache.low&nbsp;&amp;&amp;&nbsp;i&nbsp;&lt;=&nbsp;IntegerCache.high){<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">return</span>&nbsp;IntegerCache.cache[i&nbsp;+&nbsp;(-IntegerCache.low)];<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">return</span>&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(i);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">java对于-128到127之间的数，会进行缓存。所以 Integer i = 127 时，会将127进行缓存，下次再写Integer j = 127时，就会直接从缓存中取，就不会new了。</p><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">4、 int 变量 与 Integer、 new Integer() 比较时，只要两个的值是相等，则为true 因为包装类Integer 和 基本数据类型int 比较时，java会自动拆包装为int ，然后进行比较，实际上就变为两个int变量的比较。</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\">Integer&nbsp;i&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">100</span>);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//自动拆箱为&nbsp;int&nbsp;i=100;&nbsp;此时，相当于两个int的比较</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">int</span>&nbsp;j&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">100</span>；<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.print(i&nbsp;==&nbsp;j);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//true</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><h1 style=\"margin-top: 35px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">示例1</h1><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\"><span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">public</span>&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">class</span>&nbsp;<span style=\"max-width: 100%; color: rgb(129, 162, 190); overflow-wrap: inherit !important; word-break: inherit !important;\">IntegerDemo</span>&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">public</span>&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">static</span>&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">void</span>&nbsp;<span style=\"max-width: 100%; color: rgb(129, 162, 190); overflow-wrap: inherit !important; word-break: inherit !important;\">main</span>(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">String[]&nbsp;args</span>)&nbsp;</span>{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">int</span>&nbsp;i&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;i2&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;i3&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(<span style=\"max-width: 100%; color: rgb(181, 189, 104); overflow-wrap: inherit !important; word-break: inherit !important;\">\"i&nbsp;==&nbsp;i2&nbsp;=&nbsp;\"</span>&nbsp;+&nbsp;(i&nbsp;==&nbsp;i2));&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;Integer会自动拆箱为int，所以为true</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(<span style=\"max-width: 100%; color: rgb(181, 189, 104); overflow-wrap: inherit !important; word-break: inherit !important;\">\"i&nbsp;==&nbsp;i3&nbsp;=&nbsp;\"</span>&nbsp;+&nbsp;(i&nbsp;==&nbsp;i3));&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;true，理由同上</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;i4&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">127</span>;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;编译时被翻译成：Integer i4 = Integer.valueOf(127);</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;i5&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">127</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(<span style=\"max-width: 100%; color: rgb(181, 189, 104); overflow-wrap: inherit !important; word-break: inherit !important;\">\"i4&nbsp;==&nbsp;i5&nbsp;=&nbsp;\"</span>&nbsp;+&nbsp;(i4&nbsp;==&nbsp;i5));<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;true</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;i6&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;i7&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(<span style=\"max-width: 100%; color: rgb(181, 189, 104); overflow-wrap: inherit !important; word-break: inherit !important;\">\"i6&nbsp;==&nbsp;i7&nbsp;=&nbsp;\"</span>&nbsp;+&nbsp;(i6&nbsp;==&nbsp;i7));<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;i8&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">127</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(<span style=\"max-width: 100%; color: rgb(181, 189, 104); overflow-wrap: inherit !important; word-break: inherit !important;\">\"i5&nbsp;==&nbsp;i8&nbsp;=&nbsp;\"</span>&nbsp;+&nbsp;(i5&nbsp;==&nbsp;i8));&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;i9&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;i10&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(<span style=\"max-width: 100%; color: rgb(181, 189, 104); overflow-wrap: inherit !important; word-break: inherit !important;\">\"i9&nbsp;==&nbsp;i10&nbsp;=&nbsp;\"</span>&nbsp;+&nbsp;(i9&nbsp;==&nbsp;i10));&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">答案是</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">i</span>&nbsp;==&nbsp;i2&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">true</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">i</span>&nbsp;==&nbsp;i3&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">true</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">i4</span>&nbsp;==&nbsp;i5&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">true</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">i6</span>&nbsp;==&nbsp;i7&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">i5</span>&nbsp;==&nbsp;i8&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">i9</span>&nbsp;==&nbsp;i10&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><h1 style=\"margin-top: 35px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">示例2</h1><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\">package&nbsp;demo1.demo1;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">public</span>&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">class</span>&nbsp;<span style=\"max-width: 100%; color: rgb(129, 162, 190); overflow-wrap: inherit !important; word-break: inherit !important;\">Campare</span>&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">public</span>&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">static</span>&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">void</span>&nbsp;<span style=\"max-width: 100%; color: rgb(129, 162, 190); overflow-wrap: inherit !important; word-break: inherit !important;\">main</span>(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">String[]&nbsp;args</span>)&nbsp;</span>{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;a&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">127</span>),&nbsp;b&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Integer(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">int</span>&nbsp;c&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">127</span>,&nbsp;d&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>,&nbsp;dd&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer&nbsp;e&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">127</span>,&nbsp;ee&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">127</span>,&nbsp;f&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>,&nbsp;ff&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(a&nbsp;==&nbsp;b);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;false&nbsp;因为a,b都是new出来的对象，地址不同所以为false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(a&nbsp;==&nbsp;c);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;true&nbsp;a会自动拆箱为int类型</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(a&nbsp;==&nbsp;e);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;false&nbsp;指向的地址不同a是new出来的</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(e&nbsp;==&nbsp;c);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;true&nbsp;e会自动拆箱为int类型</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(e&nbsp;==&nbsp;ee);<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;true&nbsp;Integer对&nbsp;处于-128到127范围之间，指向了同一片地址区域</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(b&nbsp;==&nbsp;f);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;false&nbsp;指向的地址不同b是new出来的</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(f&nbsp;==&nbsp;d);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;true&nbsp;f自动拆箱为int类型</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(f&nbsp;==&nbsp;ff);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">/*<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* false 指向的不是同一片地址区域。<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;在Integer类型中，-128到127存放的是同一片区域地址，<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;之外的数是另外开辟空间来进行&nbsp;存储的<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(d&nbsp;==&nbsp;dd);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//&nbsp;true&nbsp;不解释</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><h1 style=\"margin-top: 35px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">示例3</h1><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Integer</span>&nbsp;i01&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">59</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">int&nbsp;i02&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">59</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Integer</span>&nbsp;i03&nbsp;=<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Integer</span>.valueOf(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">59</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Integer</span>&nbsp;i04&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Integer</span>(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">59</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">以下输出结果为false的是：</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\">System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(i01==&nbsp;i02);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(i01==&nbsp;i03);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(i03==&nbsp;i04);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(i02==&nbsp;i04);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">解析：</p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">i01 == i02 。i01.intValue()i02 两个值的比较5959 --&gt;true;</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">i01 == i03 。由于 59在-128到127之间，所以，i01和i03的赋值操作返回的是同一个对象。都是从chche中返回的同一个对象，对象地址相同 true;</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">i03 == i04。i03是来自缓存值，i04是新new的对象 ，二者不是同一个对象，所以false。</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">i02 == i04。和第一个类似，true。</p></li></ul><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">答案是 C 。</p><h1 style=\"margin-top: 35px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">示例4：与示例3的唯一不同，就是将值全部改成128</h1><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Integer</span>&nbsp;i01&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">int&nbsp;i02&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Integer</span>&nbsp;i03&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Integer</span>.valueOf(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Integer</span>&nbsp;i04&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Integer</span>(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">128</span>);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">以下输出结果为false的是：</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\">System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(i01&nbsp;==&nbsp;i02);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(i01&nbsp;==&nbsp;i03);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(i03&nbsp;==&nbsp;i04);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">System.<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">out</span>.println(i02&nbsp;==&nbsp;i04);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">答案：</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">true</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">false</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">true</span></code></pre>',NULL,0,2,1,0,1,'Integer、new Integer() 和 int 的面试题','java',1,'2019-10-30 16:46:38','2019-10-30 16:46:38'),(36,'向MySQL数据库插入 100w 条数据提高效率的方法',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">多线程插入(单表)</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">多线程插入(多表)</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">预处理SQL</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">多值插入SQL</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">事务(N条提交一次)</p></li></ul><hr style=\"margin-top: 16px; margin-bottom: 16px; max-width: 100%; box-sizing: content-box; letter-spacing: 0.544px; border-top: 0px none; border-right-style: none; border-bottom-style: none; border-left-style: none; height: 2px; background-color: rgb(231, 231, 231); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\"><h1 style=\"margin-top: 35px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">多线程插入(单表)</h1><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">问：为何对同一个表的插入多线程会比单线程快？同一时间对一个表的写操作不应该是独占的吗？</p><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">答：在数据里做插入操作的时候，整体时间的分配是这样的：</p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">链接耗时 （30%）</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">发送query到服务器 （20%）</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">解析query （20%）</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">插入操作 （10% * 词条数目）</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">插入index （10% * Index的数目）</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">关闭链接 （10%）</p></li></ul><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">从这里可以看出来，真正耗时的不是操作，而是链接，解析的过程。</p><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">MySQL插入数据在写阶段是独占的，但是插入一条数据仍然需要解析、计算、最后才进行写处理，比如要给每一条记录分配自增id，校验主键唯一键属性，或者其他一些逻辑处理，都是需要计算的，所以说多线程能够提高效率。</p><h1 style=\"margin-top: 35px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">多线程插入(多表)</h1><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">分区分表后使用多线程插入。</p><h1 style=\"margin-top: 35px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">预处理SQL</h1><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">普通SQL，即使用Statement接口执行SQL</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">预处理SQL，即使用PreparedStatement接口执行SQL</p></li></ul><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">使用PreparedStatement接口允许数据库预编译SQL语句，以后只需传入参数，避免了数据库每次都编译SQL语句，因此性能更好。</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\"><span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">String</span>&nbsp;sql&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(181, 189, 104); overflow-wrap: inherit !important; word-break: inherit !important;\">\"insert&nbsp;into&nbsp;testdb.tuser&nbsp;(name,&nbsp;remark,&nbsp;createtime,&nbsp;updatetime)&nbsp;values&nbsp;(?,&nbsp;?,&nbsp;?,&nbsp;?)\"</span>;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">for</span>&nbsp;(int&nbsp;i&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">0</span>;&nbsp;i&nbsp;&lt;&nbsp;m;&nbsp;i++)&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//从池中获取连接</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;Connection&nbsp;conn&nbsp;=&nbsp;myBroker.getConnection();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;PreparedStatement&nbsp;pstmt&nbsp;=&nbsp;conn.prepareStatement(sql);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">for</span>&nbsp;(int&nbsp;k&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">0</span>;&nbsp;k&nbsp;&lt;&nbsp;n;&nbsp;k++)&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pstmt.setString(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">1</span>,&nbsp;RandomToolkit.generateString(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">12</span>));<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pstmt.setString(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">2</span>,&nbsp;RandomToolkit.generateString(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">24</span>));<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pstmt.setDate(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">3</span>,&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Date</span>(System.currentTimeMillis()));<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pstmt.setDate(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">4</span>,&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">Date</span>(System.currentTimeMillis()));<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//加入批处理</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pstmt.addBatch();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;pstmt.executeBatch();&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//执行批处理</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;pstmt.close();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;myBroker.freeConnection(conn);&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//连接归池</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"></code></pre><h1 style=\"margin-top: 35px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">多值插入SQL</h1><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">普通插入SQL：INSERT INTO TBL_TEST (id) VALUES(1)</p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\">多值插入SQL：INSERT INTO TBL_TEST (id) VALUES (1), (2), (3)</p></li></ul><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">使用多值插入SQL，SQL语句的总长度减少，即减少了网络IO，同时也降低了连接次数，数据库一次SQL解析，能够插入多条数据。</p><h1 style=\"margin-top: 35px; margin-bottom: 15px; padding-bottom: 0.5em; font-weight: bold; font-size: 1.2rem; max-width: 100%; letter-spacing: 0.544px; line-height: 1.225; cursor: text; border-bottom: 1px solid rgb(221, 221, 221); color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; overflow-wrap: break-word !important;\">事务(N条提交一次)</h1><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">在一个事务中提交大量INSERT语句可以提高性能。</p><p style=\"margin-top: 0.8em; margin-bottom: 0.8em; max-width: 100%; clear: both; min-height: 1em; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-family: &quot;Source Sans Pro&quot;, &quot;Helvetica Neue&quot;, Arial, sans-serif; font-size: 16px; overflow-wrap: break-word !important;\">1、将表的存储引擎修改为myisam<br style=\"max-width: 100%; overflow-wrap: break-word !important;\">2、将 sql 拼接成字符串，每 1000 条左右提交事务。</p><pre style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; letter-spacing: 0.544px; color: rgb(52, 73, 94); font-size: 16px; background-color: rgb(255, 255, 255);\"><code style=\"margin-right: 0px; margin-left: 0px; padding: 0.5em; max-width: 100%; font-family: Consolas, Inconsolata, Courier, monospace; overflow-x: auto; line-height: 15px; font-size: 11px; word-spacing: -3px; letter-spacing: 0px; background: rgb(29, 31, 33); color: rgb(197, 200, 198); overflow-wrap: normal !important; word-break: normal !important; overflow-y: auto !important;\"><span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">///</span>&nbsp;<span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&lt;summary&gt;</span></span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">///</span>&nbsp;执行多条SQL语句，实现数据库事务。</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">///</span>&nbsp;<span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&lt;/summary&gt;</span>mysql数据库</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">///</span>&nbsp;<span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&lt;param&nbsp;name=\"SQLStringList\"&gt;</span>多条SQL语句<span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&lt;/param&gt;</span></span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\"><span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">public</span>&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">void</span>&nbsp;<span style=\"max-width: 100%; color: rgb(129, 162, 190); overflow-wrap: inherit !important; word-break: inherit !important;\">ExecuteSqlTran</span>(<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">List&lt;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">string</span>&gt;&nbsp;SQLStringList</span>)<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">using</span>&nbsp;(MySqlConnection&nbsp;conn&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;MySqlConnection(connectionString))<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">if</span>&nbsp;(DBVariable.flag)<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conn.Open();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MySqlCommand&nbsp;cmd&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;MySqlCommand();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Connection&nbsp;=&nbsp;conn;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MySqlTransaction&nbsp;tx&nbsp;=&nbsp;conn.BeginTransaction();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Transaction&nbsp;=&nbsp;tx;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">try</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">for</span>&nbsp;(<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">int</span>&nbsp;n&nbsp;=&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">0</span>;&nbsp;n&nbsp;&lt;&nbsp;SQLStringList.Count;&nbsp;n++)<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">string</span>&nbsp;strsql&nbsp;=&nbsp;SQLStringList[n].ToString();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">if</span>&nbsp;(strsql.Trim().Length&nbsp;&gt;&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">1</span>)<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.CommandText&nbsp;=&nbsp;strsql;<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.ExecuteNonQuery();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//后来加上的</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">if</span>&nbsp;(n&nbsp;&gt;&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">0</span>&nbsp;&amp;&amp;&nbsp;(n&nbsp;%&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">1000</span>&nbsp;==&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">0</span>&nbsp;||&nbsp;n&nbsp;==&nbsp;SQLStringList.Count&nbsp;-&nbsp;<span style=\"max-width: 100%; color: rgb(222, 147, 95); overflow-wrap: inherit !important; word-break: inherit !important;\">1</span>))<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx.Commit();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx&nbsp;=&nbsp;conn.BeginTransaction();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(150, 152, 150); overflow-wrap: inherit !important; word-break: inherit !important;\">//tx.Commit();//原来一次性提交</span><br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">catch</span>&nbsp;(System.Data.SqlClient.SqlException&nbsp;E)<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx.Rollback();<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">throw</span>&nbsp;<span style=\"max-width: 100%; color: rgb(178, 148, 187); overflow-wrap: inherit !important; word-break: inherit !important;\">new</span>&nbsp;Exception(E.Message);<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style=\"max-width: 100%; overflow-wrap: inherit !important; word-break: inherit !important;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></pre>',NULL,0,2,1,0,1,'向 MySQL 数据库插入 100w 条数据提高效率的方法','mysql',1,'2019-10-30 17:21:30','2019-10-30 17:22:57'),(37,'两类非常隐蔽的全表扫描，不能命中索引',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">第一类</span></strong><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">：<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">“列类型”与“where值类型”不符，不能命中索引</strong>，会导致全表扫描</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 12px; overflow-wrap: break-word !important;\">(full table scan)</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">数据准备</span></strong><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">：</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: normal; overflow-wrap: break-word !important;\"><em style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 12px; overflow-wrap: break-word !important;\">create table t1 (<br style=\"max-width: 100%; overflow-wrap: break-word !important;\">cell&nbsp;<span style=\"max-width: 100%; color: rgb(255, 76, 0); overflow-wrap: break-word !important;\">varchar</span>(3) primary key<br style=\"max-width: 100%; overflow-wrap: break-word !important;\">)engine=innodb default charset=<span style=\"max-width: 100%; color: rgb(255, 76, 0); overflow-wrap: break-word !important;\">utf8</span>;</span></em></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: normal; overflow-wrap: break-word !important;\"><em style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 12px; overflow-wrap: break-word !important;\">insert into t1(cell) values (\'111\'),(\'222\'),(\'333\');</span></em></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（1）</span><span style=\"max-width: 100%; color: rgb(255, 76, 0); letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">cell属性为varchar</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">类型；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（2）cell为主键，即聚簇索引</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 12px; overflow-wrap: break-word !important;\">(clustered index)</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（3）t1插入3条测试数据；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">测试语句</span></strong><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">：</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: normal; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; font-size: 12px; overflow-wrap: break-word !important;\"><em style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; overflow-wrap: break-word !important;\">explain select * from t1 where cell=111;<br style=\"max-width: 100%; overflow-wrap: break-word !important;\">explain select * from t1 where cell=\'111\';</span></em></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（1）第一个语句，</span><span style=\"max-width: 100%; color: rgb(255, 76, 0); letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">where后的值类型是整数</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（与表cell类型不符）；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（2）第二个语句，</span><span style=\"max-width: 100%; color: rgb(255, 76, 0); letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">where后的值类型是字符串</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（与表cell类型一致）；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">测试结果</span></strong><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">：</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20191031172938644.jpg\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; color: rgb(115, 135, 156); font-family: &quot;Helvetica Neue&quot;, Roboto, Arial, &quot;Droid Sans&quot;, sans-serif; font-size: 13px; letter-spacing: normal; text-align: start; max-width: 100%; height: auto; border-radius: 6px;\">&nbsp;&nbsp;<br></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（1）强制类型转换，不能命中索引，需要全表扫描，即3条记录；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（2）类型相同，命中索引，1条记录；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\"><br></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">第二类</span></strong><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">：<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">相join的两个表的字符编码不同，不能命中索引</strong>，会导致笛卡尔积的循环计算</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 12px; overflow-wrap: break-word !important;\">（nested loop）</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">数据准备</span></strong><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">：</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: normal; overflow-wrap: break-word !important;\"><em style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 12px; overflow-wrap: break-word !important;\">create table t2 (<br style=\"max-width: 100%; overflow-wrap: break-word !important;\">cell varchar(3) primary key<br style=\"max-width: 100%; overflow-wrap: break-word !important;\">)engine=innodb default charset=<span style=\"max-width: 100%; color: rgb(255, 76, 0); overflow-wrap: break-word !important;\">latin1</span>;</span></em></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: normal; overflow-wrap: break-word !important;\"><em style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 12px; overflow-wrap: break-word !important;\">insert into t2(cell) values (\'111\'),(\'222\'),(\'333\'),(\'444\'),(\'555\'),(\'666\');<br style=\"max-width: 100%; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></em></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: normal; overflow-wrap: break-word !important;\"><em style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 12px; overflow-wrap: break-word !important;\">create table t3 (<br style=\"max-width: 100%; overflow-wrap: break-word !important;\">cell varchar(3) primary key<br style=\"max-width: 100%; overflow-wrap: break-word !important;\">)engine=innodb default charset=<span style=\"max-width: 100%; color: rgb(255, 76, 0); overflow-wrap: break-word !important;\">utf8</span>;</span></em></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: normal; overflow-wrap: break-word !important;\"><em style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 12px; overflow-wrap: break-word !important;\">insert into t3(cell) values (\'111\'),(\'222\'),(\'333\'),(\'444\'),(\'555\'),(\'666\');</span></em></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（1）</span><span style=\"max-width: 100%; color: rgb(255, 76, 0); letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">t2和t1字符集不同</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">，插入6条测试数据；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（2）</span><span style=\"max-width: 100%; color: rgb(255, 76, 0); letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">t3和t1字符集相同</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">，也插入6条测试数据；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（3）除此之外，t1，t2，t3表结构完全相同；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: transparent; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">测试语句</span></strong><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">：</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: normal; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; font-size: 12px; overflow-wrap: break-word !important;\"><em style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; overflow-wrap: break-word !important;\">explain select * from t1,t2 where t1.cell=t2.cell;<br style=\"max-width: 100%; overflow-wrap: break-word !important;\">explain select * from t1,t3 where t1.cell=t3.cell;</span></em></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: transparent; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（1）第一个join，连表t1和t2（字符集不同），关联属性是cell；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（2）<span mp-quote=\"mp-quote\" neue=\"neue\" sc=\"sc\" gb=\"gb\" ui=\"ui\" normal=\"normal\" important=\"important\" none=\"none\" px=\"px\" transparent=\"transparent\" sans=\"sans\" yahei=\"yahei\" inline=\"inline\" style=\"max-width: 100%; letter-spacing: normal; overflow-wrap: break-word !important;\">第一个join，连表t1和t3（字符集相同），关联属性是cell；</span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span mp-quote=\"mp-quote\" neue=\"neue\" sc=\"sc\" gb=\"gb\" ui=\"ui\" normal=\"normal\" important=\"important\" none=\"none\" px=\"px\" transparent=\"transparent\" sans=\"sans\" yahei=\"yahei\" inline=\"inline\" style=\"max-width: 100%; overflow-wrap: break-word !important;\">测试结果</span></strong><span mp-quote=\"mp-quote\" neue=\"neue\" sc=\"sc\" gb=\"gb\" ui=\"ui\" normal=\"normal\" important=\"important\" none=\"none\" px=\"px\" transparent=\"transparent\" sans=\"sans\" yahei=\"yahei\" inline=\"inline\" style=\"max-width: 100%; overflow-wrap: break-word !important;\">：</span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\"><span mp-quote=\"mp-quote\" neue=\"neue\" sc=\"sc\" gb=\"gb\" ui=\"ui\" normal=\"normal\" important=\"important\" none=\"none\" px=\"px\" transparent=\"transparent\" sans=\"sans\" yahei=\"yahei\" inline=\"inline\" style=\"max-width: 100%; overflow-wrap: break-word !important;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20191031173053311.jpg\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; color: rgb(115, 135, 156); font-family: &quot;Helvetica Neue&quot;, Roboto, Arial, &quot;Droid Sans&quot;, sans-serif; font-size: 13px; letter-spacing: normal; text-align: start; max-width: 100%; height: auto; border-radius: 6px;\">&nbsp;&nbsp;<br></span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（1）t1和t2</span><span style=\"max-width: 100%; color: rgb(255, 76, 0); letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">字符集不同</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">，存储空间不同；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（2）t1和t2相join时，遍历了t1的所有记录3条，t1的每一条记录又要遍历t2的所有记录6条，实际进行了笛卡尔积循环计算</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 12px; overflow-wrap: break-word !important;\">(nested loop)</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">，</span><span style=\"max-width: 100%; color: rgb(255, 76, 0); letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">索引无效</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（3）t1和t3相join时，遍历了t1的所有记录3条，t1的每一条记录</span><span style=\"max-width: 100%; color: rgb(255, 76, 0); letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">使用t3索引</span><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">，即扫描1行记录；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; background-color: transparent; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">总结</span></strong></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">两类隐蔽的不能利用索引的case：</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（1）表列类型，与where值类型，不一致；</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; text-align: justify; background-color: transparent; line-height: 1.75em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; letter-spacing: 1px; font-size: 15px; overflow-wrap: break-word !important;\">（2）join表的字符编码不同；</span></p>',NULL,0,2,1,0,1,'两类非常隐蔽的全表扫描，不能命中索引','mysql',1,'2019-10-31 17:33:06','2019-10-31 17:33:06'),(41,'权限管理模块设计',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>我们比较常见的就是基于角色的访问控制，用户通过角色与权限进行关联。简单地说，一个用户拥有多个角色，一个角色拥有多个权限。这样，就构造成“用户-角色-权限”的授权模型。在这种模型中，用户与角色之间、角色与权限之间，通常都是多对多的关系。如下图：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191101155447647.png\" title=\"\" alt=\"\"></p> \n<p>基于这个，得先了解角色到底是什么？我们可以理解它为一定数量的权限的集合，是一个权限的载体。例如：一个论坛的“管理员”、“版主”，它们都是角色。但是所能做的事情是不完全一样的，版主只能管理版内的贴子，用户等，而这些都是属于权限，如果想要给某个用户授予这些权限，不用直接将权限授予用户，只需将“版主”这个角色赋予该用户即可。</p> \n<p>但是通过上面我们也发现问题了，如果用户的数量非常大的时候，就需要给系统的每一个用户逐一授权(分配角色)，这是件非常繁琐的事情，这时就可以增加一个用户组，每个用户组内有多个用户，除了给单个用户授权外，还可以给用户组授权，这样一来，通过一次授权，就可以同时给多个用户授予相同的权限，而这时用户的所有权限就是用户个人拥有的权限与该用户所在组所拥有的权限之和。用户组、用户与角色三者的关联关系如下图：</p> \n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191101155448598.png\" title=\"\" alt=\"\"></p> \n<p>通常在应用系统里面的权限我们把它表现为菜单的访问(页面级)、功能模块的操作(功能级)、文件上传的删改，甚至页面上某个按钮、图片是否可见等等都属于权限的范畴。有些权限设计，会把功能操作作为一类，而把文件、菜单、页面元素等作为另一类，这样构成“用户-角色-权限-资源”的授权模型。而在做数据表建模时，可把功能操作和资源统一管理，也就是都直接与权限表进行关联，这样可能更具便捷性和易扩展性。如下图：</p> \n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191101155446798.png\" title=\"\" alt=\"\"></p> \n<p>这里特别需要注意以下权限表中有一列“PowerType(权限类型)”，我们根据它的取值来区分是哪一类权限，可以把它理解为一个枚举，如“MENU”表示菜单的访问权限、“OPERATION”表示功能模块的操作权限、“FILE”表示文件的修改权限、“ELEMENT”表示页面元素的可见性控制等。</p> \n<p>这样设计的好处有两个。一、不需要区分哪些是权限操作，哪些是资源，（实际上，有时候也不好区分，如菜单，把它理解为资源呢还是功能模块权限呢？）；二、方便扩展，当系统要对新的东西进行权限控制时，我只需要建立一个新的关联表“权限XX关联表”，并确定这类权限的权限类型字符串即可。</p> \n<p>需要注意的是，权限表与权限菜单关联表、权限菜单关联表与菜单表都是一对一的关系。（文件、页面权限点、功能操作等同理）。也就是每添加一个菜单，就得同时往这三个表中各插入一条记录。这样，可以不需要权限菜单关联表，让权限表与菜单表直接关联，此时，须在权限表中新增一列用来保存菜单的ID，权限表通过“权限类型”和这个ID来区分是种类型下的哪条记录。最后扩展出来的模型完整设计如下图：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191101155447923.png\" title=\"\" alt=\"\"></p> \n<p>注意上面我额外增加了一个操作日志表；</p> \n<p>随着系统的日益庞大，为了方便管理，如果有需要可引入角色组对角色进行分类管理，跟用户组不同，角色组不参与授权。例如：当遇到有多个子公司，每个子公司下有多个部门，这是我们就可以把部门理解为角色，子公司理解为角色组，角色组不参于权限分配。另外，为方便上面各主表自身的管理与查找，可采用树型结构，如菜单树、功能树等，当然这些可不需要参于权限分配。</p> \n<p>数据字典：</p> \n<p>1.用户表：</p> \n<table style=\"height: 12px; width: 578px;\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p style=\"text-align: left;\"><strong>用户信息表(UserInfo)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>用户ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>用户名</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>UserName</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(20)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>&nbsp;</p> \n<p>2.角色表：</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>角色表(Role)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>角色ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>角色名</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>RoleName</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(30)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>3.用户与角色关联表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>用户与角色关联表(User_Role)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>用户ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>UserId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>角色ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>RoleId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>4.用户组表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>用户组表(UserGroup)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>用户组ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>用户组名</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>UserGroupName</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(30)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>5.用户组与用户信息关联表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>用户组与用户信息关联表(UserGroup_UserInfo)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>用户组ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>UserGroupId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>用户ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>UserId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>6.用户组与角色关联表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>用户组与角色关联表(UserGroup_Role)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>用户组ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>UserGroupId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>角色ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>RoleId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>7．菜单表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>菜单表(Menu)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>菜单名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>MenuName</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(30)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>菜单URL</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>MenuUrl</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(100)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>&nbsp;</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>菜单父ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ParentId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>&nbsp;</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>8.页面元素表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>页面元素表(PageElement)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>页面元素名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PageElementName</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(100)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>9.文件表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>文件表(File)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>文件名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FileName</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(50)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>文件路径</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FilePath</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(100)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>&nbsp;</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>10.权限表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>权限表(Power)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>权限类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PowerType</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(50)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>11.权限与菜单关联表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>权限与菜单关联表(Power_Menu)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>权限ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PowerId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>菜单ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>MenuId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>12.权限与页面元素关联表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>权限与页面元素关联表(Power_Page)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>权限ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PowerId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>页面元素ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PageId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>13.权限与文件关联表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>权限与文件关联表(Power_File)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>权限ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PowerId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>文件ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FileId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>14.功能操作表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>功能操作表(Operation)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>操作名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>OperationName</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(50)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>操作编码</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>OperationCode</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(50)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>&nbsp;</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>拦截URL前缀</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Ljurlqz</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(100)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>&nbsp;</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>操作父ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ParentId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>&nbsp;</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>15.权限与功能操作关联表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>权限与功能操作关联表(Power_Operation)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>权限ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PowerId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>操作ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>OperationId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>16.角色与权限关联表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>角色与权限关联表(Role_Power)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>角色ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>RoleId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>权限ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PowerId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>17.操作日志表</p> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td colspan=\"4\" valign=\"top\" width=\"553\"> <p><strong>操作日志表(OperationLog)</strong></p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>字段名称</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>字段</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>类型</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>备注</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>PK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>操作类型Id</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>OperationTypeId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>操作内容</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>OperationContent</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Varchar(500)</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>&nbsp;</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>操作用户ID</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>OperationUserId</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Int</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>FK not null</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"138\"> <p>操作时间</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>OperationTime</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>Date</p> </td> \n   <td valign=\"top\" width=\"138\"> <p>&nbsp;</p> </td> \n  </tr> \n </tbody> \n</table> \n<p>&nbsp;</p> \n<p>&nbsp;</p> \n<p>&nbsp;需要电子版的可以私信我！！！</p> \n<p>还是把电子版上传上来感兴趣的直接<a href=\"https://files.cnblogs.com/files/myindex/%E5%85%B3%E7%B3%BB%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%AD%97%E5%85%B8.7z\" target=\"_blank\">下载</a>吧</p>',NULL,0,2,1,0,0,'我们比较常见的就是基于角色的访问控制，用户通过角色与权限进行关联。简单地说，一个用户拥有多个角色，一个角色拥有多个权限。这样，就构造成“用户-角色-权限”的授权模型。在这种模型中，用户与角色之间、角色','权限管理设计',1,'2019-11-01 15:54:49','2020-05-17 15:58:49'),(42,'[springBoot系列]--springBoot注解大全',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p><span style=\"color: #ff0000; font-size: 18px;\"><strong>一、注解(annotations)列表</strong> </span><br> @SpringBootApplication：包含了@ComponentScan、@Configuration和@EnableAutoConfiguration注解。其中@ComponentScan让<a class=\"replace_word\" title=\"Java EE知识库\" href=\"http://lib.csdn.net/base/javaee\" target=\"_blank\">spring</a> Boot扫描到Configuration类并把它加入到程序上下文。</p> \n<p>@Configuration 等同于spring的XML配置文件；使用<a class=\"replace_word\" title=\"Java SE知识库\" href=\"http://lib.csdn.net/base/javase\" target=\"_blank\">Java</a>代码可以检查类型安全。</p> \n<p>@EnableAutoConfiguration 自动配置。</p> \n<p>@ComponentScan 组件扫描，可自动发现和装配一些Bean。</p> \n<p>@Component可配合CommandLineRunner使用，在程序启动后执行一些基础任务。</p> \n<p>@RestController注解是@Controller和@ResponseBody的合集,表示这是个控制器bean,并且是将函数的返回值直 接填入HTTP响应体中,是REST风格的控制器。</p> \n<p>@Autowired自动导入。</p> \n<p>@PathVariable获取参数。</p> \n<p>@JsonBackReference解决嵌套外链问题。</p> \n<p>@RepositoryRestResourcepublic配合spring-boot-starter-data-rest使用。</p> \n<p><strong><span style=\"color: #ff0000; font-size: 18px;\">二、注解(annotations)详解</span></strong></p> \n<p>@SpringBootApplication：申明让spring boot自动给程序进行必要的配置，这个配置等同于：@Configuration ，@EnableAutoConfiguration 和 @ComponentScan 三个配置。 </p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.example.myproject; \n</span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.springframework.boot.SpringApplication; \n</span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> same as @Configuration @EnableAutoConfiguration @ComponentScan </span>\n<span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Application { \n</span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) { \nSpringApplication.run(Application.</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">, args); \n} \n}</span></pre> \n</div> \n<p>&nbsp;</p> \n<p>@ResponseBody：表示该方法的返回结果直接写入HTTP response body中，一般在异步获取数据时使用，用于构建RESTful的api。在使用@RequestMapping后，返回值通常解析为跳转路径，加上@responsebody后返回结果不会被解析为跳转路径，而是直接写入HTTP response body中。比如异步获取json数据，加上@responsebody后，会直接返回json数据。该注解一般会配合@RequestMapping一起使用。示例代码：</p> \n<div class=\"cnblogs_code\"> \n <pre>@RequestMapping(“/<span style=\"color: #000000;\">test”) \n@ResponseBody \n</span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String test(){ \n</span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">”ok”; \n}</span></pre> \n</div> \n<p>&nbsp;</p> \n<p>@Controller：用于定义控制器类，在spring 项目中由控制器负责将用户发来的URL请求转发到对应的服务接口（service层），一般这个注解在类中，通常方法需要配合注解@RequestMapping。示例代码：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #000000;\">@Controller \n@RequestMapping(“</span>/<span style=\"color: #000000;\">demoInfo”) \npublicclass DemoController { \n@Autowired \n</span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> DemoInfoService demoInfoService;\n\n@RequestMapping(</span>\"/hello\"<span style=\"color: #000000;\">)\n</span><span style=\"color: #0000ff;\">public</span> String hello(Map&lt;String,Object&gt;<span style=\"color: #000000;\"> map){\n   System.out.println(</span>\"DemoController.hello()\"<span style=\"color: #000000;\">);\n   map.put(</span>\"hello\",\"from TemplateController.helloHtml\"<span style=\"color: #000000;\">);\n   </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">会使用hello.html或者hello.ftl模板进行渲染显示.</span>\n   <span style=\"color: #0000ff;\">return</span>\"/hello\"<span style=\"color: #000000;\">;\n}\n}</span></pre> \n</div> \n<p>&nbsp;</p> \n<p>@RestController：用于标注控制层组件(如struts中的action)，@ResponseBody和@Controller的合集。示例代码：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.kfit.demo.web;\n\n</span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.springframework.web.bind.annotation.RequestMapping; \n</span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> org.springframework.web.bind.annotation.RestController;\n\n</span><span style=\"color: #000000;\">\n@RestController \n@RequestMapping(“</span>/<span style=\"color: #000000;\">demoInfo2”) \npublicclass DemoController2 {\n\n@RequestMapping(</span>\"/test\"<span style=\"color: #000000;\">)\n</span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String test(){\n   </span><span style=\"color: #0000ff;\">return</span>\"ok\"<span style=\"color: #000000;\">;\n}\n}</span></pre> \n</div> \n<p>&nbsp;</p> \n<p>@RequestMapping：提供路由信息，负责URL到Controller中的具体函数的映射。</p> \n<p>@EnableAutoConfiguration：Spring Boot自动配置（auto-configuration）：尝试根据你添加的jar依赖自动配置你的Spring应用。例如，如果你的classpath下存在HSQLDB，并且你没有手动配置任何<a class=\"replace_word\" title=\"MySQL知识库\" href=\"http://lib.csdn.net/base/mysql\" target=\"_blank\">数据库</a>连接beans，那么我们将自动配置一个内存型（in-memory）数据库”。你可以将@EnableAutoConfiguration或者@SpringBootApplication注解添加到一个@Configuration类上来选择自动配置。如果发现应用了你不想要的特定自动配置类，你可以使用@EnableAutoConfiguration注解的排除属性来禁用它们。</p> \n<p>@ComponentScan：表示将该类自动发现扫描组件。个人理解相当于，如果扫描到有@Component、@Controller、@Service等这些注解的类，并注册为Bean，可以自动收集所有的Spring组件，包括@Configuration类。我们经常使用@ComponentScan注解搜索beans，并结合@Autowired注解导入。可以自动收集所有的Spring组件，包括@Configuration类。我们经常使用@ComponentScan注解搜索beans，并结合@Autowired注解导入。如果没有配置的话，Spring Boot会扫描启动类所在包下以及子包下的使用了@Service,@Repository等注解的类。</p> \n<p>@Configuration：相当于传统的xml配置文件，如果有些第三方库需要用到xml文件，建议仍然通过@Configuration类作为项目的配置主类——可以使用@ImportResource注解加载xml配置文件。</p> \n<p>@Import：用来导入其他配置类。</p> \n<p>@ImportResource：用来加载xml配置文件。</p> \n<p>@Autowired：自动导入依赖的bean</p> \n<p>@Service：一般用于修饰service层的组件</p> \n<p>@Repository：使用@Repository注解可以确保DAO或者repositories提供异常转译，这个注解修饰的DAO或者repositories类会被ComponetScan发现并配置，同时也不需要为它们提供XML配置项。</p> \n<p>@Bean：用@Bean标注方法等价于XML中配置的bean。</p> \n<p>@Value：注入Spring boot application.properties配置的属性的值。示例代码：</p> \n<div class=\"cnblogs_code\"> \n <pre>@Value(value =<span style=\"color: #000000;\"> “#{message}”) \n</span><span style=\"color: #0000ff;\">private</span> String message;</pre> \n</div> \n<p>&nbsp;</p> \n<p>@Inject：等价于默认的@Autowired，只是没有required属性；</p> \n<p>@Component：泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。</p> \n<p>@Bean:相当于XML中的,放在方法的上面，而不是类，意思是产生一个bean,并交给spring管理。</p> \n<p>@AutoWired：自动导入依赖的bean。byType方式。把配置好的Bean拿来用，完成属性、方法的组装，它可以对类成员变量、方法及构造函数进行标注，完成自动装配的工作。当加上（required=false）时，就算找不到bean也不报错。</p> \n<p>@Qualifier：当有多个同一类型的Bean时，可以用@Qualifier(“name”)来指定。与@Autowired配合使用。@Qualifier限定描述符除了能根据名字进行注入，但能进行更细粒度的控制如何选择候选者，具体使用方式如下：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #000000;\">@Autowired \n@Qualifier(value </span>=<span style=\"color: #000000;\"> “demoInfoService”) \n</span><span style=\"color: #0000ff;\">private</span> DemoInfoService demoInfoService;</pre> \n</div> \n<p>&nbsp;</p> \n<p>@Resource(name=”name”,type=”type”)：没有括号内内容的话，默认byName。与@Autowired干类似的事。</p> \n<p><span style=\"font-size: 18px; color: #ff0000; background-color: #ffffff;\"><strong>三、JPA注解</strong></span></p> \n<p>@Entity：@Table(name=”“)：表明这是一个实体类。一般用于jpa这两个注解一般一块使用，但是如果表名和实体类名相同的话，@Table可以省略</p> \n<p>@MappedSuperClass:用在确定是父类的entity上。父类的属性子类可以继承。</p> \n<p>@NoRepositoryBean:一般用作父类的repository，有这个注解，spring不会去实例化该repository。</p> \n<p>@Column：如果字段名与列名相同，则可以省略。</p> \n<p>@Id：表示该属性为主键。</p> \n<p>@GeneratedValue(strategy = GenerationType.SEQUENCE,generator = “repair_seq”)：表示主键生成策略是sequence（可以为Auto、IDENTITY、native等，Auto表示可在多个数据库间切换），指定sequence的名字是repair_seq。</p> \n<p>@SequenceGeneretor(name = “repair_seq”, sequenceName = “seq_repair”, allocationSize = 1)：name为sequence的名称，以便使用，sequenceName为数据库的sequence名称，两个名称可以一致。</p> \n<p>@Transient：表示该属性并非一个到数据库表的字段的映射,ORM框架将忽略该属性。如果一个属性并非数据库表的字段映射,就务必将其标示为@Transient,否则,ORM框架默认其注解为@Basic。@Basic(fetch=FetchType.LAZY)：标记可以指定实体属性的加载方式</p> \n<p>@JsonIgnore：作用是json序列化时将<a class=\"replace_word\" title=\"Java 知识库\" href=\"http://lib.csdn.net/base/java\" target=\"_blank\">Java </a>bean中的一些属性忽略掉,序列化和反序列化都受影响。</p> \n<p>@JoinColumn（name=”loginId”）:一对一：本表中指向另一个表的外键。一对多：另一个表指向本表的外键。</p> \n<p>@OneToOne、@OneToMany、@ManyToOne：对应<a class=\"replace_word\" title=\"Java EE知识库\" href=\"http://lib.csdn.net/base/javaee\" target=\"_blank\">hibernate</a>配置文件中的一对一，一对多，多对一。</p> \n<p><span style=\"font-size: 18px;\"><strong><span style=\"color: #ff0000;\">四、springMVC相关注解</span></strong></span></p> \n<p>@RequestMapping：@RequestMapping(“/path”)表示该控制器处理所有“/path”的UR L请求。RequestMapping是一个用来处理请求地址映射的注解，可用于类或方法上。 <br> 用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。该注解有六个属性： <br> params:指定request中必须包含某些参数值是，才让该方法处理。 <br> headers:指定request中必须包含某些指定的header值，才能让该方法处理请求。 <br> value:指定请求的实际地址，指定的地址可以是URI Template 模式 <br> method:指定请求的method类型， GET、POST、PUT、DELETE等 <br> consumes:指定处理请求的提交内容类型（Content-Type），如application/json,text/html; <br> produces:指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回</p> \n<p>@RequestParam：用在方法的参数前面。 <br> @RequestParam <br> String a =request.getParameter(“a”)。</p> \n<p>@PathVariable:路径变量。如 </p> \n<div class=\"cnblogs_code\"> \n <pre>RequestMapping(“user/get/mac/<span style=\"color: #000000;\">{macAddress}”) \n</span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> String getByMacAddress(@PathVariable String macAddress){ \n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">do something; </span>\n} </pre> \n</div> \n<p>参数与大括号里的名字一样要相同。</p> \n<p>&nbsp;</p> \n<p><span style=\"font-size: 18px;\"><strong><span style=\"color: #ff0000;\">五、全局异常处理</span></strong></span></p> \n<p>@ControllerAdvice：包含@Component。可以被扫描到。统一处理异常。</p> \n<p>@ExceptionHandler（Exception.class）：用在方法上面表示遇到这个异常就执行以下方法。</p> \n<p>&nbsp;</p>',NULL,0,2,1,0,0,'一、注解(annotations)列表@SpringBootApplication：包含了@ComponentScan、@Configuration和@EnableAutoConfiguration','spingboot注解',1,'2019-11-01 16:02:45','2019-11-01 16:03:52'),(43,'Java的12个语法糖，你知道吗？',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>本文从 Java 编译原理角度，深入字节码及 class 文件，抽丝剥茧，了解 Java 中的语法糖原理及用法，帮助大家在学会如何使用 Java。<br></p> \n<h3 id=\"语法糖\">语法糖</h3> \n<p>语法糖（Syntactic Sugar），也称糖衣语法，是由英国计算机学家 Peter.J.Landin 发明的一个术语，指在计算机语言中添加的某种语法，这种语法对语言的功能并没有影响，但是更方便程序员使用。简而言之，语法糖让程序更加简洁，有更高的可读性。</p> \n<blockquote> \n <p>有意思的是，在编程领域，除了语法糖，还有语法盐和语法糖精的说法，篇幅有限这里不做扩展了。</p> \n</blockquote> \n<p>我们所熟知的编程语言中几乎都有语法糖。作者认为，语法糖的多少是评判一个语言够不够牛逼的标准之一。很多人说Java是一个“低糖语言”，其实从Java 7开始Java语言层面上一直在添加各种糖，主要是在“Project Coin”项目下研发。尽管现在Java有人还是认为现在的Java是低糖，未来还会持续向着“高糖”的方向发展。</p> \n<h3 id=\"解语法糖\">解语法糖</h3> \n<p>前面提到过，语法糖的存在主要是方便开发人员使用。但其实，Java虚拟机并不支持这些语法糖。这些语法糖在编译阶段就会被还原成简单的基础语法结构，这个过程就是解语法糖。</p> \n<p>说到编译，大家肯定都知道，Java语言中，<code>javac</code>命令可以将后缀名为<code>.java</code>的源文件编译为后缀名为<code>.class</code>的可以运行于Java虚拟机的字节码。如果你去看<code>com.sun.tools.javac.main.JavaCompiler</code>的源码，你会发现在<code>compile()</code>中有一个步骤就是调用<code>desugar()</code>，这个方法就是负责解语法糖的实现的。</p> \n<p>Java 中最常用的语法糖主要有泛型、变长参数、条件编译、自动拆装箱、内部类等。本文主要来分析下这些语法糖背后的原理。一步一步剥去糖衣，看看其本质。</p> \n<h3 id=\"糖块一-switch-支持-string-与枚举\">糖块一、 switch 支持 String 与枚举</h3> \n<p>前面提到过，从Java 7 开始，Java语言中的语法糖在逐渐丰富，其中一个比较重要的就是Java 7中<code>switch</code>开始支持<code>String</code>。</p> \n<p>在开始coding之前先科普下，Java中的<code>swith</code>自身原本就支持基本类型。比如<code>int</code>、<code>char</code>等。对于<code>int</code>类型，直接进行数值的比较。对于<code>char</code>类型则是比较其ascii码。所以，对于编译器来说，<code>switch</code>中其实只能使用整型，任何类型的比较都要转换成整型。比如<code>byte</code>。<code>short</code>，<code>char</code>(ackii码是整型)以及<code>int</code>。</p> \n<p>那么接下来看下<code>switch</code>对<code>String</code>得支持，有以下代码：</p> \n<pre><code>public class switchDemoString {\n    public static void main(String[] args) {\n        String str = \"world\";\n        switch (str) {\n        case \"hello\":\n            System.out.println(\"hello\");\n            break;\n        case \"world\":\n            System.out.println(\"world\");\n            break;\n        default:\n            break;\n        }\n    }\n}</code></pre> \n<p><a href=\"http://www.hollischuang.com/archives/58\">反编译</a>后内容如下：</p> \n<pre><code>public class switchDemoString\n{\n    public switchDemoString()\n    {\n    }\n    public static void main(String args[])\n    {\n        String str = \"world\";\n        String s;\n        switch((s = str).hashCode())\n        {\n        default:\n            break;\n        case 99162322:\n            if(s.equals(\"hello\"))\n                System.out.println(\"hello\");\n            break;\n        case 113318802:\n            if(s.equals(\"world\"))\n                System.out.println(\"world\");\n            break;\n        }\n    }\n}</code></pre> \n<p>看到这个代码，你知道原来<strong>字符串的switch是通过<code>equals()</code>和<code>hashCode()</code>方法来实现的。</strong>还好<code>hashCode()</code>方法返回的是<code>int</code>，而不是<code>long</code>。</p> \n<blockquote> \n <p>仔细看下可以发现，进行<code>switch</code>的实际是哈希值，然后通过使用<code>equals</code>方法比较进行安全检查，这个检查是必要的，因为哈希可能会发生碰撞。因此它的性能是不如使用枚举进行switch或者使用纯整数常量，但这也不是很差。</p> \n</blockquote> \n<h3 id=\"糖块二-泛型\">糖块二、 泛型</h3> \n<p>我们都知道，很多语言都是支持泛型的，但是很多人不知道的是，不同的编译器对于泛型的处理方式是不同的，通常情况下，一个编译器处理泛型有两种方式：<code>Code specialization</code>和<code>Code sharing</code>。C++和C#是使用<code>Code specialization</code>的处理机制，而Java使用的是<code>Code sharing</code>的机制。</p> \n<blockquote> \n <p>Code sharing方式为每个泛型类型创建唯一的字节码表示，并且将该泛型类型的实例都映射到这个唯一的字节码表示上。将多种泛型类形实例映射到唯一的字节码表示是通过类型擦除（<code>type erasue</code>）实现的。</p> \n</blockquote> \n<p>也就是说，<strong>对于Java虚拟机来说，他根本不认识<code>Map&lt;String, String&gt; map</code>这样的语法。需要在编译阶段通过类型擦除的方式进行解语法糖。</strong></p> \n<p>类型擦除的主要过程如下： 1.将所有的泛型参数用其最左边界（最顶级的父类型）类型替换。 2.移除所有的类型参数。</p> \n<p>以下代码：</p> \n<pre><code>Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();  \nmap.put(\"name\", \"hollis\");  \nmap.put(\"wechat\", \"Hollis\");  \nmap.put(\"blog\", \"www.hollischuang.com\");  </code></pre> \n<p>解语法糖之后会变成：</p> \n<pre><code>Map map = new HashMap();  \nmap.put(\"name\", \"hollis\");  \nmap.put(\"wechat\", \"Hollis\");  \nmap.put(\"blog\", \"www.hollischuang.com\");  </code></pre> \n<p>以下代码：</p> \n<pre><code>public static &lt;A extends Comparable&lt;A&gt;&gt; A max(Collection&lt;A&gt; xs) {\n    Iterator&lt;A&gt; xi = xs.iterator();\n    A w = xi.next();\n    while (xi.hasNext()) {\n        A x = xi.next();\n        if (w.compareTo(x) &lt; 0)\n            w = x;\n    }\n    return w;\n}</code></pre> \n<p>类型擦除后会变成：</p> \n<pre><code> public static Comparable max(Collection xs){\n    Iterator xi = xs.iterator();\n    Comparable w = (Comparable)xi.next();\n    while(xi.hasNext())\n    {\n        Comparable x = (Comparable)xi.next();\n        if(w.compareTo(x) &lt; 0)\n            w = x;\n    }\n    return w;\n}</code></pre> \n<p><strong>虚拟机中没有泛型，只有普通类和普通方法，所有泛型类的类型参数在编译时都会被擦除，泛型类并没有自己独有的<code>Class</code>类对象。比如并不存在<code>List&lt;String&gt;.class</code>或是<code>List&lt;Integer&gt;.class</code>，而只有<code>List.class</code>。</strong></p> \n<h3 id=\"糖块三-自动装箱与拆箱\">糖块三、 自动装箱与拆箱</h3> \n<p>自动装箱就是Java自动将原始类型值转换成对应的对象，比如将int的变量转换成Integer对象，这个过程叫做装箱，反之将Integer对象转换成int类型值，这个过程叫做拆箱。因为这里的装箱和拆箱是自动进行的非人为转换，所以就称作为自动装箱和拆箱。原始类型byte, short, char, int, long, float, double 和 boolean 对应的封装类为Byte, Short, Character, Integer, Long, Float, Double, Boolean。</p> \n<p>先来看个自动装箱的代码：</p> \n<pre><code> public static void main(String[] args) {\n    int i = 10;\n    Integer n = i;\n}</code></pre> \n<p>反编译后代码如下:</p> \n<pre><code>public static void main(String args[])\n{\n    int i = 10;\n    Integer n = Integer.valueOf(i);\n}</code></pre> \n<p>再来看个自动拆箱的代码：</p> \n<pre><code>public static void main(String[] args) {\n\n    Integer i = 10;\n    int n = i;\n}</code></pre> \n<p>反编译后代码如下：</p> \n<pre><code>public static void main(String args[])\n{\n    Integer i = Integer.valueOf(10);\n    int n = i.intValue();\n}</code></pre> \n<p>从反编译得到内容可以看出，在装箱的时候自动调用的是<code>Integer</code>的<code>valueOf(int)</code>方法。而在拆箱的时候自动调用的是<code>Integer</code>的<code>intValue</code>方法。</p> \n<p>所以，<strong>装箱过程是通过调用包装器的valueOf方法实现的，而拆箱过程是通过调用包装器的 xxxValue方法实现的。</strong></p> \n<h3 id=\"糖块四-方法变长参数\">糖块四 、 方法变长参数</h3> \n<p>可变参数(<code>variable arguments</code>)是在Java 1.5中引入的一个特性。它允许一个方法把任意数量的值作为参数。</p> \n<p>看下以下可变参数代码，其中print方法接收可变参数：</p> \n<pre><code>public static void main(String[] args)\n    {\n        print(\"Holis\", \"公众号:Hollis\", \"博客：www.hollischuang.com\", \"QQ：907607222\");\n    }\n\npublic static void print(String... strs)\n{\n    for (int i = 0; i &lt; strs.length; i++)\n    {\n        System.out.println(strs[i]);\n    }\n}</code></pre> \n<p>反编译后代码：</p> \n<pre><code> public static void main(String args[])\n{\n    print(new String[] {\n        \"Holis\", \"\\u516C\\u4F17\\u53F7:Hollis\", \"\\u535A\\u5BA2\\uFF1Awww.hollischuang.com\", \"QQ\\uFF1A907607222\"\n    });\n}\n\npublic static transient void print(String strs[])\n{\n    for(int i = 0; i &lt; strs.length; i++)\n        System.out.println(strs[i]);\n\n}</code></pre> \n<p>从反编译后代码可以看出，可变参数在被使用的时候，他首先会创建一个数组，数组的长度就是调用该方法是传递的实参的个数，然后再把参数值全部放到这个数组当中，然后再把这个数组作为参数传递到被调用的方法中。</p> \n<blockquote> \n <p>PS：反编译后的print方法声明中有一个transient标识，是不是很奇怪？transient不是不可以修饰方法吗？transient不是和序列化有关么？transient在这里的作用是什么？因为这个与本文关系不大，这里不做深入分析了。相了解的同学可以关注我微信公众号或者博客。</p> \n</blockquote> \n<h3 id=\"糖块五-枚举\">糖块五 、 枚举</h3> \n<p>Java SE5提供了一种新的类型-Java的枚举类型，关键字<code>enum</code>可以将一组具名的值的有限集合创建为一种新的类型，而这些具名的值可以作为常规的程序组件使用，这是一种非常有用的功能。</p> \n<p>要想看源码，首先得有一个类吧，那么枚举类型到底是什么类呢？是<code>enum</code>吗？答案很明显不是，<code>enum</code>就和<code>class</code>一样，只是一个关键字，他并不是一个类，那么枚举是由什么类维护的呢，我们简单的写一个枚举：</p> \n<pre><code>public enum t {\n    SPRING,SUMMER;\n}</code></pre> \n<p>然后我们使用反编译，看看这段代码到底是怎么实现的，反编译后代码内容如下：</p> \n<pre><code>public final class T extends Enum\n{\n    private T(String s, int i)\n    {\n        super(s, i);\n    }\n    public static T[] values()\n    {\n        T at[];\n        int i;\n        T at1[];\n        System.arraycopy(at = ENUM$VALUES, 0, at1 = new T[i = at.length], 0, i);\n        return at1;\n    }\n\n    public static T valueOf(String s)\n    {\n        return (T)Enum.valueOf(demo/T, s);\n    }\n\n    public static final T SPRING;\n    public static final T SUMMER;\n    private static final T ENUM$VALUES[];\n    static\n    {\n        SPRING = new T(\"SPRING\", 0);\n        SUMMER = new T(\"SUMMER\", 1);\n        ENUM$VALUES = (new T[] {\n            SPRING, SUMMER\n        });\n    }\n}</code></pre> \n<p>通过反编译后代码我们可以看到，<code>public final class T extends Enum</code>，说明，该类是继承了<code>Enum</code>类的，同时<code>final</code>关键字告诉我们，这个类也是不能被继承的。<strong>当我们使用<code>enmu</code>来定义一个枚举类型的时候，编译器会自动帮我们创建一个<code>final</code>类型的类继承<code>Enum</code>类，所以枚举类型不能被继承。</strong></p> \n<h3 id=\"糖块六-内部类\">糖块六 、 内部类</h3> \n<p>内部类又称为嵌套类，可以把内部类理解为外部类的一个普通成员。</p> \n<p><strong>内部类之所以也是语法糖，是因为它仅仅是一个编译时的概念，<code>outer.java</code>里面定义了一个内部类<code>inner</code>，一旦编译成功，就会生成两个完全不同的<code>.class</code>文件了，分别是<code>outer.class</code>和<code>outer$inner.class</code>。所以内部类的名字完全可以和它的外部类名字相同。</strong></p> \n<pre><code>public class OutterClass {\n    private String userName;\n\n    public String getUserName() {\n        return userName;\n    }\n\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n\n    public static void main(String[] args) {\n\n    }\n\n    class InnerClass{\n        private String name;\n\n        public String getName() {\n            return name;\n        }\n\n        public void setName(String name) {\n            this.name = name;\n        }\n    }\n}</code></pre> \n<p>以上代码编译后会生成两个class文件：<code>OutterClass$InnerClass.class</code> 、<code>OutterClass.class</code> 。当我们尝试对<code>OutterClass.class</code>文件进行反编译的时候，命令行会打印以下内容：<code>Parsing OutterClass.class...Parsing inner class OutterClass$InnerClass.class... Generating OutterClass.jad</code> 。他会把两个文件全部进行反编译，然后一起生成一个<code>OutterClass.jad</code>文件。文件内容如下：</p> \n<pre><code>public class OutterClass\n{\n    class InnerClass\n    {\n        public String getName()\n        {\n            return name;\n        }\n        public void setName(String name)\n        {\n            this.name = name;\n        }\n        private String name;\n        final OutterClass this$0;\n\n        InnerClass()\n        {\n            this.this$0 = OutterClass.this;\n            super();\n        }\n    }\n\n    public OutterClass()\n    {\n    }\n    public String getUserName()\n    {\n        return userName;\n    }\n    public void setUserName(String userName){\n        this.userName = userName;\n    }\n    public static void main(String args1[])\n    {\n    }\n    private String userName;\n}</code></pre> \n<h3 id=\"糖块七-条件编译\">糖块七 、条件编译</h3> \n<p>—般情况下，程序中的每一行代码都要参加编译。但有时候出于对程序代码优化的考虑，希望只对其中一部分内容进行编译，此时就需要在程序中加上条件，让编译器只对满足条件的代码进行编译，将不满足条件的代码舍弃，这就是条件编译。</p> \n<p>如在C或CPP中，可以通过预处理语句来实现条件编译。其实在Java中也可实现条件编译。我们先来看一段代码：</p> \n<pre><code>public class ConditionalCompilation {\n    public static void main(String[] args) {\n        final boolean DEBUG = true;\n        if(DEBUG) {\n            System.out.println(\"Hello, DEBUG!\");\n        }\n\n        final boolean ONLINE = false;\n\n        if(ONLINE){\n            System.out.println(\"Hello, ONLINE!\");\n        }\n    }\n}</code></pre> \n<p>反编译后代码如下：</p> \n<pre><code>public class ConditionalCompilation\n{\n\n    public ConditionalCompilation()\n    {\n    }\n\n    public static void main(String args[])\n    {\n        boolean DEBUG = true;\n        System.out.println(\"Hello, DEBUG!\");\n        boolean ONLINE = false;\n    }\n}</code></pre> \n<p>首先，我们发现，在反编译后的代码中没有<code>System.out.println(\"Hello, ONLINE!\");</code>，这其实就是条件编译。当<code>if(ONLINE)</code>为false的时候，编译器就没有对其内的代码进行编译。</p> \n<p>所以，<strong>Java语法的条件编译，是通过判断条件为常量的if语句实现的。其原理也是Java语言的语法糖。根据if判断条件的真假，编译器直接把分支为false的代码块消除。通过该方式实现的条件编译，必须在方法体内实现，而无法在正整个Java类的结构或者类的属性上进行条件编译，这与C/C++的条件编译相比，确实更有局限性。在Java语言设计之初并没有引入条件编译的功能，虽有局限，但是总比没有更强。</strong></p> \n<h3 id=\"糖块八-断言\">糖块八 、 断言</h3> \n<p>在Java中，<code>assert</code>关键字是从JAVA SE 1.4 引入的，为了避免和老版本的Java代码中使用了<code>assert</code>关键字导致错误，Java在执行的时候默认是不启动断言检查的（这个时候，所有的断言语句都将忽略！），如果要开启断言检查，则需要用开关<code>-enableassertions</code>或<code>-ea</code>来开启。</p> \n<p>看一段包含断言的代码：</p> \n<pre><code>public class AssertTest {\n    public static void main(String args[]) {\n        int a = 1;\n        int b = 1;\n        assert a == b;\n        System.out.println(\"公众号：Hollis\");\n        assert a != b : \"Hollis\";\n        System.out.println(\"博客：www.hollischuang.com\");\n    }\n}</code></pre> \n<p>反编译后代码如下：</p> \n<pre><code>public class AssertTest {\n   public AssertTest()\n    {\n    }\n    public static void main(String args[])\n{\n    int a = 1;\n    int b = 1;\n    if(!$assertionsDisabled &amp;&amp; a != b)\n        throw new AssertionError();\n    System.out.println(\"\\u516C\\u4F17\\u53F7\\uFF1AHollis\");\n    if(!$assertionsDisabled &amp;&amp; a == b)\n    {\n        throw new AssertionError(\"Hollis\");\n    } else\n    {\n        System.out.println(\"\\u535A\\u5BA2\\uFF1Awww.hollischuang.com\");\n        return;\n    }\n}\n\nstatic final boolean $assertionsDisabled = !com/hollis/suguar/AssertTest.desiredAssertionStatus();\n\n\n}</code></pre> \n<p>很明显，反编译之后的代码要比我们自己的代码复杂的多。所以，使用了assert这个语法糖我们节省了很多代码。<strong>其实断言的底层实现就是if语言，如果断言结果为true，则什么都不做，程序继续执行，如果断言结果为false，则程序抛出AssertError来打断程序的执行。</strong><code>-enableassertions</code>会设置$assertionsDisabled字段的值。</p> \n<h3 id=\"糖块九-数值字面量\">糖块九 、 数值字面量</h3> \n<p>在java 7中，数值字面量，不管是整数还是浮点数，都允许在数字之间插入任意多个下划线。这些下划线不会对字面量的数值产生影响，目的就是方便阅读。</p> \n<p>比如：</p> \n<pre><code>public class Test {\n    public static void main(String... args) {\n        int i = 10_000;\n        System.out.println(i);\n    }\n}</code></pre> \n<p>反编译后：</p> \n<pre><code>public class Test\n{\n  public static void main(String[] args)\n  {\n    int i = 10000;\n    System.out.println(i);\n  }\n}</code></pre> \n<p>反编译后就是把<code>_</code>删除了。也就是说 <strong>编译器并不认识在数字字面量中的<code>_</code>，需要在编译阶段把他去掉。</strong></p> \n<h3 id=\"糖块十-for-each\">糖块十 、 for-each</h3> \n<p>增强for循环（<code>for-each</code>）相信大家都不陌生，日常开发经常会用到的，他会比for循环要少写很多代码，那么这个语法糖背后是如何实现的呢？</p> \n<pre><code>public static void main(String... args) {\n    String[] strs = {\"Hollis\", \"公众号：Hollis\", \"博客：www.hollischuang.com\"};\n    for (String s : strs) {\n        System.out.println(s);\n    }\n    List&lt;String&gt; strList = ImmutableList.of(\"Hollis\", \"公众号：Hollis\", \"博客：www.hollischuang.com\");\n    for (String s : strList) {\n        System.out.println(s);\n    }\n}</code></pre> \n<p>反编译后代码如下：</p> \n<pre><code>public static transient void main(String args[])\n{\n    String strs[] = {\n        \"Hollis\", \"\\u516C\\u4F17\\u53F7\\uFF1AHollis\", \"\\u535A\\u5BA2\\uFF1Awww.hollischuang.com\"\n    };\n    String args1[] = strs;\n    int i = args1.length;\n    for(int j = 0; j &lt; i; j++)\n    {\n        String s = args1[j];\n        System.out.println(s);\n    }\n\n    List strList = ImmutableList.of(\"Hollis\", \"\\u516C\\u4F17\\u53F7\\uFF1AHollis\", \"\\u535A\\u5BA2\\uFF1Awww.hollischuang.com\");\n    String s;\n    for(Iterator iterator = strList.iterator(); iterator.hasNext(); System.out.println(s))\n        s = (String)iterator.next();\n\n}</code></pre> \n<p>代码很简单，<strong>for-each的实现原理其实就是使用了普通的for循环和迭代器。</strong></p> \n<h3 id=\"糖块十一-try-with-resource\">糖块十一 、 try-with-resource</h3> \n<p>Java里，对于文件操作IO流、数据库连接等开销非常昂贵的资源，用完之后必须及时通过close方法将其关闭，否则资源会一直处于打开状态，可能会导致内存泄露等问题。</p> \n<p>关闭资源的常用方式就是在<code>finally</code>块里是释放，即调用<code>close</code>方法。比如，我们经常会写这样的代码：</p> \n<pre><code>public static void main(String[] args) {\n    BufferedReader br = null;\n    try {\n        String line;\n        br = new BufferedReader(new FileReader(\"d:\\\\hollischuang.xml\"));\n        while ((line = br.readLine()) != null) {\n            System.out.println(line);\n        }\n    } catch (IOException e) {\n        // handle exception\n    } finally {\n        try {\n            if (br != null) {\n                br.close();\n            }\n        } catch (IOException ex) {\n            // handle exception\n        }\n    }\n}</code></pre> \n<p>从Java 7开始，jdk提供了一种更好的方式关闭资源，使用<code>try-with-resources</code>语句，改写一下上面的代码，效果如下：</p> \n<pre><code>public static void main(String... args) {\n    try (BufferedReader br = new BufferedReader(new FileReader(\"d:\\\\ hollischuang.xml\"))) {\n        String line;\n        while ((line = br.readLine()) != null) {\n            System.out.println(line);\n        }\n    } catch (IOException e) {\n        // handle exception\n    }\n}</code></pre> \n<p>看，这简直是一大福音啊，虽然我之前一般使用<code>IOUtils</code>去关闭流，并不会使用在<code>finally</code>中写很多代码的方式，但是这种新的语法糖看上去好像优雅很多呢。看下他的背后：</p> \n<pre><code>public static transient void main(String args[])\n    {\n        BufferedReader br;\n        Throwable throwable;\n        br = new BufferedReader(new FileReader(\"d:\\\\ hollischuang.xml\"));\n        throwable = null;\n        String line;\n        try\n        {\n            while((line = br.readLine()) != null)\n                System.out.println(line);\n        }\n        catch(Throwable throwable2)\n        {\n            throwable = throwable2;\n            throw throwable2;\n        }\n        if(br != null)\n            if(throwable != null)\n                try\n                {\n                    br.close();\n                }\n                catch(Throwable throwable1)\n                {\n                    throwable.addSuppressed(throwable1);\n                }\n            else\n                br.close();\n            break MISSING_BLOCK_LABEL_113;\n            Exception exception;\n            exception;\n            if(br != null)\n                if(throwable != null)\n                    try\n                    {\n                        br.close();\n                    }\n                    catch(Throwable throwable3)\n                      {\n                        throwable.addSuppressed(throwable3);\n                    }\n                else\n                    br.close();\n        throw exception;\n        IOException ioexception;\n        ioexception;\n    }\n}</code></pre> \n<p><strong>其实背后的原理也很简单，那些我们没有做的关闭资源的操作，编译器都帮我们做了。所以，再次印证了，语法糖的作用就是方便程序员的使用，但最终还是要转成编译器认识的语言。</strong></p> \n<h3 id=\"糖块十二lambda表达式\">糖块十二、Lambda表达式</h3> \n<p>关于lambda表达式，有人可能会有质疑，因为网上有人说他并不是语法糖。其实我想纠正下这个说法。<strong>Labmda表达式不是匿名内部类的语法糖，但是他也是一个语法糖。实现方式其实是依赖了几个JVM底层提供的lambda相关api。</strong></p> \n<p>先来看一个简单的lambda表达式。遍历一个list：</p> \n<pre><code>public static void main(String... args) {\n    List&lt;String&gt; strList = ImmutableList.of(\"Hollis\", \"公众号：Hollis\", \"博客：www.hollischuang.com\");\n\n    strList.forEach( s -&gt; { System.out.println(s); } );\n}</code></pre> \n<p>为啥说他并不是内部类的语法糖呢，前面讲内部类我们说过，内部类在编译之后会有两个class文件，但是，包含lambda表达式的类编译后只有一个文件。</p> \n<p>反编译后代码如下:</p> \n<pre><code>public static /* varargs */ void main(String ... args) {\n    ImmutableList strList = ImmutableList.of((Object)\"Hollis\", (Object)\"\\u516c\\u4f17\\u53f7\\uff1aHollis\", (Object)\"\\u535a\\u5ba2\\uff1awww.hollischuang.com\");\n    strList.forEach((Consumer&lt;String&gt;)LambdaMetafactory.metafactory(null, null, null, (Ljava/lang/Object;)V, lambda$main$0(java.lang.String ), (Ljava/lang/String;)V)());\n}\n\nprivate static /* synthetic */ void lambda$main$0(String s) {\n    System.out.println(s);\n}</code></pre> \n<p>可以看到，在<code>forEach</code>方法中，其实是调用了<code>java.lang.invoke.LambdaMetafactory#metafactory</code>方法，该方法的第四个参数implMethod指定了方法实现。可以看到这里其实是调用了一个<code>lambda$main$0</code>方法进行了输出。</p> \n<p>再来看一个稍微复杂一点的，先对List进行过滤，然后再输出：</p> \n<pre><code>public static void main(String... args) {\n    List&lt;String&gt; strList = ImmutableList.of(\"Hollis\", \"公众号：Hollis\", \"博客：www.hollischuang.com\");\n\n    List HollisList = strList.stream().filter(string -&gt; string.contains(\"Hollis\")).collect(Collectors.toList());\n\n    HollisList.forEach( s -&gt; { System.out.println(s); } );\n}</code></pre> \n<p>反编译后代码如下：</p> \n<pre><code>public static /* varargs */ void main(String ... args) {\n    ImmutableList strList = ImmutableList.of((Object)\"Hollis\", (Object)\"\\u516c\\u4f17\\u53f7\\uff1aHollis\", (Object)\"\\u535a\\u5ba2\\uff1awww.hollischuang.com\");\n    List&lt;Object&gt; HollisList = strList.stream().filter((Predicate&lt;String&gt;)LambdaMetafactory.metafactory(null, null, null, (Ljava/lang/Object;)Z, lambda$main$0(java.lang.String ), (Ljava/lang/String;)Z)()).collect(Collectors.toList());\n    HollisList.forEach((Consumer&lt;Object&gt;)LambdaMetafactory.metafactory(null, null, null, (Ljava/lang/Object;)V, lambda$main$1(java.lang.Object ), (Ljava/lang/Object;)V)());\n}\n\nprivate static /* synthetic */ void lambda$main$1(Object s) {\n    System.out.println(s);\n}\n\nprivate static /* synthetic */ boolean lambda$main$0(String string) {\n    return string.contains(\"Hollis\");\n}</code></pre> \n<p>两个lambda表达式分别调用了<code>lambda$main$1</code>和<code>lambda$main$0</code>两个方法。</p> \n<p><strong>所以，lambda表达式的实现其实是依赖了一些底层的api，在编译阶段，编译器会把lambda表达式进行解糖，转换成调用内部api的方式。</strong></p> \n<h3 id=\"可能遇到的坑\">可能遇到的坑</h3> \n<h4 id=\"泛型\">泛型</h4> \n<p><strong>一、当泛型遇到重载</strong> public class GenericTypes {</p> \n<pre><code>    public static void method(List&lt;String&gt; list) {  \n        System.out.println(\"invoke method(List&lt;String&gt; list)\");  \n    }  \n\n    public static void method(List&lt;Integer&gt; list) {  \n        System.out.println(\"invoke method(List&lt;Integer&gt; list)\");  \n    }  \n}  </code></pre> \n<p>上面这段代码，有两个重载的函数，因为他们的参数类型不同，一个是List\n <string>\n  另一个是List\n  <integer>\n    ，但是，这段代码是编译通不过的。因为我们前面讲过，参数List\n  </integer>\n  <integer>\n   和List\n   <string>\n    编译之后都被擦除了，变成了一样的原生类型List，擦除动作导致这两个方法的特征签名变得一模一样。\n   </string>\n  </integer>\n </string></p> \n<p><strong>二、当泛型遇到catch</strong> 泛型的类型参数不能用在Java异常处理的catch语句中。因为异常处理是由JVM在运行时刻来进行的。由于类型信息被擦除，JVM是无法区分两个异常类型<code>MyException&lt;String&gt;</code>和<code>MyException&lt;Integer&gt;</code>的</p> \n<p><strong>三、当泛型内包含静态变量</strong></p> \n<pre><code>public class StaticTest{\n    public static void main(String[] args){\n        GT&lt;Integer&gt; gti = new GT&lt;Integer&gt;();\n        gti.var=1;\n        GT&lt;String&gt; gts = new GT&lt;String&gt;();\n        gts.var=2;\n        System.out.println(gti.var);\n    }\n}\nclass GT&lt;T&gt;{\n    public static int var=0;\n    public void nothing(T x){}\n}</code></pre> \n<p>以上代码输出结果为：2！由于经过类型擦除，所有的泛型类实例都关联到同一份字节码上，泛型类的所有静态变量是共享的。</p> \n<h4 id=\"自动装箱与拆箱\">自动装箱与拆箱</h4> \n<p><strong>对象相等比较</strong></p> \n<p>public class BoxingTest {</p> \n<pre><code>public static void main(String[] args) {\n    Integer a = 1000;\n    Integer b = 1000;\n    Integer c = 100;\n    Integer d = 100;\n    System.out.println(\"a == b is \" + (a == b));\n    System.out.println((\"c == d is \" + (c == d)));\n}</code></pre> \n<p>输出结果：</p> \n<pre><code>a == b is false\nc == d is true</code></pre> \n<p>在Java 5中，在Integer的操作上引入了一个新功能来节省内存和提高性能。整型对象通过使用相同的对象引用实现了缓存和重用。</p> \n<blockquote> \n <p>适用于整数值区间-128 至 +127。</p> \n <p>只适用于自动装箱。使用构造函数创建对象不适用。</p> \n</blockquote> \n<h4 id=\"增强for循环\">增强for循环</h4> \n<p><strong>ConcurrentModificationException</strong></p> \n<pre><code>for (Student stu : students) {    \n    if (stu.getId() == 2)     \n        students.remove(stu);    \n}</code></pre> \n<p>会抛出<code>ConcurrentModificationException</code>异常。</p> \n<p>Iterator是工作在一个独立的线程中，并且拥有一个 mutex 锁。 Iterator被创建之后会建立一个指向原来对象的单链索引表，当原来的对象数量发生变化时，这个索引表的内容不会同步改变，所以当索引指针往后移动的时候就找不到要迭代的对象，所以按照 fail-fast 原则 Iterator 会马上抛出<code>java.util.ConcurrentModificationException</code>异常。</p> \n<p>所以 <code>Iterator</code> 在工作的时候是不允许被迭代的对象被改变的。但你可以使用 <code>Iterator</code> 本身的方法<code>remove()</code>来删除对象，<code>Iterator.remove()</code> 方法会在删除当前迭代对象的同时维护索引的一致性。</p> \n<h3 id=\"总结\">总结</h3> \n<p>前面介绍了12种Java中常用的语法糖。所谓语法糖就是提供给开发人员便于开发的一种语法而已。但是这种语法只有开发人员认识。要想被执行，需要进行解糖，即转成JVM认识的语法。当我们把语法糖解糖之后，你就会发现其实我们日常使用的这些方便的语法，其实都是一些其他更简单的语法构成的。</p> \n<p>有了这些语法糖，我们在日常开发的时候可以大大提升效率，但是同时也要避免过渡使用。使用之前最好了解下原理，避免掉坑。</p> \n<p>参考资料：<br> <a href=\"http://www.hollischuang.com/archives/58\">Java的反编译</a><br> <a href=\"http://www.hollischuang.com/archives/61\">Java中的Switch对整型、字符型、字符串型的具体实现细节</a> <a href=\"http://www.hollischuang.com/archives/197\">深度分析Java的枚举类型—-枚举的线程安全性及序列化问题</a><br> <a href=\"http://www.hollischuang.com/archives/195\">Java的枚举类型用法介绍</a><br> <a href=\"http://www.hollischuang.com/archives/1776\">Java中的增强for循环（for each）的实现原理与坑</a><br> <a href=\"http://www.hollischuang.com/archives/230\">Java中泛型的理解</a><br> <a href=\"http://www.hollischuang.com/archives/1174\">Java中整型的缓存机制</a><br> <a href=\"http://www.hollischuang.com/archives/1271\">Java中的可变参数</a></p>',NULL,0,2,1,0,0,'JAVA语法糖','JAVA语法糖',1,'2019-11-01 16:30:48','2019-11-02 12:38:39'),(44,'常见面试题整理--数据库篇',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">那么常见的数据库面试题有哪些呢？<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">（非DBA向）</strong></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20191102105655407.jpg\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; color: rgb(115, 135, 156); font-family: &quot;Helvetica Neue&quot;, Roboto, Arial, &quot;Droid Sans&quot;, sans-serif; font-size: 13px; letter-spacing: normal; text-align: start; max-width: 100%; height: auto; border-radius: 6px;\">&nbsp;&nbsp;</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（一）什么是存储过程？有哪些优缺点？</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">存储过程是一些预编译的SQL语句。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">更加直白的理解：存储过程可以说是一个记录集，它是由一些T-SQL语句组成的代码块，这些T-SQL语句代码像一个方法一样实现一些功能（对单表或多表的增删改查），然后再给这个代码块取一个名字，在用到这个功能的时候调用他就行了。</span></p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">存储过程是一个预编译的代码块，执行效率比较高</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">一个存储过程替代大量T_SQL语句 ，可以降低网络通信量，提高通信速率</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">可以一定程度上确保数据安全<br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">如果你对存储过程不熟悉，建议阅读：</span><a target=\"_blank\" rel=\"nofollow noreferrer\" style=\"color: rgb(0, 0, 0); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 14px; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; overflow-wrap: break-word !important;\">存储过程详解-博客园<span style=\"max-width: 100%; overflow-wrap: break-word !important;\">（链接无法打开点击阅读原文）</span></span></a></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（二）索引是什么？有什么作用以及优缺点？</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">索引是对数据库表中一或多个列的值进行排序的结构，是帮助MySQL高效获取数据的数据结构</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">你也可以这样理解：索引就是加快检索表中数据的方法。数据库的索引类似于书籍的索引。在书籍中，索引允许用户不必翻阅完整个书就能迅速地找到所需要的信息。在数据库中，索引也允许数据库程序迅速地找到表中的数据，而不必扫描整个数据库。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">MySQL</strong>数据库几个基本的索引类型：普通索引、唯一索引、主键索引、全文索引</span></p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">索引加快数据库的检索速度</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">索引降低了插入、删除、修改等维护任务的速度</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">唯一索引可以确保每一行数据的唯一性</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">通过使用索引，可以在查询的过程中使用优化隐藏器，提高系统的性能</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">索引需要占物理和数据空间&nbsp;<br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">如果你对索引还不太熟悉，建议阅读：</span><a target=\"_blank\" rel=\"nofollow noreferrer\" style=\"color: rgb(0, 0, 0); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 14px; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; overflow-wrap: break-word !important;\">漫谈数据库索引<span style=\"max-width: 100%; overflow-wrap: break-word !important;\">（链接无法打开点击阅读原文）</span></span></a></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（三）什么是事务？</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">事务（Transaction）是并发控制的基本单位。所谓的事务，它是一个操作序列，这些操作要么都执行，要么都不执行，它是一个不可分割的工作单位。事务是数据库维护数据一致性的单位，在每个事务结束时，都能保持数据一致性。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">如果你对索引还不太熟悉，建议阅读：</span><a target=\"_blank\" rel=\"nofollow noreferrer\" style=\"color: rgb(0, 0, 0); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 14px; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; overflow-wrap: break-word !important;\">数据库事务 - &nbsp;Mr. David 专栏<span style=\"max-width: 100%; overflow-wrap: break-word !important;\">（链接无法打开点击阅读原文）</span></span></a></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（四）数据库的乐观锁和悲观锁是什么？<br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">数据库管理系统（DBMS）中的并发控制的任务是确保在多个事务同时存取数据库中同一数据时不破坏事务的隔离性和统一性以及数据库的统一性。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">乐观并发控制(乐观锁)和悲观并发控制（悲观锁）是并发控制主要采用的技术手段。</span></p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">悲观锁：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">乐观锁：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">如果你对两种锁还不太熟悉，建议阅读：</span><a target=\"_blank\" rel=\"nofollow noreferrer\" style=\"color: rgb(0, 0, 0); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 14px; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; overflow-wrap: break-word !important;\">深入理解乐观锁与悲观锁</span></a><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（链接无法打开点击阅读原文）</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（五） 使用索引查询一定能提高查询的性能吗？为什么</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">通常,通过索引查询数据比全表扫描要快.但是我们也必须注意到它的代价.</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">索引需要空间来存储,也需要定期维护, 每当有记录在表中增减或索引列被修改时,索引本身也会被修改. 这意味着每条记录的INSERT,DELETE,UPDATE将为此多付出4,5 次的磁盘I/O. 因为索引需要额外的存储空间和处理,那些不必要的索引反而会使查询反应时间变慢.使用索引查询不一定能提高查询性能,索引范围查询(INDEX RANGE SCAN)适用于两种情况:</span></p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">基于一个范围的检索,一般查询返回结果集小于表中记录数的30%</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">基于非唯一性索引的检索</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（六）简单说一说<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">drop、delete</strong>与<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">truncate</strong>的区别</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">SQL中的<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">drop、delete、truncate</strong>都表示删除，但是三者有一些差别</span></p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">delete和truncate</strong>只删除表的数据不删除表的结构</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">速度,一般来说:<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">&nbsp;drop&gt; truncate &gt;delete&nbsp;</strong><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">delete</strong>语句是dml,这个操作会放到<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">rollback segement</strong>中,事务提交之后才生效;<br style=\"max-width: 100%; overflow-wrap: break-word !important;\">如果有相应的<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">trigger</strong>,执行的时候将被触发.&nbsp;<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">&nbsp; truncate,drop</strong>是ddl, 操作立即生效,原数据不放到r<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">ollback segment</strong>中,不能回滚. 操作不触发<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">trigger</strong>. &nbsp;&nbsp;<br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">如果你对这三者的用法还不太熟悉，建议阅读：</span><a target=\"_blank\" rel=\"nofollow noreferrer\" style=\"color: rgb(0, 0, 0); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 14px; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; overflow-wrap: break-word !important;\">&nbsp;drop、truncate和delete的区别&nbsp;<span style=\"max-width: 100%; overflow-wrap: break-word !important;\">（链接无法打开点击阅读原文）</span></span></a></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（七）<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">drop、delete</strong>与<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">truncate</strong>分别在什么场景之下使用？</span></p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">不再需要一张表的时候，用<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">drop</strong></span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">想删除部分数据行时候，用<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">delete</strong>，并且带上where子句</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">保留表而删除所有数据的时候用<strong style=\"max-width: 100%; overflow-wrap: break-word !important;\">truncate</strong></span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（八） 超键、候选键、主键、外键分别是什么？</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">超键：在关系中能唯一标识元组的属性集称为关系模式的超键。一个属性可以为作为一个超键，多个属性组合在一起也可以作为一个超键。超键包含候选键和主键。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">候选键：是最小超键，即没有冗余元素的超键。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">主键：数据库表中对储存数据对象予以唯一和完整标识的数据列或属性的组合。一个数据列只能有一个主键，且主键的取值不能缺失，即不能为空值（Null）。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">外键：在一个表中存在的另一个表的主键称此表的外键。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（九）什么是视图？以及视图的使用场景有哪些？</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">视图是一种虚拟的表，具有和物理表相同的功能。可以对视图进行增，改，查，操作，试图通常是有一个表或者多个表的行或列的子集。对视图的修改不影响基本表。它使得我们获取数据更容易，相比多表查询。</span></p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; padding-left: 2.2em; max-width: 100%; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">只暴露部分字段给访问者，所以就建一个虚表，就是视图。</span></p></li><li style=\"max-width: 100%; overflow-wrap: break-word !important;\"><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">查询的数据来源于不同的表，而查询者希望以统一的方式查询，这样也可以建立一个视图，把多个表查询结果联合起来，查询者只需要直接从视图中获取数据，不必考虑数据来源于不同表所带来的差异</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\"><br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">（十）说一说三个范式。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">第一范式（1NF）：数据库表中的字段都是单一属性的，不可再分。这个单一属性由基本类型构成，包括整型、实数、字符型、逻辑型、日期型等。</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">第二范式（2NF）：数据库表中不存在非关键字段对任一候选关键字段的部分函数依赖（部分函数依赖指的是存在组合关键字中的某些字段决定非关键字段的情况），也即所有非关键字段都完全依赖于任意一组候选关键字。 &nbsp; &nbsp;<br style=\"max-width: 100%; overflow-wrap: break-word !important;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; max-width: 100%; clear: both; min-height: 1em; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: justify; overflow-wrap: break-word !important;\"><span style=\"max-width: 100%; color: rgb(0, 0, 0); font-size: 14px; overflow-wrap: break-word !important;\">第三范式（3NF）：在第二范式的基础上，数据表中如果不存在非关键字段对任一候选关键字段的传递函数依赖则符合第三范式。所谓传递函数依赖，指的是如果存在\"A → B → C\"的决定关系，则C传递函数依赖于A。因此，满足第三范式的数据库表应该不存在如下依赖关系： 关键字段 → 非关键字段x → 非关键字段y</span></p>',NULL,0,2,1,0,1,'mysql','数据库',1,'2019-11-02 10:58:03','2019-11-02 10:59:16'),(45,'docsify制作在线说明文档的轻量级神器',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>在网上发现了一个使用html ，处理加载md文件，极其简单便可以制作出漂亮的在线说明文档————神器docsify。</p> \n<p><strong>中文文档地址（就是一个demo）：https://docsify.js.org/#/zh-cn/</strong><br></p> \n<p>这个是基于vue2.0的，下面记录一下最简单最快速的用法。</p> \n<p>1、复制粘贴以下代码到根目录index.html</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\n  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"X-UA-Compatible\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"IE=edge,chrome=1\"</span><span style=\"color: #0000ff;\">&gt;</span>\n  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">name</span><span style=\"color: #0000ff;\">=\"viewport\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"width=device-width,initial-scale=1\"</span><span style=\"color: #0000ff;\">&gt;</span>\n  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">charset</span><span style=\"color: #0000ff;\">=\"UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\n  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">link </span><span style=\"color: #ff0000;\">rel</span><span style=\"color: #0000ff;\">=\"stylesheet\"</span><span style=\"color: #ff0000;\"> href</span><span style=\"color: #0000ff;\">=\"//unpkg.com/docsify/themes/vue.css\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\n<br>&lt;!--nav 可以删除去--&gt;\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">nav</span><span style=\"color: #0000ff;\">&gt;</span>\n    <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"#/\"</span><span style=\"color: #0000ff;\">&gt;</span>EN<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\n    <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"#/zh-cn/\"</span><span style=\"color: #0000ff;\">&gt;</span>中文<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">nav</span><span style=\"color: #0000ff;\">&gt;<br><br></span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">div </span><span style=\"color: #ff0000;\">data-app id</span><span style=\"color: #0000ff;\">=\"main\"</span><span style=\"color: #0000ff;\">&gt;</span>加载中<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">div</span><span style=\"color: #0000ff;\">&gt;</span>\n<br>\n  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">script</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"background-color: #f5f5f5; color: #000000;\">\n    window.$docsify </span><span style=\"background-color: #f5f5f5; color: #000000;\">=</span><span style=\"background-color: #f5f5f5; color: #000000;\"> {\n      el: </span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">#main</span><span style=\"background-color: #f5f5f5; color: #000000;\">\'</span><span style=\"background-color: #f5f5f5; color: #000000;\">,    //配置节点\n      loadSidebar: </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">true</span><span style=\"background-color: #f5f5f5; color: #000000;\">,  //设置是否加载sidebar\n      subMaxLevel: </span><span style=\"background-color: #f5f5f5; color: #000000;\">2</span><span style=\"background-color: #f5f5f5; color: #000000;\">,    //设置目录最大层级\n      coverpage: </span><span style=\"background-color: #f5f5f5; color: #0000ff;\">true，     //设置是否要封面</span><span style=\"background-color: #f5f5f5; color: #000000;\">\n    }\n  </span><span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">script</span><span style=\"color: #0000ff;\">&gt;<br><br></span>\n  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">script </span><span style=\"color: #ff0000;\">src</span><span style=\"color: #0000ff;\">=\"//unpkg.com/docsify/lib/docsify.min.js\"</span><span style=\"color: #0000ff;\">&gt;&lt;/</span><span style=\"color: #800000;\">script</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre> \n</div> \n<p>2、在目录里面放上生成好的md文件</p> \n<p>根目录里面放上README.MD(相当于index页)，_sidebar.md（侧边栏），_coverpage.md（封面，这个如果不要，那么index.html中就要去掉coverpage:true的设置）。</p> \n<p>3、1和2中文件放到静态网站，就可以浏览了。</p> \n<p>当然这是最简单的方法，docsify还提供有CLI工具，具有强大的功能。</p> \n<p>放一个test文档，供大家参考<a href=\"https://files.cnblogs.com/files/jsben/docsifytest.zip\" target=\"_blank\">》》》》》链接</a></p>',NULL,0,3,1,0,1,'在网上发现了一个使用html，处理加载md文件，极其简单便可以制作出漂亮的在线说明文档————神器docsify。','docsify',1,'2019-11-07 15:56:03','2019-11-07 16:02:32'),(46,'Java集合框架详解（全）',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p><span style=\"font-size: 18px;\"><strong>一、Java集合框架概述</strong></span></p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191218160010697.png\" title=\"\" alt=\"\"></p> \n<p>&nbsp;</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191218160013472.png\" title=\"\" alt=\"\"></p> \n<p>&nbsp;</p> \n<p><span style=\"font-size: 16px;\">　　集合可以看作是一种容器，用来存储对象信息。所有集合类都位于<span style=\"color: #0000ff;\">java.util</span>包下，但支持多线程的集合类位于<span style=\"color: #0000ff;\">java.util.concurrent</span>包下。</span></p> \n<p><span style=\"font-size: 16px;\">　　<span style=\"color: #ff00ff;\">数组与集合的区别如下：</span></span></p> \n<p><span style=\"font-size: 16px;\">　　1）数组长度不可变化而且无法保存具有映射关系的数据；集合类用于保存数量不确定的数据，以及保存具有映射关系的数据。</span></p> \n<p><span style=\"font-size: 16px;\">　　2）数组元素既可以是基本类型的值，也可以是对象；集合只能保存对象。</span></p> \n<p><span style=\"font-size: 16px;\">　　Java集合类主要由两个根接口<span style=\"color: #0000ff;\">Collection</span>和<span style=\"color: #0000ff;\">Map</span>派生出来的，Collection派生出了三个子接口：<span style=\"color: #000000;\">List、Set、Queue（Java5新增的队列）</span>，因此Java集合大致也可分成List、Set、Queue、Map四种接口体系，（<span style=\"color: #0000ff;\">注意：Map不是Collection的子接口</span>）。</span></p> \n<p><span style=\"font-size: 16px;\">　　其中List代表了有序可重复集合，可直接根据元素的索引来访问；Set代表无序不可重复集合，只能根据元素本身来访问；Queue是队列集合；Map代表的是存储key-value对的集合，可根据元素的key来访问value。</span></p> \n<p><span style=\"font-size: 16px;\">　　上图中淡绿色背景覆盖的是集合体系中常用的实现类，分别是ArrayList、LinkedList、ArrayQueue、HashSet、TreeSet、HashMap、TreeMap等实现类。</span></p> \n<p><strong><span style=\"font-size: 18px;\">二、Java集合常见接口及实现类</span></strong></p> \n<p><strong><span style=\"font-size: 16px;\">1. Collection接口常见方法（来源于Java API）</span></strong></p> \n<p><span style=\"font-size: 16px;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191218160012334.png\" title=\"\" alt=\"\"></span></p> \n<p><strong><span style=\"font-size: 16px;\">2. Set集合</span></strong></p> \n<p><span style=\"font-size: 16px;\">&nbsp;　　Set集合与Collection的方法相同，由于Set集合不允许存储相同的元素，所以如果把两个相同元素添加到同一个Set集合，则添加操作失败，新元素不会被加入，add()方法返回false。为了帮助理解，请看下面代码示例：</span></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"font-size: 16px;\"><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Test { </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) { Set</span>&lt;String&gt; set = <span style=\"color: #0000ff;\">new</span> HashSet&lt;String&gt;<span style=\"color: #000000;\">(); set.add(</span>\"hello world\"<span style=\"color: #000000;\">); set.add(</span>\"hello 冰湖一角\"<span style=\"color: #000000;\">); set.add(</span>\"hello 冰湖一角\");<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加不进去</span>\n        System.out.println(\"集合中元素个数：\"+<span style=\"color: #000000;\">set.size()); System.out.println(</span>\"集合中元素为：\"+<span style=\"color: #000000;\">set.toString()); } }</span></span></pre> \n</div> \n<p><span style=\"font-size: 16px; color: #0000ff;\">运行结果如下：</span></p> \n<p><span style=\"font-size: 16px;\">集合中元素个数：2</span><br><span style=\"font-size: 16px;\">集合中元素为：[hello world, hello 冰湖一角]</span></p> \n<p><span style=\"font-size: 16px;\">分析：由于String类中重写了hashCode()和equals()方法，用来比较指向的字符串对象所存储的字符串是否相等。所以这里的第二个\"hello 冰湖一角\"是加不进去的。</span></p> \n<p><span style=\"font-size: 16px;\">下面着重介绍Set集合几个常用实现类：</span></p> \n<p><strong><span style=\"font-size: 16px;\">1）HashSet类</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　HashSet是Set集合最常用实现类，是其经典实现。HashSet是按照hash算法来存储元素的，因此具有很好的存取和查找性能。</span></p> \n<p><span style=\"font-size: 16px;\">　　<span style=\"color: #0000ff;\">HashSet具有如下特点：</span></span></p> \n<p><span style=\"font-size: 16px;\">　　♦ 不能保证元素的顺序。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦&nbsp;HashSet不是线程同步的，如果多线程操作HashSet集合，则应通过代码来保证其同步。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ 集合元素值可以是null。</span></p> \n<p><span style=\"font-size: 16px;\">　　<span style=\"color: #0000ff;\">HashSet存储原理如下：</span></span></p> \n<p><span style=\"font-size: 16px;\">　　当向HashSet集合存储一个元素时，HashSet会调用该对象的hashCode()方法得到其hashCode值，然后根据hashCode值决定该对象的存储位置。HashSet集合判断两个元素相等的标准是(1)两个对象通过equals()方法比较返回true；(2)两个对象的hashCode()方法返回值相等。因此，如果(1)和(2)有一个不满足条件，则认为这两个对象不相等，可以添加成功。如果两个对象的hashCode()方法返回值相等，但是两个对象通过equals()方法比较返回false，HashSet会以链式结构将两个对象保存在同一位置，这将导致性能下降，因此在编码时应避免出现这种情况。</span></p> \n<p><span style=\"font-size: 16px;\">　　<span style=\"color: #0000ff;\">HashSet查找原理如下：</span></span></p> \n<p><span style=\"font-size: 16px;\">　　基于HashSet以上的存储原理，在查找元素时，HashSet先计算元素的HashCode值（也就是调用对象的hashCode方法的返回值），然后直接到hashCode值对应的位置去取出元素即可，这就是HashSet速度很快的原因。</span></p> \n<p><span style=\"font-size: 16px;\">&nbsp;　　<span style=\"color: #0000ff;\">重写hashCode()方法的基本原则如下：</span></span></p> \n<p><span style=\"font-size: 16px;\">&nbsp;　　♦ 在程序运行过程中，同一个对象的hashCode()方法返回值应相同。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ 当两个对象通过equals()方法比较返回true时，这两个对象的hashCode()方法返回值应该相等。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ 对象中用作equals()方法比较标准的实例变量，都应该用于计算hashCode值。</span></p> \n<p><span style=\"font-size: 16px;\">&nbsp;<strong>2）LinkedHashSet类</strong></span></p> \n<p><span style=\"font-size: 16px;\">&nbsp;　　LinkedHashSet是HashSet的一个子类，具有HashSet的特性，也是根据元素的hashCode值来决定元素的存储位置。但它使用链表维护元素的次序，元素的顺序与添加顺序一致。由于LinkedHashSet需要维护元素的插入顺序，因此性能略低于HashSet，但在迭代访问Set里的全部元素时由很好的性能。</span></p> \n<p><span style=\"font-size: 16px;\">&nbsp;<strong>3）TreeSet类</strong></span></p> \n<p><span style=\"font-size: 16px;\">　　TreeSet时SortedSet接口的实现类，TreeSet可以保证元素处于排序状态，它采用红黑树的数据结构来存储集合元素。TreeSet支持两种排序方法：自然排序和定制排序，默认采用自然排序。</span></p> \n<p><span style=\"font-size: 16px;\">　　<strong>♦ 自然排序</strong></span></p> \n<p><span style=\"font-size: 16px;\">　　TreeSet会调用集合元素的compareTo(Object obj)方法来比较元素的大小关系，然后将元素按照升序排列，这就是自然排序。如果试图将一个对象添加到TreeSet集合中，则该对象必须实现Comparable接口，否则会抛出异常。当一个对象调用方法与另一个对象比较时，例如obj1.compareTo(obj2)，如果该方法返回0，则两个对象相等；如果返回一个正数，则obj1大于obj2；如果返回一个负数，则obj1小于obj2。</span></p> \n<p><span style=\"font-size: 16px;\">　　Java常用类中已经实现了Comparable接口的类有以下几个：</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ BigDecimal、BigDecimal以及所有数值型对应的包装类：按照它们对应的数值大小进行比较。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ Charchter：按照字符的unicode值进行比较。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ Boolean：true对应的包装类实例大于false对应的包装类实例。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ String：按照字符串中的字符的unicode值进行比较。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ Date、Time：后面的时间、日期比前面的时间、日期大。</span></p> \n<p><span style=\"font-size: 16px;\">　　对于TreeSet集合而言，它判断两个对象是否相等的标准是：两个对象通过compareTo(Object obj)方法比较是否返回0，如果返回0则相等。</span></p> \n<p><span style=\"font-size: 16px;\">&nbsp;　　<strong>♦ 定制排序</strong></span></p> \n<p><span style=\"font-size: 16px;\">　　想要实现定制排序，需要在创建TreeSet集合对象时，提供一个Comparator对象与该TreeSet集合关联，由Comparator对象负责集合元素的排序逻辑。</span></p> \n<p><span style=\"font-size: 16px;\">　　综上：自然排序实现的是Comparable接口，定制排序实现的是Comparator接口。（具体代码实现会在后续章节中讲解）</span></p> \n<p><strong><span style=\"font-size: 16px;\">&nbsp;4）EnumSet类</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　EnumSet是一个专为枚举类设计的集合类，不允许添加null值。EnumSet的集合元素也是有序的，它以枚举值在Enum类内的定义顺序来决定集合元素的顺序。</span></p> \n<p><strong><span style=\"font-size: 16px;\">5）各Set实现类的性能分析</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　HashSet的性能比TreeSet的性能好（特别是添加，查询元素时），因为TreeSet需要额外的红黑树算法维护元素的次序，如果需要一个保持排序的Set时才用TreeSet，否则应该使用HashSet。</span></p> \n<p><span style=\"font-size: 16px;\">　　LinkedHashSet是HashSet的子类，由于需要链表维护元素的顺序，所以插入和删除操作比HashSet要慢，但遍历比HashSet快。</span></p> \n<p><span style=\"font-size: 16px;\">　　EnumSet是所有Set实现类中性能最好的，但它只能 保存同一个枚举类的枚举值作为集合元素。</span></p> \n<p><span style=\"font-size: 16px;\">　　以上几个Set实现类都是线程不安全的，如果多线程访问，必须手动保证集合的同步性，这在后面的章节中会讲到。</span></p> \n<p><strong><span style=\"font-size: 16px;\">3. List集合</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　List集合代表一个有序、可重复集合，集合中每个元素都有其对应的顺序索引。List集合默认按照元素的添加顺序设置元素的索引，可以通过索引（类似数组的下标）来访问指定位置的集合元素。</span></p> \n<p><span style=\"font-size: 16px;\">　　实现List接口的集合主要有：ArrayList、LinkedList、Vector、Stack。</span></p> \n<p><span style=\"font-size: 16px;\"><strong>1）ArrayList</strong></span></p> \n<p><span style=\"font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ArrayList是一个<span style=\"color: #0000ff;\">动态数组</span>，也是我们最常用的集合，是List类的典型实现。它允许任何符合规则的元素插入甚至包括null。每一个ArrayList都有一个初始容量（10），该容量代表了数组的大小。随着容器中的元素不断增加，容器的大小也会随着增加。在每次向容器中增加元素的同时都会进行容量检查，当快溢出时，就会进行扩容操作。所以如果我们明确所插入元素的多少，最好指定一个初始容量值，避免过多的进行扩容操作而浪费时间、效率。</span></p> \n<p><span style=\"font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>&nbsp;</strong><span style=\"color: #0000ff;\">ArrayList擅长于随机访问。同时ArrayList是非同步的。</span></span></p> \n<p><span style=\"font-size: 16px;\"><strong>2）LinkedList</strong></span></p> \n<p><span style=\"font-size: 16px;\">&nbsp; &nbsp; &nbsp;LinkedList是List接口的另一个实现，除了可以根据索引访问集合元素外，LinkedList还实现了Deque接口，可以当作双端队列来使用，也就是说，既可以当作“栈”使用，又可以当作队列使用。</span></p> \n<p><span style=\"font-size: 16px;\">　　LinkedList的实现机制与ArrayList的实现机制完全不同，ArrayLiat内部以数组的形式保存集合的元素，所以随机访问集合元素有较好的性能；LinkedList内部以链表的形式保存集合中的元素，所以随机访问集合中的元素性能较差，但在插入删除元素时有较好的性能。</span></p> \n<p><span style=\"font-size: 16px;\"><strong>3）Vector</strong></span></p> \n<p><span style=\"font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 与ArrayList相似，但是<span style=\"color: #0000ff;\">Vector是同步的</span>。所以说<span style=\"color: #0000ff;\">Vector是线程安全的动态数组</span>。它的操作与ArrayList几乎一样。</span></p> \n<p><span style=\"font-size: 16px;\"><strong>4）Stack</strong></span></p> \n<p><span style=\"font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp; Stack继承自Vector，实现一个后进先出的堆栈。Stack提供5个额外的方法使得Vector得以被当作堆栈使用。基本的push和pop 方法，还有peek方法得到栈顶的元素，empty方法测试堆栈是否为空，search方法检测一个元素在堆栈中的位置。Stack刚创建后是空栈。</span></p> \n<p><strong><span style=\"font-size: 16px;\">5）Iterator接口和ListIterator接口</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　Iterator是一个接口，它是集合的迭代器。集合可以通过Iterator去遍历集合中的元素。Iterator提供的API接口如下：</span></p> \n<p><span style=\"font-size: 16px;\">　　♦&nbsp;boolean hasNext()：判断集合里是否存在下一个元素。如果有，hasNext()方法返回 true。</span><br><span style=\"font-size: 16px;\">　　♦&nbsp;Object next()：返回集合里下一个元素。</span><br><span style=\"font-size: 16px;\">　　♦&nbsp;void remove()：删除集合里上一次next方法返回的元素。</span></p> \n<p><span style=\"font-size: 16px;\">　　ListIterator接口继承Iterator接口，提供了专门操作List的方法。ListIterator接口在Iterator接口的基础上增加了以下几个方法：</span></p> \n<p><span style=\"font-size: 16px;\">　　♦&nbsp;boolean hasPrevious()：判断集合里是否存在上一个元素。如果有，该方法返回 true。</span><br><span style=\"font-size: 16px;\">　　♦&nbsp;Object previous()：返回集合里上一个元素。</span><br><span style=\"font-size: 16px;\">　　♦&nbsp;void add(Object o)：在指定位置插入一个元素。</span></p> \n<p><span style=\"font-size: 16px;\">　　以上两个接口相比较，不难发现，ListIterator增加了向前迭代的功能（Iterator只能向后迭代），ListIterator还可以通过add()方法向List集合中添加元素（Iterator只能删除元素）。</span></p> \n<p><strong><span style=\"font-size: 16px;\">4. Map集合</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　Map接口采用键值对Map&lt;K,V&gt;的存储方式，保存具有映射关系的数据，因此，Map集合里保存两组值，一组值用于保存Map里的key，另外一组值用于保存Map里的value，key和value可以是任意引用类型的数据。key值不允许重复，可以为null。如果添加key-value对时Map中已经有重复的key，则新添加的value会覆盖该key原来对应的value。常用实现类有HashMap、LinkedHashMap、TreeMap等。</span></p> \n<p><span style=\"font-size: 16px;\">　　Map常见方法（来源于API）如下：</span></p> \n<p><span style=\"font-size: 16px;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191218160012821.png\" title=\"\" alt=\"\"></span></p> \n<p><strong><span style=\"font-size: 16px;\">&nbsp;1）HashMap与Hashtable</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　HashMap与Hashtable是Map接口的两个典型实现，它们之间的关系完全类似于ArrayList与Vertor。HashTable是一个古老的Map实现类，它提供的方法比较繁琐，目前基本不用了，<span style=\"color: #0000ff;\">HashMap与Hashtable主要存在以下两个典型区别：</span></span></p> \n<p><span style=\"font-size: 16px;\">　　♦ HashMap是线程不安全，HashTable是线程安全的。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ HashMap可以使用null值最为key或value；Hashtable不允许使用null值作为key和value，如果把null放进HashTable中，将会发生空指针异常。</span></p> \n<p><span style=\"font-size: 16px;\">　　为了成功的在HashMap和Hashtable中存储和获取对象，用作key的对象必须实现hashCode()方法和equals()方法。</span></p> \n<p><span style=\"font-size: 16px;\">　　<span style=\"color: #0000ff;\">HashMap工作原理如下：</span></span></p> \n<p><span style=\"font-size: 16px;\">　　HashMap基于hashing原理，通过put()和get()方法存储和获取对象。当我们将键值对传递给put()方法时，它调用建对象的hashCode()方法来计算hashCode值，然后找到bucket位置来储存值对象。当获取对象时，通过建对象的equals()方法找到正确的键值对，然后返回对象。HashMap使用链表来解决碰撞问题，当发生碰撞了，对象将会存储在链表的下一个节点中。</span></p> \n<p><strong><span style=\"font-size: 16px;\">2）LinkedHashMap实现类</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　LinkedHashMap使用双向链表来维护key-value对的次序（其实只需要考虑key的次序即可），该链表负责维护Map的迭代顺序，与插入顺序一致，因此性能比HashMap低，但在迭代访问Map里的全部元素时有较好的性能。</span></p> \n<p><strong><span style=\"font-size: 16px;\">3）Properties</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　Properties类时Hashtable类的子类，它相当于一个key、value都是String类型的Map，主要用于读取配置文件。</span></p> \n<p><strong><span style=\"font-size: 16px;\">4）TreeMap实现类</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　TreeMap是SortedMap的实现类，是一个红黑树的数据结构，每个key-value对作为红黑树的一个节点。TreeMap存储key-value对时，需要根据key对节点进行排序。<span style=\"color: #0000ff;\">TreeMap也有两种排序方式：</span></span></p> \n<p><span style=\"font-size: 16px;\">　　♦ 自然排序：TreeMap的所有key必须实现Comparable接口，而且所有的key应该是同一个类的对象，否则会抛出ClassCastException。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ 定制排序：创建TreeMap时，传入一个Comparator对象，该对象负责对TreeMap中的所有key进行排序。</span></p> \n<p><strong><span style=\"font-size: 16px;\">5）各Map实现类的性能分析</span></strong></p> \n<p><span style=\"font-size: 16px;\">　　♦ HashMap通常比Hashtable（古老的线程安全的集合）要快</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ TreeMap通常比HashMap、Hashtable要慢，因为TreeMap底层采用红黑树来管理key-value。</span></p> \n<p><span style=\"font-size: 16px;\">　　♦ LinkedHashMap比HashMap慢一点，因为它需要维护链表来爆出key-value的插入顺序。　&nbsp;</span></p> \n<p>&nbsp;</p> \n<p><span style=\"font-size: 18px; color: #ff0000;\"><strong>如需转载，请注明作者（冰湖一角）和链接https://www.cnblogs.com/bingyimeiling/p/10255037.html<br></strong></span></p> \n<p>&nbsp;</p> \n<p><span style=\"font-size: 18px; color: #0000ff;\"><strong>欢迎关注微信公众号【Java典籍】，收看更多Java技术干货！</strong></span></p> \n<p><strong>　　<span style=\"font-size: 16px; color: #0000ff;\">&nbsp;<strong>▼微信扫一扫下图↓↓↓二维码关注</strong></span></strong></p> \n<p>　<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191218160012688.jpg\" title=\"\" alt=\"\"></p> \n<p>&nbsp;</p>',NULL,0,2,1,0,0,'Java集合类主要由两个根接口Collection和Map派生出来的，Collection派生出了三个子接口：List、Set、Queue（Java5新增的队列），因此Java集合大致也可分成Li','Java集合类',1,'2019-12-18 16:00:14','2020-01-15 17:25:17'),(47,'一文详解微服务架构',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>本文将介绍微服务架构和相关的组件，介绍他们是什么以及为什么要使用微服务架构和这些组件。本文侧重于简明地表达微服务架构的全局图景，因此不会涉及具体如何使用组件等细节。</p> \n<blockquote> \n <p>为了防止不提供原网址的转载，特在这里加上原文链接：<br> <a href=\"https://www.cnblogs.com/skabyy/p/11396571.html\" class=\"uri\">https://www.cnblogs.com/skabyy/p/11396571.html</a></p> \n</blockquote> \n<p>要理解微服务，首先要先理解不是微服务的那些。通常跟微服务相对的是单体应用，即将所有功能都打包成在一个独立单元的应用程序。从单体应用到微服务并不是一蹴而就的，这是一个逐渐演变的过程。本文将以一个网上超市应用为例来说明这一过程。</p> \n<h2 id=\"最初的需求\">最初的需求</h2> \n<p>几年前，小明和小皮一起创业做网上超市。小明负责程序开发，小皮负责其他事宜。当时互联网还不发达，网上超市还是蓝海。只要功能实现了就能随便赚钱。所以他们的需求很简单，只需要一个网站挂在公网，用户能够在这个网站上浏览商品、购买商品；另外还需一个管理后台，可以管理商品、用户、以及订单数据。</p> \n<p>我们整理一下功能清单：</p> \n<ul> \n <li>网站 \n  <ul> \n   <li>用户注册、登录功能</li> \n   <li>商品展示</li> \n   <li>下单</li> \n  </ul></li> \n <li>管理后台 \n  <ul> \n   <li>用户管理</li> \n   <li>商品管理</li> \n   <li>订单管理</li> \n  </ul></li> \n</ul> \n<p>由于需求简单，小明左手右手一个慢动作，网站就做好了。管理后台出于安全考虑，不和网站做在一起，小明右手左手慢动作重播，管理网站也做好了。总体架构图如下：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112110171.png\" title=\"\" alt=\"\"></p> \n<p>小明挥一挥手，找了家云服务部署上去，网站就上线了。上线后好评如潮，深受各类肥宅喜爱。小明小皮美滋滋地开始躺着收钱。</p> \n<h2 id=\"随着业务发展\">随着业务发展……</h2> \n<p>好景不长，没过几天，各类网上超市紧跟着拔地而起，对小明小皮造成了强烈的冲击。</p> \n<p>在竞争的压力下，小明小皮决定开展一些营销手段：</p> \n<ul> \n <li>开展促销活动。比如元旦全场打折，春节买二送一，情人节狗粮优惠券等等。</li> \n <li>拓展渠道，新增移动端营销。除了网站外，还需要开发移动端APP，微信小程序等。</li> \n <li>精准营销。利用历史数据对用户进行分析，提供个性化服务。</li> \n <li>……</li> \n</ul> \n<p>这些活动都需要程序开发的支持。小明拉了同学小红加入团队。小红负责数据分析以及移动端相关开发。小明负责促销活动相关功能的开发。</p> \n<p>因为开发任务比较紧迫，小明小红没有好好规划整个系统的架构，随便拍了拍脑袋，决定把促销管理和数据分析放在管理后台里，微信和移动端APP另外搭建。通宵了几天后，新功能和新应用基本完工。这时架构图如下：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112113388.png\" title=\"\" alt=\"\"></p> \n<p>这一阶段存在很多不合理的地方：</p> \n<ul> \n <li>网站和移动端应用有很多相同业务逻辑的重复代码。</li> \n <li>数据有时候通过数据库共享，有时候通过接口调用传输。接口调用关系杂乱。</li> \n <li>单个应用为了给其他应用提供接口，渐渐地越改越大，包含了很多本来就不属于它的逻辑。应用边界模糊，功能归属混乱。</li> \n <li>管理后台在一开始的设计中保障级别较低。加入数据分析和促销管理相关功能后出现性能瓶颈，影响了其他应用。</li> \n <li>数据库表结构被多个应用依赖，无法重构和优化。</li> \n <li>所有应用都在一个数据库上操作，数据库出现性能瓶颈。特别是数据分析跑起来的时候，数据库性能急剧下降。</li> \n <li>开发、测试、部署、维护愈发困难。即使只改动一个小功能，也需要整个应用一起发布。有时候发布会不小心带上了一些未经测试的代码，或者修改了一个功能后，另一个意想不到的地方出错了。为了减轻发布可能产生的问题的影响和线上业务停顿的影响，所有应用都要在凌晨三四点执行发布。发布后为了验证应用正常运行，还得盯到第二天白天的用户高峰期……</li> \n <li>团队出现推诿扯皮现象。关于一些公用的功能应该建设在哪个应用上的问题常常要争论很久，最后要么干脆各做各的，或者随便放个地方但是都不维护。</li> \n</ul> \n<p>尽管有着诸多问题，但也不能否认这一阶段的成果：快速地根据业务变化建设了系统。不过<strong>紧迫且繁重的任务容易使人陷入局部、短浅的思维方式，从而做出妥协式的决策</strong>。在这种架构中，每个人都只关注在自己的一亩三分地，缺乏全局的、长远的设计。长此以往，系统建设将会越来越困难，甚至陷入不断推翻、重建的循环。</p> \n<h2 id=\"是时候做出改变了\">是时候做出改变了</h2> \n<p>幸好小明和小红是有追求有理想的好青年。意识到问题后，小明和小红从琐碎的业务需求中腾出了一部分精力，开始梳理整体架构，针对问题准备着手改造。</p> \n<blockquote> \n <p>要做改造，首先你需要有足够的精力和资源。如果你的需求方（业务人员、项目经理、上司等）很强势地一心追求需求进度，以致于你无法挪出额外的精力和资源的话，那么你可能无法做任何事……</p> \n</blockquote> \n<p>在编程的世界中，最重要的便是<strong>抽象能力</strong>。微服务改造的过程实际上也是个抽象的过程。小明和小红整理了网上超市的业务逻辑，抽象出公用的业务能力，做成几个公共服务：</p> \n<ul> \n <li>用户服务</li> \n <li>商品服务</li> \n <li>促销服务</li> \n <li>订单服务</li> \n <li>数据分析服务</li> \n</ul> \n<p>各个应用后台只需从这些服务获取所需的数据，从而删去了大量冗余的代码，就剩个轻薄的控制层和前端。这一阶段的架构如下：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112113798.png\" title=\"\" alt=\"\"></p> \n<p>这个阶段只是将服务分开了，数据库依然是共用的，所以一些烟囱式系统的缺点仍然存在：</p> \n<ol> \n <li>数据库成为性能瓶颈，并且有单点故障的风险。</li> \n <li>数据管理趋向混乱。即使一开始有良好的模块化设计，随着时间推移，总会有一个服务直接从数据库取另一个服务的数据的现象。</li> \n <li>数据库表结构可能被多个服务依赖，牵一发而动全身，很难调整。</li> \n</ol> \n<p>如果一直保持共用数据库的模式，则整个架构会越来越僵化，失去了微服务架构的意义。因此小明和小红一鼓作气，把数据库也拆分了。所有持久化层相互隔离，由各个服务自己负责。另外，为了提高系统的实时性，加入了消息队列机制。架构如下：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112112448.png\" title=\"\" alt=\"\"></p> \n<p>完全拆分后各个服务可以采用异构的技术。比如数据分析服务可以使用数据仓库作为持久化层，以便于高效地做一些统计计算；商品服务和促销服务访问频率比较大，因此加入了缓存机制等。</p> \n<blockquote> \n <p>还有一种抽象出公共逻辑的方法是把这些公共逻辑做成公共的框架库。这种方法可以减少服务调用的性能损耗。但是这种方法的管理成本非常高昂，很难保证所有应用版本的一致性。</p> \n</blockquote> \n<blockquote> \n <p>数据库拆分也有一些问题和挑战：比如说跨库级联的需求，通过服务查询数据颗粒度的粗细问题等。但是这些问题可以通过合理的设计来解决。总体来说，数据库拆分是一个利大于弊的。</p> \n</blockquote> \n<p>微服务架构还有一个技术外的好处，它使整个系统的分工更加明确，责任更加清晰，每个人专心负责为其他人提供更好的服务。在单体应用的时代，公共的业务功能经常没有明确的归属。最后要么各做各的，每个人都重新实现了一遍；要么是随机一个人（一般是能力比较强或者比较热心的人）做到他负责的应用里面。在后者的情况下，这个人在负责自己应用之外，还要额外负责给别人提供这些公共的功能——而这个功能本来是无人负责的，仅仅因为他能力较强/比较热心，就莫名地背锅（这种情况还被美其名曰能者多劳）。结果最后大家都不愿意提供公共的功能。长此以往，团队里的人渐渐变得各自为政，不再关心全局的架构设计。</p> \n<p>从这个角度上看，使用微服务架构同时也需要组织结构做相应的调整。所以说做微服务改造需要管理者的支持。</p> \n<p>改造完成后，小明和小红分清楚各自的锅。两人十分满意，一切就像是麦克斯韦方程组一样漂亮完美。</p> \n<p>然而……</p> \n<h2 id=\"没有银弹\">没有银弹</h2> \n<p>春天来了，万物复苏，又到了一年一度的购物狂欢节。眼看着日订单数量蹭蹭地上涨，小皮小明小红喜笑颜开。可惜好景不长，乐极生悲，突然嘣的一下，系统挂了。</p> \n<p>以往单体应用，排查问题通常是看一下日志，研究错误信息和调用堆栈。而<strong>微服务架构整个应用分散成多个服务，定位故障点非常困难</strong>。小明一个台机器一台机器地查看日志，一个服务一个服务地手工调用。经过十几分钟的查找，小明终于定位到故障点：促销服务由于接收的请求量太大而停止响应了。其他服务都直接或间接地会调用促销服务，于是也跟着宕机了。<strong>在微服务架构中，一个服务故障可能会产生雪崩效用，导致整个系统故障</strong>。其实在节前，小明和小红是有做过请求量评估的。按照预计，服务器资源是足以支持节日的请求量的，所以肯定是哪里出了问题。不过形势紧急，随着每一分每一秒流逝的都是白花花的银子，因此小明也没时间排查问题，当机立断在云上新建了几台虚拟机，然后一台一台地部署新的促销服务节点。几分钟的操作后，系统总算是勉强恢复正常了。整个故障时间内估计损失了几十万的销售额，三人的心在滴血……</p> \n<p>事后，小明简单写了个日志分析工具（量太大了，文本编辑器几乎打不开，打开了肉眼也看不过来），统计了促销服务的访问日志，发现在故障期间，商品服务由于代码问题，在某些场景下会对促销服务发起大量请求。这个问题并不复杂，小明手指抖一抖，修复了这个价值几十万的Bug。</p> \n<p>问题是解决了，但谁也无法保证不会再发生类似的其他问题。微服务架构虽然逻辑设计上看是完美的，但就像积木搭建的华丽宫殿一样，经不起风吹草动。微服务架构虽然解决了旧问题，也引入了新的问题：</p> \n<ul> \n <li>微服务架构整个应用分散成多个服务，定位故障点非常困难。</li> \n <li>稳定性下降。服务数量变多导致其中一个服务出现故障的概率增大，并且一个服务故障可能导致整个系统挂掉。事实上，在大访问量的生产场景下，故障总是会出现的。</li> \n <li>服务数量非常多，部署、管理的工作量很大。</li> \n <li>开发方面：如何保证各个服务在持续开发的情况下仍然保持协同合作。</li> \n <li>测试方面：服务拆分后，几乎所有功能都会涉及多个服务。原本单个程序的测试变为服务间调用的测试。测试变得更加复杂。</li> \n</ul> \n<p>小明小红痛定思痛，决心好好解决这些问题。对故障的处理一般从两方面入手，一方面尽量减少故障发生的概率，另一方面降低故障造成的影响。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112110436.png\" title=\"\" alt=\"\"></p> \n<h2 id=\"监控---发现故障的征兆\">监控 - 发现故障的征兆</h2> \n<p>在高并发分布式的场景下，故障经常是突然间就雪崩式爆发。所以必须建立完善的监控体系，尽可能发现故障的征兆。</p> \n<p>微服务架构中组件繁多，各个组件所需要监控的指标不同。比如Redis缓存一般监控占用内存值、网络流量，数据库监控连接数、磁盘空间，业务服务监控并发数、响应延迟、错误率等。因此如果做一个大而全的监控系统来监控各个组件是不大现实的，而且扩展性会很差。一般的做法是让各个组件提供报告自己当前状态的接口（metrics接口），这个接口输出的数据格式应该是一致的。然后部署一个指标采集器组件，定时从这些接口获取并保持组件状态，同时提供查询服务。最后还需要一个UI，从指标采集器查询各项指标，绘制监控界面或者根据阈值发出告警。</p> \n<p>大部分组件都不需要自己动手开发，网络上有开源组件。小明下载了RedisExporter和MySQLExporter，这两个组件分别提供了Redis缓存和MySQL数据库的指标接口。微服务则根据各个服务的业务逻辑实现自定义的指标接口。然后小明采用Prometheus作为指标采集器，Grafana配置监控界面和邮件告警。这样一套微服务监控系统就搭建起来了：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112110700.jpg\" title=\"\" alt=\"\"></p> \n<h2 id=\"定位问题---链路跟踪\">定位问题 - 链路跟踪</h2> \n<p>在微服务架构下，一个用户的请求往往涉及多个内部服务调用。为了方便定位问题，需要能够记录每个用户请求时，微服务内部产生了多少服务调用，及其调用关系。这个叫做链路跟踪。</p> \n<p>我们用一个Istio文档里的链路跟踪例子来看看效果：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112109596.png\" title=\"\" alt=\"\"></p> \n<blockquote> \n <p>图片来自<a href=\"https://istio.io/zh/docs/tasks/telemetry/distributed-tracing/zipkin/\">Istio文档</a></p> \n</blockquote> \n<p>从图中可以看到，这是一个用户访问productpage页面的请求。在请求过程中，productpage服务顺序调用了details和reviews服务的接口。而reviews服务在响应过程中又调用了ratings的接口。整个链路跟踪的记录是一棵树：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112116998.png\" title=\"\" alt=\"\"></p> \n<p>要实现链路跟踪，每次服务调用会在HTTP的HEADERS中记录至少记录四项数据：</p> \n<ul> \n <li>traceId：traceId标识一个用户请求的调用链路。具有相同traceId的调用属于同一条链路。</li> \n <li>spanId：标识一次服务调用的ID，即链路跟踪的节点ID。</li> \n <li>parentId：父节点的spanId。</li> \n <li>requestTime &amp; responseTime：请求时间和响应时间。</li> \n</ul> \n<p>另外，还需要调用日志收集与存储的组件，以及展示链路调用的UI组件。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112114250.png\" title=\"\" alt=\"\"></p> \n<p>以上只是一个极简的说明，关于链路跟踪的理论依据可详见Google的<a href=\"http://bigbully.github.io/Dapper-translation/\">Dapper</a></p> \n<p>了解了理论基础后，小明选用了Dapper的一个开源实现Zipkin。然后手指一抖，写了个HTTP请求的拦截器，在每次HTTP请求时生成这些数据注入到HEADERS，同时异步发送调用日志到Zipkin的日志收集器中。这里额外提一下，HTTP请求的拦截器，可以在微服务的代码中实现，也可以使用一个网络代理组件来实现（不过这样子每个微服务都需要加一层代理）。</p> \n<p>链路跟踪只能定位到哪个服务出现问题，不能提供具体的错误信息。查找具体的错误信息的能力则需要由日志分析组件来提供。</p> \n<h2 id=\"分析问题---日志分析\">分析问题 - 日志分析</h2> \n<p>日志分析组件应该在微服务兴起之前就被广泛使用了。即使单体应用架构，当访问数变大、或服务器规模增多时，日志文件的大小会膨胀到难以用文本编辑器进行访问，更糟的是它们分散在多台服务器上面。排查一个问题，需要登录到各台服务器去获取日志文件，一个一个地查找（而且打开、查找都很慢）想要的日志信息。</p> \n<p>因此，在应用规模变大时，我们需要一个日志的“<strong>搜索引擎</strong>”。以便于能准确的找到想要的日志。另外，数据源一侧还需要收集日志的组件和展示结果的UI组件：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112110948.png\" title=\"\" alt=\"\"></p> \n<p>小明调查了一下，使用了大名鼎鼎地ELK日志分析组件。ELK是Elasticsearch、Logstash和Kibana三个组件的缩写。</p> \n<ul> \n <li>Elasticsearch：搜索引擎，同时也是日志的存储。</li> \n <li>Logstash：日志采集器，它接收日志输入，对日志进行一些预处理，然后输出到Elasticsearch。</li> \n <li>Kibana：UI组件，通过Elasticsearch的API查找数据并展示给用户。</li> \n</ul> \n<p>最后还有一个小问题是如何将日志发送到Logstash。一种方案是在日志输出的时候直接调用Logstash接口将日志发送过去。这样一来又（咦，为啥要用“又”）要修改代码……于是小明选用了另一种方案：日志仍然输出到文件，每个服务里再部署个Agent扫描日志文件然后输出给Logstash。</p> \n<h2 id=\"网关---权限控制服务治理\">网关 - 权限控制，服务治理</h2> \n<p>拆分成微服务后，出现大量的服务，大量的接口，使得整个调用关系乱糟糟的。经常在开发过程中，写着写着，忽然想不起某个数据应该调用哪个服务。或者写歪了，调用了不该调用的服务，本来一个只读的功能结果修改了数据……</p> \n<p>为了应对这些情况，微服务的调用需要一个把关的东西，也就是网关。在调用者和被调用者中间加一层网关，每次调用时进行权限校验。另外，网关也可以作为一个提供服务接口文档的平台。</p> \n<p>使用网关有一个问题就是要决定在多大粒度上使用：最粗粒度的方案是整个微服务一个网关，微服务外部通过网关访问微服务，微服务内部则直接调用；最细粒度则是所有调用，不管是微服务内部调用或者来自外部的调用，都必须通过网关。折中的方案是按照业务领域将微服务分成几个区，区内直接调用，区间通过网关调用。</p> \n<p>由于整个网上超市的服务数量还不算特别多，小明采用的最粗粒度的方案：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112118033.png\" title=\"\" alt=\"\"></p> \n<h2 id=\"服务注册于发现---动态扩容\">服务注册于发现 - 动态扩容</h2> \n<p>前面的组件，都是旨在降低故障发生的可能性。然而故障总是会发生的，所以另一个需要研究的是如何降低故障产生的影响。</p> \n<p>最粗暴的（也是最常用的）故障处理策略就是冗余。一般来说，一个服务都会部署多个实例，这样一来能够分担压力提高性能，二来即使一个实例挂了其他实例还能响应。</p> \n<p>冗余的一个问题是使用几个冗余？这个问题在时间轴上并没有一个切确的答案。根据服务功能、时间段的不同，需要不同数量的实例。比如在平日里，可能4个实例已经够用；而在促销活动时，流量大增，可能需要40个实例。因此冗余数量并不是一个固定的值，而是根据需要实时调整的。</p> \n<p>一般来说新增实例的操作为：</p> \n<ol> \n <li>部署新实例</li> \n <li>将新实例注册到负载均衡或DNS上</li> \n</ol> \n<p>操作只有两步，但如果注册到负载均衡或DNS的操作为人工操作的话，那事情就不简单了。想想新增40个实例后，要手工输入40个IP的感觉……</p> \n<p>解决这个问题的方案是服务自动注册与发现。首先，需要部署一个服务发现服务，它提供所有已注册服务的地址信息的服务。DNS也算是一种服务发现服务。然后各个应用服务在启动时自动将自己注册到服务发现服务上。并且应用服务启动后会实时（定期）从服务发现服务同步各个应用服务的地址列表到本地。服务发现服务也会定期检查应用服务的健康状态，去掉不健康的实例地址。这样新增实例时只需要部署新实例，实例下线时直接关停服务即可，服务发现会自动检查服务实例的增减。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112111172.png\" title=\"\" alt=\"\"></p> \n<p>服务发现还会跟客户端负载均衡配合使用。由于应用服务已经同步服务地址列表在本地了，所以访问微服务时，可以自己决定负载策略。甚至可以在服务注册时加入一些元数据（服务版本等信息），客户端负载则根据这些元数据进行流量控制，实现A/B测试、蓝绿发布等功能。</p> \n<p>服务发现有很多组件可以选择，比如说Zookeeper 、Eureka、Consul、Etcd等。不过小明觉得自己水平不错，想炫技，于是基于Redis自己写了一个……</p> \n<h2 id=\"熔断服务降级限流\">熔断、服务降级、限流</h2> \n<h3 id=\"熔断\">熔断</h3> \n<p>当一个服务因为各种原因停止响应时，调用方通常会等待一段时间，然后超时或者收到错误返回。如果调用链路比较长，可能会导致请求堆积，整条链路占用大量资源一直在等待下游响应。所以当多次访问一个服务失败时，应熔断，标记该服务已停止工作，直接返回错误。直至该服务恢复正常后再重新建立连接。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112114616.png\" title=\"\" alt=\"\"></p> \n<blockquote> \n <p>图片来自《<a href=\"https://book.douban.com/subject/26772677/\">微服务设计</a>》</p> \n</blockquote> \n<h3 id=\"服务降级\">服务降级</h3> \n<p>当下游服务停止工作后，如果该服务并非核心业务，则上游服务应该降级，以保证核心业务不中断。比如网上超市下单界面有一个推荐商品凑单的功能，当推荐模块挂了后，下单功能不能一起挂掉，只需要暂时关闭推荐功能即可。</p> \n<h3 id=\"限流\">限流</h3> \n<p>一个服务挂掉后，上游服务或者用户一般会习惯性地重试访问。这导致一旦服务恢复正常，很可能因为瞬间网络流量过大又立刻挂掉，在棺材里重复着仰卧起坐。因此服务需要能够自我保护——限流。限流策略有很多，最简单的比如当单位时间内请求数过多时，丢弃多余的请求。另外，也可以考虑分区限流。仅拒绝来自产生大量请求的服务的请求。例如商品服务和订单服务都需要访问促销服务，商品服务由于代码问题发起了大量请求，促销服务则只限制来自商品服务的请求，来自订单服务的请求则正常响应。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112111528.png\" title=\"\" alt=\"\"></p> \n<h2 id=\"测试\">测试</h2> \n<p>微服务架构下，测试分为三个层次：</p> \n<ol> \n <li>端到端测试：覆盖整个系统，一般在用户界面机型测试。</li> \n <li>服务测试：针对服务接口进行测试。</li> \n <li>单元测试：针对代码单元进行测试。</li> \n</ol> \n<p>三种测试从上到下实施的容易程度递增，但是测试效果递减。端到端测试最费时费力，但是通过测试后我们对系统最有信心。单元测试最容易实施，效率也最高，但是测试后不能保证整个系统没有问题。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112111884.png\" title=\"\" alt=\"\"></p> \n<p>由于端到端测试实施难度较大，一般只对核心功能做端到端测试。一旦端到端测试失败，则需要将其分解到单元测试：则分析失败原因，然后编写单元测试来重现这个问题，这样未来我们便可以更快地捕获同样的错误。</p> \n<p>服务测试的难度在于服务会经常依赖一些其他服务。这个问题可以通过Mock Server解决：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112117188.png\" title=\"\" alt=\"\"></p> \n<p>单元测试大家都很熟悉了。我们一般会编写大量的单元测试（包括回归测试）尽量覆盖所有代码。</p> \n<h2 id=\"微服务框架\">微服务框架</h2> \n<p>指标接口、链路跟踪注入、日志引流、服务注册发现、路由规则等组件以及熔断、限流等功能都需要在应用服务上添加一些对接代码。如果让每个应用服务自己实现是非常耗时耗力的。基于DRY的原则，小明开发了一套微服务框架，将与各个组件对接的代码和另外一些公共代码抽离到框架中，所有的应用服务都统一使用这套框架进行开发。</p> \n<p>使用微服务框架可以实现很多自定义的功能。甚至可以将程序调用堆栈信息注入到链路跟踪，实现代码级别的链路跟踪。或者输出线程池、连接池的状态信息，实时监控服务底层状态。</p> \n<p>使用统一的微服务框架有一个比较严重的问题：框架更新成本很高。每次框架升级，都需要所有应用服务配合升级。当然，一般会使用兼容方案，留出一段并行时间等待所有应用服务升级。但是如果应用服务非常多时，升级时间可能会非常漫长。并且有一些很稳定几乎不更新的应用服务，其负责人可能会拒绝升级……因此，使用统一微服务框架需要完善的版本管理方法和开发管理规范。</p> \n<h2 id=\"另一条路---service-mesh\">另一条路 - Service Mesh</h2> \n<p>另一种抽象公共代码的方法是直接将这些代码抽象到一个反向代理组件。每个服务都额外部署这个代理组件，所有出站入站的流量都通过该组件进行处理和转发。这个组件被称为Sidecar。</p> \n<blockquote> \n <p>Sidecar不会产生额外网络成本。Sidecar会和微服务节点部署在同一台主机上并且共用相同的虚拟网卡。所以sidecar和微服务节点的通信实际上都只是通过内存拷贝实现的。</p> \n</blockquote> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112114398.png\" title=\"\" alt=\"\"></p> \n<blockquote> \n <p>图片来自：<a href=\"http://philcalcado.com/2017/08/03/pattern_service_mesh.html\">Pattern: Service Mesh</a></p> \n</blockquote> \n<p>Sidecar只负责网络通信。还需要有个组件来统一管理所有sidecar的配置。在Service Mesh中，负责网络通信的部分叫数据平面（data plane），负责配置管理的部分叫控制平面（control plane）。数据平面和控制平面构成了Service Mesh的基本架构。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112112282.png\" title=\"\" alt=\"\"></p> \n<blockquote> \n <p>图片来自：<a href=\"http://philcalcado.com/2017/08/03/pattern_service_mesh.html\">Pattern: Service Mesh</a></p> \n</blockquote> \n<p>Sevice Mesh相比于微服务框架的优点在于它不侵入代码，升级和维护更方便。它经常被诟病的则是性能问题。即使回环网络不会产生实际的网络请求，但仍然有内存拷贝的额外成本。另外有一些集中式的流量处理也会影响性能。</p> \n<h2 id=\"结束也是开始\">结束、也是开始</h2> \n<p>微服务不是架构演变的终点。往细走还有Serverless、FaaS等方向。另一方面也有人在唱合久必分分久必合，重新发现单体架构……</p> \n<p>不管怎样，微服务架构的改造暂时告一段落了。小明满足地摸了摸日益光滑的脑袋，打算这个周末休息一下约小红喝杯咖啡。</p>',NULL,0,2,1,0,0,'本文将介绍微服务架构和相关的组件，介绍他们是什么以及为什么要使用微服务架构和这些组件。本文侧重于简明地表达微服务架构的全局图景，因此不会涉及具体如何使用组件等细节。为了防止不提供原网址的转载，特在这','微服务架构',1,'2019-12-25 11:21:19','2020-03-13 07:19:23'),(48,'如何高效的学习技术',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<ul> \n <li><a href=\"#what\">学什么</a> \n  <ul> \n   <li><a href=\"#base\">基础与应用</a></li> \n   <li><a href=\"#wide\">广度与深度</a></li> \n   <li><a href=\"#philosophy\">哲学</a></li> \n   <li><a href=\"#english\">英语</a></li> \n  </ul></li> \n <li><a href=\"#how\">怎么学</a> \n  <ul> \n   <li><a href=\"#system\">知识体系</a></li> \n   <li><a href=\"#forget\">克服遗忘</a></li> \n   <li><a href=\"#fragment\">碎片时间</a></li> \n  </ul></li> \n <li><a href=\"#use\">用起来</a> \n  <ul> \n   <li><a href=\"#share\">技术分享</a></li> \n   <li><a href=\"#wheel\">造个轮子</a></li> \n  </ul></li> \n</ul> \n<p>  我们相信努力学习一定会有收获，但是方法不当，既让人身心疲惫，也没有切实的回报。高中时代，我的同桌是个漂亮女同学。她的物理成绩很差，虽然她非常勤奋的学习，但成绩总是不理想。为了巩固纯洁的同学关系，我亲密无间地辅导她的物理，发现<strong>她不知道题目考什么</strong>。我们的教科书与试题都围绕着考试大纲展开，看到一道题，应该先想想它在考哪些定理和公式的运用。<br>   不少朋友每天都阅读技术文章，但是第二天就忘干净了。工作中领导和同事都认可你的沟通和技术能力，但是跳槽面试却屡屡碰壁。面试官问技术方案，明明心里清楚，用嘴说出来却前言不搭后语。面试官再问底层算法，你说看过但是忘记了。他不在乎你看没看过，答不上就是零分。正如男女相亲，男方谈吐潇洒才能吸引姑娘。可是男方紧张了，平时挺能说，关键时候却支支吾吾，姑娘必然认为他不行。人生充满了许多考试，有形的和无形的，每次考试的机会只有一次。<br>   工作五年十年后，别人成了架构师，自己还在基层打滚，原因是什么？职场上无法成功升迁的原因有很多，没有持续学习、学习效果不好、无法通过心仪公司的的面试，一定是很重要的原因。<br>   <strong>把自己当成一台计算机，既有输入，也要有输出，用输出倒逼输入</strong>。</p> \n<h3 id=\"学什么\"><a name=\"what\">学什么</a></h3> \n<h4 id=\"基础与应用\"><a name=\"base\">基础与应用</a></h4> \n<p>  近些年诞生了许多新技术，比如最时髦的AI(目前还在智障阶段)，数学基础是初中就接触过的概率统计。万丈高楼从地起，不要被新工具或者中间件迷住双眼，一味地追新求快。基础知识是所有技术的基石，在未来很长的时间都不会变化，应该花费足够的时间巩固基础。<br>   以数据结构和算法为例，大家阅读一下Java的BitSet的源码，里面有大量的移位操作，移位运算掌握的好，看这份源码就没问题。Java同步工具类AQS用到了双向链表，链表知识不过关，肯定搞不懂它的原理。互联网大厂都喜欢考算法，为了通过面试也要精通算法。<br>   以Java工程师应该掌握的知识为例，按重要程度排出六个梯度：</p> \n<ul> \n <li>第一梯度：计算机组成原理、数据结构和算法、网络通信原理、操作系统原理；</li> \n <li>第二梯度：Java基础、JVM内存模型和GC算法、JVM性能调优、JDK工具、设计模式；</li> \n <li>第三梯度：Spring系列、Mybatis、Dubbo等主流框架的运用和原理；</li> \n <li>第四梯度：MySQL(含SQL编程)、Redis、RabbitMQ/RocketMQ/Kafka、ZooKeeper等数据库或者中间件的运用和原理；</li> \n <li>第五梯度：CAP理论、BASE理论、Paxos和Raft算法等其他分布式理论；</li> \n <li>第六梯度：容器化、大数据、AI、区块链等等前沿技术理论；</li> \n</ul> \n<p>有同学认为第五梯度应该在移到第一梯度。其实很多小公司的日活犹如古天乐一样平平无奇，离大型分布式架构还远得很。学习框架和中间件的时候，顺手掌握分布式理论，效果更好。</p> \n<h4 id=\"广度与深度\"><a name=\"wide\">广度与深度</a></h4> \n<p>  许多公司的招聘JD没有设定技术人员年龄门槛，但是会加上一句“具备与年龄相当的知识的广度与深度”。多广才算广，多深才算深？这是很主观的话题，这里不展开讨论。<br>   如何变得更广更深呢？<strong>突破收入上升的瓶颈，发掘自己真正的兴趣</strong>。<br>   大多数人只是公司的普通职员，收入上升的瓶颈就是升职加薪。许多IT公司会对技术人员有个评级，如果你的评级不高，那就依照晋级章程努力升级。如果你在一个小公司，收入一般，发展前景不明，准备大厂的面试就是最好的学习过程。在这些过程中，你必然学习更多知识，变得更广更深。<br>   个人兴趣是前进的动力之一，许多知名开源项目都源于作者的兴趣。个人兴趣并不局限技术领域，可以是其他学科。我有个朋友喜欢玩山地自行车，还给一些做自行车话题的自媒体投稿。久而久之，居然能够写一手好文章了，我相信他也能写好技术文档。</p> \n<h4 id=\"哲学\"><a name=\"philosophy\">哲学</a></h4> \n<p>  哲学不是故作高深的学科，它的现实意义就是解决问题。年轻小伙是怎么泡妞的？三天两头花不断，大庭广众跪求爱。这类套路为什么总是能成功呢？礼物满足女人的物欲，当众求爱满足女人的虚荣心，投其所好。食堂大妈打菜的手越来越抖，辣子鸡丁变成辣子辣丁，为什么呢？食堂要控制成本，直接提价会惹众怒。<br>   科学上的哲学，一般指研究事物发展的规律，归纳终极的解决方案。软件行业充满哲学味道的作品非常多，比如<a href=\"https://item.jd.com/12401749.html\" target=\"_blank\">《人月神话》</a>。举个例子，当软件系统遇到性能问题，尝试下面两种哲学思想提升性能：</p> \n<ul> \n <li>空间换时间：比如引入缓存，消耗额外的存储提高响应速度。</li> \n <li>时间换空间：比如大文件的分片处理，分段处理后再汇总结果。</li> \n</ul> \n<p>设计稳健高可用的系统，尝试从三个方面考虑问题：</p> \n<ul> \n <li>存储：数据会丢失吗，数据一致性怎么解决。</li> \n <li>计算：计算怎么扩容，应用允许任意增加节点吗。</li> \n <li>传输：网络中断或拥塞怎么办。</li> \n</ul> \n<p>从无数的失败或者成功的经验中，总结出高度概括性的方案，让我们下一步做的更好。</p> \n<h4 id=\"英语\"><a name=\"english\">英语</a></h4> \n<p>  英语是极为重要的基础，学好英语与掌握编程语言一样重要。且不说外企对英语的要求，许多知名博客就是把英文翻译成中文，充当知识的搬运工。如果英语足够好，直接阅读一手英语资料，避免他人翻译存在的谬误。</p> \n<h3 id=\"怎么学\"><a name=\"how\">怎么学</a></h3> \n<h4 id=\"知识体系\"><a name=\"system\">知识体系</a></h4> \n<p>  体系化的知识比零散的更容易记忆和理解，这正如一部好的电视剧，剧情环环相扣才能吸引观众。建议大家使用思维导图罗列知识点，构建体系结构，如下图所示：<br> </p>\n<div style=\"text-align:center\">\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112727799.png\" title=\"\" alt=\"\">\n</div>\n<p></p> \n<h4 id=\"克服遗忘\"><a name=\"forget\">克服遗忘</a></h4> \n<p>  高中是我们知识的巅峰时刻，每周小考每月大考，教辅资料堆成山，地狱式的反复操练强化记忆。复习是对抗遗忘的唯一办法。大脑的遗忘是有规律的，先快后慢。一天后，学到的知识只剩下原来的25%，甚至更低。随着时间的推移，遗忘的速度减慢，遗忘的数量也就减少。</p> \n<table> \n <thead> \n  <tr class=\"header\"> \n   <th>时间间隔</th> \n   <th>记忆量</th> \n  </tr> \n </thead> \n <tbody> \n  <tr class=\"odd\"> \n   <td>刚看完</td> \n   <td>100%</td> \n  </tr> \n  <tr class=\"even\"> \n   <td>20分钟后</td> \n   <td>60%</td> \n  </tr> \n  <tr class=\"odd\"> \n   <td>1小时后</td> \n   <td>40%</td> \n  </tr> \n  <tr class=\"even\"> \n   <td>1天后</td> \n   <td>30%</td> \n  </tr> \n  <tr class=\"odd\"> \n   <td>2天后</td> \n   <td>27%</td> \n  </tr> \n </tbody> \n</table> \n<p>每个人的遗忘程度都不一样，建议第二天复习前一天的内容，七天后复习这段时间的所有内容。</p> \n<h4 id=\"碎片时间\"><a name=\"fragment\">碎片时间</a></h4> \n<p>  不少朋友利用碎片时间学习，比如在公交上看公众号的推送。其实我们都高估了自己的抗干扰能力，如果处在嘈杂的环境，注意力容易被打断，记忆留存度也很低。碎片时间适合学习简单孤立的知识点，比如链表的定义与实现。<br>   学习复杂的知识，需要大段的连续时间。图书馆是个好地方，安静氛围好。手机放一边，不要理会QQ微信，最好阅读纸质书，泡上一整天。有些城市出现了付费自习室，提供格子间、茶水等等，也是非常好的选择。</p> \n<h3 id=\"用起来\"><a name=\"use\">用起来</a></h3> \n<h3 id=\"技术分享\"><a name=\"share\">技术分享</a></h3> \n<p>  从下面这张图我们可以看到，教授他人是知识留存率最高的方式。<br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225112728271.png\" title=\"\" alt=\"\"></p> \n<p>  准备PPT和演讲内容，给同事来一场技术分享。不光复习知识，还锻炼口才。曾经有个同事说话又快又急，口头禅也多，比如\"对吧、是不是”，别人经常听不清，但是他本人不以为然。领导让他做了几次技术分享，听众的反应可想而知，他才彻底认清缺点。<br>   坚持写技术博客，别在意你写的东西在网上已经重复千百遍。当自己动手的时候，才会意识到眼高手低。让文章读起来流畅清晰，需要呕心沥血的删改。写作是对大脑的长期考验，想不到肯定写不出，想不清楚肯定写不清楚。</p> \n<h3 id=\"造个轮子\"><a name=\"wheel\">造个轮子</a></h3> \n<p>我们经常说不要重复造轮子。为了开发效率，可以不造轮子，但是必须具备造轮子的能力。建议造一个简单的MQ，你能用到通信协议、设计模式、队列等许多知识。在造轮子的过程中，你会频繁的翻阅各种手册或者博客，这就是<strong>用输出倒逼输入</strong>。</p>',NULL,0,3,1,0,0,'我们相信努力学习一定会有收获，但是方法不当，会让人身心疲惫，也没有切实的效果。职场上无法成功升迁的原因多种多样的，没有持续学习、学习效果不佳、无法通过心仪公司的面试，一定是很重要的原因。现在把自己当成','高效的学习技术 ',1,'2019-12-25 11:27:31','2019-12-25 11:28:51'),(49,'我是如何失去团队掌控的？',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>我是一个不合格的技术总监，在过去的快三个月里。我带着从40多个人的研发团队（包含需求、开发、测试）里抽调出20多个人去为公司开疆拓土。在这快三个月中，我们一起奋战奋斗拼搏。在过程中，我通宵时间超过半个月，干到凌晨4/5点的日子数不胜数，干到凌晨1/2点日子更是习以为常。整个团队绝大多数人近乎两个月没有周末，辛苦异常，是实实在在的高峰体验。但是三个月后，我带着失败和一身的惨痛教训回到公司。</p> \n<p>我在这次的经历中感受到了我是怎么失去团队掌控力的。我所谓的团队掌控，不是说兄弟们不听安排，不按计划行事。而是我对整个开发团队、测试团队、需求团队都有了新的认识，重新认识了团队，重新认识了这二十多个人。因为对个人和团队的能力判断误差和对项目难度的判断失误，导致了这次惨痛的教训。</p> \n<p>我把我所面临的的困境和遇到的问题分享给大家，也将把我所做的决策分享给大家，并把我所意识到的错误分享给大家。希望能给每个面临此种局面的同行进行提醒。</p> \n<h2 id=\"项目和团队背景\">项目和团队背景</h2> \n<ol> \n <li>共计三个月内有四个项目，没有正式的项目经理，只有三个实习项目经理</li> \n <li>三个实习项目经理中，一个带过一个小型持续性项目（前后端共3人）接近一年；一个带过小项目（4人）一个月；一个带过两个中小项目（7人），共计半年时间</li> \n <li>开发同事都相对年轻，工作年限最长的也就三年。朝气蓬勃但的确经验不足</li> \n <li>团队中老同事新同事各占一半吧，超过半数的同事来公司不到一年</li> \n <li>四个项目都基于同一个客户提供基础版本（或者说框架）进行开发</li> \n <li>客户方使用的基础框架过于老旧，十多年前的前后端框架，前端使用技术特别偏门，学习成本巨大</li> \n <li>框架混乱不堪，表就有快2000张，说是框架但杂含着各种各样的业务代码，且又必须使用</li> \n <li>开发调试的环境配置困难，项目必须跑在linux上，只能远程调试。项目由于过大，启动缓慢，编译一次大概10多分钟。我们团队不熟悉此种模式，摸索浪费了一段时间</li> \n <li>客户公司较大，研发部门较多。开发过程中部门协调工作占比超过一半，需要和各种各样的设备做对接，都是别的部门开发的。部门之间互相踢皮球，找人协助困难</li> \n</ol> \n<h2 id=\"错误一高估团队水平\">错误一：高估团队水平</h2> \n<ol> \n <li>自以为很了解同事，其实了解的太片面。在过去一年中，由于做的项目比较稳定。持续产出在可控范围内，客户也比较认可。导致我产生了觉得我们团队还不错的错觉<br> </li> \n <li>整个团队在面对全新环境的情况下，适应能力偏弱。难以快速稳定的产出，项目开始了两个星期，基本都处于熟悉环境、熟悉项目的状态，一直没有有效产出。导致时间被浪费<br> </li> \n <li>比如某A刚入职3个多月，在其他项目中，项目负责人给出的评价还不错，导致我把他放在了重要的开发位置上。但项目一开始，我就发现某A技术水平差的有点厉害，多表联查的sql都写不溜。此时已无人可替他，只能我上去协助他<br> 比如某B一年多来，带的项目一直稳定未出大问题。但到了新项目中，理解能力较弱无法快速全面理解需求。同时也暴露出了某B没有风险意识的致命缺陷，不能识别风险，识别出了风险也不反馈不作为，导致项目多次跳票</li> \n</ol> \n<p><strong><em>反思：</em></strong></p> \n<ol> \n <li><p>考核很重要，全面的考核反馈更重要</p> \n  <ul> \n   <li>在人员和团队方面，产生最要命的问题，我想就是考核机制的问题了。由于种种原因，对同事的了解都太片面。在用人方面把人放错了位置。狙击手放到了主攻手的位置上，主攻手放到了指挥员的位置上。这样战斗不失败才怪呢<br> </li> \n   <li>站在一个较高的位置，很容易对下面同事的能力判断失误。就我认为，在人数不多的情况下，最好的了解大家的方式，是一起战斗。在一场战斗里，观察每个人每天的态度表现、效率产出、代码质量、协调能力、对外沟通能力等。经过一个项目下来，就能对这个项目组中的成员有个较全面的了解。但这种方式不能只是站在项目外看，而要和大家一起就同一个项目开展工作<br> </li> \n   <li>从多方去了解一个人，不只听某一人之言。对如上的某A来说，就是因为只听了一人之言产生了较大的误判（某A在另一个项目中，只做了导出功能，未接触数据库）</li> \n  </ul></li> \n <li><p>不用静止的眼光看人，人都是在不断变化的</p> \n  <ul> \n   <li>人都是在不断变化的，而我用了以往的经验去评判大家。有的高估了，有的低估了。没有把最合适的人安排给最合适的项目<br> </li> \n   <li>不应把过去的错误或者功能记在今天的账上，要持续的跟进大家的变化，持续的保持对大家的新认识。不以固有的眼光看人<br> </li> \n   <li>也应通过积极的引导，帮助同事改掉自己的不足。而不是听之任之，由其自生自灭。只有这样，团队才能进步，这也是一个leader最应该做好的事情，我在这方面差的还太远</li> \n  </ul></li> \n <li><p>因事定人不可取</p> \n  <ul> \n   <li>某D之前由于某次技术预研的工作，让我认定他一般。但在这次的项目中，他却成了最稳定输出的一环<br> </li> \n   <li>由此可见，不能因为某人一时做的好或者不好，就给这个人定了型，先入为主的下定论。要客观的评价一下个人，需要了解他的全部历史和全部工作。也就是第一条说的，要有全面的考核反馈机制</li> \n  </ul></li> \n</ol> \n<h2 id=\"错误二低估项目难度\">错误二：低估项目难度</h2> \n<ol> \n <li>项目共计4个，每个项目（只支持IE）都需要和额外的客户自研中间件、插件（ActiveX）、多种硬件设备对接。此前未做过和硬件对接的设备，低估了对接的难度<br> </li> \n <li>中间件、插件、硬件设备的对接我万万没想到，什么文档都没有。只能去搜历史代码学习测试，或者到相关部门去问问。而此前沟通过程中，我心中默认对接是有文档或专人指导的，没有问清楚<br> </li> \n <li>前端使用框架（2006年的框架和版本）过于老旧，由于对前端了解不足，错误的估计了学习曲线，团队前端同事开发前期非常吃力，进度在这块也拖延了一大段<br> </li> \n <li>跨部门沟通的难度远超我的想象，此前沟通过程中，明确好跨部门沟通有专人负责，但到了实际工作中，都变成了我们自己去对接。各个部门互相踢皮球，一个摄像头到底是什么型号的问题（测试需要特定型号的摄像头，对接人不清楚借来的是什么型号），我能花3个小时跑遍五层楼才得到答案。更不用说代码层面的指导了<br> </li> \n <li>没有了解到客户方框架的真实情况，心中以为是在spring上封装的脚手架。没想到框架中包含了快2000张表，数百万的历史代码。光用户模块就有不同的三套（该框架会在各个定制的基础上，定期的把定制内容合到框架主干上，导致了各种没有用的历史遗留代码），找想要使用的功能搜索难度大增</li> \n</ol> \n<p><strong><em>反思：</em></strong></p> \n<ol> \n <li><p>经验很重要，但经验也很致命</p> \n  <ul> \n   <li>在此次前期沟通中，很多我以为，我认为都是经验主义所害。比如对接文档的问题，多问一句，可能情况就很不一样<br> </li> \n   <li>经验也可能成为风险之一，需要警惕</li> \n  </ul></li> \n <li><p>想法设法获取更多信息</p> \n  <ul> \n   <li>四个项目的对接人了解的信息都不全面，到我这的信息就缺失更多，而我当时以为这就是全部的情况。信息的缺失是会让判断失去方向<br> </li> \n   <li>在现有信息中，要去挖掘出更多的问题和信息，并找对接人确认。越多的信息越能为判断提供更准确的方向<br> </li> \n   <li>对接人也不清晰的情况，需要推动对接人去找相应人员获取，得到相对准确和完善的信息</li> \n  </ul></li> \n <li><p>锁定项目核心重难点</p> \n  <ul> \n   <li>在这几个项目中，有的项目没有在一开始就抓住项目核心重难点。比如甲项目中核心功能是存储，且需要使用客户自研存储设备，项目初期未锁定该重点问题，导致后期项目核心功能全部返工<br> </li> \n   <li>一般采取排除法来锁定核心重难点。把所有的页面可见功能点和隐含功能点列上，以排除法排除独立的关联少的模块。留下的就是重难点的核心要素<br> </li> \n   <li>针对每个核心要素搞清楚联系关系，得到最终的功能关系图（业务架构图）</li> \n  </ul></li> \n</ol> \n<h2 id=\"错误三战术错误同时面对过多的项目\">错误三：战术错误，同时面对过多的项目</h2> \n<ol> \n <li>回过头来看，人手不足的情况同时接了过多的项目是错误的。但这的确是一个两难的问题，不能简单的用错或者对来概述</li> \n <li>接或者不接，这本就是一个博弈的过程。综合分析项目是否确定会交由我们来做，再分析是否有能力完成，考虑清楚后再下结论</li> \n</ol> \n<p><strong><em>反思：</em></strong></p> \n<ol> \n <li>项目中总是会面临资源不足的情况，永远不要想着项目中拥有最适合的资源、人员。毕竟最适合的人员不可能一直等着你的项目</li> \n <li>带项目就像打牌，一手好牌做好了项目是应该。而一手烂牌打赢了才是你的能力</li> \n</ol> \n<h2 id=\"错误四管理不是轻松的事\">错误四：管理不是轻松的事</h2> \n<ol> \n <li>最后一个错误，是在项目无人可带的时候，迫不得已我去带了项目。陷入了某个项目的具体细节后，没有了统一对所有项目进行管理协调的人</li> \n <li>管理是很耗费精力的，需要专人专职的去处理。管理者一大职责就是沟通协调，尤其在这种需要强沟通的项目中</li> \n <li>一旦陷入了具体的某个项目中，就很难有精力去维持其他项目了<br> </li> \n <li>授权很重要，但检查更重要。交付出去的工作，要定期检查，保证交付物是完成的、完整的、不返工的</li> \n</ol> \n<h2 id=\"我所吸取的教训总结\">我所吸取的教训总结</h2> \n<ol> \n <li>建立更全面的考核反馈体系对认识团队至关重要</li> \n <li>不要局限于经验，沟通胜于一切</li> \n <li>反思每一次战术失误，保证下一次的精确打击</li> \n <li>专人专事，专职管理的人，就不要陷入开发细节中，一旦大量精力投入了开发。这将是致命的风险</li> \n</ol>',NULL,0,3,1,0,0,'我是一个不合格的技术总监，在过去的快三个月里。我带着从40多个人的研发团队（包含需求、开发、测试）里抽调出20多个人去为公司开疆拓土。在这快三个月中，我们一起奋战奋斗拼搏。在过程中，我通宵时间超过半个','如何带团队',1,'2019-12-25 11:29:41','2019-12-25 11:30:42'),(50,'Code Review最佳实践',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p align=\"justify\">我一直认为Code Review（代码审查）是软件开发中的最佳实践之一，可以有效提高整体代码质量，及时发现代码中可能存在的问题。包括像Google、微软这些公司，Code Review都是基本要求，代码合并之前必须要有人审查通过才行。</p> \n<p align=\"justify\">&nbsp;</p> \n<p align=\"justify\">然而对于我观察到的大部分软件开发团队来说，认真做Code Review的很少，有的流于形式，有的可能根本就没有Code Review的环节，代码质量只依赖于事后的测试。也有些团队想做好代码审查，但不知道怎么做比较好。</p> \n<p align=\"justify\">&nbsp;网上关于如何做Code Review的文章已经有很多了，这里我结合自己的一些经验，也总结整理了一下Code Review的最佳实践，希望能对大家做好Code Review有所帮助。</p> \n<h1>Code Review有什么好处？</h1> \n<p align=\"justify\">很多团队或个人不做Code Review，根源还是不觉得这是一件有意义的事情，不觉得有什么好处。这个问题要从几个角度来看。</p> \n<ul> \n <li><strong>首先是团队知识共享的角度</strong><strong>&nbsp;</strong></li> \n</ul> \n<p align=\"justify\">一个开发团队中，水平有高有低，每个人侧重的领域也有不同。怎么让高水平的帮助新人成长？怎么让大家都对自己侧重领域之外的知识保持了解？怎么能有人离职后其他人能快速接手？这些都是团队管理者关心的问题。</p> \n<p align=\"justify\">而代码审查，就是一个很好的知识共享的方式。通过代码审查，高手可以直接指出新手代码中的问题，新手可以马上从高手的反馈中学习到好的实践，得到更快的成长；通过代码审查，前端也可以去学习后端的代码，做功能模块A的可以去了解功能模块B的。</p> \n<p align=\"justify\">可能有些高手觉得给新手代码审查浪费时间，自己也没收获。其实不然，新人成长了，就可以更多的帮高手分担繁重的任务；代码审查中花时间，就少一些帮新人填坑擦屁股的时间；良好的沟通能力、发现问题的能力、帮助其他人成长，都是技术转管理或技术上更上一层楼必不可少的能力，而通过代码审查可以有效的去练习这些方面的能力。</p> \n<ul> \n <li><strong>然后是代码质量的角度</strong></li> \n</ul> \n<p align=\"justify\">现实中的项目总是人手缺进度紧，所以被压缩的往往就是自动化测试和代码审查，结果影响代码质量，欠下技术债务，最后还是要加倍偿还。</p> \n<p align=\"justify\">也有人寄希望于开发后的人工测试，然而对于代码质量来说，很多问题通过测试是测试不出来的，只能通过代码审查。比如说代码的可读性可维护性，比如代码的结构，比如一些特定条件才触发的死循环、逻辑算法错误，还有一些安全上的漏洞也更容易通过代码审查发现和预防。&nbsp;</p> \n<p align=\"justify\">也有人觉得自己水平高就不需要代码审查了。对于高手来说，让别人审查自己的代码，可以让其他人学习到好的实践；在让其他人审查的同时，在给别人说明自己代码的时候，也等于自己对自己的代码进行了一次审查。这其实就跟我们上学时做数学题一样，真正能拿高分的往往是那些做完后还会认真检查的。</p> \n<ul> \n <li><strong>还有团队规范的角度</strong>&nbsp;</li> \n</ul> \n<p align=\"justify\">每个团队都有自己的代码规范，有自己的基于架构设计的开发规范，然而时间一长，就会发现代码中出现很多不遵守代码规范的情况，有很多绕过架构设计的代码。比如难以理解和不规范的命名，比如三层架构里面UI层绕过业务逻辑层直接调用数据访问层代码。&nbsp;</p> \n<p align=\"justify\">如果这些违反规范的代码被纠正的晚了，后面再要修改就成本很高了，而且团队的规范也会慢慢的形同虚设。</p> \n<p align=\"justify\">通过代码审查，就可以及时的去发现和纠正这些问题，保证团队规范的执行。</p> \n<p align=\"justify\">关于代码审查的好处，还有很多，也不一一列举。还是希望能认识到<strong>Code Review和写自动化测试一样，都是属于磨刀不误砍柴工的工作，在上面投入一点点时间，未来会收获代码质量，会节约整体的开发时间。</strong></p> \n<h1>该怎么做？&nbsp;</h1> \n<p align=\"justify\">现在很多人都已经有意识到Code Review的重要性了，只是苦于不知道如何去实践，不知道怎么样算是好的Code Review实践。</p> \n<h2>把Code Review作为开发流程的必选项而不是可选项</h2> \n<p align=\"justify\">在很早以前，我就尝试过将代码审查作为代码流程的一部分，但只是一个可选项，没有Code Review也可以把代码合并到master。这样的结果就是想起来才会去做Code Review，去检查的时候已经有了太多的代码变更，审查起来非常困难，另外就算审查出问题，也很难得以修改。&nbsp;</p> \n<p align=\"justify\">我们现在对代码的审查则是作为开发流程的一个必选项，每次开发新功能或者修复Bug，开一个新的分支，分支要合并到master有两个必要条件：</p> \n<ul> \n <li>所有的自动化测试通过</li> \n <li>有至少一个人Code Review通过，如果是新手的PR，还必须有资深程序员Code Review通过</li> \n</ul> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225124027278.png\" title=\"\" alt=\"\"></p> \n<p>图片来源：How to Do Code Reviews Like a Human</p> \n<p align=\"justify\">这样把Code Review作为开发流程的一个必选项后，就很好的保证了代码在合并之前有过Code Review。而且这样合并前要求代码审查的流程，好处也很明显：</p> \n<ul> \n <li>由于每一次合并前都要做代码审查，这样一般一次审查的代码量也不会太大，对于审查者来说压力也不会太大</li> \n <li>如果在Code Review时发现问题，被审查者希望代码能尽快合并，也会积极的对审查出来的问题进行修改，不至于对审查结果太过抵触</li> \n</ul> \n<p align=\"justify\">如果你觉得Code Review难以推行，不妨先尝试着把Code Review变成你开发流程的一个必选项。</p> \n<h2>把Code Review变成一种开发文化而不仅仅是一种制度</h2> \n<p align=\"justify\">把Code Review 作为开发流程的必选项后，不代表Code Review这件事就可以执行的很好，因为Code Review 的执行，很大部分程度上依赖于审查者的认真审查，以及被审查者的积极配合，两者缺一不可！</p> \n<p align=\"justify\">如果仅仅只是当作一个流程制度，那么就可能会流于形式。最终结果就是看起来有Code Review，但没有人认真审查，随便看下就通过了，或者发现问题也不愿意修改。</p> \n<p align=\"justify\">真要把Code Review这件事做好，必须让Code Review变成团队的一种文化，开发人员从心底接受这件事，并认真执行这件事。</p> \n<p align=\"justify\">要形成这样的文化，不那么容易，也没有想象的那么难，比如这些方面可以参考：</p> \n<ul> \n <li>首先，得让开发人员认识到Code Review这件事为自己、为团队带来的好处</li> \n <li>然后，得要有几个人做好表率作用，榜样的力量很重要</li> \n <li>还有，对于管理者来说，你激励什么，往往就会得到什么</li> \n <li>最后，像写自动化测试一样，<strong>把Code Review要作为开发任务的一部分，给审查者和被审查者都留出专门的时间去做这件事</strong>，不能光想着马儿跑得快又舍不得给马儿吃草&nbsp;</li> \n</ul> \n<p align=\"justify\">如何形成这样的文化，有心的话，还有很多方法可以尝试。只有真正让大家都认同和践行，才可能去做好Code Review这件事。</p> \n<h2>一些Code Review的经验技巧</h2> \n<p align=\"justify\">在做好Code Review这件事上，还有一些经验技巧可以参考。</p> \n<h2>选什么工具辅助做CODE REVIEW？</h2> \n<p align=\"justify\">现在很多源代码管理工具都自带Code Review工具，典型的像Github、Gitlab、微软的Azure DevOps，尤其是像Gitlab，还可以自己在本地搭建环境，根据自己的需要灵活配置。&nbsp;</p> \n<h2>配合什么样的开发流程比较好？</h2> \n<p align=\"justify\">像<a href=\"https://guides.github.com/introduction/flow/\">Github Flow</a>这样基于分支开发的流程是特别适合搭配Code Review的。其实不管什么样的开发流程，关键点在于代码合并到master（主干）之前，要先做Code Review。</p> \n<h2>真遇到紧急情况，来不及代码审查怎么办？&nbsp;</h2> \n<p align=\"justify\">虽然原则上，必须要Code Review才能合并，但有时候确实会存在一些紧急情况，比如说线上故障补丁，而又没有其他人在线，那么这种情况下，最好是在任务管理系统中，创建一个Ticket，用来后续跟踪，确保后续补上Code Review，并对Code Review结果有后续的代码更新。</p> \n<h2>先设计再编码</h2> \n<p align=\"justify\">有些新人发现自己的代码提交PR（Pull Request）后，会收到一堆的Code Review意见，必须要做大量的改动。这多半是因为在开始做之前，没有做好设计，做出来后才发现问题很多。&nbsp;</p> \n<p align=\"justify\">建议在做一个新功能之前，写一个简单的设计文档，表达清楚自己的设计思路，找资深的先帮你做一下设计的审查，发现设计上的问题。设计上没问题了，再着手开发，那么到Review的时候，相对问题就会少很多。</p> \n<h2>代码在提交CODE REVIEW之前，作者要自己先REVIEW和测试一遍&nbsp;</h2> \n<p align=\"justify\">我在做代码审查的时候，有时候会发现一些非常明显的问题，有些甚至自己都没有测试过，就等着别人Code Review和测试帮助发现问题。这种依赖心理无论是对自己还是对团队都是很不负责任的。&nbsp;</p> \n<p align=\"justify\"><strong>一个好的开发人员，代码在提交Code Review之前，肯定是要自己先Review一遍，把该写的自动化测试代码写上，自己把基本的测试用例跑一遍的。</strong>&nbsp;</p> \n<p align=\"justify\">我对于团队提交的PR，有个要求就是要在PR的描述中增加截图或者录屏，就是为了通过截图或者录屏，确保提交PR的人自己是先测试过的。这也是一个有效的辅助手段。</p> \n<h2>PR要小&nbsp;</h2> \n<p align=\"justify\">在做Code Review的时候，如果有大量的文件修改，那么Review起来是很困难的，但如果PR比较小，相对就比较容易Review，也容易发现代码中可能存在的问题。</p> \n<p align=\"justify\">所以在提交PR时，PR要小，如果是比较大的改动，那么最好分批提交，以减轻审查者的压力。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20191225124028763.jpg\" title=\"\" alt=\"\"></p> \n<h2>对评论进行分级</h2> \n<p align=\"justify\">在做Code Review时，需要针对审查出有问题的代码行添加评论，如果只是评论，有时候对于被审查者比较难甄别评论所代表的含义，是不是必须要修改。</p> \n<p align=\"justify\">建议可以对Review的评论进行分级，不同级别的结果可以打上不同的Tag，比如说：</p> \n<ul> \n <li>[blocker]: 在评论前面加上一个[blocker]标记，表示这个代码行的问题必须要修改</li> \n <li>[optional]：在评论前面加上一个[optional]标记，表示这个代码行的问题可改可不改</li> \n <li>[question]：在评论前面加上一个[question]标记，表示对这个代码行不理解，有问题需要问，被审查者需要针对问题进行回复澄清&nbsp;</li> \n</ul> \n<p align=\"justify\">类似这样的分级可以帮助被审查者直观了解Review结果，提高Review效率。</p> \n<h2>评论要友好，避免负面词汇；有说不清楚的问题当面沟通&nbsp;</h2> \n<p align=\"justify\">虽然评论是主要的Code Review沟通方式，但也不要过于依赖，有时候面对面的沟通效率更高，也容易消除误解。</p> \n<p align=\"justify\">另外文明用语，不要用一些负面的词汇。&nbsp;</p> \n<h1>总结&nbsp;</h1> \n<p align=\"justify\">Code Review是一种非常好的开发实践，如果你还没开始，不妨逐步实践起来；如果已经做了效果不好，不妨对照一下，看有没有把Code Review作为开发流程的必选项而不是可选项？有没有把Code Review变成一种开发文化而不仅仅是一种制度？</p>',NULL,0,3,1,0,0,'我一直认为CodeReview（代码审查）是软件开发中的最佳实践之一，可以有效提高整体代码质量，及时发现代码中可能存在的问题。包括像Google、微软这些公司，CodeReview都是基本要求，代','CodeReview',1,'2019-12-25 12:40:29','2019-12-25 12:41:45'),(52,'IntelliJ IDEA 2019免费永久激活',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h1 style=\"margin-top: 20px; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; line-height: 1.1; color: rgb(51, 51, 51);\"><span style=\"font-weight: 700;\">IntelliJ IDEA 2019最新注册码, 免费永久激活，永久破解教程(亲测有效，持续更新中...)</span></h1><div style=\"text-size-adjust: 100%; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px; line-height: 1.5; overflow-wrap: break-word;\"><p style=\"margin-bottom: 16px; margin-top: 0px !important;\">原文链接：https://www.xiaomiqiu.com/article/78</p><p style=\"margin-bottom: 16px; margin-top: 0px !important;\">本来本屌这边是有个正版激活码可以使用的，但是最近看到群里面的一些小伙伴反映自己的注册码已经失效了，</p><p style=\"margin-top: 0px; margin-bottom: 16px;\">于是本屌就拿着自己的 IDEA，测试了网上一下公开的激活码，果不其然很多都失效了，但是我之前分享的激活</p><p style=\"margin-top: 0px; margin-bottom: 16px;\">码还是有效的哦，嫌本教程麻烦的可以直接用之前的激活码激活即可，当然了，本教程是教你如何：</p><p style=\"margin-top: 0px; margin-bottom: 16px;\"><span style=\"font-weight: 600;\">永久激活！！！永久激活！！！永久激活！！！</span></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">重要的事情说三遍！</p><p style=\"margin-top: 0px; margin-bottom: 16px;\">什么？无图言屌？我艹，不BB，直接上图：</p><p style=\"margin-top: 0px; margin-bottom: 16px;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200106095710643.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; color: rgb(115, 135, 156); font-family: &quot;Helvetica Neue&quot;, Roboto, Arial, &quot;Droid Sans&quot;, sans-serif; font-size: 13px; max-width: 100%; height: auto; border-radius: 6px;\">&nbsp;&nbsp;<br></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">就问你 ，服不服！</p><p style=\"margin-top: 0px; margin-bottom: 16px;\">好了，废话不多说，直接上教程：</p><p style=\"margin-top: 0px; margin-bottom: 16px;\"><span style=\"font-weight: 600;\">首先要注意下，此方法不需要改host文件，如果之前改过，请恢复回去！</span></p><p style=\"margin-top: 0px; margin-bottom: 16px;\"><span style=\"font-weight: 600;\">下面开始激活</span></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">1.打开已经安装好的 IDEA, 我们选择 30 天免费试用，先进去再说：</p><p style=\"margin-top: 0px; margin-bottom: 16px;\">&nbsp;&nbsp;<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200106100506885.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; color: rgb(115, 135, 156); font-family: &quot;Helvetica Neue&quot;, Roboto, Arial, &quot;Droid Sans&quot;, sans-serif; font-size: 13px; max-width: 100%; height: auto; border-radius: 6px;\"><br></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">2.成功进入 IDEA 以后，我们随便创建一个项目/或者打开个旧的项目，点击顶部的 Help 菜单 -&gt; Edit Custom VM Options：</p><p style=\"margin-top: 0px; margin-bottom: 16px;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200106095622199.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; color: rgb(115, 135, 156); font-family: &quot;Helvetica Neue&quot;, Roboto, Arial, &quot;Droid Sans&quot;, sans-serif; font-size: 13px; max-width: 100%; height: auto; border-radius: 6px;\">&nbsp;&nbsp;<br></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">3.添加破解补丁位置，打开后，我们在最后一行添加如下配置：</p><p style=\"margin-top: 0px; margin-bottom: 16px;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200106100631769.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; color: rgb(115, 135, 156); font-family: &quot;Helvetica Neue&quot;, Roboto, Arial, &quot;Droid Sans&quot;, sans-serif; font-size: 13px; max-width: 100%; height: auto; border-radius: 6px;\">&nbsp;&nbsp;<br></p><pre style=\"font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 16px; margin-top: 0px; margin-bottom: 16px; line-height: 1.45; overflow-wrap: normal; background-color: rgb(246, 248, 250); border-radius: 3px;\"><code style=\"font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0px; background: 0px 0px transparent; white-space: pre; margin-right: 0px; margin-left: 0px; word-break: normal; border: 0px; display: inline; overflow: visible; line-height: inherit; overflow-wrap: normal;\">-javaagent:D:\\jetbrains-agent.jar\n</code></pre><p style=\"margin-top: 0px; margin-bottom: 16px;\"><span style=\"font-weight: 600;\">注意：D:\\jetbrains-agent.jar 是我存放破解补丁的位置，你可以自定义成自己存放的位置，注意目录中不要带有中文。</span></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">4.打开激活框，移除之前的 License （非常重要）</p><p style=\"margin-top: 0px; margin-bottom: 16px;\">若你的 IDEA 已经使用了老的 License, 注意移除，否则会导致激活不成功。</p><p style=\"margin-top: 0px; margin-bottom: 16px;\">&nbsp;&nbsp;<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200106100817102.png\" alt=\"\" style=\"box-shadow: rgb(51, 51, 51) 0px 0px 5px; color: rgb(115, 135, 156); font-family: &quot;Helvetica Neue&quot;, Roboto, Arial, &quot;Droid Sans&quot;, sans-serif; font-size: 13px; max-width: 100%; height: auto; border-radius: 6px;\"><br></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">如没有 Remove License 按钮，则不需要关心，直接看下一步。</p><p style=\"margin-top: 0px; margin-bottom: 16px;\">5.引入破解补丁以后，重启 IDEA。</p><p style=\"margin-top: 0px; margin-bottom: 16px;\"><span style=\"font-weight: 600;\">重启一下！</span></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">6.填入激活码激活</p><p style=\"margin-top: 0px; margin-bottom: 16px;\"><span style=\"font-weight: 600;\">注意此激活码是配合此补丁使用的！</span></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">激活码如下：</p><pre style=\"font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 16px; margin-top: 0px; margin-bottom: 16px; line-height: 1.45; overflow-wrap: normal; background-color: rgb(246, 248, 250); border-radius: 3px;\"><code style=\"font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0px; background: 0px 0px transparent; white-space: pre; margin-right: 0px; margin-left: 0px; word-break: normal; border: 0px; display: inline; overflow: visible; line-height: inherit; overflow-wrap: normal;\">3AGXEJXFK9-eyJsaWNlbnNlSWQiOiIzQUdYRUpYRks5IiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly96aGlsZS5pbyIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwODktMDctMDciLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDg5LTA3LTA3IiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjA4OS0wNy0wNyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9XSwiaGFzaCI6IjEyNzk2ODc3LzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-WGTHs6XpDhr+uumvbwQPOdlxWnQwgnGaL4eRnlpGKApEEkJyYvNEuPWBSrQkPmVpim/8Sab6HV04Dw3IzkJT0yTc29sPEXBf69+7y6Jv718FaJu4MWfsAk/ZGtNIUOczUQ0iGKKnSSsfQ/3UoMv0q/yJcfvj+me5Zd/gfaisCCMUaGjB/lWIPpEPzblDtVJbRexB1MALrLCEoDv3ujcPAZ7xWb54DiZwjYhQvQ+CvpNNF2jeTku7lbm5v+BoDsdeRq7YBt9ANLUKPr2DahcaZ4gctpHZXhG96IyKx232jYq9jQrFDbQMtVr3E+GsCekMEWSD//dLT+HuZdc1sAIYrw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5ndaik1GD0nyTdqkZgURQZGW+RGxCdBITPXIwpjhhaD0SXGa4XSZBEBoiPdY6XV6pOfUJeyfi9dXsY4MmT0D+sKoST3rSw96xaf9FXPvOjn4prMTdj3Ji3CyQrGWeQU2nzYqFrp1QYNLAbaViHRKuJrYHI6GCvqCbJe0LQ8qqUiVMA9wG/PQwScpNmTF9Kp2Iej+Z5OUxF33zzm+vg/nYV31HLF7fJUAplI/1nM+ZG8K+AXWgYKChtknl3sW9PCQa3a3imPL9GVToUNxc0wcuTil8mqveWcSQCHYxsIaUajWLpFzoO2AhK4mfYBSStAqEjoXRTuj17mo8Q6M2SHOcwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQBonMu8oa3vmNAa4RQP8gPGlX3SQaA3WCRUAj6Zrlk8AesKV1YSkh5D2l+yUk6njysgzfr1bIR5xF8eup5xXc4/G7NtVYRSMvrd6rfQcHOyK5UFJLm+8utmyMIDrZOzLQuTsT8NxFpbCVCfV5wNRu4rChrCuArYVGaKbmp9ymkw1PU6+HoO5i2wU3ikTmRv8IRjrlSStyNzXpnPTwt7bja19ousk56r40SmlmC04GdDHErr0ei2UbjUua5kw71Qn9g02tL9fERI2sSRjQrvPbn9INwRWl5+k05mlKekbtbu2ev2woJFZK4WEXAd/GaAdeZZdumv8T2idDFL7cAirJwcrbfpawPeXr52oKTPnXfi0l5+g9Gnt/wfiXCrPElX6ycTR6iL3GC2VR4jTz6YatT4Ntz59/THOT7NJQhr6AyLkhhJCdkzE2cob/KouVp4ivV7Q3Fc6HX7eepHAAF/DpxwgOrg9smX6coXLgfp0b1RU2u/tUNID04rpNxTMueTtrT8WSskqvaJd3RH8r7cnRj6Y2hltkja82HlpDURDxDTRvv+krbwMr26SB/40BjpMUrDRCeKuiBahC0DCoU/4+ze1l94wVUhdkCfL0GpJrMSCDEK+XEurU18Hb7WT+ThXbkdl6VpFdHsRvqAnhR2g4b+Qzgidmuky5NUZVfEaZqV/g==\n</code></pre><p style=\"margin-top: 0px; margin-bottom: 16px;\">补丁下载地址如下：</p><p style=\"margin-top: 0px; margin-bottom: 16px;\">链接:<a href=\"https://pan.baidu.com/s/1ubtv7e2eRr8IYGV37N_Rxw\" style=\"color: rgb(3, 102, 214);\">https://pan.baidu.com/s/1ubtv7e2eRr8IYGV37N_Rxw</a></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">密码:2clc</p><p style=\"margin-top: 0px; margin-bottom: 16px;\"><span style=\"font-weight: 600;\">注意：激活码和补丁是配套使用！</span></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">如果补丁链接失效或其他问题，可加群交流！</p><p style=\"margin-top: 0px; margin-bottom: 0px !important;\">点击群号加入：<a href=\"https://jq.qq.com/?_wv=1027&amp;k=5QRVt4q\" style=\"color: rgb(3, 102, 214);\">150134730</a></p></div>',NULL,1,3,1,1,0,'IntelliJ IDEA 2019免费永久激活','IntelliJ IDEA',1,'2020-01-06 09:49:56','2020-05-14 16:18:31'),(65,'植护抽纸餐巾纸面纸卫生纸面巾纸婴儿纸抽家用实惠装整箱纸巾10包',1,'https://img.alicdn.com/tfscom/i2/2219509495/O1CN01W9RCcR2K0lEPaA8cq_!!0-item_pic.jpg',NULL,0,'<p><img src=\"https://img.alicdn.com/tfscom/i2/2219509495/O1CN01W9RCcR2K0lEPaA8cq_!!0-item_pic.jpg\" alt=\"\" style=\"box-sizing: inherit; border-style: none; height: auto; max-width: 100%; color: rgb(51, 51, 51); font-family: Helvetica, Arial, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);\"><br mxs=\"pub-threeaU:c\" style=\"box-sizing: inherit; color: rgb(51, 51, 51); font-family: Helvetica, Arial, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);\"></p><pre style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; font-size: 12px; background-color: rgb(238, 238, 238);\">【爆款推荐】植护抽纸餐巾纸面纸卫生纸面巾纸婴儿纸抽家用实惠装整箱纸巾10包 \n30天销量达382605件 \n原价50.00元，优惠价9.90元,还有(满5元减1元)的优惠卷可以领取哟！！！\n-----------------\n<p style=\"margin-top: 0px; margin-bottom: 16px;\">【立即领券】点击链接即可领券购买:<a href=\"https://uland.taobao.com/coupon/edetail?e=0DL1xvuh38AGQASttHIRqRMTWNREaNdXfVE667wDSNBsbDypwlM7%2BuP%2F2LgRY%2BTA3xOKWHGWOPDlms6Kb4VmxcFYzqTBNkSbSlO07y%2F8s%2BD9v0Q4llo3NEuGqVmHaaoc0QI6VQ%2Fe3243djWqqJtHtA%3D%3D&union_lens=lensId:MAPI@1584057055@0b1b1f91_0e70_170d12878fc_c5ab@01\" target=\"_blank\" style=\"color: rgb(3, 102, 214);\">https://uland.taobao.com/coupon/edetail?e=0DL1xvuh38AGQASttHIRqRMTWNREaNdXfVE667wDSNBsbDypwlM7%2BuP%2F2LgRY%2BTA3xOKWHGWOPDlms6Kb4VmxcFYzqTBNkSbSlO07y%2F8s%2BD9v0Q4llo3NEuGqVmHaaoc0QI6VQ%2Fe3243djWqqJtHtA%3D%3D&union_lens=lensId:MAPI@1584057055@0b1b1f91_0e70_170d12878fc_c5ab@01</a></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">【立即下单】点击链接立即下单：<a href=\"https://s.click.taobao.com/t?e=m%3D2%26s%3DPp7NBA1eR%2FQcQipKwQzePOeEDrYVVa64yK8Cckff7TXjf2vlNIV67nzNA4b6nZzmkJM98MoZX0h%2FyvB%2BA4PSwSBDadFB5aTIZuEXiCqJA1IMhc0fp11%2Fp98olD%2BfudSjIWLb4DzFlEky%2FWAyBlZKMGKvbjQRAIhABH7Dg2qfleefR2A6Aaq8d6Wba9OexKrQ2IpUCJmyCYGVFWmzyI9vAbjx93RMaItuonzVGWj%2FolPeKa3btEPgpw%3D%3D&unid=1584057055190&union_lens=lensId:MAPI@1584057055@0b1b1f91_0e70_170d12878fc_c5ab@01\" target=\"_blank\" style=\"color: rgb(3, 102, 214);\">https://s.click.taobao.com/t?e=m%3D2%26s%3DPp7NBA1eR%2FQcQipKwQzePOeEDrYVVa64yK8Cckff7TXjf2vlNIV67nzNA4b6nZzmkJM98MoZX0h%2FyvB%2BA4PSwSBDadFB5aTIZuEXiCqJA1IMhc0fp11%2Fp98olD%2BfudSjIWLb4DzFlEky%2FWAyBlZKMGKvbjQRAIhABH7Dg2qfleefR2A6Aaq8d6Wba9OexKrQ2IpUCJmyCYGVFWmzyI9vAbjx93RMaItuonzVGWj%2FolPeKa3btEPgpw%3D%3D&unid=1584057055190&union_lens=lensId:MAPI@1584057055@0b1b1f91_0e70_170d12878fc_c5ab@01</a></p></pre>',NULL,0,6,1,0,1,'植护抽纸餐巾纸面纸卫生纸面巾纸婴儿纸抽家用实惠装整箱纸巾10包','植护抽纸餐巾纸面纸卫生纸面巾纸婴儿纸抽家用实惠装整箱纸巾10包',1,'2020-03-13 07:50:56','2020-03-13 07:50:56'),(72,'张记垃圾袋家用加厚一次性批发黑色背心手提式拉圾塑料袋中号大号',1,'https://img.alicdn.com/tfscom/i4/4217952040/O1CN01N1X5011QwMUdtYc9F_!!0-item_pic.jpg',NULL,0,'<p><img src=\"https://img.alicdn.com/tfscom/i4/4217952040/O1CN01N1X5011QwMUdtYc9F_!!0-item_pic.jpg\" alt=\"\" style=\"box-sizing: inherit; border-style: none; height: auto; max-width: 100%; color: rgb(51, 51, 51); font-family: Helvetica, Arial, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);\"><br mxs=\"pub-threeaU:c\" style=\"box-sizing: inherit; color: rgb(51, 51, 51); font-family: Helvetica, Arial, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);\"></p><pre style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; font-size: 12px; background-color: rgb(238, 238, 238);\">【爆款推荐】张记垃圾袋家用加厚一次性批发黑色背心手提式拉圾塑料袋中号大号 \n30天销量达381529件 \n原价12.90元，优惠价5.80元,还有(满5元减2元)的优惠卷可以领取哟！！！\n-----------------\n<p style=\"margin-top: 0px; margin-bottom: 16px;\">【立即领券】点击链接即可领券购买:<a href=\"https://uland.taobao.com/coupon/edetail?e=wKy7NdeBDJgGQASttHIRqbXYBqw1sWnQYs7FC%2F530ZJsbDypwlM7%2BuP%2F2LgRY%2BTA3xOKWHGWOPDlms6Kb4VmxcFYzqTBNkSbSlO07y%2F8s%2BD9v0Q4llo3NEuGqVmHaaoc0QI6VQ%2Fe3243djWqqJtHtA%3D%3D&union_lens=lensId:MAPI@1584092226@0b013eab_0eba_170d3412455_82ba@01\" target=\"_blank\" style=\"color: rgb(3, 102, 214);\">https://uland.taobao.com/coupon/edetail?e=wKy7NdeBDJgGQASttHIRqbXYBqw1sWnQYs7FC%2F530ZJsbDypwlM7%2BuP%2F2LgRY%2BTA3xOKWHGWOPDlms6Kb4VmxcFYzqTBNkSbSlO07y%2F8s%2BD9v0Q4llo3NEuGqVmHaaoc0QI6VQ%2Fe3243djWqqJtHtA%3D%3D&union_lens=lensId:MAPI@1584092226@0b013eab_0eba_170d3412455_82ba@01</a></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">【立即下单】点击链接立即下单：<a href=\"https://s.click.taobao.com/t?e=m%3D2%26s%3DW7L%2B5fZ6oaUcQipKwQzePOeEDrYVVa64yK8Cckff7TXjf2vlNIV67ksG8cwNr%2Fqw5ZnjZiNpIZZ%2FyvB%2BA4PSwSBDadFB5aTIZuEXiCqJA1IMhc0fp11%2Fp98olD%2BfudSjIWLb4DzFlEky%2FWAyBlZKMGKvbjQRAIhABH7Dg2qfleefR2A6Aaq8dy2IxOwrUxB09430Xp8Em87V6HbvJNsgpRT4J25kULLeonzVGWj%2FolPeKa3btEPgpw%3D%3D&unid=1584092226275&union_lens=lensId:MAPI@1584092226@0b013eab_0eba_170d3412455_82ba@01\" target=\"_blank\" style=\"color: rgb(3, 102, 214);\">https://s.click.taobao.com/t?e=m%3D2%26s%3DW7L%2B5fZ6oaUcQipKwQzePOeEDrYVVa64yK8Cckff7TXjf2vlNIV67ksG8cwNr%2Fqw5ZnjZiNpIZZ%2FyvB%2BA4PSwSBDadFB5aTIZuEXiCqJA1IMhc0fp11%2Fp98olD%2BfudSjIWLb4DzFlEky%2FWAyBlZKMGKvbjQRAIhABH7Dg2qfleefR2A6Aaq8dy2IxOwrUxB09430Xp8Em87V6HbvJNsgpRT4J25kULLeonzVGWj%2FolPeKa3btEPgpw%3D%3D&unid=1584092226275&union_lens=lensId:MAPI@1584092226@0b013eab_0eba_170d3412455_82ba@01</a></p></pre>',NULL,0,6,1,0,1,'张记垃圾袋家用加厚一次性批发黑色背心手提式拉圾塑料袋中号大号','张记垃圾袋家用加厚一次性批发黑色背心手提式拉圾塑料袋中号大号',1,'2020-03-13 17:37:08','2020-03-13 17:37:08'),(88,'欧莱雅爽肤水凝露保湿补水控油乳液男士面霜护肤品官方旗舰店正品',1,'https://img.alicdn.com/tfscom/i3/459850148/O1CN01FsAAuJ1CxpCoZb046_!!0-item_pic.jpg',NULL,0,'<p><img src=\"https://img.alicdn.com/tfscom/i3/459850148/O1CN01FsAAuJ1CxpCoZb046_!!0-item_pic.jpg\" alt=\"\" style=\"box-sizing: inherit; border-style: none; height: auto; max-width: 100%; color: rgb(51, 51, 51); font-family: Helvetica, Arial, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);\"><br mxs=\"pub-threeaU:c\" style=\"box-sizing: inherit; color: rgb(51, 51, 51); font-family: Helvetica, Arial, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);\"></p><pre style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; font-size: 12px; background-color: rgb(238, 238, 238);\">【爆款推荐】欧莱雅爽肤水凝露保湿补水控油乳液男士面霜护肤品官方旗舰店正品 \n30天销量达596件 \n原价160.00元，优惠价119.00元,还有(满87元减10元)的优惠卷可以领取哟！！！\n-----------------\n<p style=\"margin-top: 0px; margin-bottom: 16px;\">【立即领券】点击链接即可领券购买:<a href=\"https://uland.taobao.com/coupon/edetail?e=TF6mGECA%2FbwGQASttHIRqfGGMq1Kfa95UXVdGnJT32FsbDypwlM7%2BuP%2F2LgRY%2BTA3xOKWHGWOPDlms6Kb4VmxcFYzqTBNkSbSlO07y%2F8s%2BD9v0Q4llo3NEuGqVmHaaoc0QI6VQ%2Fe3243djWqqJtHtA%3D%3D&union_lens=lensId:MAPI@1584150112@0b0f88f9_0e6a_170d6b46ae3_b2ee@01\" target=\"_blank\" style=\"color: rgb(3, 102, 214);\">https://uland.taobao.com/coupon/edetail?e=TF6mGECA%2FbwGQASttHIRqfGGMq1Kfa95UXVdGnJT32FsbDypwlM7%2BuP%2F2LgRY%2BTA3xOKWHGWOPDlms6Kb4VmxcFYzqTBNkSbSlO07y%2F8s%2BD9v0Q4llo3NEuGqVmHaaoc0QI6VQ%2Fe3243djWqqJtHtA%3D%3D&union_lens=lensId:MAPI@1584150112@0b0f88f9_0e6a_170d6b46ae3_b2ee@01</a></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">【立即下单】点击链接立即下单：<a href=\"https://s.click.taobao.com/t?e=m%3D2%26s%3DcFZ7lqm8KdMcQipKwQzePOeEDrYVVa64yK8Cckff7TXjf2vlNIV67hT1W9zj22tc6EFRCN7EKmx%2FyvB%2BA4PSwSBDadFB5aTIZuEXiCqJA1IMhc0fp11%2Fp98olD%2BfudSjIWLb4DzFlEky%2FWAyBlZKMGKvbjQRAIhABH7Dg2qfleefR2A6Aaq8d8BG%2B7FV4q6U08TC8rEy2O9y0At%2B3fYz0eUX3JGVmXUkzYx%2F9Bx2pM4%2B5QowgvHJPA%3D%3D&unid=1584150112645&union_lens=lensId:MAPI@1584150112@0b0f88f9_0e6a_170d6b46ae3_b2ee@01\" target=\"_blank\" style=\"color: rgb(3, 102, 214);\">https://s.click.taobao.com/t?e=m%3D2%26s%3DcFZ7lqm8KdMcQipKwQzePOeEDrYVVa64yK8Cckff7TXjf2vlNIV67hT1W9zj22tc6EFRCN7EKmx%2FyvB%2BA4PSwSBDadFB5aTIZuEXiCqJA1IMhc0fp11%2Fp98olD%2BfudSjIWLb4DzFlEky%2FWAyBlZKMGKvbjQRAIhABH7Dg2qfleefR2A6Aaq8d8BG%2B7FV4q6U08TC8rEy2O9y0At%2B3fYz0eUX3JGVmXUkzYx%2F9Bx2pM4%2B5QowgvHJPA%3D%3D&unid=1584150112645&union_lens=lensId:MAPI@1584150112@0b0f88f9_0e6a_170d6b46ae3_b2ee@01</a></p></pre>',NULL,0,6,1,0,1,'欧莱雅爽肤水凝露保湿补水控油乳液男士面霜护肤品官方旗舰店正品','欧莱雅爽肤水凝露保湿补水控油乳液男士面霜护肤品官方旗舰店正品',1,'2020-03-14 09:41:53','2020-03-14 09:41:53'),(89,'高并发下接口幂等性解决方案',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2>一、背景&nbsp;</h2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们实际系统中有很多操作，是不管做多少次，都应该产生一样的效果或返回一样的结果。&nbsp;例如1. 前端重复提交选中的数据，应该后台只产生对应这个数据的一个反应结果；2. 我们发起一笔付款请求，应该只扣用户账户一次钱，当遇到网络重发或系统bug重发，也应该只扣一次钱；3. 发送消息，也应该只发一次，同样的短信发给用户，用户会哭的；4. 创建业务订单，一次业务请求只能创建一个，创建多个就会出大问题等等很多重要的情况都需要幂等的特性来支持。&nbsp;\n<br>\n<h2>二、幂等性概念&nbsp;</h2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;幂等（idempotent、idempotence）是一个数学与计算机学概念，常见于抽象代数中。&nbsp;在编程中.一个幂等操作的特点是其任意多次执行所产生的影响均与一次执行的影响相同。幂等函数，或幂等方法，是指可以使用相同参数重复执行，并能获得相同结果的函数。这些函数不会影响系统状态，也不用担心重复执行会对系统造成改变。例如，“getUsername()和setTrue()”函数就是一个幂等函数.&nbsp;更复杂的操作幂等保证是利用唯一交易号(流水号)实现.&nbsp;我的理解：幂等就是一个操作，不论执行多少次，产生的效果和返回的结果都是一样的&nbsp;\n<br>\n<h2>三、技术方案&nbsp;</h2>\n<ol>\n <li>查询操作：查询一次和查询多次，在数据不变的情况下，查询结果是一样的。select是天然的幂等操作；</li>\n <li>删除操作：删除操作也是幂等的，删除一次和多次删除都是把数据删除。(注意可能返回结果不一样，删除的数据不存在，返回0，删除的数据多条，返回结果多个) ；</li>\n <li>唯一索引，防止新增脏数据。比如：支付宝的资金账户，支付宝也有用户账户，每个用户只能有一个资金账户，怎么防止给用户创建资金账户多个，那么给资金账户表中的用户ID加唯一索引，所以一个用户新增成功一个资金账户记录。要点：唯一索引或唯一组合索引来防止新增数据存在脏数据（当表存在唯一索引，并发时新增报错时，再查询一次就可以了，数据应该已经存在了，返回结果即可）；</li>\n <li>token机制，防止页面重复提交。业务要求：&nbsp;页面的数据只能被点击提交一次；发生原因：&nbsp;由于重复点击或者网络重发，或者nginx重发等情况会导致数据被重复提交；解决办法：&nbsp;集群环境采用token加redis(redis单线程的，处理需要排队)；单JVM环境：采用token加redis或token加jvm内存。处理流程：1. 数据提交前要向服务的申请token，token放到redis或jvm内存，token有效时间；2. 提交后后台校验token，同时删除token，生成新的token返回。token特点：要申请，一次有效性，可以限流。注意：redis要用删除操作来判断token，删除成功代表token校验通过，如果用select+delete来校验token，存在并发问题，不建议使用；</li>\n <li>悲观锁——获取数据的时候加锁获取。select * from table_xxx where id=\'xxx\' for update; 注意：id字段一定是主键或者唯一索引，不然是锁表，会死人的悲观锁使用时一般伴随事务一起使用，数据锁定时间可能会很长，根据实际情况选用；&nbsp;</li>\n <li>乐观锁——乐观锁只是在更新数据那一刻锁表，其他时间不锁表，所以相对于悲观锁，效率更高。乐观锁的实现方式多种多样可以通过version或者其他状态条件：1. 通过版本号实现update table_xxx set name=#name#,version=version+1 where version=#version#如下图(来自网上)；2. 通过条件限制 update table_xxx set avai_amount=avai_amount-#subAmount# where avai_amount-#subAmount# &gt;= 0要求：quality-#subQuality# &gt;= ，这个情景适合不用版本号，只更新是做数据安全校验，适合库存模型，扣份额和回滚份额，性能更高；</li>\n</ol>\n<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200409193008207.png\" title=\"\" alt=\"\">\n<br>\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：乐观锁的更新操作，最好用主键或者唯一索引来更新,这样是行锁，否则更新时会锁表，上面两个sql改成下面的两个更好&nbsp;\n<br>\n<pre><code class=\"language-sql\">update table_xxx set name=#name#,version=version+1 where id=#id# and version=#version#；\nupdate table_xxx set avai_amount=avai_amount-#subAmount# where id=#id# and avai_amount-#subAmount# &gt;= 0；</code></pre>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;7.分布式锁——还是拿插入数据的例子，如果是分布是系统，构建全局唯一索引比较困难，例如唯一性的字段没法确定，这时候可以引入分布式锁，通过第三方的系统(redis或zookeeper)，在业务系统插入数据或者更新数据，获取分布式锁，然后做操作，之后释放锁，这样其实是把多线程并发的锁的思路，引入多多个系统，也就是分布式系统中得解决思路。要点：某个长流程处理过程要求不能并发执行，可以在流程执行之前根据某个标志(用户ID+后缀等)获取分布式锁，其他流程执行时获取锁就会失败，也就是同一时间该流程只能有一个能执行成功，执行完成后，释放分布式锁(分布式锁要第三方系统提供)；</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;8. select + insert——并发不高的后台系统，或者一些任务JOB，为了支持幂等，支持重复执行，简单的处理方法是，先查询下一些关键数据，判断是否已经执行过，在进行业务处理，就可以了。注意：核心高并发流程不要用这种方法；</p>&nbsp;&nbsp;&nbsp;&nbsp;9. 状态机幂等——在设计单据相关的业务，或者是任务相关的业务，肯定会涉及到状态机(状态变更图)，就是业务单据上面有个状态，状态在不同的情况下会发生变更，一般情况下存在有限状态机，这时候，如果状态机已经处于下一个状态，这时候来了一个上一个状态的变更，理论上是不能够变更的，这样的话，保证了有限状态机的幂等。注意：订单等单据类业务，存在很长的状态流转，一定要深刻理解状态机，对业务系统设计能力提高有很大帮助&nbsp;\n<br>&nbsp;&nbsp;&nbsp;&nbsp;10. 对外提供接口的api如何保证幂等。如银联提供的付款接口：需要接入商户提交付款请求时附带：source来源，seq序列号&nbsp;\n<br>source+seq在数据库里面做唯一索引，防止多次付款(并发时，只能处理一个请求) 。重点：对外提供接口为了支持幂等调用，接口有两个字段必须传，一个是来源source，一个是来源方序列号seq，这个两个字段在提供方系统里面做联合唯一索引，这样当第三方调用时，先在本方系统里面查询一下，是否已经处理过，返回相应处理结果；没有处理过，进行相应处理，返回结果。注意，为了幂等友好，一定要先查询一下，是否处理过该笔业务，不查询直接插入业务系统，会报错，但实际已经处理了。&nbsp;\n<br>\n<h2>四、总结</h2>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 幂等与你是不是分布式高并发还有JavaEE都没有关系。关键是你的操作是不是幂等的。一个幂等的操作典型如：把编号为5的记录的A字段设置为0这种操作不管执行多少次都是幂等的。一个非幂等的操作典型如：把编号为5的记录的A字段增加1这种操作显然就不是幂等的。要做到幂等性，从接口设计上来说不设计任何非幂等的操作即可。譬如说需求是：当用户点击赞同时，将答案的赞同数量+1。改为：当用户点击赞同时，确保答案赞同表中存在一条记录，用户、答案。赞同数量由答案赞同表统计出来。总之幂等性应该是合格程序员的一个基因，在设计系统时，是首要考虑的问题，尤其是在像支付宝，银行，互联网金融公司等涉及的都是钱的系统，既要高效，数据也要准确，所以不能出现多扣款，多打款等问题，这样会很难处理，用户体验也不好。&nbsp;',NULL,0,2,1,0,0,'幂等性','幂等性',1,'2020-04-09 19:30:09','2020-04-09 19:32:15'),(90,'过滤器、拦截器、监听器的区别详解',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2>一.定义</h2> \n<ul>\n <li>过滤器：Java过滤器能够对目标资源的请求和响应进行截取。依赖于servlet容器，在实现上基于函数回调，可以对几乎所有请求进行过滤，但是缺点是一个过滤器实例只能在容器初始化时调用一次。使用过滤器的目的是用来做一些过滤操作，获取我们想要获取的数据，比如：在过滤器中修改字符编码；在过滤器中修改HttpServletRequest的一些参数，包括：过滤低俗文字、危险字符等过滤器是一个程序，它先于与之相关的servlet或<a href=\"https://www.baidu.com/s?wd=JSP&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao\" rel=\"nofollow\">JSP</a>页面运行在服务器上。过滤器可附加到一个或多个servlet或JSP页面上，并且可以检查进入这些资源的请求信息。在这之后，过滤器可以作如下的选择：<br> ①以常规的方式调用资源（即，调用servlet或JSP页面）。<br> ②利用修改过的请求信息调用资源。<br> ③调用资源，但在发送响应到<a href=\"https://www.baidu.com/s?wd=%E5%AE%A2%E6%88%B7%E6%9C%BA&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao\" rel=\"nofollow\">客户机</a>前对其进行修改。<br> ④阻止该资源调用，代之以转到其他的资源，返回一个特定的状态代码或生成替换输出。</li> \n <li>拦截器：依赖于web框架，在SpringMVC中就是依赖于SpringMVC框架。在实现上基于<a href=\"http://www.07net01.com/tags-Java-0.html\" rel=\"nofollow\">Java</a>的反射机制，属于面向切面<a href=\"http://www.07net01.com/\" rel=\"nofollow\">编程</a>（AOP）的一种运用。由于拦截器是基于web框架的调用，因此可以使用Spring的依赖注入（DI）进行一些业务操作，同时一个拦截器实例在一个controller生命周期之内可以多次调用。但是缺点是只能对controller请求进行拦截，对其他的一些比如直接访问静态资源的请求则没办法进行拦截处理。在Webwork的中文文档的解释为——拦截器是动态拦截Action调用的对象。它提供了一种机制可以使开发者可以定义在一个action执行的前后执行的代码，也可以在一个action执行前阻止其执行。同时也是提供了一种可以提取action中可重用的部分的方式。谈到拦截器，还有一个词大家应该知道——拦截器链（Interceptor Chain，在Struts 2中称为拦截器栈 Interceptor Stack）。拦截器链就是将拦截器按一定的顺序联结成一条链。在访问被拦截的方法或字段时，拦截器链中的拦截器就会按其之前定义的顺序被调用。</li> \n <li>监听器：Java事件监听器是由事件类和监听接口组成，自定义一个事件前，必须提供一个事件的监听接口以及一个事件类。JAVA中监听接口是继承java.util.EventListener的类，事件类继承java.util.EventObject的类。Java事件监听器属性的新增、删除和修改划分成三种，分别针对于ServletContext、HttpSession、ServletRequest对象。&nbsp;监听器用于监听web应用中某些对象、信息的创建、销毁、增加，修改，删除等动作的发生，然后作出相应的响应处理。当范围对象的状态发生变化的时候，服务器自动调用监听器对象中的方法。常用于统计在线人数和在线用户，系统加载时进行信息初始化，统计网站的访问量等等。</li> \n</ul>\n<h2>二、区别和联系</h2> \n<ol>\n <li>拦截器是基于java的<a href=\"https://www.baidu.com/s?wd=%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao\" rel=\"nofollow\">反射机制</a>的，而<a href=\"https://www.baidu.com/s?wd=%E8%BF%87%E6%BB%A4%E5%99%A8&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao\" rel=\"nofollow\">过滤器</a>是基于<a href=\"https://www.baidu.com/s?wd=%E5%87%BD%E6%95%B0&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao\" rel=\"nofollow\">函数</a><a href=\"https://www.baidu.com/s?wd=%E5%9B%9E%E8%B0%83&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao\" rel=\"nofollow\">回调</a>。</li> \n <li>拦截器不依赖与servlet容器，<a href=\"https://www.baidu.com/s?wd=%E8%BF%87%E6%BB%A4%E5%99%A8&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao\" rel=\"nofollow\">过滤器</a>依赖与servlet容器。</li> \n <li>拦截器只能对action请求起作用，而<a href=\"https://www.baidu.com/s?wd=%E8%BF%87%E6%BB%A4%E5%99%A8&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao\" rel=\"nofollow\">过滤器</a>则可以对几乎所有的请求起作用。</li> \n <li>拦截器可以访问action<a href=\"https://www.baidu.com/s?wd=%E4%B8%8A%E4%B8%8B%E6%96%87&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao\" rel=\"nofollow\">上下文</a>、值栈里的对象，而过滤器不能访问。</li> \n <li>在action的生命周期中，拦截器可以多次被调用，而过滤器只能在容器<a href=\"https://www.baidu.com/s?wd=%E5%88%9D%E5%A7%8B%E5%8C%96&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao\" rel=\"nofollow\">初始化</a>时被调用一次。</li> \n <li>拦截器可以获取IOC容器中的各个bean，而过滤器不行，在拦截器里面注入一个service可以调用业务逻辑。</li> \n <li>过滤器是在请求进入容器后、请求进入servlet之前进行预处理的。请求结束返回也是在servlet处理完后返回给前端之前。</li> \n <li>SpringMVC的机制是由同一个Servlet来分发请求给不同的Controller，其实这一步是在Servlet的service()方法中执行的。</li> \n <li>拦截器是spring容器的，是spring支持的。SpringMVC加上过滤器、拦截器大致执行流程如下图：</li> \n</ol>\n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200409195727527.png\" title=\"\" alt=\"\"></p> \n<h2>三、总结</h2> \n<ul>\n <li>过滤器、拦截器、监听器的区别</li> \n</ul>\n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200409195716780.png\" title=\"\" alt=\"\"></p> \n<ul>\n <li>Tomcat中过滤器、servlet、拦截器、控制器示意图如下所示：过滤器包裹住servlet，servlet包裹住拦截器。</li> \n</ul>\n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200409195716205.png\" title=\"\" alt=\"\"></p> \n<ul>\n <li>拦截器过滤器进一步理解</li> \n</ul>\n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200409195724510.png\" title=\"\" alt=\"\"></p>',NULL,0,2,1,0,0,'一.定义过滤器：Java过滤器能够对目标资源的请求和响应进行截取。依赖于servlet容器，在实现上Java','过滤器、拦截器、监听器',1,'2020-04-09 19:57:29','2020-04-09 20:07:43'),(91,'阿迪达斯官网旗舰男短袖夏季圆领针织透气跑步训练运动T恤DT9929',1,'https://img.alicdn.com/i1/604339413/O1CN01nfmaya2JPClN9kZQg_!!0-item_pic.jpg',NULL,0,'<p><img src=\"https://img.alicdn.com/i1/604339413/O1CN01nfmaya2JPClN9kZQg_!!0-item_pic.jpg\" alt=\"\" style=\"box-sizing: inherit; border-style: none; height: auto; max-width: 100%; color: rgb(51, 51, 51); font-family: Helvetica, Arial, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);\"><br mxs=\"pub-threeaU:c\" style=\"box-sizing: inherit; color: rgb(51, 51, 51); font-family: Helvetica, Arial, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);\"></p><pre style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; font-size: 12px; background-color: rgb(238, 238, 238);\">【爆款推荐】阿迪达斯官网旗舰男短袖夏季圆领针织透气跑步训练运动T恤DT9929 \n30天销量达123件 \n原价79元，优惠价79元\n-----------------\n<p style=\"margin-top: 0px; margin-bottom: 16px;\">【立即领券】点击链接即可领券购买:<a href=\"\" target=\"_blank\" style=\"color: rgb(3, 102, 214);\">无</a></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">【立即下单】点击链接立即下单：<a href=\"https://s.click.taobao.com/t?e=m%3D2%26s%3DlRnk2xqq09Rw4vFB6t2Z2ueEDrYVVa64Dne87AjQPk9yINtkUhsv0PhPqrX2ympsRqCvFBlum9xB33PKYVwqrgMrPznK1xj8WjK66FaTGlXK6NxocWWahOJc1PMjPQywFBoMXOGuG5DkaqczTKGnOjMGbPnA1U4Tb%2FxDxP0M8s952WohAsATFtRfnLcUussPxg5p7bh%2BFbQ%3D&union_lens=lensId%3AOPT%401587036722%400b847696_0eae_17182c296dd_690f%4001\" target=\"_blank\" style=\"color: rgb(3, 102, 214);\">https://s.click.taobao.com/t?e=m%3D2%26s%3DlRnk2xqq09Rw4vFB6t2Z2ueEDrYVVa64Dne87AjQPk9yINtkUhsv0PhPqrX2ympsRqCvFBlum9xB33PKYVwqrgMrPznK1xj8WjK66FaTGlXK6NxocWWahOJc1PMjPQywFBoMXOGuG5DkaqczTKGnOjMGbPnA1U4Tb%2FxDxP0M8s952WohAsATFtRfnLcUussPxg5p7bh%2BFbQ%3D&union_lens=lensId%3AOPT%401587036722%400b847696_0eae_17182c296dd_690f%4001</a></p></pre>',NULL,0,6,1,0,1,'阿迪达斯官网旗舰男短袖夏季圆领针织透气跑步训练运动T恤DT9929','阿迪达斯官网旗舰男短袖夏季圆领针织透气跑步训练运动T恤DT9929',1,'2020-04-16 19:32:03','2020-04-16 19:32:03'),(93,'莫代尔男士短袖t恤2020新款潮流夏装潮牌上衣服印花圆领冰丝半袖',1,'https://img.alicdn.com/i2/2201471466133/O1CN01IVOQ0W1vAxf8upl9Y_!!2201471466133.jpg',NULL,0,'<p><img src=\"https://img.alicdn.com/i2/2201471466133/O1CN01IVOQ0W1vAxf8upl9Y_!!2201471466133.jpg\" alt=\"\" style=\"box-sizing: inherit; border-style: none; height: auto; max-width: 100%; color: rgb(51, 51, 51); font-family: Helvetica, Arial, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);\"><br mxs=\"pub-threeaU:c\" style=\"box-sizing: inherit; color: rgb(51, 51, 51); font-family: Helvetica, Arial, &quot;Microsoft Yahei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 12px; background-color: rgb(238, 238, 238);\"></p><pre style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; font-size: 12px; background-color: rgb(238, 238, 238);\">【爆款推荐】莫代尔男士短袖t恤2020新款潮流夏装潮牌上衣服印花圆领冰丝半袖 \n30天销量达0件 \n原价404元，优惠价404元,还有(满301元减300元)的优惠卷可以领取哟！！！\n-----------------\n<p style=\"margin-top: 0px; margin-bottom: 16px;\">【立即领券】点击链接即可领券购买:<a href=\"https://uland.taobao.com/coupon/edetail?e=j1PHsOhBySoNfLV8niU3R5TgU2jJNKOfNNtsjZw%2F%2FoIDmm9w4Z1P571zujmw%2FmrPAJGDZTMOVwNj2sEmFnb0wKwbAntFj%2BXYEHpTAWQ%2BSRFp4exEq6u%2FYa9RLP2tWfR8PINW%2F7WW9YxsbDypwlM7%2BuP%2F2LgRY%2BTA3xOKWHGWOPDlms6Kb4VmxT%2FqFH2fG%2FKuJTNWSR3CwiY%3D&&app_pvid=59590_11.132.118.99_1112_1587038621802&ptl=floorId:31539;app_pvid:59590_11.132.118.99_1112_1587038621802;tpp_pvid:&union_lens=lensId%3AOPT%401587038621%400b847663_0fc0_17182df907b_3035%4001\" target=\"_blank\" style=\"color: rgb(3, 102, 214);\">https://uland.taobao.com/coupon/edetail?e=j1PHsOhBySoNfLV8niU3R5TgU2jJNKOfNNtsjZw%2F%2FoIDmm9w4Z1P571zujmw%2FmrPAJGDZTMOVwNj2sEmFnb0wKwbAntFj%2BXYEHpTAWQ%2BSRFp4exEq6u%2FYa9RLP2tWfR8PINW%2F7WW9YxsbDypwlM7%2BuP%2F2LgRY%2BTA3xOKWHGWOPDlms6Kb4VmxT%2FqFH2fG%2FKuJTNWSR3CwiY%3D&&app_pvid=59590_11.132.118.99_1112_1587038621802&ptl=floorId:31539;app_pvid:59590_11.132.118.99_1112_1587038621802;tpp_pvid:&union_lens=lensId%3AOPT%401587038621%400b847663_0fc0_17182df907b_3035%4001</a></p><p style=\"margin-top: 0px; margin-bottom: 16px;\">【立即下单】点击链接立即下单：<a href=\"https://s.click.taobao.com/t?e=m%3D2%26s%3Dk5QTxVxWN6hw4vFB6t2Z2ueEDrYVVa64juWlisr3dOdyINtkUhsv0CFVpUkkoKpJaL1nZhCeLd9B33PKYVwqrgMrPznK1xj8WjK66FaTGlXK6NxocWWahOJc1PMjPQywFBoMXOGuG5DkaqczTKGnOtFr8HuEeTTTsVOS59UuH3AqMlLe3qEPwD8GqXXekQaDxiXvDf8DaRs%3D&union_lens=lensId%3AOPT%401587038621%400b847663_0fc0_17182df907b_3035%4001\" target=\"_blank\" style=\"color: rgb(3, 102, 214);\">https://s.click.taobao.com/t?e=m%3D2%26s%3Dk5QTxVxWN6hw4vFB6t2Z2ueEDrYVVa64juWlisr3dOdyINtkUhsv0CFVpUkkoKpJaL1nZhCeLd9B33PKYVwqrgMrPznK1xj8WjK66FaTGlXK6NxocWWahOJc1PMjPQywFBoMXOGuG5DkaqczTKGnOtFr8HuEeTTTsVOS59UuH3AqMlLe3qEPwD8GqXXekQaDxiXvDf8DaRs%3D&union_lens=lensId%3AOPT%401587038621%400b847663_0fc0_17182df907b_3035%4001</a></p></pre>',NULL,0,6,1,0,1,'莫代尔男士短袖t恤2020新款潮流夏装潮牌上衣服印花圆领冰丝半袖','莫代尔男士短袖t恤2020新款潮流夏装潮牌上衣服印花圆领冰丝半袖',1,'2020-04-16 20:03:42','2020-04-16 20:03:42'),(94,'Kafka学习之路 （一）Kafka的简介',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200513164735490.png\" title=\"\" alt=\"\"></p> \n<h2>一、简介</h2> \n<h3>1.1　概述</h3> \n<p>Kafka是最初由Linkedin公司开发，是一个分布式、分区的、多副本的、多订阅者，基于zookeeper协调的分布式日志系统（也可以当做MQ系统），常见可以用于web/nginx日志、访问日志，消息服务等等，Linkedin于2010年贡献给了Apache基金会并成为顶级开源项目。</p> \n<p>主要应用场景是：日志收集系统和消息系统。</p> \n<p>Kafka主要设计目标如下：</p> \n<ul> \n <li>以时间复杂度为O(1)的方式提供消息持久化能力，即使对TB级以上数据也能保证常数时间的访问性能。</li> \n <li>高吞吐率。即使在非常廉价的商用机器上也能做到单机支持每秒100K条消息的传输。</li> \n <li>支持Kafka Server间的消息分区，及分布式消费，同时保证每个partition内的消息顺序传输。</li> \n <li>同时支持离线数据处理和实时数据处理。</li> \n <li>Scale out:支持在线水平扩展</li> \n</ul> \n<h3>1.2　消息系统介绍</h3> \n<p>一个消息系统负责将数据从一个应用传递到另外一个应用，应用只需关注于数据，无需关注数据在两个或多个应用间是如何传递的。分布式消息传递基于可靠的消息队列，在客户端应用和消息系统之间异步传递消息。有两种主要的消息传递模式：<strong><span style=\"color: #ff0000;\">点对点传递模式、发布-订阅模式</span></strong>。大部分的消息系统选用发布-订阅模式。<strong><span style=\"color: #ff0000;\">Kafka就是一种发布-订阅模式</span></strong>。</p> \n<h3>1.3　点对点消息传递模式</h3> \n<p>在点对点消息系统中，消息持久化到一个队列中。此时，将有一个或多个消费者消费队列中的数据。但是一条消息只能被消费一次。当一个消费者消费了队列中的某条数据之后，该条数据则从消息队列中删除。该模式即使有多个消费者同时消费数据，也能保证数据处理的顺序。这种架构描述示意图如下：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200513164736384.png\" title=\"\" alt=\"\"></p> \n<p><strong><span style=\"color: #ff0000;\">生产者发送一条消息到queue，只有一个消费者能收到</span></strong>。</p> \n<h3>1.4　发布-订阅消息传递模式</h3> \n<p>在发布-订阅消息系统中，消息被持久化到一个topic中。与点对点消息系统不同的是，消费者可以订阅一个或多个topic，消费者可以消费该topic中所有的数据，同一条数据可以被多个消费者消费，数据被消费后不会立马删除。在发布-订阅消息系统中，消息的生产者称为发布者，消费者称为订阅者。该模式的示例图如下：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200513164733382.png\" title=\"\" alt=\"\"></p> \n<p><strong><span style=\"color: #ff0000;\">发布者发送到topic的消息，只有订阅了topic的订阅者才会收到消息</span></strong>。</p> \n<h2>二、Kafka的优点</h2> \n<h3>2.1　解耦</h3> \n<p>在项目启动之初来预测将来项目会碰到什么需求，是极其困难的。消息系统在处理过程中间插入了一个隐含的、基于数据的接口层，两边的处理过程都要实现这一接口。这允许你独立的扩展或修改两边的处理过程，只要确保它们遵守同样的接口约束。</p> \n<h3>2.2　冗余（副本）</h3> \n<p>有些情况下，处理数据的过程会失败。除非数据被持久化，否则将造成丢失。消息队列把数据进行持久化直到它们已经被完全处理，通过这一方式规避了数据丢失风险。许多消息队列所采用的\"插入-获取-删除\"范式中，在把一个消息从队列中删除之前，需要你的处理系统明确的指出该消息已经被处理完毕，从而确保你的数据被安全的保存直到你使用完毕。</p> \n<h3>2.3　扩展性</h3> \n<p>因为消息队列解耦了你的处理过程，所以增大消息入队和处理的频率是很容易的，只要另外增加处理过程即可。不需要改变代码、不需要调节参数。扩展就像调大电力按钮一样简单。</p> \n<h3>2.4　灵活性&amp;峰值处理能力</h3> \n<p>在访问量剧增的情况下，应用仍然需要继续发挥作用，但是这样的突发流量并不常见；如果为以能处理这类峰值访问为标准来投入资源随时待命无疑是巨大的浪费。使用消息队列能够使关键组件顶住突发的访问压力，而不会因为突发的超负荷的请求而完全崩溃。</p> \n<h3>2.5　可恢复性</h3> \n<p>系统的一部分组件失效时，不会影响到整个系统。消息队列降低了进程间的耦合度，所以即使一个处理消息的进程挂掉，加入队列中的消息仍然可以在系统恢复后被处理。</p> \n<h3>2.6　顺序保证</h3> \n<p>在大多使用场景下，数据处理的顺序都很重要。大部分消息队列本来就是排序的，并且能保证数据会按照特定的顺序来处理。Kafka保证一个Partition内的消息的有序性。</p> \n<h3>2.7　缓冲</h3> \n<p>在任何重要的系统中，都会有需要不同的处理时间的元素。例如，加载一张图片比应用过滤器花费更少的时间。消息队列通过一个缓冲层来帮助任务最高效率的执行———写入队列的处理会尽可能的快速。该缓冲有助于控制和优化数据流经过系统的速度。</p> \n<h3>2.8　异步通信</h3> \n<p>很多时候，用户不想也不需要立即处理消息。消息队列提供了异步处理机制，允许用户把一个消息放入队列，但并不立即处理它。想向队列中放入多少消息就放多少，然后在需要的时候再去处理它们。</p> \n<h2>三、常用Message Queue对比</h2> \n<h3>3.1　RabbitMQ</h3> \n<p>RabbitMQ是使用Erlang编写的一个开源的消息队列，本身支持很多的协议：AMQP，XMPP, SMTP, STOMP，也正因如此，它非常重量级，更适合于企业级的开发。同时实现了Broker构架，这意味着消息在发送给客户端时先在中心队列排队。对路由，负载均衡或者数据持久化都有很好的支持。</p> \n<h3>3.2　Redis</h3> \n<p>Redis是一个基于Key-Value对的NoSQL数据库，开发维护很活跃。虽然它是一个Key-Value数据库存储系统，但它本身支持MQ功能，所以完全可以当做一个轻量级的队列服务来使用。对于RabbitMQ和Redis的入队和出队操作，各执行100万次，每10万次记录一次执行时间。测试数据分为128Bytes、512Bytes、1K和10K四个不同大小的数据。实验表明：入队时，当数据比较小时Redis的性能要高于RabbitMQ，而如果数据大小超过了10K，Redis则慢的无法忍受；出队时，无论数据大小，Redis都表现出非常好的性能，而RabbitMQ的出队性能则远低于Redis。</p> \n<h3>3.3　ZeroMQ</h3> \n<p>ZeroMQ号称最快的消息队列系统，尤其针对大吞吐量的需求场景。ZeroMQ能够实现RabbitMQ不擅长的高级/复杂的队列，但是开发人员需要自己组合多种技术框架，技术上的复杂度是对这MQ能够应用成功的挑战。ZeroMQ具有一个独特的非中间件的模式，你不需要安装和运行一个消息服务器或中间件，因为你的应用程序将扮演这个服务器角色。你只需要简单的引用ZeroMQ程序库，可以使用NuGet安装，然后你就可以愉快的在应用程序之间发送消息了。但是ZeroMQ仅提供非持久性的队列，也就是说如果宕机，数据将会丢失。其中，Twitter的Storm 0.9.0以前的版本中默认使用ZeroMQ作为数据流的传输（Storm从0.9版本开始同时支持ZeroMQ和Netty作为传输模块）。</p> \n<h3>3.4　ActiveMQ</h3> \n<p>ActiveMQ是Apache下的一个子项目。 类似于ZeroMQ，它能够以代理人和点对点的技术实现队列。同时类似于RabbitMQ，它少量代码就可以高效地实现高级应用场景。</p> \n<h3>3.5　Kafka/Jafka</h3> \n<p>Kafka是Apache下的一个子项目，是一个高性能跨语言分布式发布/订阅消息队列系统，而Jafka是在Kafka之上孵化而来的，即Kafka的一个升级版。具有以下特性：快速持久化，可以在O(1)的系统开销下进行消息持久化；高吞吐，在一台普通的服务器上既可以达到10W/s的吞吐速率；完全的分布式系统，Broker、Producer、Consumer都原生自动支持分布式，自动实现负载均衡；支持Hadoop数据并行加载，对于像Hadoop的一样的日志数据和离线分析系统，但又要求实时处理的限制，这是一个可行的解决方案。Kafka通过Hadoop的并行加载机制统一了在线和离线的消息处理。Apache Kafka相对于ActiveMQ是一个非常轻量级的消息系统，除了性能非常好之外，还是一个工作良好的分布式系统。</p> \n<h2>四、Kafka中的术语解释</h2> \n<h3>4.1　概述</h3> \n<p>在深入理解Kafka之前，先介绍一下Kafka中的术语。下图展示了Kafka的相关术语以及之间的关系：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200513164738467.png\" title=\"\" alt=\"\"></p> \n<p>上图中一个topic配置了3个partition。Partition1有两个offset：0和1。Partition2有4个offset。Partition3有1个offset。副本的id和副本所在的机器的id恰好相同。</p> \n<p>如果一个topic的副本数为3，那么Kafka将在集群中为每个partition创建3个相同的副本。集群中的每个broker存储一个或多个partition。多个producer和consumer可同时生产和消费数据。</p> \n<h3>4.2　broker</h3> \n<p>Kafka 集群包含一个或多个服务器，服务器节点称为broker。</p> \n<p>broker存储topic的数据。如果某topic有N个partition，集群有N个broker，那么每个broker存储该topic的一个partition。</p> \n<p>如果某topic有N个partition，集群有(N+M)个broker，那么其中有N个broker存储该topic的一个partition，剩下的M个broker不存储该topic的partition数据。</p> \n<p>如果某topic有N个partition，集群中broker数目少于N个，那么一个broker存储该topic的一个或多个partition。在实际生产环境中，尽量避免这种情况的发生，这种情况容易导致Kafka集群数据不均衡。</p> \n<h3>4.3　Topic</h3> \n<p>每条发布到Kafka集群的消息都有一个类别，这个类别被称为Topic。（物理上不同Topic的消息分开存储，逻辑上一个Topic的消息虽然保存于一个或多个broker上但用户只需指定消息的Topic即可生产或消费数据而不必关心数据存于何处）</p> \n<p>类似于数据库的表名</p> \n<h3>4.3　<strong>Partition</strong></h3> \n<p>topic中的数据分割为一个或多个partition。每个topic至少有一个partition。每个partition中的数据使用多个segment文件存储。partition中的数据是有序的，不同partition间的数据丢失了数据的顺序。如果topic有多个partition，消费数据时就不能保证数据的顺序。在需要严格保证消息的消费顺序的场景下，需要将partition数目设为1。</p> \n<h3>4.4　Producer</h3> \n<p>生产者即数据的发布者，该角色将消息发布到Kafka的topic中。broker接收到生产者发送的消息后，broker将该消息<strong><span style=\"color: #ff0000;\">追加</span></strong>到当前用于追加数据的segment文件中。生产者发送的消息，存储到一个partition中，生产者也可以指定数据存储的partition。</p> \n<h3>4.5　Consumer</h3> \n<p>消费者可以从broker中读取数据。消费者可以消费多个topic中的数据。</p> \n<h3>4.6　Consumer Group</h3> \n<p>每个Consumer属于一个特定的Consumer Group（可为每个Consumer指定group name，若不指定group name则属于默认的group）。</p> \n<h3>4.7　Leader</h3> \n<p>每个partition有多个副本，其中有且仅有一个作为Leader，Leader是当前负责数据的读写的partition。</p> \n<h3>4.8　Follower</h3> \n<p>Follower跟随Leader，所有写请求都通过Leader路由，数据变更会广播给所有Follower，Follower与Leader保持数据同步。如果Leader失效，则从Follower中选举出一个新的Leader。当Follower与Leader挂掉、卡住或者同步太慢，leader会把这个follower从“in sync replicas”（ISR）列表中删除，重新创建一个Follower。</p> \n<p>&nbsp;</p>',NULL,0,2,1,0,0,'一、简介1.1　概述Kafka是最初由Linkedin公司开发，是一个分布式、分区的、多副本的、多订阅者，基于zookeeper协调的分布式日志系统（也可以当做MQ系统），常见可以用于web/ng','Kafka',1,'2020-05-13 16:47:41','2020-05-14 16:28:07'),(95,'系统学习消息队列分享(八） 消息积压了该如何处理?',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<div class=\"page\" title=\"Page 1\"> \n <div class=\"section\"> \n  <div class=\"layoutArea\"> \n   <div class=\"column\"> \n    <p><span style=\"font-family: \'Microsoft YaHei\';\">据我了解，在使用消息队列遇到的问题中，消息积压这个问题，应该是最常遇到的问题了，并且，这个问题 还不太好解决。</span></p> \n    <p><span style=\"font-family: \'Microsoft YaHei\';\">我们都知道，消息积压的直接原因，一定是系统中的某个部分出现了性能问题，来不及处理上游发送的消 息，才会导致消息积压。</span></p> \n    <p><span style=\"font-family: \'Microsoft YaHei\';\">所以，我们先来分析下，在使用消息队列时，如何来优化代码的性能，避免出现消息积压。然后再来看看， 如果你的线上系统出现了消息积压，该如何进行紧急处理，最大程度地避免消息积压对业务的影响。</span></p> \n    <div class=\"page\" title=\"Page 1\"> \n     <div class=\"section\"> \n      <div class=\"layoutArea\"> \n       <div class=\"column\"> \n        <p><strong><span style=\"font-size: 18px; font-family: \'Microsoft YaHei\';\">优化性能来避免消息积压</span></strong></p> \n        <p><span style=\"font-family: \'Microsoft YaHei\';\">在使用消息队列的系统中，对于性能的优化，主要体现在生产者和消费者这一收一发两部分的业务逻辑中。 对于消息队列本身的性能，你作为使用者，不需要太关注。为什么这么说呢?</span></p> \n        <p><span style=\"font-family: \'Microsoft YaHei\';\">主要原因是，对于绝大多数使用消息队列的业务来说，消息队列本身的处理能力要远大于业务系统的处理能 力。主流消息队列的单个节点，消息收发的性能可以达到每秒钟处理几万至几十万条消息的水平，还可以通 过水平扩展Broker的实例数成倍地提升处理能力。</span></p> \n        <p><span style=\"font-family: \'Microsoft YaHei\';\">而一般的业务系统需要处理的业务逻辑远比消息队列要复杂，单个节点每秒钟可以处理几百到几千次请求， 已经可以算是性能非常好的了。所以，对于消息队列的性能优化，我们更关注的是，在消息的收发两端，我 们的业务代码怎么和消息队列配合，达到一个最佳的性能。</span></p> \n        <div class=\"page\" title=\"Page 1\"> \n         <div class=\"section\"> \n          <div class=\"layoutArea\"> \n           <div class=\"column\"> \n            <p><strong><span style=\"font-size: 18px; font-family: \'Microsoft YaHei\';\">1. 发送端性能优化</span></strong></p> \n            <p><span style=\"font-family: \'Microsoft YaHei\';\">发送端业务代码的处理性能，实际上和消息队列的关系不大，因为一般发送端都是先执行自己的业务逻辑， 最后再发送消息。如果说，你的代码发送消息的性能上不去，你需要优先检查一下，是不是发消息之前的业 务逻辑耗时太多导致的。</span></p> \n            <p><span style=\"font-family: \'Microsoft YaHei\';\">对于发送消息的业务逻辑，只需要注意设置合适的并发和批量大小，就可以达到很好的发送性能。为什么这 么说呢?</span></p> \n            <p><span style=\"font-family: \'Microsoft YaHei\';\">我们之前的课程中讲过Producer发送消息的过程，Producer发消息给Broker，Broker收到消息后返回确认 响应，这是一次完整的交互。假设这一次交互的平均时延是1ms，我们把这1ms的时间分解开，它包括了下 面这些步骤的耗时:</span></p> \n            <ul> \n             <li><span style=\"font-family: \'Microsoft YaHei\';\">发送端准备数据、序列化消息、构造请求等逻辑的时间，也就是发送端在发送网络请求之前的耗时;</span></li> \n             <li><span style=\"font-family: \'Microsoft YaHei\';\">发送消息和返回响应在网络传输中的耗时;</span></li> \n             <li><span style=\"font-family: \'Microsoft YaHei\';\">Broker处理消息的时延。</span></li> \n            </ul> \n            <div class=\"page\" title=\"Page 1\"> \n             <div class=\"section\"> \n              <div class=\"layoutArea\"> \n               <div class=\"column\"> \n                <p><span style=\"font-family: \'Microsoft YaHei\';\">如果是单线程发送，每次只发送1条消息，那么每秒只能发送 1000ms / 1ms * 1条/ms = 1000条 消息，这种 情况下并不能发挥出消息队列的全部实力。</span></p> \n               </div> \n              </div> \n              <span style=\"font-family: \'Microsoft YaHei\';\">无论是增加每次发送消息的批量大小，还是增加并发，都能成倍地提升发送性能。至于到底是选择批量发送还是增加并发，主要取决于发送端程序的业务性质。简单来说，只要能够满足你的性能要求，怎么实现方便 就怎么实现。</span>\n             </div> \n             <div class=\"section\">\n              <span style=\"font-family: \'Microsoft YaHei\';\">比如说，你的消息发送端是一个微服务，主要接受RPC请求处理在线业务。很自然的，微服务在处理每次请 求的时候，就在当前线程直接发送消息就可以了，因为所有RPC框架都是多线程支持多并发的，自然也就实 现了并行发送消息。并且在线业务比较在意的是请求响应时延，选择批量发送必然会影响RPC服务的时延。 这种情况，比较明智的方式就是通过并发来提升发送性能。</span> \n              <div class=\"page\" title=\"Page 2\"> \n               <div class=\"section\"> \n                <div class=\"layoutArea\"> \n                 <div class=\"column\"> \n                  <p><span style=\"font-family: \'Microsoft YaHei\';\">如果你的系统是一个离线分析系统，离线系统在性能上的需求是什么呢?它不关心时延，更注重整个系统的 吞吐量。发送端的数据都是来自于数据库，这种情况就更适合批量发送，你可以批量从数据库读取数据，然 后批量来发送消息，同样用少量的并发就可以获得非常高的吞吐量。</span></p> \n                 </div> \n                </div> \n               </div> \n              </div> \n             </div> \n             <div class=\"section\">\n              &nbsp;\n             </div> \n             <div class=\"section\"> \n              <div class=\"page\" title=\"Page 2\"> \n               <div class=\"section\"> \n                <div class=\"layoutArea\"> \n                 <div class=\"column\"> \n                  <p><strong><span style=\"font-size: 18px; font-family: \'Microsoft YaHei\';\">2. 消费端性能优化</span></strong></p> \n                  <p><span style=\"font-family: \'Microsoft YaHei\';\">使用消息队列的时候，大部分的性能问题都出现在消费端，如果消费的速度跟不上发送端生产消息的速度， 就会造成消息积压。如果这种性能倒挂的问题只是暂时的，那问题不大，只要消费端的性能恢复之后，超过 发送端的性能，那积压的消息是可以逐渐被消化掉的。</span></p> \n                  <p><span style=\"font-family: \'Microsoft YaHei\';\">要是消费速度一直比生产速度慢，时间⻓了，整个系统就会出现问题，要么，消息队列的存储被填满无法提 供服务，要么消息丢失，这对于整个系统来说都是严重故障。</span></p> \n                  <p><span style=\"font-family: \'Microsoft YaHei\';\">所以，我们在设计系统的时候，一定要保证消费端的消费性能要高于生产端的发送性能，这样的系统才能健 康的持续运行。</span></p> \n                  <p><span style=\"font-family: \'Microsoft YaHei\';\">消费端的性能优化除了优化消费业务逻辑以外，也可以通过水平扩容，增加消费端的并发数来提升总体的消 费性能。特别需要注意的一点是，在扩容Consumer的实例数量的同时，必须同步扩容主题中的分区(也叫 队列)数量，确保Consumer的实例数和分区数量是相等的。如果Consumer的实例数量超过分区数量，这 样的扩容实际上是没有效果的。原因我们之前讲过，因为对于消费者来说，在每个分区上实际上只能支持单 线程消费。</span></p> \n                 </div> \n                </div> \n               </div> \n              </div> \n             </div> \n             <div class=\"section\"> \n              <div class=\"page\" title=\"Page 2\"> \n               <div class=\"section\"> \n                <div class=\"layoutArea\"> \n                 <div class=\"column\"> \n                  <p><span style=\"font-family: \'Microsoft YaHei\';\">我⻅到过很多消费程序，他们是这样来解决消费慢的问题的:</span></p> \n                 </div> \n                </div> \n               </div> \n              </div> \n             </div> \n            </div> \n           </div> \n          </div> \n         </div> \n        </div> \n       </div> \n      </div> \n     </div> \n    </div> \n   </div> \n  </div> \n </div> \n</div> \n<p><span style=\"font-family: \'Microsoft YaHei\';\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514100615336.png\" title=\"\" alt=\"\"></span></p> \n<p>&nbsp;</p> \n<p>&nbsp;</p> \n<div class=\"page\" title=\"Page 2\"> \n <div class=\"section\"> \n  <div class=\"layoutArea\"> \n   <div class=\"column\"> \n    <p><span style=\"font-family: \'Microsoft YaHei\';\">它收消息处理的业务逻辑可能比较慢，也很难再优化了，为了避免消息积压，在收到消息的OnMessage方 法中，不处理任何业务逻辑，把这个消息放到一个内存队列里面就返回了。然后它可以启动很多的业务线 程，这些业务线程里面是真正处理消息的业务逻辑，这些线程从内存队列里取消息处理，这样它就解决了单 个Consumer不能并行消费的问题。</span></p> \n    <div class=\"page\" title=\"Page 2\"> \n     <div class=\"section\"> \n      <div class=\"layoutArea\"> \n       <div class=\"column\"> \n        <p><span style=\"font-family: \'Microsoft YaHei\';\">这个方法是不是很完美地实现了并发消费?请注意，这是一个非常常⻅的错误方法! 为什么错误?因为会丢消息。如果收消息的节点发生宕机，在内存队列中还没来及处理的这些消息就会丢失。</span></p> \n       </div> \n      </div> \n     </div> \n    </div> \n   </div> \n  </div> \n </div> \n</div> \n<div class=\"page\" title=\"Page 3\"> \n <div class=\"section\"> \n  <div class=\"layoutArea\"> \n   <div class=\"column\"> \n    <p><strong><span style=\"font-size: 18px; font-family: \'Microsoft YaHei\';\">消息积压了该如何处理?</span></strong></p> \n    <p><span style=\"font-family: \'Microsoft YaHei\';\">还有一种消息积压的情况是，日常系统正常运转的时候，没有积压或者只有少量积压很快就消费掉了，但是 某一个时刻，突然就开始积压消息并且积压持续上涨。这种情况下需要你在短时间内找到消息积压的原因， 迅速解决问题才不至于影响业务。</span></p> \n    <p><span style=\"font-family: \'Microsoft YaHei\';\">导致突然积压的原因肯定是多种多样的，不同的系统、不同的情况有不同的原因，不能一概而论。但是，我 们排查消息积压原因，是有一些相对固定而且比较有效的方法的。</span></p> \n    <p><span style=\"font-family: \'Microsoft YaHei\';\">能导致积压突然增加，最粗粒度的原因，只有两种:要么是发送变快了，要么是消费变慢了。</span></p> \n    <p><span style=\"font-family: \'Microsoft YaHei\';\">大部分消息队列都内置了监控的功能，只要通过监控数据，很容易确定是哪种原因。如果是单位时间发送的 消息增多，比如说是赶上大促或者抢购，短时间内不太可能优化消费端的代码来提升消费性能，唯一的方法 是通过扩容消费端的实例数来提升总体的消费能力。</span></p> \n    <p><span style=\"font-family: \'Microsoft YaHei\';\">如果短时间内没有足够的服务器资源进行扩容，没办法的办法是，将系统降级，通过关闭一些不重要的业 务，减少发送方发送的数据量，最低限度让系统还能正常运转，服务一些重要业务。</span></p> \n    <div class=\"page\" title=\"Page 3\"> \n     <div class=\"section\"> \n      <div class=\"layoutArea\"> \n       <div class=\"column\"> \n        <p><span style=\"font-family: \'Microsoft YaHei\';\">还有一种不太常⻅的情况，你通过监控发现，无论是发送消息的速度还是消费消息的速度和原来都没什么变 化，这时候你需要检查一下你的消费端，是不是消费失败导致的一条消息反复消费这种情况比较多，这种情 况也会拖慢整个系统的消费速度。</span></p> \n        <p><span style=\"font-family: \'Microsoft YaHei\';\">如果监控到消费变慢了，你需要检查你的消费实例，分析一下是什么原因导致消费变慢。优先检查一下日志 是否有大量的消费错误，如果没有错误的话，可以通过打印堆栈信息，看一下你的消费线程是不是卡在什么 地方不动了，比如触发了死锁或者卡在等待某些资源上了。</span></p> \n        <div class=\"page\" title=\"Page 3\"> \n         <div class=\"section\"> \n          <div class=\"layoutArea\"> \n           <div class=\"column\"> \n            <p><strong><span style=\"font-size: 18px; font-family: \'Microsoft YaHei\';\">小结</span></strong></p> \n            <p><span style=\"font-family: \'Microsoft YaHei\';\">这节课我们主要讨论了2个问题，一个是如何在消息队列的收发两端优化系统性能，提前预防消息积压。另 外一个问题是，当系统发生消息积压了之后，该如何处理。</span></p> \n            <p><span style=\"font-family: \'Microsoft YaHei\';\">优化消息收发性能，预防消息积压的方法有两种，增加批量或者是增加并发，在发送端这两种方法都可以使 用，在消费端需要注意的是，增加并发需要同步扩容分区数量，否则是起不到效果的。</span></p> \n            <p><span style=\"font-family: \'Microsoft YaHei\';\">对于系统发生消息积压的情况，需要先解决积压，再分析原因，毕竟保证系统的可用性是首先要解决的问 题。快速解决积压的方法就是通过水平扩容增加Consumer的实例数量。</span></p> \n           </div> \n          </div> \n         </div> \n        </div> \n       </div> \n      </div> \n     </div> \n    </div> \n   </div> \n  </div> \n </div> \n</div>',NULL,0,2,1,0,0,'据我了解，在使用消息队列遇到的问题中，消息积压这个问题，应该是最常遇到的问题了，并且，这个问题还不太好解决。我们都知道，消息积压的直接原因，一定是系统中的某个部分出现了性能问题，来不及处理上游发送','消息队列',1,'2020-05-14 10:06:17','2020-05-14 16:27:09'),(96,'异或 ^ 的几个作用',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p><span style=\"font-size: 12pt;\">一、交换两个整数的值而不必用第三个参数</span><br><span style=\"font-size: 12pt;\">a = 9;</span><br><span style=\"font-size: 12pt;\">b = 11;</span><br><br><span style=\"font-size: 12pt;\">a=a^b; 1001^1011=0010</span><br><span style=\"font-size: 12pt;\">b=b^a; 1011^0010=1001</span><br><span style=\"font-size: 12pt;\">a=a^b;&nbsp; 0010^1001=1011</span><br><br><span style=\"font-size: 12pt;\">a = 11;</span><br><span style=\"font-size: 12pt;\">b = 9;</span></p> \n<p><span style=\"font-size: 12pt;\">二、奇偶判断</span></p> \n<p><span style=\"font-size: 12pt;\">^a操作就是将a中的每一位按位逐一进行异或，例如a=4\'b1010，则b=1^0^1^0=0，由此可以判断a中为1的位数是奇数还是偶数，是一个便捷的操作。</span></p> \n<p><span style=\"font-size: 12pt;\">三、格雷码(Gray&nbsp;code)</span></p> \n<p><span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp; 格雷码(Gray&nbsp;code)是由贝尔实验室的Frank&nbsp;Gray在1940年提出，用于在PCM(Pusle&nbsp;Code&nbsp;Modulation)方法传送讯号时防止出错，并于1953年三月十七日取得美国专利。格雷码是一个数列集合，相邻两数间只有一个位元改变，为无权数码，且格雷码的顺序不是唯一的。</span><br><span style=\"font-size: 12pt;\">直接排列</span><br><span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp; 以二进制为0值的格雷码为第零项，第一项改变最右边的位元，第二项改变右起第一个为1的位元的左边位元，第三、四项方法同第一、二项，如此反覆，即可排列出n个位元的格雷码。</span></p> \n<p>1、自然二进制码转换成二进制格雷码<br>　　自然二进制码转换成二进制格雷码，其法则是保留自然二进制码的最高位作为格雷码的最高位，而次高位格雷码为二进制码的高位与次高位相异或，而格雷码其余各位与次高位的求法相类似。<br><br><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514100644255.gif\" title=\"\" alt=\"\"><br><br>2、二进制格雷码转换成自然二进制码 <br>　　二进制格雷码转换成自然二进制码,其法则是保留格雷码的最高位作为自然二进制码的最高位，而次高位自然二进制码为高位自然二进制码与次高位格雷码相异或，而自然二进制码的其余各位与次高位自然二进制码的求法相类似。<br><br><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514100644486.gif\" title=\"\" alt=\"\"></p> \n<p><br><span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;<strong>二进制数转格雷码</strong></span><br><span style=\"font-size: 12pt;\">(假设以二进制为0的值做为格雷码的0)</span><br><span style=\"font-size: 12pt;\">格雷码第n位&nbsp;=&nbsp;二进制码第(n+1)位+二进制码第n位。不必理会进制。 </span></p> \n<div>\n <span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp; Verilog 代码:gray=(binary&gt;&gt;1)^binary;</span>\n</div> \n<div>\n <br>\n <span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp; <strong>格雷码转二进制数<br></strong>二进制码第n位&nbsp;=&nbsp;二进制码第(n+1)位+格雷码第n位。因为二进制码和格雷码皆有相同位数，所以二进制码可从最高位的左边位元取0，以进行计算。</span>\n</div> \n<div>\n <span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; verilog 代码://------假设 reg [n-1] gray,binary;</span>\n</div> \n<div>\n <span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; integer i;</span>\n</div> \n<div>\n <span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(i=0;i&lt;=n-1;i=i+1)</span>\n</div> \n<div>\n <span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binary[i]= ^(gray&gt;&gt;i)//gray移位后,自身按位异或</span>\n</div> \n<div>\n <span style=\"font-size: 12pt;\">放一段代码这，用于参考：</span>\n</div> \n<div>\n <span style=\"font-size: 12pt;\"><span style=\"font-family: monospace;\"><span style=\"color: #0000ff;\">/*Logic to convert binary numbers into Gray coded binary numbers is implemented in the following Verilog Code.</span><br><span style=\"color: #0000ff;\">*/</span><br><span style=\"color: #804040;\"><strong>module</strong></span>&nbsp;binary2gray<span style=\"color: #6a5acd;\">();</span><br><span style=\"color: #804040;\"><strong>reg</strong></span>&nbsp;clk<span style=\"color: #6a5acd;\">;</span><br><span style=\"color: #804040;\"><strong>reg</strong></span>&nbsp;rstn<span style=\"color: #6a5acd;\">;</span><br><span style=\"color: #804040;\"><strong>reg</strong></span>&nbsp;<span style=\"color: #6a5acd;\">[</span><span style=\"color: #ff00ff;\">5</span><span style=\"color: #6a5acd;\">:</span><span style=\"color: #ff00ff;\">0</span><span style=\"color: #6a5acd;\">]</span>&nbsp;counter_binary<span style=\"color: #6a5acd;\">,</span>&nbsp;counter_binary_reg<span style=\"color: #6a5acd;\">,</span>&nbsp;counter_gray<span style=\"color: #6a5acd;\">,</span>&nbsp;counter_gray_reg<span style=\"color: #6a5acd;\">;</span><br><span style=\"color: #804040;\"><strong>integer</strong></span>&nbsp;count<span style=\"color: #6a5acd;\">,</span>&nbsp;file_wr<span style=\"color: #6a5acd;\">;</span><br><br><span style=\"color: #0000ff;\">/* Initial block to generate clock and reset */</span>&nbsp;<br><span style=\"color: #804040;\"><strong>initial</strong></span>&nbsp;&nbsp;<span style=\"color: #804040;\"><strong>begin</strong></span><br>&nbsp;&nbsp;&nbsp;&nbsp;clk <span style=\"color: #6a5acd;\">=</span>&nbsp;<span style=\"color: #ff00ff;\">0</span><span style=\"color: #6a5acd;\">;</span>&nbsp;rstn <span style=\"color: #6a5acd;\">=</span>&nbsp;<span style=\"color: #ff00ff;\">0</span><span style=\"color: #6a5acd;\">;</span>&nbsp;&nbsp;<span style=\"color: #6a5acd;\">#</span><span style=\"color: #ff00ff;\">100</span>&nbsp;rstn <span style=\"color: #6a5acd;\">=</span>&nbsp;<span style=\"color: #ff00ff;\">1</span><span style=\"color: #6a5acd;\">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #804040;\"><strong>forever</strong></span>&nbsp;<span style=\"color: #804040;\"><strong>begin</strong></span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #6a5acd;\">#</span><span style=\"color: #ff00ff;\">10</span>&nbsp;clk <span style=\"color: #6a5acd;\">=</span>&nbsp;<span style=\"color: #6a5acd;\">!</span>clk<span style=\"color: #6a5acd;\">;</span>&nbsp;<br>&nbsp;<span style=\"color: #804040;\"><strong>end</strong></span>&nbsp;<span style=\"color: #804040;\"><strong>end</strong></span>&nbsp;&nbsp;&nbsp;&nbsp;<br><br><span style=\"color: #0000ff;\">/* Synchronous Logic for registering the data and incrementing the counter for binary data */</span><br><span style=\"color: #804040;\"><strong>always</strong></span>&nbsp;<span style=\"color: #6a5acd;\">@</span>&nbsp;<span style=\"color: #6a5acd;\">(</span><span style=\"color: #804040;\"><strong>posedge</strong></span>&nbsp;clk <span style=\"color: #804040;\"><strong>or</strong></span>&nbsp;<span style=\"color: #804040;\"><strong>negedge</strong></span>&nbsp;rstn<span style=\"color: #6a5acd;\">)</span><br><span style=\"color: #804040;\"><strong>begin</strong></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #804040;\"><strong>if</strong></span>&nbsp;<span style=\"color: #6a5acd;\">(!</span>rstn<span style=\"color: #6a5acd;\">)</span>&nbsp;<span style=\"color: #804040;\"><strong>begin</strong></span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;counter_binary_reg <span style=\"color: #6a5acd;\">&lt;=</span>&nbsp;<span style=\"color: #ff00ff;\">\'b0</span><span style=\"color: #6a5acd;\">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;counter_gray_reg <span style=\"color: #6a5acd;\">&lt;=</span>&nbsp;<span style=\"color: #ff00ff;\">\'b0</span><span style=\"color: #6a5acd;\">;</span>&nbsp;&nbsp;<span style=\"color: #804040;\"><strong>end</strong></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #804040;\"><strong>else</strong></span>&nbsp;<span style=\"color: #804040;\"><strong>begin</strong></span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;counter_binary_reg <span style=\"color: #6a5acd;\">&lt;=</span>&nbsp;counter_binary <span style=\"color: #6a5acd;\">+</span>&nbsp;<span style=\"color: #ff00ff;\">1</span><span style=\"color: #6a5acd;\">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;counter_gray_reg <span style=\"color: #6a5acd;\">&lt;=</span>&nbsp;counter_gray<span style=\"color: #6a5acd;\">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #a020f0;\">$display</span><span style=\"color: #6a5acd;\">(</span><span style=\"color: #ff00ff;\">\"binary number= 6\'b%b : gray en-coded binary number = 6\'b%b\"</span><span style=\"color: #6a5acd;\">,</span>&nbsp;counter_binary_reg<span style=\"color: #6a5acd;\">,</span>&nbsp;counter_gray_reg<span style=\"color: #6a5acd;\">);</span>&nbsp;&nbsp; <span style=\"color: #804040;\"><strong>end</strong></span>&nbsp;<span style=\"color: #804040;\"><strong>end</strong></span><br><br><span style=\"color: #0000ff;\">/* Logic is to get Gray code from Binary code */</span><br><span style=\"color: #804040;\"><strong>function</strong></span><span style=\"color: #6a5acd;\">[</span><span style=\"color: #ff00ff;\">5</span><span style=\"color: #6a5acd;\">:</span><span style=\"color: #ff00ff;\">0</span><span style=\"color: #6a5acd;\">]</span>&nbsp;binary2gray <span style=\"color: #6a5acd;\">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #804040;\"><strong>input</strong></span><span style=\"color: #6a5acd;\">[</span><span style=\"color: #ff00ff;\">5</span><span style=\"color: #6a5acd;\">:</span><span style=\"color: #ff00ff;\">0</span><span style=\"color: #6a5acd;\">]</span>&nbsp;value<span style=\"color: #6a5acd;\">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #804040;\"><strong>integer</strong></span>&nbsp;i<span style=\"color: #6a5acd;\">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #804040;\"><strong>begin</strong></span>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binary2gray<span style=\"color: #6a5acd;\">[</span><span style=\"color: #ff00ff;\">5</span><span style=\"color: #6a5acd;\">]</span>&nbsp;<span style=\"color: #6a5acd;\">=</span>&nbsp;value<span style=\"color: #6a5acd;\">[</span><span style=\"color: #ff00ff;\">5</span><span style=\"color: #6a5acd;\">];</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #804040;\"><strong>for</strong></span>&nbsp;<span style=\"color: #6a5acd;\">(</span>i<span style=\"color: #6a5acd;\">=</span><span style=\"color: #ff00ff;\">5</span><span style=\"color: #6a5acd;\">;</span>&nbsp;i<span style=\"color: #6a5acd;\">&gt;</span><span style=\"color: #ff00ff;\">0</span><span style=\"color: #6a5acd;\">;</span>&nbsp;i <span style=\"color: #6a5acd;\">=</span>&nbsp;i <span style=\"color: #6a5acd;\">-</span>&nbsp;<span style=\"color: #ff00ff;\">1</span><span style=\"color: #6a5acd;\">)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binary2gray<span style=\"color: #6a5acd;\">[</span>i<span style=\"color: #6a5acd;\">-</span><span style=\"color: #ff00ff;\">1</span><span style=\"color: #6a5acd;\">]</span>&nbsp;<span style=\"color: #6a5acd;\">=</span>&nbsp;value<span style=\"color: #6a5acd;\">[</span>i<span style=\"color: #6a5acd;\">]</span>&nbsp;<span style=\"color: #6a5acd;\">^</span>&nbsp;value<span style=\"color: #6a5acd;\">[</span>i <span style=\"color: #6a5acd;\">-</span>&nbsp;<span style=\"color: #ff00ff;\">1</span><span style=\"color: #6a5acd;\">];</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #804040;\"><strong>end</strong></span><br><span style=\"color: #804040;\"><strong>endfunction</strong></span><br><br><span style=\"color: #0000ff;\">/* Get gray encoded output */</span><br><span style=\"color: #804040;\"><strong>always</strong></span>&nbsp;<span style=\"color: #6a5acd;\">@(*)</span><br><span style=\"color: #804040;\"><strong>begin</strong></span>&nbsp;<br>&nbsp;&nbsp;counter_gray <span style=\"color: #6a5acd;\">=</span>&nbsp;counter_gray_reg<span style=\"color: #6a5acd;\">;</span><br>&nbsp;&nbsp;counter_binary <span style=\"color: #6a5acd;\">=</span>&nbsp;counter_binary_reg<span style=\"color: #6a5acd;\">;</span><br>&nbsp;&nbsp;counter_gray <span style=\"color: #6a5acd;\">=</span>&nbsp;binary2gray<span style=\"color: #6a5acd;\">(</span>counter_binary_reg<span style=\"color: #6a5acd;\">);</span>&nbsp;<span style=\"color: #804040;\"><strong>end</strong></span><br><span style=\"color: #804040;\"><strong>endmodule</strong></span></span></span>\n</div> \n<div>\n &nbsp;\n</div> \n<div> \n <p style=\"clear: both; line-height: 0px;\"> </p>\n <div>\n  <span style=\"font-size: 12pt;\">四、奇数分频</span>\n </div> \n <div> \n  <p><span style=\"font-size: 12pt;\">奇数分频电路：</span></p> \n  <p><span style=\"font-size: 12pt;\">　　奇数分频电路常用的是错位“异或”法的原理。如进行三分频，通过待分频时钟的上升沿触发计数器进行模三技术，当计数器计数到邻近值进行两次翻转。比如计数器在计数到1时，输出时钟进行翻转，计数到2时再进行翻转，即在邻近的1和2时刻进行两次翻转。这样实现的三分频占空比为1/3或2/3.如果要实现占空比为50%的三分频时钟，可通过待分频的时钟上升沿触发计数器和下降沿触发计数器进行三分频，然后将上升沿和下降沿产生的三分频时钟进行相或预算，即可得到占空比为50%的三分频时钟。</span></p> \n  <p><span style=\"font-size: 12pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 错位“异或”法推广：</span></p> \n  <p><span style=\"font-size: 12pt;\">　　对于实现占空比为50%的N倍奇数分频，首先进行上升沿触发的模N计数，计数到某一选定值时，进行输出时钟翻转，然后进过（N-1）/2再次进行翻转得到一个占空比非50%的技术分频时钟。再者同时进行下降沿触发的模N计数，到和上升沿触发输出时钟翻转选定值相同时，进行输出时钟翻转，同样经过(n-1)/2时，输出时钟再次翻转生成占空比非50%的奇数N分频时钟。两个占空比非50%的时钟相或运算，得到占空比为50%的奇数N分频时钟。</span></p> \n  <p>&nbsp;</p> \n </div> \n <p></p> \n</div>',NULL,0,2,1,0,0,'一、交换两个整数的值而不必用第三个参数a=9;b=11;a=a^b;1001^1011=0010b=b^a;1011^0010=1001a=a^b;0010^1001=1011a=1','^异或',1,'2020-05-14 10:06:45','2020-05-18 09:48:59'),(97,'数据库事务的概念及其实现原理',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>[TOC]##前言 事务是数据库系统中的重要概念,了解这一概念是以正确的方式开发和数据库交互的应用程序的前提。但是很多开发者对于事务的认识相对片面和肤浅,仅仅把它等同于ACID,不了解数据库系统引入事务的真正动机,ACID对于事务意味着什么以及最重要的:数据库系统是如何保证事务的ACID特性的? 因为最近在导师手下做一个微服务和分布式事务相关的课题项目,作为必要的前置准备,需要加深下对单机事务的认识并理解其实现原理。这篇文章是在我给组内的小伙伴分享的PPT的基础上改动而成,旨在帮助大家建立关于事务的相对体系的认识。由于当时正好赶上考试周,所以写的比较仓促,里面肯定有理解不到位甚至出错的地方,希望看到的小伙伴能够我指出来。同时还需强调几点:</p> \n<ul> \n <li>以下所有内容都是针对单机事务而言,不涉及分布式事务相关的东西!</li> \n <li>关于事务原理的讲解不针对具体的某个数据库实现,所以某些地方可能和你的实践经验不符。</li> \n</ul> \n<p>##1. 认识事务 ###1.1 为什么需要数据库事务 转账是生活中常见的操作,比如从A账户转账100元到B账号。站在用户角度而言,这是一个逻辑上的单一操作,然而在数据库系统中,至少会分成两个步骤来完成:</p> \n<ul> \n <li>1.将A账户的金额减少100元</li> \n <li>2.将B账户的金额增加100元。</li> \n</ul> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110851420.png\" title=\"\" alt=\"\"></p> \n<p>在这个过程中可能会出现以下问题:</p> \n<ul> \n <li>1.转账操作的第一步执行成功,A账户上的钱减少了100元,但是第二步执行失败或者未执行便发生系统崩溃,导致B账户并没有相应增加100元。</li> \n <li>2.转账操作刚完成就发生系统崩溃,系统重启恢复时丢失了崩溃前的转账记录。</li> \n <li>3.同时又另一个用户转账给B账户,由于同时对B账户进行操作,导致B账户金额出现异常。</li> \n</ul> \n<p>为了便于解决这些问题,需要引入数据库事务的概念。</p> \n<p>###1.2 什么是数据库事务 <strong>定义:数据库事务是构成单一逻辑工作单元的操作集合</strong> 一个典型的数据库事务如下所示</p> \n<pre><code>BEGIN TRANSACTION  //事务开始\nSQL1\nSQL2\nCOMMIT/ROLLBACK   //事务提交或回滚\n</code></pre> \n<p>关于事务的定义有几点需要解释下：</p> \n<ul> \n <li>1.数据库事务可以包含一个或多个数据库操作,但这些操作构成一个逻辑上的整体。</li> \n <li>2.构成逻辑整体的这些数据库操作,要么全部执行成功,要么全部不执行。</li> \n <li>3.构成事务的所有操作,要么全都对数据库产生影响,要么全都不产生影响,即不管事务是否执行成功,数据库总能保持一致性状态。</li> \n <li>4.以上即使在数据库出现故障以及并发事务存在的情况下依然成立。</li> \n</ul> \n<h3 id=\"section\">1.3 事务如何解决问题</h3> \n<p>对于上面的转账例子,可以将转账相关的所有操作包含在一个事务中</p> \n<pre><code>BEGIN TRANSACTION \nA账户减少100元\nB账户增加100元\nCOMMIT\n</code></pre> \n<ul> \n <li>1.当数据库操作失败或者系统出现崩溃,系统能够以事务为边界进行恢复,不会出现A账户金额减少而B账户未增加的情况。</li> \n <li>2.当有多个用户同时操作数据库时,数据库能够以事务为单位进行并发控制,使多个用户对B账户的转账操作相互隔离。</li> \n</ul> \n<p>事务使系统能够更方便的进行故障恢复以及并发控制,从而保证数据库状态的一致性。</p> \n<p>###1.4 事务的ACID特性以及实现原理概述</p> \n<p>原子性(Atomicity):事务中的所有操作作为一个整体像原子一样不可分割，要么全部成功,要么全部失败。</p> \n<p>一致性(Consistency):事务的执行结果必须使数据库从一个一致性状态到另一个一致性状态。一致性状态是指:1.系统的状态满足数据的完整性约束(主码,参照完整性,check约束等) 2.系统的状态反应数据库本应描述的现实世界的真实状态,比如转账前后两个账户的金额总和应该保持不变。</p> \n<p>隔离性(Isolation):并发执行的事务不会相互影响,其对数据库的影响和它们串行执行时一样。比如多个用户同时往一个账户转账,最后账户的结果应该和他们按先后次序转账的结果一样。</p> \n<p>持久性(Durability):事务一旦提交,其对数据库的更新就是持久的。任何事务或系统故障都不会导致数据丢失。</p> \n<p>在事务的ACID特性中,C即一致性是事务的根本追求,而对数据一致性的破坏主要来自两个方面</p> \n<ul> \n <li>1.事务的并发执行</li> \n <li>2.事务故障或系统故障</li> \n</ul> \n<p>数据库系统是通过并发控制技术和日志恢复技术来避免这种情况发生的。</p> \n<p>并发控制技术保证了事务的隔离性,使数据库的一致性状态不会因为并发执行的操作被破坏。 日志恢复技术保证了事务的原子性,使一致性状态不会因事务或系统故障被破坏。同时使已提交的对数据库的修改不会因系统崩溃而丢失,保证了事务的持久性。 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110848048.png\" title=\"\" alt=\"\"></p> \n<p>##2.并发异常与并发控制技术</p> \n<p>###2.1 常见的并发异常 在讲解并发控制技术前,先简单介绍下数据库常见的并发异常。</p> \n<ul> \n <li>脏写 脏写是指事务回滚了其他事务对数据项的已提交修改,比如下面这种情况 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110849546.png\" title=\"\" alt=\"\"></li> \n</ul> \n<p>在事务1对数据A的回滚,导致事务2对A的已提交修改也被回滚了。</p> \n<ul> \n <li>丢失更新 丢失更新是指事务覆盖了其他事务对数据的已提交修改,导致这些修改好像丢失了一样。 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110850943.png\" title=\"\" alt=\"\"></li> \n</ul> \n<p>事务1和事务2读取A的值都为10,事务2先将A加上10并提交修改,之后事务2将A减少10并提交修改,A的值最后为,导致事务2对A的修改好像丢失了一样</p> \n<ul> \n <li>脏读 脏读是指一个事务读取了另一个事务未提交的数据 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110846216.png\" title=\"\" alt=\"\"></li> \n</ul> \n<p>在事务1对A的处理过程中,事务2读取了A的值,但之后事务1回滚,导致事务2读取的A是未提交的脏数据。</p> \n<ul> \n <li>不可重复读 不可重复读是指一个事务对同一数据的读取结果前后不一致。脏读和不可重复读的区别在于:前者读取的是事务未提交的脏数据,后者读取的是事务已经提交的数据,只不过因为数据被其他事务修改过导致前后两次读取的结果不一样,比如下面这种情况 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110848927.png\" title=\"\" alt=\"\"></li> \n</ul> \n<p>由于事务2对A的已提交修改,事务1前后两次读取的结果不一致。</p> \n<ul> \n <li>幻读 幻读是指事务读取某个范围的数据时，因为其他事务的操作导致前后两次读取的结果不一致。幻读和不可重复读的区别在于,不可重复读是针对确定的某一行数据而言,而幻读是针对不确定的多行数据。因而幻读通常出现在带有查询条件的范围查询中,比如下面这种情况: <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110846783.png\" title=\"\" alt=\"\"></li> \n</ul> \n<p>事务1查询A&lt;5的数据,由于事务2插入了一条A=4的数据,导致事务1两次查询得到的结果不一样</p> \n<p>###2.2 事务的隔离级别</p> \n<ol> \n <li><p>事务具有隔离性,理论上来说事务之间的执行不应该相互产生影响,其对数据库的影响应该和它们串行执行时一样。</p> </li> \n <li><p>然而完全的隔离性会导致系统并发性能很低,降低对资源的利用率,因而实际上对隔离性的要求会有所放宽,这也会一定程度造成对数据库一致性要求降低</p> </li> \n <li><p>SQL标准为事务定义了不同的隔离级别,从低到高依次是</p> </li> \n</ol> \n<ul> \n <li>读未提交(READ UNCOMMITTED)</li> \n <li>读已提交(READ COMMITTED)</li> \n <li>可重复读(REPEATABLE READ)</li> \n <li>串行化(SERIALIZABLE)</li> \n</ul> \n<p>事务的隔离级别越低,可能出现的并发异常越多,但是通常而言系统能提供的并发能力越强。</p> \n<p>不同的隔离级别与可能的并发异常的对应情况如下表所示,有一点需要强调,这种对应关系只是理论上的,对于特定的数据库实现不一定准确,比如mysql 的Innodb存储引擎通过Next-Key Locking技术在可重复读级别就消除了幻读的可能。 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110843146.png\" title=\"\" alt=\"\"></p> \n<p>所有事务隔离级别都不允许出现脏写,而串行化可以避免所有可能出现的并发异常,但是会极大的降低系统的并发处理能力。</p> \n<p>###2.3 事务隔离性的实现——常见的并发控制技术 并发控制技术是实现事务隔离性以及不同隔离级别的关键,实现方式有很多,按照其对可能冲突的操作采取的不同策略可以分为乐观并发控制和悲观并发控制两大类。</p> \n<ul> \n <li><p>乐观并发控制:对于并发执行可能冲突的操作,假定其不会真的冲突,允许并发执行,直到真正发生冲突时才去解决冲突,比如让事务回滚。</p> </li> \n <li><p>悲观并发控制:对于并发执行可能冲突的操作,假定其必定发生冲突,通过让事务等待(锁)或者中止(时间戳排序)的方式使并行的操作串行执行。</p> </li> \n</ul> \n<p>####2.3.1 基于封锁的并发控制 核心思想:对于并发可能冲突的操作,比如读-写,写-读,写-写,通过锁使它们互斥执行。 锁通常分为共享锁和排他锁两种类型</p> \n<ul> \n <li>1.共享锁(S):事务T对数据A加共享锁,其他事务只能对A加共享锁但不能加排他锁。</li> \n <li>2.排他锁(X):事务T对数据A加排他锁,其他事务对A既不能加共享锁也不能加排他锁</li> \n</ul> \n<p>基于锁的并发控制流程:</p> \n<ol> \n <li><p>事务根据自己对数据项进行的操作类型申请相应的锁(读申请共享锁,写申请排他锁)</p> </li> \n <li><p>申请锁的请求被发送给锁管理器。锁管理器根据当前数据项是否已经有锁以及申请的和持有的锁是否冲突决定是否为该请求授予锁。</p> </li> \n <li><p>若锁被授予,则申请锁的事务可以继续执行;若被拒绝,则申请锁的事务将进行等待,直到锁被其他事务释放。</p> </li> \n</ol> \n<p>可能出现的问题:</p> \n<ul> \n <li><p>死锁:多个事务持有锁并互相循环等待其他事务的锁导致所有事务都无法继续执行。</p> </li> \n <li><p>饥饿:数据项A一直被加共享锁,导致事务一直无法获取A的排他锁。</p> </li> \n</ul> \n<p>对于可能发生冲突的并发操作,锁使它们由并行变为串行执行,是一种悲观的并发控制。</p> \n<p>####2.3.2 基于时间戳的并发控制 核心思想:对于并发可能冲突的操作,基于时间戳排序规则选定某事务继续执行,其他事务回滚。</p> \n<p>系统会在每个事务开始时赋予其一个时间戳,这个时间戳可以是系统时钟也可以是一个不断累加的计数器值,当事务回滚时会为其赋予一个新的时间戳,先开始的事务时间戳小于后开始事务的时间戳。</p> \n<p>每一个数据项Q有两个时间戳相关的字段: W-timestamp(Q):成功执行write(Q)的所有事务的最大时间戳 R-timestamp(Q):成功执行read(Q)的所有事务的最大时间戳</p> \n<p>时间戳排序规则如下:</p> \n<ol> \n <li><p>假设事务T发出read(Q),T的时间戳为TS a.若TS(T)&lt;W-timestamp(Q),则T需要读入的Q已被覆盖。此 read操作将被拒绝,T回滚。 b.若TS(T)&gt;=W-timestamp(Q),则执行read操作,同时把 R-timestamp(Q)设置为TS(T)与R-timestamp(Q)中的最大值</p> </li> \n <li><p>假设事务T发出write(Q) a.若TS(T)&lt;R-timestamp(Q),write操作被拒绝,T回滚。 b.若TS(T)&lt;W-timestamp(Q),则write操作被拒绝,T回滚。 c.其他情况:系统执行write操作,将W-timestamp(Q)设置 为TS(T)。</p> </li> \n</ol> \n<p>基于时间戳排序和基于锁实现的本质一样:对于可能冲突的并发操作,以串行的方式取代并发执行,因而它也是一种悲观并发控制。它们的区别主要有两点:</p> \n<ul> \n <li>基于锁是让冲突的事务进行等待,而基于时间戳排序是让冲突的事务回滚。</li> \n <li>基于锁冲突事务的执行次序是根据它们申请锁的顺序,先申请的先执行;而基于时间戳排序是根据特定的时间戳排序规则。</li> \n</ul> \n<p>####2.3.3 基于有效性检查的并发控制</p> \n<p>核心思想:事务对数据的更新首先在自己的工作空间进行,等到要写回数据库时才进行有效性检查,对不符合要求的事务进行回滚。</p> \n<p>基于有效性检查的事务执行过程会被分为三个阶段:</p> \n<ol> \n <li><p>读阶段:数据项被读入并保存在事务的局部变量中。所有write操作都是对局部变量进行,并不对数据库进行真正的更新。</p> </li> \n <li><p>有效性检查阶段:对事务进行有效性检查,判断是否可以执行write操作而不违反可串行性。如果失败,则回滚该事务。</p> </li> \n <li><p>写阶段:事务已通过有效性检查,则将临时变量中的结果更新到数据库中。</p> </li> \n</ol> \n<p>有效性检查通常也是通过对事务的时间戳进行比较完成的,不过和基于时间戳排序的规则不一样。</p> \n<p>该方法允许可能冲突的操作并发执行,因为每个事务操作的都是自己工作空间的局部变量,直到有效性检查阶段发现了冲突才回滚。因而这是一种乐观的并发策略。</p> \n<p>####2.3.4 基于快照隔离的并发控制</p> \n<p>快照隔离是多版本并发控制(mvcc)的一种实现方式。</p> \n<p>其核心思想是:数据库为每个数据项维护多个版本(快照),每个事务只对属于自己的私有快照进行更新,在事务真正提交前进行有效性检查,使得事务正常提交更新或者失败回滚。</p> \n<p>由于快照隔离导致事务看不到其他事务对数据项的更新,为了避免出现丢失更新问题,可以采用以下两种方案避免：</p> \n<ul> \n <li><p>先提交者获胜:对于执行该检查的事务T,判断是否有其他事务已经将更新写入数据库,是则T回滚否则T正常提交。</p> </li> \n <li><p>先更新者获胜:通过锁机制保证第一个获得锁的事务提交其更新,之后试图更新的事务中止。</p> </li> \n</ul> \n<p>事务间可能冲突的操作通过数据项的不同版本的快照相互隔离,到真正要写入数据库时才进行冲突检测。因而这也是一种乐观并发控制。</p> \n<p>####2.3.5 关于并发控制技术的总结 以上只是对常见的几种并发控制技术进行了介绍,不涉及特别复杂的原理的讲解。之所以这么做一是要真的把原理和实现细节讲清楚需要涉及的东西太多,篇幅太长,从作者和读者角度而言都不是一件轻松的事,所以只对其实现的核心思想和实现要点进行了简单的介绍,其他部分就一笔带过了。二是并发控制的实现的方式太过多样,基于封锁的实现就有很多变体,mvcc多版本并发控制的实现方式就更是多样,而且很多时候会和其他并发控制方式比如封锁的方式结合起来使用。</p> \n<p>##3. 故障与故障恢复技术</p> \n<p>###3.1 为什么需要故障恢复技术 数据库运行过程中可能会出现故障,这些故障包括事务故障和系统故障两大类</p> \n<ul> \n <li>事务故障:比如非法输入,系统出现死锁,导致事务无法继续执行。</li> \n <li>系统故障:比如由于软件漏洞或硬件错误导致系统崩溃或中止。</li> \n</ul> \n<p>这些故障可能会对事务和数据库状态造成破坏,因而必须提供一种技术来对各种故障进行恢复,保证数据库一致性,事务的原子性以及持久性。数据库通常以日志的方式记录数据库的操作从而在故障时进行恢复,因而可以称之为日志恢复技术。</p> \n<p>###3.2 事务的执行过程以及可能产生的问题 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110852067.png\" title=\"\" alt=\"\"></p> \n<p>事务的执行过程可以简化如下:</p> \n<ol> \n <li><p>系统会为每个事务开辟一个私有工作区</p> </li> \n <li><p>事务读操作将从磁盘中拷贝数据项到工作区中,在执行写操作前所有的更新都作用于工作区中的拷贝.</p> </li> \n <li><p>事务的写操作将把数据输出到内存的缓冲区中,等到合适的时间再由缓冲区管理器将数据写入到磁盘。</p> </li> \n</ol> \n<p>由于数据库存在立即修改和延迟修改,所以在事务执行过程中可能存在以下情况:</p> \n<ul> \n <li>在事务提交前出现故障,但是事务对数据库的部分修改已经写入磁盘数据库中。这导致了事务的原子性被破坏。</li> \n <li>在系统崩溃前事务已经提交,但数据还在内存缓冲区中,没有写入磁盘。系统恢复时将丢失此次已提交的修改。这是对事务持久性的破坏。</li> \n</ul> \n<p>###3.3 日志的种类和格式</p> \n<ul> \n <li><p><code>&lt;T,X,V1,V2&gt;</code>:描述一次数据库写操作,T是执行写操作的事务的唯一标识,X是要写的数据项,V1是数据项的旧值,V2是数据项的新值。</p> </li> \n <li><p><code>&lt;T,X,V1&gt;</code>:对数据库写操作的撤销操作,将事务T的X数据项恢复为旧值V1。在事务恢复阶段插入。</p> </li> \n <li><p><code>&lt;T start&gt;</code>: 事务T开始</p> </li> \n <li><p><code>&lt;T commit&gt;</code>: 事务T提交</p> </li> \n <li><p><code>&lt;T abort&gt;</code>: 事务T中止</p> </li> \n</ul> \n<p>关于日志,有以下两条规则</p> \n<ul> \n <li>1.系统在对数据库进行修改前会在日志文件末尾追加相应的日志记录。</li> \n <li>2.当一个事务的commit日志记录写入到磁盘成功后,称这个事务已提交,但事务所做的修改可能并未写入磁盘</li> \n</ul> \n<p>###3.4 日志恢复的核心思想</p> \n<ul> \n <li><p>撤销事务undo:将事务更新的所有数据项恢复为日志中的旧值,事务撤销完毕时将插入一条<code>&lt;T abort&gt;</code>记录。</p> </li> \n <li><p>重做事务redo:将事务更新的所有数据项恢复为日志中的新值。</p> </li> \n</ul> \n<p>事务正常回滚/因事务故障中止将进行redo 系统从崩溃中恢复时将先进行redo再进行undo。</p> \n<p>以下事务将进行undo:日志中只包括<code>&lt;T start&gt;</code>记录,但既不包括<code>&lt;T commit&gt;</code>记录也不包括<code>&lt;T abort&gt;</code>记录.</p> \n<p>以下事务将进行redo:日志中包括<code>&lt;T start&gt;</code>记录,也包括<code>&lt;T commit&gt;</code>记录或<code>&lt;T abort&gt;</code>记录。</p> \n<p>假设系统从崩溃中恢复时日志记录如下</p> \n<pre><code>&lt;T0 start&gt;\n&lt;T0,A,1000,950&gt;\n&lt;T0,B,2000,2050&gt;\n&lt;T0 commit&gt;\n&lt;T1 start&gt;\n&lt;T1,C,700,600&gt;\n\n</code></pre> \n<p>由于T0既有start记录又有commit记录,将会对事务T0进行重做,执行相应的redo操作。 由于T1只有start记录,将会对T1进行撤销,执行相应的undo操作,撤销完毕将写入一条abort记录。</p> \n<p>###3.5 事务故障中止/正常回滚的恢复流程</p> \n<ol> \n <li><p>从后往前扫描日志,对于事务T的每个形如<code>&lt;T,X,V1,V2&gt;</code>的记录,将旧值V1写入数据项X中。</p> </li> \n <li><p>往日志中写一个特殊的只读记录<code>&lt;T,X,V1&gt;</code>,表示将数据项恢复成旧值V1, 这是一个只读的补偿记录,不需要根据它进行undo。</p> </li> \n <li><p>一旦发现了<code>&lt;T start&gt;</code>日志记录,就停止继续扫描,并往日志中写一个 <code>&lt;T abort&gt;</code>日志记录。 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110847191.png\" title=\"\" alt=\"\"></p> </li> \n</ol> \n<p>###3.6 系统崩溃时的恢复过程(带检查点)</p> \n<p>检查点是形如<code>&lt;checkpoint L&gt;</code>的特殊的日志记录,L是写入检查点记录时还未提交的事务的集合,系统保证在检查点之前已经提交的事务对数据库的修改已经写入磁盘,不需要进行redo。检查点可以加快恢复的过程。</p> \n<p>系统奔溃时的恢复过程分为两个阶段:重做阶段和撤销阶段。</p> \n<p>重做阶段:</p> \n<ol> \n <li><p>系统从最后一个检查点开始正向的扫描日志,将要重做的事务的列表undo-list设置为检查点日志记录中的L列表。</p> </li> \n <li><p>发现<code>&lt;T,X,V1,V2&gt;</code>的更新记录或<code>&lt;T,X,V&gt;</code>的补偿撤销记录,就重做该操作。</p> </li> \n <li><p>发现<code>&lt;T start&gt;</code>记录,就把T加入到undo-list中。</p> </li> \n <li><p>发现<code>&lt;T abort&gt;</code>或<code>&lt;T commit&gt;</code>记录,就把T从undo-list中去除。</p> </li> \n</ol> \n<p>撤销阶段:</p> \n<ol> \n <li><p>系统从尾部开始反向扫描日志</p> </li> \n <li><p>发现属于undo-list中的事务的日志记录,就执行undo操作</p> </li> \n <li><p>发现undo-list中事务的T的<code>&lt;T start&gt;</code>记录,就写入一条<code>&lt;T abort&gt;</code>记录, 并把T从undo-list中去除。</p> </li> \n</ol> \n<p>4.undo-list为空,则撤销阶段结束</p> \n<p>总结:先将日志记录中所有事务的更新按顺序重做一遍,在针对需要撤销的事务按相反的顺序执行其更新操作的撤销操作。</p> \n<p>####3.6.1 一个系统崩溃恢复的例子</p> \n<p>恢复前的日志如下,写入最后一条日志记录后系统崩溃</p> \n<pre><code>&lt;T0 start&gt;\n&lt;T0,B,2000,2050&gt;\n&lt;T2 commit&gt;\n&lt;T1 start&gt;\n&lt;checkpoint {T0,T1}&gt;   //之前T2已经commit,故不用重做\n&lt;T1,C,700,600&gt;\n&lt;T1 commit&gt;\n&lt;T2 start&gt;\n&lt;T2,A,500,400&gt;\n&lt;T0,B,2000&gt;\n&lt;T0 abort&gt;   //T0回滚完成,插入该记录后系统崩溃\n\n\n</code></pre> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110852428.png\" title=\"\" alt=\"\"></p> \n<p>##4. 总结 事务是数据库系统进行并发控制的基本单位,是数据库系统进行故障恢复的基本单位,从而也是保持数据库状态一致性的基本单位。ACID是事务的基本特性,数据库系统是通过并发控制技术和日志恢复技术来对事务的ACID进行保证的,从而可以得到如下的关于数据库事务的概念体系结构。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514110844316.png\" title=\"\" alt=\"\"></p> \n<p>##5. 参考资料 《数据库系统概论》 《数据库系统概念》</p>',NULL,0,2,1,0,0,'[TOC]前言事务是数据库系统中的重要概念,了解这一概念是以正确的方式开发和数据库交互的应用程序的前提。但是很多开发者对于事务的认识相对片面和肤浅,仅仅把它等同于ACID,不了解数据库系统引入事务','数据库事务',1,'2020-05-14 11:08:54','2020-05-14 16:25:12'),(98,'【原创】那些年用过的Redis集群架构（含面试解析）',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2 id=\"引言\">引言</h2> \n<p>今天是2019年2月12号，也就是大年初八，我接到了高中同学刘有码面试失利的消息。</p> \n<p>他面试的时候，身份是某知名公司的小码农一枚，却因为不懂自己生产上Redis是如何部署的，导致面试失败！</p> \n<p>人间惨剧，莫过于此。</p> \n<p>接到他面试失利的消息，我差点发出猪一样的笑声，显然是平时太少关注孤独烟这个公众号！</p> \n<p>我提笔6次，放笔6次，差点因为过于兴奋而没法编下去。最后还是硬着头皮写下了本文!</p> \n<p>因此,今天我们来谈谈<strong>Redis集群</strong>这个话题，需要说明的是本文</p> \n<ul> \n <li>适合人群：不知道自己生产redis集群架构，以及对Redis集群不了解的人</li> \n <li>不适合群: 对自己生产Redis集群架构非常了解的人</li> \n</ul> \n<p>本文预计分两个部分</p> \n<ul> \n <li>第一部分:讲讲Redis集群架构的发展</li> \n <li>第二部分:烟哥彩蛋环节，讲讲面试注意事项！</li> \n</ul> \n<p><code>ps</code>:<strong>烟哥彩蛋</strong>环节的内容，小白<strong>必背！必背！必背！</strong></p> \n<h2 id=\"正文\">正文</h2> \n<p>老规矩，我还是以循序渐进的方式来讲，我一共经历过三套集群架构的演进！</p> \n<h3 id=\"replicationsentinel\">Replication+Sentinel</h3> \n<p>这套架构使用的是社区版本推出的原生高可用解决方案，其架构图如下！<br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514150553883.jpg\" title=\"\" alt=\"\"></p> \n<p>这里Sentinel的作用有三个:</p> \n<ul> \n <li><strong>监控</strong>:Sentinel 会不断的检查主服务器和从服务器是否正常运行。</li> \n <li><strong>通知</strong>:当被监控的某个redis服务器出现问题，Sentinel通过API脚本向管理员或者其他的应用程序发送通知。</li> \n <li><strong>自动故障转移</strong>:当主节点不能正常工作时，Sentinel会开始一次自动的故障转移操作，它会将与失效主节点是主从关系 的其中一个从节点升级为新的主节点，并且将其他的从节点指向新的主节点。</li> \n</ul> \n<p>工作原理就是，当Master宕机的时候，Sentinel会选举出新的Master，并根据Sentinel中<code>client-reconfig-script</code>脚本配置的内容，去动态修改VIP(虚拟IP)，将VIP(虚拟IP)指向新的Master。我们的客户端就连向指定的VIP即可！<br> 故障发生后的转移情况，可以理解为下图<br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514150551211.jpg\" title=\"\" alt=\"\"></p> \n<p>缺陷:<br> (1)主从切换的过程中会丢数据<br> (2)Redis只能单点写，不能水平扩容</p> \n<h3 id=\"proxyreplicationsentinel\">Proxy+Replication+Sentinel</h3> \n<p>这里的Proxy目前有两种选择:Codis和Twemproxy。我经历这套架构的时间为2015年，当时我好像咨询过我的主管为啥不用Codis和Redis官网的Redis Cluster。原因有二:</p> \n<ul> \n <li>据说是因为Codis开源的比较晚，考虑到更换组件的成本问题。毕竟本来运行好好的东西，你再去换组件，风险是很大的。</li> \n <li>Redis Cluster在2015年还是试用版，不保证会遇到什么问题，因此不敢尝试。</li> \n</ul> \n<p>所以我没接触过Codis，之前一直用的是Twemproxy作为Proxy。<br> 这里以Twemproxy为例说明，如下图所示<br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514150553574.png\" title=\"\" alt=\"\"></p> \n<p>工作原理如下</p> \n<ul> \n <li>前端使用Twemproxy+KeepAlived做代理，将其后端的多台Redis实例分片进行统一管理与分配</li> \n <li>每一个分片节点的Slave都是Master的副本且只读</li> \n <li>Sentinel持续不断的监控每个分片节点的Master，当Master出现故障且不可用状态时，Sentinel会通知/启动自动故障转移等动作</li> \n <li>Sentinel 可以在发生故障转移动作后触发相应脚本（通过 client-reconfig-script 参数配置 ），脚本获取到最新的Master来修改Twemproxy配置</li> \n</ul> \n<p>缺陷:<br> (1)部署结构超级复杂<br> (2)可扩展性差，进行扩缩容需要手动干预<br> (3)运维不方便</p> \n<h3 id=\"redis-cluster\">Redis Cluster</h3> \n<p>我经历这套架构的时间为2017年，在这个时间Redis Cluster已经很成熟了！你们在网上能查到的大部分缺点，在我接触到的时候基本已经解决!<br> 比如没有完善的运维工具？可以参照一下搜狐出的<code>CacheCloud</code>。<br> 比如没有公司在生产用过？我接触到的时候，百度贴吧，美团等大厂都用过了。<br> 比如没有Release版？我接触到的时候距离Redis Cluster发布Release版已经很久。<br> 而且毕竟是官网出的，肯定会一直维护、更新下去，未来必定会更加成熟、稳定。换句话说，Redis不倒，Redis Cluster就不会放弃维护。所以，我推荐还是这套架构!<br> 如下图所示<br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514150550674.png\" title=\"\" alt=\"\"></p> \n<p>工作原理如下</p> \n<ul> \n <li>客户端与Redis节点直连,不需要中间Proxy层，直接连接任意一个Master节点</li> \n <li>根据公式<code>HASH_SLOT=CRC16(key) mod 16384</code>，计算出映射到哪个分片上，然后Redis会去相应的节点进行操作</li> \n</ul> \n<p>具有如下优点:<br> (1)无需Sentinel哨兵监控，如果Master挂了，Redis Cluster内部自动将Slave切换Master<br> (2)可以进行水平扩容<br> (3)支持自动化迁移，当出现某个Slave宕机了，那么就只有Master了，这时候的高可用性就无法很好的保证了，万一master也宕机了，咋办呢？ 针对这种情况，如果说其他Master有多余的Slave ，集群自动把多余的Slave迁移到没有Slave的Master 中。</p> \n<p>缺点:<br> (1)批量操作是个坑<br> (2)资源隔离性较差，容易出现相互影响的情况。</p> \n<h3 id=\"烟哥彩蛋\">烟哥彩蛋</h3> \n<p>在面试中如果碰到下列问题，如何应用上本篇的知识呢？先明确一点，我推荐的是Redis Cluster。<br> OK，开始举例说明</p> \n<p>问题1:懂Redis事务么？<br> <code>正常版</code>：Redis事务是一些列redis命令的集合,blabla...<br> <code>高调版</code>: 我们在生产上采用的是Redis Cluster集群架构，不同的key是有可能分配在不同的Redis节点上的，在这种情况下Redis的事务机制是不生效的。其次，Redis事务不支持回滚操作，简直是鸡肋！所以基本不用！</p> \n<p>问题2:Redis的多数据库机制，了解多少？<br> <code>正常版</code>：Redis支持多个数据库，并且每个数据库的数据是隔离的不能共享，单机下的redis可以支持16个数据库（db0 ~ db15）<br> <code>高调版</code>: 在Redis Cluster集群架构下只有一个数据库空间，即db0。因此，我们没有使用Redis的多数据库功能！</p> \n<p>问题3:Redis集群机制中，你觉得有什么不足的地方吗？<br> <code>正常版</code>: 不知道<br> <code>高调版</code>: 假设我有一个key，对应的value是Hash类型的。如果Hash对象非常大，是不支持映射到不同节点的！只能映射到集群中的一个节点上！还有就是做批量操作比较麻烦！</p> \n<p>问题4:懂Redis的批量操作么？<br> <code>正常版</code>: 懂一点。比如mset、mget操作等，blabla<br> <code>高调版</code>: 我们在生产上采用的是Redis Cluster集群架构，不同的key会划分到不同的slot中，因此直接使用mset或者mget等操作是行不通的。</p> \n<p>问题5:那在Redis集群模式下，如何进行批量操作？<br> <code>正常版</code>:不知道<br> <code>高调版</code>:这个问题其实可以写一篇文章了，改天写。这里说一种有一个很简单的答法，足够面试用。即:<br> 如果执行的key数量比较少，就不用mget了，就用串行get操作。如果真的需要执行的key很多，就使用Hashtag保证这些key映射到同一台redis节点上。简单来说语法如下</p> \n<blockquote> \n <p><strong>对于key为{foo}.student1、{foo}.student2，{foo}student3，这类key一定是在同一个redis节点上。因为key中“{}”之间的字符串就是当前key的hash tags， 只有key中{ }中的部分才被用来做hash，因此计算出来的redis节点一定是同一个!</strong></p> \n</blockquote> \n<p><code>ps</code>:如果你用的是Proxy分片集群架构，例如Codis这种，会将mget/mset的多个key拆分成多个命令发往不同得redis实例，这里不多说。我推荐答的还是redis cluster。</p> \n<p>问题6:你们有对Redis做读写分离么？<br> <code>正常版</code>:没有做，至于原因额。。。额。。。额。。没办法了，硬着头皮扯~<br> <code>高调版</code>:不做读写分离。我们用的是Redis Cluster的架构，是属于分片集群的架构。而redis本身在内存上操作，不会涉及IO吞吐，即使读写分离也不会提升太多性能，Redis在生产上的主要问题是考虑容量，单机最多10-20G，key太多降低redis性能.因此采用分片集群结构，已经能保证了我们的性能。其次，用上了读写分离后，还要考虑主从一致性，主从延迟等问题，徒增业务复杂度。</p> \n<h2 id=\"总结\">总结</h2> \n<p>本文讲了redis集群架构的演进，以及面试注意事项，希望大家有所收获!</p>',NULL,0,2,1,0,0,'引言今天是2019年2月12号，也就是大年初八，我接到了高中同学刘有码面试失利的消息。他面试的时候，身份是某知名公司的小码农一枚，却因为不懂自己生产上Redis是如何部署的，导致面试失败！人间惨','Redis集群',1,'2020-05-14 15:05:54','2020-05-18 09:48:37'),(99,'Redis高级客户端Lettuce详解',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2 id=\"前提\">前提</h2> \n<p><code>Lettuce</code>是一个<code>Redis</code>的<code>Java</code>驱动包，初识她的时候是使用<code>RedisTemplate</code>的时候遇到点问题<code>Debug</code>到底层的一些源码，发现<code>spring-data-redis</code>的驱动包在某个版本之后替换为<code>Lettuce</code>。<code>Lettuce</code>翻译为<strong>生菜</strong>，没错，就是吃的那种生菜，所以它的<code>Logo</code>长这样：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514154046300.png\" title=\"\" alt=\"\"></p> \n<p>既然能被<code>Spring</code>生态所认可，<code>Lettuce</code>想必有过人之处，于是笔者花时间阅读她的官方文档，整理测试示例，写下这篇文章。编写本文时所使用的版本为<code>Lettuce 5.1.8.RELEASE</code>，<code>SpringBoot 2.1.8.RELEASE</code>，<code>JDK [8,11]</code>。<font color=\"red\">超长警告</font>：这篇文章断断续续花了两周完成，超过4万字.....</p> \n<h2 id=\"lettuce简介\">Lettuce简介</h2> \n<p><code>Lettuce</code>是一个高性能基于<code>Java</code>编写的<code>Redis</code>驱动框架，底层集成了<code>Project Reactor</code>提供天然的反应式编程，通信框架集成了<code>Netty</code>使用了非阻塞<code>IO</code>，<code>5.x</code>版本之后融合了<code>JDK1.8</code>的异步编程特性，在保证高性能的同时提供了十分丰富易用的<code>API</code>，<code>5.1</code>版本的新特性如下：</p> \n<ul> \n <li>支持<code>Redis</code>的新增命令<code>ZPOPMIN, ZPOPMAX, BZPOPMIN, BZPOPMAX</code>。</li> \n <li>支持通过<code>Brave</code>模块跟踪<code>Redis</code>命令执行。</li> \n <li>支持<code>Redis Streams</code>。</li> \n <li>支持异步的主从连接。</li> \n <li>支持异步连接池。</li> \n <li>新增命令最多执行一次模式（禁止自动重连）。</li> \n <li>全局命令超时设置（对异步和反应式命令也有效）。</li> \n <li>......等等</li> \n</ul> \n<p><strong>注意一点</strong>：<code>Redis</code>的版本至少需要<code>2.6</code>，当然越高越好，<code>API</code>的兼容性比较强大。</p> \n<p>只需要引入单个依赖就可以开始愉快地使用<code>Lettuce</code>：</p> \n<ul> \n <li>Maven</li> \n</ul> \n<pre><code class=\"language-xml\">&lt;dependency&gt;\n    &lt;groupId&gt;io.lettuce&lt;/groupId&gt;\n    &lt;artifactId&gt;lettuce-core&lt;/artifactId&gt;\n    &lt;version&gt;5.1.8.RELEASE&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> \n<ul> \n <li>Gradle</li> \n</ul> \n<pre><code class=\"language-shell\">dependencies {\n  compile \'io.lettuce:lettuce-core:5.1.8.RELEASE\'\n}\n</code></pre> \n<h2 id=\"连接redis\">连接Redis</h2> \n<p>单机、哨兵、集群模式下连接<code>Redis</code>需要一个统一的标准去表示连接的细节信息，在<code>Lettuce</code>中这个统一的标准是<code>RedisURI</code>。可以通过三种方式构造一个<code>RedisURI</code>实例：</p> \n<ul> \n <li>定制的字符串<code>URI</code>语法：</li> \n</ul> \n<pre><code class=\"language-java\">RedisURI uri = RedisURI.create(\"redis://localhost/\");\n</code></pre> \n<ul> \n <li>使用建造器（<code>RedisURI.Builder</code>）：</li> \n</ul> \n<pre><code class=\"language-java\">RedisURI uri = RedisURI.builder().withHost(\"localhost\").withPort(6379).build();\n</code></pre> \n<ul> \n <li>直接通过构造函数实例化：</li> \n</ul> \n<pre><code class=\"language-java\">RedisURI uri = new RedisURI(\"localhost\", 6379, 60, TimeUnit.SECONDS);\n</code></pre> \n<h3 id=\"定制的连接uri语法\">定制的连接URI语法</h3> \n<ul> \n <li>单机（前缀为<code>redis://</code>）</li> \n</ul> \n<pre><code class=\"language-shell\">格式：redis://[password@]host[:port][/databaseNumber][?[timeout=timeout[d|h|m|s|ms|us|ns]]\n完整：redis://mypassword@127.0.0.1:6379/0?timeout=10s\n简单：redis://localhost\n</code></pre> \n<ul> \n <li>单机并且使用<code>SSL</code>（前缀为<code>rediss://</code>） &lt;== 注意后面多了个<code>s</code></li> \n</ul> \n<pre><code class=\"language-shell\">格式：rediss://[password@]host[:port][/databaseNumber][?[timeout=timeout[d|h|m|s|ms|us|ns]]\n完整：rediss://mypassword@127.0.0.1:6379/0?timeout=10s\n简单：rediss://localhost\n</code></pre> \n<ul> \n <li>单机<code>Unix Domain Sockets</code>模式（前缀为<code>redis-socket://</code>）</li> \n</ul> \n<pre><code class=\"language-shell\">格式：redis-socket://path[?[timeout=timeout[d|h|m|s|ms|us|ns]][&amp;_database=database_]]\n完整：redis-socket:///tmp/redis?timeout=10s&amp;_database=0\n</code></pre> \n<ul> \n <li>哨兵（前缀为<code>redis-sentinel://</code>）</li> \n</ul> \n<pre><code class=\"language-shell\">格式：redis-sentinel://[password@]host[:port][,host2[:port2]][/databaseNumber][?[timeout=timeout[d|h|m|s|ms|us|ns]]#sentinelMasterId\n完整：redis-sentinel://mypassword@127.0.0.1:6379,127.0.0.1:6380/0?timeout=10s#mymaster\n</code></pre> \n<p>超时时间单位：</p> \n<ul> \n <li>d 天</li> \n <li>h 小时</li> \n <li>m 分钟</li> \n <li>s 秒钟</li> \n <li>ms 毫秒</li> \n <li>us 微秒</li> \n <li>ns 纳秒</li> \n</ul> \n<p>个人建议使用<code>RedisURI</code>提供的建造器，毕竟定制的<code>URI</code>虽然简洁，但是比较容易出现人为错误。鉴于笔者没有<code>SSL</code>和<code>Unix Domain Socket</code>的使用场景，下面不对这两种连接方式进行列举。</p> \n<h3 id=\"基本使用\">基本使用</h3> \n<p><code>Lettuce</code>使用的时候依赖于四个主要组件：</p> \n<ul> \n <li><code>RedisURI</code>：连接信息。</li> \n <li><code>RedisClient</code>：<code>Redis</code>客户端，特殊地，集群连接有一个定制的<code>RedisClusterClient</code>。</li> \n <li><code>Connection</code>：<code>Redis</code>连接，主要是<code>StatefulConnection</code>或者<code>StatefulRedisConnection</code>的子类，连接的类型主要由连接的具体方式（单机、哨兵、集群、订阅发布等等）选定，比较重要。</li> \n <li><code>RedisCommands</code>：<code>Redis</code>命令<code>API</code>接口，<strong>基本上覆盖了<code>Redis</code>发行版本的所有命令</strong>，提供了同步（<code>sync</code>）、异步（<code>async</code>）、反应式（<code>reative</code>）的调用方式，对于使用者而言，会经常跟<code>RedisCommands</code>系列接口打交道。</li> \n</ul> \n<p>一个基本使用例子如下：</p> \n<pre><code class=\"language-java\">@Test\npublic void testSetGet() throws Exception {\n    RedisURI redisUri = RedisURI.builder()                    // &lt;1&gt; 创建单机连接的连接信息\n            .withHost(\"localhost\")\n            .withPort(6379)\n            .withTimeout(Duration.of(10, ChronoUnit.SECONDS))\n            .build();\n    RedisClient redisClient = RedisClient.create(redisUri);   // &lt;2&gt; 创建客户端\n    StatefulRedisConnection&lt;String, String&gt; connection = redisClient.connect();     // &lt;3&gt; 创建线程安全的连接\n    RedisCommands&lt;String, String&gt; redisCommands = connection.sync();                // &lt;4&gt; 创建同步命令\n    SetArgs setArgs = SetArgs.Builder.nx().ex(5);\n    String result = redisCommands.set(\"name\", \"throwable\", setArgs);\n    Assertions.assertThat(result).isEqualToIgnoringCase(\"OK\");\n    result = redisCommands.get(\"name\");\n    Assertions.assertThat(result).isEqualTo(\"throwable\");\n    // ... 其他操作\n    connection.close();   // &lt;5&gt; 关闭连接\n    redisClient.shutdown();  // &lt;6&gt; 关闭客户端\n}\n</code></pre> \n<p>注意：</p> \n<ul> \n <li><strong>&lt;5&gt;</strong>：关闭连接一般在应用程序停止之前操作，一个应用程序中的一个<code>Redis</code>驱动实例不需要太多的连接（一般情况下只需要一个连接实例就可以，如果有多个连接的需要可以考虑使用连接池，其实<code>Redis</code>目前处理命令的模块是单线程，在客户端多个连接多线程调用理论上没有效果）。</li> \n <li><strong>&lt;6&gt;</strong>：关闭客户端一般应用程序停止之前操作，如果条件允许的话，基于<strong>后开先闭</strong>原则，客户端关闭应该在连接关闭之后操作。</li> \n</ul> \n<h2 id=\"api\">API</h2> \n<p><code>Lettuce</code>主要提供三种<code>API</code>：</p> \n<ul> \n <li>同步（<code>sync</code>）：<code>RedisCommands</code>。</li> \n <li>异步（<code>async</code>）：<code>RedisAsyncCommands</code>。</li> \n <li>反应式（<code>reactive</code>）：<code>RedisReactiveCommands</code>。</li> \n</ul> \n<p>先准备好一个单机<code>Redis</code>连接备用：</p> \n<pre><code class=\"language-java\">private static StatefulRedisConnection&lt;String, String&gt; CONNECTION;\nprivate static RedisClient CLIENT;\n\n@BeforeClass\npublic static void beforeClass() {\n    RedisURI redisUri = RedisURI.builder()\n            .withHost(\"localhost\")\n            .withPort(6379)\n            .withTimeout(Duration.of(10, ChronoUnit.SECONDS))\n            .build();\n    CLIENT = RedisClient.create(redisUri);\n    CONNECTION = CLIENT.connect();\n}\n\n@AfterClass\npublic static void afterClass() throws Exception {\n    CONNECTION.close();\n    CLIENT.shutdown();\n}\n</code></pre> \n<p><code>Redis</code>命令<code>API</code>的具体实现可以直接从<code>StatefulRedisConnection</code>实例获取，见其接口定义：</p> \n<pre><code class=\"language-java\">public interface StatefulRedisConnection&lt;K, V&gt; extends StatefulConnection&lt;K, V&gt; {\n\n    boolean isMulti();\n\n    RedisCommands&lt;K, V&gt; sync();\n\n    RedisAsyncCommands&lt;K, V&gt; async();\n\n    RedisReactiveCommands&lt;K, V&gt; reactive();\n}    \n</code></pre> \n<p>值得注意的是，在不指定编码解码器<code>RedisCodec</code>的前提下，<code>RedisClient</code>创建的<code>StatefulRedisConnection</code>实例一般是泛型实例<code>StatefulRedisConnection&lt;String,String&gt;</code>，也就是所有命令<code>API</code>的<code>KEY</code>和<code>VALUE</code>都是<code>String</code>类型，这种使用方式能满足大部分的使用场景。当然，必要的时候可以定制编码解码器<code>RedisCodec&lt;K,V&gt;</code>。</p> \n<h3 id=\"同步api\">同步API</h3> \n<p>先构建<code>RedisCommands</code>实例：</p> \n<pre><code class=\"language-java\">private static RedisCommands&lt;String, String&gt; COMMAND;\n\n@BeforeClass\npublic static void beforeClass() {\n    COMMAND = CONNECTION.sync();\n}\n</code></pre> \n<p>基本使用：</p> \n<pre><code class=\"language-java\">@Test\npublic void testSyncPing() throws Exception {\n   String pong = COMMAND.ping();\n   Assertions.assertThat(pong).isEqualToIgnoringCase(\"PONG\");\n}\n\n\n@Test\npublic void testSyncSetAndGet() throws Exception {\n    SetArgs setArgs = SetArgs.Builder.nx().ex(5);\n    COMMAND.set(\"name\", \"throwable\", setArgs);\n    String value = COMMAND.get(\"name\");\n    log.info(\"Get value: {}\", value);\n}\n\n// Get value: throwable\n</code></pre> \n<p>同步<code>API</code>在所有命令调用之后会立即返回结果。如果熟悉<code>Jedis</code>的话，<code>RedisCommands</code>的用法其实和它相差不大。</p> \n<h3 id=\"异步api\">异步API</h3> \n<p>先构建<code>RedisAsyncCommands</code>实例：</p> \n<pre><code class=\"language-java\">private static RedisAsyncCommands&lt;String, String&gt; ASYNC_COMMAND;\n\n@BeforeClass\npublic static void beforeClass() {\n    ASYNC_COMMAND = CONNECTION.async();\n}\n</code></pre> \n<p>基本使用：</p> \n<pre><code class=\"language-java\">@Test\npublic void testAsyncPing() throws Exception {\n    RedisFuture&lt;String&gt; redisFuture = ASYNC_COMMAND.ping();\n    log.info(\"Ping result:{}\", redisFuture.get());\n}\n// Ping result:PONG\n</code></pre> \n<p><code>RedisAsyncCommands</code>所有方法执行返回结果都是<code>RedisFuture</code>实例，而<code>RedisFuture</code>接口的定义如下：</p> \n<pre><code class=\"language-java\">public interface RedisFuture&lt;V&gt; extends CompletionStage&lt;V&gt;, Future&lt;V&gt; {\n\n    String getError();\n\n    boolean await(long timeout, TimeUnit unit) throws InterruptedException;\n}    \n</code></pre> \n<p>也就是，<code>RedisFuture</code>可以无缝使用<code>Future</code>或者<code>JDK</code>1.8中引入的<code>CompletableFuture</code>提供的方法。举个例子：</p> \n<pre><code class=\"language-java\">@Test\npublic void testAsyncSetAndGet1() throws Exception {\n    SetArgs setArgs = SetArgs.Builder.nx().ex(5);\n    RedisFuture&lt;String&gt; future = ASYNC_COMMAND.set(\"name\", \"throwable\", setArgs);\n    // CompletableFuture#thenAccept()\n    future.thenAccept(value -&gt; log.info(\"Set命令返回:{}\", value));\n    // Future#get()\n    future.get();\n}\n// Set命令返回:OK\n\n@Test\npublic void testAsyncSetAndGet2() throws Exception {\n    SetArgs setArgs = SetArgs.Builder.nx().ex(5);\n    CompletableFuture&lt;Void&gt; result =\n            (CompletableFuture&lt;Void&gt;) ASYNC_COMMAND.set(\"name\", \"throwable\", setArgs)\n                    .thenAcceptBoth(ASYNC_COMMAND.get(\"name\"),\n                            (s, g) -&gt; {\n                                log.info(\"Set命令返回:{}\", s);\n                                log.info(\"Get命令返回:{}\", g);\n                            });\n    result.get();\n}\n// Set命令返回:OK\n// Get命令返回:throwable\n</code></pre> \n<p>如果能熟练使用<code>CompletableFuture</code>和函数式编程技巧，可以组合多个<code>RedisFuture</code>完成一些列复杂的操作。</p> \n<h3 id=\"反应式api\">反应式API</h3> \n<p><code>Lettuce</code>引入的反应式编程框架是<a href=\"https://projectreactor.io\">Project Reactor</a>，如果没有反应式编程经验可以先自行了解一下<code>Project Reactor</code>。</p> \n<p>构建<code>RedisReactiveCommands</code>实例：</p> \n<pre><code class=\"language-java\">private static RedisReactiveCommands&lt;String, String&gt; REACTIVE_COMMAND;\n\n@BeforeClass\npublic static void beforeClass() {\n    REACTIVE_COMMAND = CONNECTION.reactive();\n}\n</code></pre> \n<p>根据<code>Project Reactor</code>，<code>RedisReactiveCommands</code>的方法如果返回的结果只包含0或1个元素，那么返回值类型是<code>Mono</code>，如果返回的结果包含0到N（N大于0）个元素，那么返回值是<code>Flux</code>。举个例子：</p> \n<pre><code class=\"language-java\">@Test\npublic void testReactivePing() throws Exception {\n    Mono&lt;String&gt; ping = REACTIVE_COMMAND.ping();\n    ping.subscribe(v -&gt; log.info(\"Ping result:{}\", v));\n    Thread.sleep(1000);\n}\n// Ping result:PONG\n\n@Test\npublic void testReactiveSetAndGet() throws Exception {\n    SetArgs setArgs = SetArgs.Builder.nx().ex(5);\n    REACTIVE_COMMAND.set(\"name\", \"throwable\", setArgs).block();\n    REACTIVE_COMMAND.get(\"name\").subscribe(value -&gt; log.info(\"Get命令返回:{}\", value));\n    Thread.sleep(1000);\n}\n// Get命令返回:throwable\n\n@Test\npublic void testReactiveSet() throws Exception {\n    REACTIVE_COMMAND.sadd(\"food\", \"bread\", \"meat\", \"fish\").block();\n    Flux&lt;String&gt; flux = REACTIVE_COMMAND.smembers(\"food\");\n    flux.subscribe(log::info);\n    REACTIVE_COMMAND.srem(\"food\", \"bread\", \"meat\", \"fish\").block();\n    Thread.sleep(1000);\n}\n// meat\n// bread\n// fish\n</code></pre> \n<p>举个更加复杂的例子，包含了事务、函数转换等：</p> \n<pre><code class=\"language-java\">@Test\npublic void testReactiveFunctional() throws Exception {\n    REACTIVE_COMMAND.multi().doOnSuccess(r -&gt; {\n        REACTIVE_COMMAND.set(\"counter\", \"1\").doOnNext(log::info).subscribe();\n        REACTIVE_COMMAND.incr(\"counter\").doOnNext(c -&gt; log.info(String.valueOf(c))).subscribe();\n    }).flatMap(s -&gt; REACTIVE_COMMAND.exec())\n            .doOnNext(transactionResult -&gt; log.info(\"Discarded:{}\", transactionResult.wasDiscarded()))\n            .subscribe();\n    Thread.sleep(1000);\n}\n// OK\n// 2\n// Discarded:false\n</code></pre> \n<p>这个方法开启一个事务，先把<code>counter</code>设置为1，再将<code>counter</code>自增1。</p> \n<h3 id=\"发布和订阅\">发布和订阅</h3> \n<p>非集群模式下的发布订阅依赖于定制的连接<code>StatefulRedisPubSubConnection</code>，集群模式下的发布订阅依赖于定制的连接<code>StatefulRedisClusterPubSubConnection</code>，两者分别来源于<code>RedisClient#connectPubSub()</code>系列方法和<code>RedisClusterClient#connectPubSub()</code>：</p> \n<ul> \n <li>非集群模式：</li> \n</ul> \n<pre><code class=\"language-java\">// 可能是单机、普通主从、哨兵等非集群模式的客户端\nRedisClient client = ...\nStatefulRedisPubSubConnection&lt;String, String&gt; connection = client.connectPubSub();\nconnection.addListener(new RedisPubSubListener&lt;String, String&gt;() { ... });\n\n// 同步命令\nRedisPubSubCommands&lt;String, String&gt; sync = connection.sync();\nsync.subscribe(\"channel\");\n\n// 异步命令\nRedisPubSubAsyncCommands&lt;String, String&gt; async = connection.async();\nRedisFuture&lt;Void&gt; future = async.subscribe(\"channel\");\n\n// 反应式命令\nRedisPubSubReactiveCommands&lt;String, String&gt; reactive = connection.reactive();\nreactive.subscribe(\"channel\").subscribe();\n\nreactive.observeChannels().doOnNext(patternMessage -&gt; {...}).subscribe()\n</code></pre> \n<ul> \n <li>集群模式：</li> \n</ul> \n<pre><code class=\"language-java\">// 使用方式其实和非集群模式基本一致\nRedisClusterClient clusterClient = ...\nStatefulRedisClusterPubSubConnection&lt;String, String&gt; connection = clusterClient.connectPubSub();\nconnection.addListener(new RedisPubSubListener&lt;String, String&gt;() { ... });\nRedisPubSubCommands&lt;String, String&gt; sync = connection.sync();\nsync.subscribe(\"channel\");\n// ...\n</code></pre> \n<p>这里用单机同步命令的模式举一个<code>Redis</code>键空间通知（<a href=\"https://redis.io/topics/notifications\">Redis Keyspace Notifications</a>）的例子：</p> \n<pre><code class=\"language-java\">@Test\npublic void testSyncKeyspaceNotification() throws Exception {\n    RedisURI redisUri = RedisURI.builder()\n            .withHost(\"localhost\")\n            .withPort(6379)\n            // 注意这里只能是0号库\n            .withDatabase(0)\n            .withTimeout(Duration.of(10, ChronoUnit.SECONDS))\n            .build();\n    RedisClient redisClient = RedisClient.create(redisUri);\n    StatefulRedisConnection&lt;String, String&gt; redisConnection = redisClient.connect();\n    RedisCommands&lt;String, String&gt; redisCommands = redisConnection.sync();\n    // 只接收键过期的事件\n    redisCommands.configSet(\"notify-keyspace-events\", \"Ex\");\n    StatefulRedisPubSubConnection&lt;String, String&gt; connection = redisClient.connectPubSub();\n    connection.addListener(new RedisPubSubAdapter&lt;&gt;() {\n\n        @Override\n        public void psubscribed(String pattern, long count) {\n            log.info(\"pattern:{},count:{}\", pattern, count);\n        }\n\n        @Override\n        public void message(String pattern, String channel, String message) {\n            log.info(\"pattern:{},channel:{},message:{}\", pattern, channel, message);\n        }\n    });\n    RedisPubSubCommands&lt;String, String&gt; commands = connection.sync();\n    commands.psubscribe(\"__keyevent@0__:expired\");\n    redisCommands.setex(\"name\", 2, \"throwable\");\n    Thread.sleep(10000);\n    redisConnection.close();\n    connection.close();\n    redisClient.shutdown();\n}\n// pattern:__keyevent@0__:expired,count:1\n// pattern:__keyevent@0__:expired,channel:__keyevent@0__:expired,message:name\n</code></pre> \n<p>实际上，在实现<code>RedisPubSubListener</code>的时候可以单独抽离，尽量不要设计成匿名内部类的形式。</p> \n<h3 id=\"事务和批量命令执行\">事务和批量命令执行</h3> \n<p>事务相关的命令就是<code>WATCH</code>、<code>UNWATCH</code>、<code>EXEC</code>、<code>MULTI</code>和<code>DISCARD</code>，在<code>RedisCommands</code>系列接口中有对应的方法。举个例子：</p> \n<pre><code class=\"language-java\">// 同步模式\n@Test\npublic void testSyncMulti() throws Exception {\n    COMMAND.multi();\n    COMMAND.setex(\"name-1\", 2, \"throwable\");\n    COMMAND.setex(\"name-2\", 2, \"doge\");\n    TransactionResult result = COMMAND.exec();\n    int index = 0;\n    for (Object r : result) {\n        log.info(\"Result-{}:{}\", index, r);\n        index++;\n    }\n}\n// Result-0:OK\n// Result-1:OK\n</code></pre> \n<p><code>Redis</code>的<code>Pipeline</code>也就是管道机制可以理解为把多个命令打包在一次请求发送到<code>Redis</code>服务端，然后<code>Redis</code>服务端把所有的响应结果打包好一次性返回，从而节省不必要的网络资源（最主要是减少网络请求次数）。<code>Redis</code>对于<code>Pipeline</code>机制如何实现并没有明确的规定，也没有提供特殊的命令支持<code>Pipeline</code>机制。<code>Jedis</code>中底层采用<code>BIO</code>（阻塞IO）通讯，所以它的做法是客户端缓存将要发送的命令，最后需要触发然后同步发送一个巨大的命令列表包，再接收和解析一个巨大的响应列表包。<code>Pipeline</code>在<code>Lettuce</code>中对使用者是透明的，由于底层的通讯框架是<code>Netty</code>，所以网络通讯层面的优化<code>Lettuce</code>不需要过多干预，换言之可以这样理解：<code>Netty</code>帮<code>Lettuce</code>从底层实现了<code>Redis</code>的<code>Pipeline</code>机制。但是，<code>Lettuce</code>的异步<code>API</code>也提供了手动<code>Flush</code>的方法：</p> \n<pre><code class=\"language-java\">@Test\npublic void testAsyncManualFlush() {\n    // 取消自动flush\n    ASYNC_COMMAND.setAutoFlushCommands(false);\n    List&lt;RedisFuture&lt;?&gt;&gt; redisFutures = Lists.newArrayList();\n    int count = 5000;\n    for (int i = 0; i &lt; count; i++) {\n        String key = \"key-\" + (i + 1);\n        String value = \"value-\" + (i + 1);\n        redisFutures.add(ASYNC_COMMAND.set(key, value));\n        redisFutures.add(ASYNC_COMMAND.expire(key, 2));\n    }\n    long start = System.currentTimeMillis();\n    ASYNC_COMMAND.flushCommands();\n    boolean result = LettuceFutures.awaitAll(10, TimeUnit.SECONDS, redisFutures.toArray(new RedisFuture[0]));\n    Assertions.assertThat(result).isTrue();\n    log.info(\"Lettuce cost:{} ms\", System.currentTimeMillis() - start);\n}\n// Lettuce cost:1302 ms\n</code></pre> \n<p>上面只是从文档看到的一些理论术语，但是现实是骨感的，对比了下<code>Jedis</code>的<code>Pipeline</code>提供的方法，发现了<code>Jedis</code>的<code>Pipeline</code>执行耗时比较低：</p> \n<pre><code class=\"language-java\">@Test\npublic void testJedisPipeline() throws Exception {\n    Jedis jedis = new Jedis();\n    Pipeline pipeline = jedis.pipelined();\n    int count = 5000;\n    for (int i = 0; i &lt; count; i++) {\n        String key = \"key-\" + (i + 1);\n        String value = \"value-\" + (i + 1);\n        pipeline.set(key, value);\n        pipeline.expire(key, 2);\n    }\n    long start = System.currentTimeMillis();\n    pipeline.syncAndReturnAll();\n    log.info(\"Jedis cost:{} ms\", System.currentTimeMillis()  - start);\n}\n// Jedis cost:9 ms\n</code></pre> \n<p>个人猜测<code>Lettuce</code>可能底层并非合并所有命令一次发送（甚至可能是单条发送），具体可能需要抓包才能定位。依此来看，如果真的有大量执行<code>Redis</code>命令的场景，不妨可以使用<code>Jedis</code>的<code>Pipeline</code>。</p> \n<p><strong>注意</strong>：由上面的测试推断<code>RedisTemplate</code>的<code>executePipelined()</code>方法是<strong><font color=\"red\">假的</font></strong><code>Pipeline</code>执行方法，使用<code>RedisTemplate</code>的时候请务必注意这一点。</p> \n<h3 id=\"lua脚本执行\">Lua脚本执行</h3> \n<p><code>Lettuce</code>中执行<code>Redis</code>的<code>Lua</code>命令的同步接口如下：</p> \n<pre><code class=\"language-java\">public interface RedisScriptingCommands&lt;K, V&gt; {\n\n    &lt;T&gt; T eval(String var1, ScriptOutputType var2, K... var3);\n\n    &lt;T&gt; T eval(String var1, ScriptOutputType var2, K[] var3, V... var4);\n\n    &lt;T&gt; T evalsha(String var1, ScriptOutputType var2, K... var3);\n\n    &lt;T&gt; T evalsha(String var1, ScriptOutputType var2, K[] var3, V... var4);\n\n    List&lt;Boolean&gt; scriptExists(String... var1);\n\n    String scriptFlush();\n\n    String scriptKill();\n\n    String scriptLoad(V var1);\n\n    String digest(V var1);\n}\n</code></pre> \n<p>异步和反应式的接口方法定义差不多，不同的地方就是返回值类型，一般我们常用的是<code>eval()</code>、<code>evalsha()</code>和<code>scriptLoad()</code>方法。举个简单的例子：</p> \n<pre><code class=\"language-java\">private static RedisCommands&lt;String, String&gt; COMMANDS;\nprivate static String RAW_LUA = \"local key = KEYS[1]\\n\" +\n        \"local value = ARGV[1]\\n\" +\n        \"local timeout = ARGV[2]\\n\" +\n        \"redis.call(\'SETEX\', key, tonumber(timeout), value)\\n\" +\n        \"local result = redis.call(\'GET\', key)\\n\" +\n        \"return result;\";\nprivate static AtomicReference&lt;String&gt; LUA_SHA = new AtomicReference&lt;&gt;();\n\n@Test\npublic void testLua() throws Exception {\n    LUA_SHA.compareAndSet(null, COMMANDS.scriptLoad(RAW_LUA));\n    String[] keys = new String[]{\"name\"};\n    String[] args = new String[]{\"throwable\", \"5000\"};\n    String result = COMMANDS.evalsha(LUA_SHA.get(), ScriptOutputType.VALUE, keys, args);\n    log.info(\"Get value:{}\", result);\n}\n// Get value:throwable\n</code></pre> \n<h2 id=\"高可用和分片\">高可用和分片</h2> \n<p>为了<code>Redis</code>的高可用，一般会采用普通主从（<code>Master/Replica</code>，这里笔者称为普通主从模式，也就是仅仅做了主从复制，故障需要手动切换）、哨兵和集群。普通主从模式可以独立运行，也可以配合哨兵运行，只是哨兵提供自动故障转移和主节点提升功能。普通主从和哨兵都可以使用<code>MasterSlave</code>，通过入参包括<code>RedisClient</code>、编码解码器以及一个或者多个<code>RedisURI</code>获取对应的<code>Connection</code>实例。</p> \n<p>这里<strong>注意一点</strong>，<code>MasterSlave</code>中提供的方法如果只要求传入一个<code>RedisURI</code>实例，那么<code>Lettuce</code>会进行<strong>拓扑发现机制</strong>，自动获取<code>Redis</code>主从节点信息；如果要求传入一个<code>RedisURI</code>集合，那么对于普通主从模式来说所有节点信息是静态的，不会进行发现和更新。</p> \n<p><strong>拓扑发现的规则如下：</strong></p> \n<ul> \n <li>对于普通主从（<code>Master/Replica</code>）模式，不需要感知<code>RedisURI</code>指向从节点还是主节点，只会进行一次性的拓扑查找所有节点信息，此后节点信息会保存在静态缓存中，不会更新。</li> \n <li>对于哨兵模式，会订阅所有哨兵实例并侦听订阅/发布消息以触发拓扑刷新机制，更新缓存的节点信息，也就是哨兵天然就是动态发现节点信息，不支持静态配置。</li> \n</ul> \n<p>拓扑发现机制的提供<code>API</code>为<code>TopologyProvider</code>，需要了解其原理的可以参考具体的实现。</p> \n<p>对于集群（<code>Cluster</code>）模式，<code>Lettuce</code>提供了一套独立的<code>API</code>。</p> \n<p>另外，如果<code>Lettuce</code>连接面向的是非单个<code>Redis</code>节点，连接实例提供了<strong>数据读取节点偏好</strong>（<code>ReadFrom</code>）设置，可选值有：</p> \n<ul> \n <li><code>MASTER</code>：只从<code>Master</code>节点中读取。</li> \n <li><code>MASTER_PREFERRED</code>：优先从<code>Master</code>节点中读取。</li> \n <li><code>SLAVE_PREFERRED</code>：优先从<code>Slavor</code>节点中读取。</li> \n <li><code>SLAVE</code>：只从<code>Slavor</code>节点中读取。</li> \n <li><code>NEAREST</code>：使用最近一次连接的<code>Redis</code>实例读取。</li> \n</ul> \n<h3 id=\"普通主从模式\">普通主从模式</h3> \n<p>假设现在有三个<code>Redis</code>服务形成树状主从关系如下：</p> \n<ul> \n <li>节点一：localhost:6379，角色为Master。</li> \n <li>节点二：localhost:6380，角色为Slavor，节点一的从节点。</li> \n <li>节点三：localhost:6381，角色为Slavor，节点二的从节点。</li> \n</ul> \n<p>首次动态节点发现主从模式的节点信息需要如下构建连接：</p> \n<pre><code class=\"language-java\">@Test\npublic void testDynamicReplica() throws Exception {\n    // 这里只需要配置一个节点的连接信息，不一定需要是主节点的信息，从节点也可以\n    RedisURI uri = RedisURI.builder().withHost(\"localhost\").withPort(6379).build();\n    RedisClient redisClient = RedisClient.create(uri);\n    StatefulRedisMasterSlaveConnection&lt;String, String&gt; connection = MasterSlave.connect(redisClient, new Utf8StringCodec(), uri);\n    // 只从从节点读取数据\n    connection.setReadFrom(ReadFrom.SLAVE);\n    // 执行其他Redis命令\n    connection.close();\n    redisClient.shutdown();\n}\n</code></pre> \n<p>如果需要指定静态的<code>Redis</code>主从节点连接属性，那么可以这样构建连接：</p> \n<pre><code class=\"language-java\">@Test\npublic void testStaticReplica() throws Exception {\n    List&lt;RedisURI&gt; uris = new ArrayList&lt;&gt;();\n    RedisURI uri1 = RedisURI.builder().withHost(\"localhost\").withPort(6379).build();\n    RedisURI uri2 = RedisURI.builder().withHost(\"localhost\").withPort(6380).build();\n    RedisURI uri3 = RedisURI.builder().withHost(\"localhost\").withPort(6381).build();\n    uris.add(uri1);\n    uris.add(uri2);\n    uris.add(uri3);\n    RedisClient redisClient = RedisClient.create();\n    StatefulRedisMasterSlaveConnection&lt;String, String&gt; connection = MasterSlave.connect(redisClient,\n            new Utf8StringCodec(), uris);\n    // 只从主节点读取数据\n    connection.setReadFrom(ReadFrom.MASTER);\n    // 执行其他Redis命令\n    connection.close();\n    redisClient.shutdown();\n}\n</code></pre> \n<h3 id=\"哨兵模式\">哨兵模式</h3> \n<p>由于<code>Lettuce</code>自身提供了哨兵的拓扑发现机制，所以只需要随便配置一个哨兵节点的<code>RedisURI</code>实例即可：</p> \n<pre><code class=\"language-java\">@Test\npublic void testDynamicSentinel() throws Exception {\n    RedisURI redisUri = RedisURI.builder()\n            .withPassword(\"你的密码\")\n            .withSentinel(\"localhost\", 26379)\n            .withSentinelMasterId(\"哨兵Master的ID\")\n            .build();\n    RedisClient redisClient = RedisClient.create();\n    StatefulRedisMasterSlaveConnection&lt;String, String&gt; connection = MasterSlave.connect(redisClient, new Utf8StringCodec(), redisUri);\n    // 只允许从从节点读取数据\n    connection.setReadFrom(ReadFrom.SLAVE);\n    RedisCommands&lt;String, String&gt; command = connection.sync();\n    SetArgs setArgs = SetArgs.Builder.nx().ex(5);\n    command.set(\"name\", \"throwable\", setArgs);\n    String value = command.get(\"name\");\n    log.info(\"Get value:{}\", value);\n}\n// Get value:throwable\n</code></pre> \n<h3 id=\"集群模式\">集群模式</h3> \n<p>鉴于笔者对<code>Redis</code>集群模式并不熟悉，<code>Cluster</code>模式下的<code>API</code>使用本身就有比较多的限制，所以这里只简单介绍一下怎么用。先说几个特性：</p> \n<p><strong>下面的API提供跨槽位（<code>Slot</code>）调用的功能</strong>：</p> \n<ul> \n <li><code>RedisAdvancedClusterCommands</code>。</li> \n <li><code>RedisAdvancedClusterAsyncCommands</code>。</li> \n <li><code>RedisAdvancedClusterReactiveCommands</code>。</li> \n</ul> \n<p><strong>静态节点选择功能：</strong></p> \n<ul> \n <li><code>masters</code>：选择所有主节点执行命令。</li> \n <li><code>slaves</code>：选择所有从节点执行命令，其实就是只读模式。</li> \n <li><code>all nodes</code>：命令可以在所有节点执行。</li> \n</ul> \n<p><strong>集群拓扑视图动态更新功能：</strong></p> \n<ul> \n <li>手动更新，主动调用<code>RedisClusterClient#reloadPartitions()</code>。</li> \n <li>后台定时更新。</li> \n <li>自适应更新，基于连接断开和<code>MOVED/ASK</code>命令重定向自动更新。</li> \n</ul> \n<p><code>Redis</code>集群搭建详细过程可以参考官方文档，假设已经搭建好集群如下（<code>192.168.56.200</code>是笔者的虚拟机Host）：</p> \n<ul> \n <li>192.168.56.200:7001 =&gt; 主节点，槽位0-5460。</li> \n <li>192.168.56.200:7002 =&gt; 主节点，槽位5461-10922。</li> \n <li>192.168.56.200:7003 =&gt; 主节点，槽位10923-16383。</li> \n <li>192.168.56.200:7004 =&gt; 7001的从节点。</li> \n <li>192.168.56.200:7005 =&gt; 7002的从节点。</li> \n <li>192.168.56.200:7006 =&gt; 7003的从节点。</li> \n</ul> \n<p>简单的集群连接和使用方式如下：</p> \n<pre><code class=\"language-java\">@Test\npublic void testSyncCluster(){\n    RedisURI uri = RedisURI.builder().withHost(\"192.168.56.200\").build();\n    RedisClusterClient redisClusterClient = RedisClusterClient.create(uri);\n    StatefulRedisClusterConnection&lt;String, String&gt; connection = redisClusterClient.connect();\n    RedisAdvancedClusterCommands&lt;String, String&gt; commands = connection.sync();\n    commands.setex(\"name\",10, \"throwable\");\n    String value = commands.get(\"name\");\n    log.info(\"Get value:{}\", value);\n}\n// Get value:throwable\n</code></pre> \n<p>节点选择：</p> \n<pre><code class=\"language-java\">@Test\npublic void testSyncNodeSelection() {\n    RedisURI uri = RedisURI.builder().withHost(\"192.168.56.200\").withPort(7001).build();\n    RedisClusterClient redisClusterClient = RedisClusterClient.create(uri);\n    StatefulRedisClusterConnection&lt;String, String&gt; connection = redisClusterClient.connect();\n    RedisAdvancedClusterCommands&lt;String, String&gt; commands = connection.sync();\n//  commands.all();  // 所有节点\n//  commands.masters();  // 主节点\n    // 从节点只读\n    NodeSelection&lt;String, String&gt; replicas = commands.slaves();\n    NodeSelectionCommands&lt;String, String&gt; nodeSelectionCommands = replicas.commands();\n    // 这里只是演示,一般应该禁用keys *命令\n    Executions&lt;List&lt;String&gt;&gt; keys = nodeSelectionCommands.keys(\"*\");\n    keys.forEach(key -&gt; log.info(\"key: {}\", key));\n    connection.close();\n    redisClusterClient.shutdown();\n}\n</code></pre> \n<p>定时更新集群拓扑视图（每隔十分钟更新一次，这个时间自行考量，不能太频繁）：</p> \n<pre><code class=\"language-java\">@Test\npublic void testPeriodicClusterTopology() throws Exception {\n    RedisURI uri = RedisURI.builder().withHost(\"192.168.56.200\").withPort(7001).build();\n    RedisClusterClient redisClusterClient = RedisClusterClient.create(uri);\n    ClusterTopologyRefreshOptions options = ClusterTopologyRefreshOptions\n            .builder()\n            .enablePeriodicRefresh(Duration.of(10, ChronoUnit.MINUTES))\n            .build();\n    redisClusterClient.setOptions(ClusterClientOptions.builder().topologyRefreshOptions(options).build());\n    StatefulRedisClusterConnection&lt;String, String&gt; connection = redisClusterClient.connect();\n    RedisAdvancedClusterCommands&lt;String, String&gt; commands = connection.sync();\n    commands.setex(\"name\", 10, \"throwable\");\n    String value = commands.get(\"name\");\n    log.info(\"Get value:{}\", value);\n    Thread.sleep(Integer.MAX_VALUE);\n    connection.close();\n    redisClusterClient.shutdown();\n}\n</code></pre> \n<p>自适应更新集群拓扑视图：</p> \n<pre><code class=\"language-java\">@Test\npublic void testAdaptiveClusterTopology() throws Exception {\n    RedisURI uri = RedisURI.builder().withHost(\"192.168.56.200\").withPort(7001).build();\n    RedisClusterClient redisClusterClient = RedisClusterClient.create(uri);\n    ClusterTopologyRefreshOptions options = ClusterTopologyRefreshOptions.builder()\n            .enableAdaptiveRefreshTrigger(\n                    ClusterTopologyRefreshOptions.RefreshTrigger.MOVED_REDIRECT,\n                    ClusterTopologyRefreshOptions.RefreshTrigger.PERSISTENT_RECONNECTS\n            )\n            .adaptiveRefreshTriggersTimeout(Duration.of(30, ChronoUnit.SECONDS))\n            .build();\n    redisClusterClient.setOptions(ClusterClientOptions.builder().topologyRefreshOptions(options).build());\n    StatefulRedisClusterConnection&lt;String, String&gt; connection = redisClusterClient.connect();\n    RedisAdvancedClusterCommands&lt;String, String&gt; commands = connection.sync();\n    commands.setex(\"name\", 10, \"throwable\");\n    String value = commands.get(\"name\");\n    log.info(\"Get value:{}\", value);\n    Thread.sleep(Integer.MAX_VALUE);\n    connection.close();\n    redisClusterClient.shutdown();\n}\n</code></pre> \n<h2 id=\"动态命令和自定义命令\">动态命令和自定义命令</h2> \n<p>自定义命令是<code>Redis</code>命令有限集，不过可以更细粒度指定<code>KEY</code>、<code>ARGV</code>、命令类型、编码解码器和返回值类型，依赖于<code>dispatch()</code>方法：</p> \n<pre><code class=\"language-java\">// 自定义实现PING方法\n@Test\npublic void testCustomPing() throws Exception {\n    RedisURI redisUri = RedisURI.builder()\n            .withHost(\"localhost\")\n            .withPort(6379)\n            .withTimeout(Duration.of(10, ChronoUnit.SECONDS))\n            .build();\n    RedisClient redisClient = RedisClient.create(redisUri);\n    StatefulRedisConnection&lt;String, String&gt; connect = redisClient.connect();\n    RedisCommands&lt;String, String&gt; sync = connect.sync();\n    RedisCodec&lt;String, String&gt; codec = StringCodec.UTF8;\n    String result = sync.dispatch(CommandType.PING, new StatusOutput&lt;&gt;(codec));\n    log.info(\"PING:{}\", result);\n    connect.close();\n    redisClient.shutdown();\n}\n// PING:PONG\n\n// 自定义实现Set方法\n@Test\npublic void testCustomSet() throws Exception {\n    RedisURI redisUri = RedisURI.builder()\n            .withHost(\"localhost\")\n            .withPort(6379)\n            .withTimeout(Duration.of(10, ChronoUnit.SECONDS))\n            .build();\n    RedisClient redisClient = RedisClient.create(redisUri);\n    StatefulRedisConnection&lt;String, String&gt; connect = redisClient.connect();\n    RedisCommands&lt;String, String&gt; sync = connect.sync();\n    RedisCodec&lt;String, String&gt; codec = StringCodec.UTF8;\n    sync.dispatch(CommandType.SETEX, new StatusOutput&lt;&gt;(codec),\n            new CommandArgs&lt;&gt;(codec).addKey(\"name\").add(5).addValue(\"throwable\"));\n    String result = sync.get(\"name\");\n    log.info(\"Get value:{}\", result);\n    connect.close();\n    redisClient.shutdown();\n}\n// Get value:throwable\n</code></pre> \n<p>动态命令是基于<code>Redis</code>命令有限集，并且通过注解和动态代理完成一些复杂命令组合的实现。主要注解在<code>io.lettuce.core.dynamic.annotation</code>包路径下。简单举个例子：</p> \n<pre><code class=\"language-java\">public interface CustomCommand extends Commands {\n\n    // SET [key] [value]\n    @Command(\"SET ?0 ?1\")\n    String setKey(String key, String value);\n\n    // SET [key] [value]\n    @Command(\"SET :key :value\")\n    String setKeyNamed(@Param(\"key\") String key, @Param(\"value\") String value);\n\n    // MGET [key1] [key2]\n    @Command(\"MGET ?0 ?1\")\n    List&lt;String&gt; mGet(String key1, String key2);\n    /**\n     * 方法名作为命令\n     */\n    @CommandNaming(strategy = CommandNaming.Strategy.METHOD_NAME)\n    String mSet(String key1, String value1, String key2, String value2);\n}\n\n\n@Test\npublic void testCustomDynamicSet() throws Exception {\n    RedisURI redisUri = RedisURI.builder()\n            .withHost(\"localhost\")\n            .withPort(6379)\n            .withTimeout(Duration.of(10, ChronoUnit.SECONDS))\n            .build();\n    RedisClient redisClient = RedisClient.create(redisUri);\n    StatefulRedisConnection&lt;String, String&gt; connect = redisClient.connect();\n    RedisCommandFactory commandFactory = new RedisCommandFactory(connect);\n    CustomCommand commands = commandFactory.getCommands(CustomCommand.class);\n    commands.setKey(\"name\", \"throwable\");\n    commands.setKeyNamed(\"throwable\", \"doge\");\n    log.info(\"MGET ===&gt; \" + commands.mGet(\"name\", \"throwable\"));\n    commands.mSet(\"key1\", \"value1\",\"key2\", \"value2\");\n    log.info(\"MGET ===&gt; \" + commands.mGet(\"key1\", \"key2\"));\n    connect.close();\n    redisClient.shutdown();\n}\n// MGET ===&gt; [throwable, doge]\n// MGET ===&gt; [value1, value2]\n</code></pre> \n<h2 id=\"高阶特性\">高阶特性</h2> \n<p><code>Lettuce</code>有很多高阶使用特性，这里只列举个人认为常用的两点：</p> \n<ul> \n <li>配置客户端资源。</li> \n <li>使用连接池。</li> \n</ul> \n<p>更多其他特性可以自行参看官方文档。</p> \n<h3 id=\"配置客户端资源\">配置客户端资源</h3> \n<p>客户端资源的设置与<code>Lettuce</code>的性能、并发和事件处理相关。线程池或者线程组相关配置占据客户端资源配置的大部分（<code>EventLoopGroups</code>和<code>EventExecutorGroup</code>），这些线程池或者线程组是连接程序的基础组件。一般情况下，客户端资源应该在多个<code>Redis</code>客户端之间共享，并且在不再使用的时候需要自行关闭。笔者认为，客户端资源是面向<code>Netty</code>的。<strong>注意</strong>：<font color=\"red\">除非特别熟悉或者花长时间去测试调整下面提到的参数，否则在没有经验的前提下凭直觉修改默认值，有可能会踩坑</font>。</p> \n<p>客户端资源接口是<code>ClientResources</code>，实现类是<code>DefaultClientResources</code>。</p> \n<p>构建<code>DefaultClientResources</code>实例：</p> \n<pre><code class=\"language-java\">// 默认\nClientResources resources = DefaultClientResources.create();\n\n// 建造器\nClientResources resources = DefaultClientResources.builder()\n                        .ioThreadPoolSize(4)\n                        .computationThreadPoolSize(4)\n                        .build()\n</code></pre> \n<p>使用：</p> \n<pre><code class=\"language-java\">ClientResources resources = DefaultClientResources.create();\n// 非集群\nRedisClient client = RedisClient.create(resources, uri);\n// 集群\nRedisClusterClient clusterClient = RedisClusterClient.create(resources, uris);\n// ......\nclient.shutdown();\nclusterClient.shutdown();\n// 关闭资源\nresources.shutdown();\n</code></pre> \n<p><strong>客户端资源基本配置：</strong></p> \n<table> \n <thead> \n  <tr> \n   <th style=\"text-align:center\">属性</th> \n   <th style=\"text-align:center\">描述</th> \n   <th style=\"text-align:center\">默认值</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td style=\"text-align:center\"><code>ioThreadPoolSize</code></td> \n   <td style=\"text-align:center\"><code>I/O</code>线程数</td> \n   <td style=\"text-align:center\"><code>Runtime.getRuntime().availableProcessors()</code></td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>computationThreadPoolSize</code></td> \n   <td style=\"text-align:center\">任务线程数</td> \n   <td style=\"text-align:center\"><code>Runtime.getRuntime().availableProcessors()</code></td> \n  </tr> \n </tbody> \n</table> \n<p><strong>客户端资源高级配置：</strong></p> \n<table> \n <thead> \n  <tr> \n   <th style=\"text-align:center\">属性</th> \n   <th style=\"text-align:center\">描述</th> \n   <th style=\"text-align:center\">默认值</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td style=\"text-align:center\"><code>eventLoopGroupProvider</code></td> \n   <td style=\"text-align:center\"><code>EventLoopGroup</code>提供商</td> \n   <td style=\"text-align:center\">-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>eventExecutorGroupProvider</code></td> \n   <td style=\"text-align:center\"><code>EventExecutorGroup</code>提供商</td> \n   <td style=\"text-align:center\">-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>eventBus</code></td> \n   <td style=\"text-align:center\">事件总线</td> \n   <td style=\"text-align:center\"><code>DefaultEventBus</code></td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>commandLatencyCollectorOptions</code></td> \n   <td style=\"text-align:center\">命令延时收集器配置</td> \n   <td style=\"text-align:center\"><code>DefaultCommandLatencyCollectorOptions</code></td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>commandLatencyCollector</code></td> \n   <td style=\"text-align:center\">命令延时收集器</td> \n   <td style=\"text-align:center\"><code>DefaultCommandLatencyCollector</code></td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>commandLatencyPublisherOptions</code></td> \n   <td style=\"text-align:center\">命令延时发布器配置</td> \n   <td style=\"text-align:center\"><code>DefaultEventPublisherOptions</code></td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>dnsResolver</code></td> \n   <td style=\"text-align:center\"><code>DNS</code>处理器</td> \n   <td style=\"text-align:center\">JDK或者<code>Netty</code>提供</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>reconnectDelay</code></td> \n   <td style=\"text-align:center\">重连延时配置</td> \n   <td style=\"text-align:center\"><code>Delay.exponential()</code></td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>nettyCustomizer</code></td> \n   <td style=\"text-align:center\"><code>Netty</code>自定义配置器</td> \n   <td style=\"text-align:center\">-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>tracing</code></td> \n   <td style=\"text-align:center\">轨迹记录器</td> \n   <td style=\"text-align:center\">-</td> \n  </tr> \n </tbody> \n</table> \n<p><strong>非集群客户端<code>RedisClient</code>的属性配置：</strong></p> \n<p><code>Redis</code>非集群客户端<code>RedisClient</code>本身提供了配置属性方法：</p> \n<pre><code class=\"language-java\">RedisClient client = RedisClient.create(uri);\nclient.setOptions(ClientOptions.builder()\n                       .autoReconnect(false)\n                       .pingBeforeActivateConnection(true)\n                       .build());\n</code></pre> \n<p>非集群客户端的配置属性列表：</p> \n<table> \n <thead> \n  <tr> \n   <th style=\"text-align:center\">属性</th> \n   <th style=\"text-align:center\">描述</th> \n   <th style=\"text-align:center\">默认值</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td style=\"text-align:center\"><code>pingBeforeActivateConnection</code></td> \n   <td style=\"text-align:center\">连接激活之前是否执行<code>PING</code>命令</td> \n   <td style=\"text-align:center\">false</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>autoReconnect</code></td> \n   <td style=\"text-align:center\">是否自动重连</td> \n   <td style=\"text-align:center\">true</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>cancelCommandsOnReconnectFailure</code></td> \n   <td style=\"text-align:center\">重连失败是否拒绝命令执行</td> \n   <td style=\"text-align:center\">false</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>suspendReconnectOnProtocolFailure</code></td> \n   <td style=\"text-align:center\">底层协议失败是否挂起重连操作</td> \n   <td style=\"text-align:center\">false</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>requestQueueSize</code></td> \n   <td style=\"text-align:center\">请求队列容量</td> \n   <td style=\"text-align:center\">2147483647(Integer#MAX_VALUE)</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>disconnectedBehavior</code></td> \n   <td style=\"text-align:center\">失去连接时候的行为</td> \n   <td style=\"text-align:center\"><code>DEFAULT</code></td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>sslOptions</code></td> \n   <td style=\"text-align:center\"><code>SSL配置</code></td> \n   <td style=\"text-align:center\">-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>socketOptions</code></td> \n   <td style=\"text-align:center\"><code>Socket</code>配置</td> \n   <td style=\"text-align:center\"><code>10 seconds Connection-Timeout, no keep-alive, no TCP noDelay</code></td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>timeoutOptions</code></td> \n   <td style=\"text-align:center\">超时配置</td> \n   <td style=\"text-align:center\">-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>publishOnScheduler</code></td> \n   <td style=\"text-align:center\">发布反应式信号数据的调度器</td> \n   <td style=\"text-align:center\">使用<code>I/O</code>线程</td> \n  </tr> \n </tbody> \n</table> \n<p><strong>集群客户端属性配置：</strong></p> \n<p><code>Redis</code>集群客户端<code>RedisClusterClient</code>本身提供了配置属性方法：</p> \n<pre><code class=\"language-java\">RedisClusterClient client = RedisClusterClient.create(uri);\nClusterTopologyRefreshOptions topologyRefreshOptions = ClusterTopologyRefreshOptions.builder()\n                .enablePeriodicRefresh(refreshPeriod(10, TimeUnit.MINUTES))\n                .enableAllAdaptiveRefreshTriggers()\n                .build();\n\nclient.setOptions(ClusterClientOptions.builder()\n                       .topologyRefreshOptions(topologyRefreshOptions)\n                       .build());\n</code></pre> \n<p>集群客户端的配置属性列表：</p> \n<table> \n <thead> \n  <tr> \n   <th style=\"text-align:center\">属性</th> \n   <th style=\"text-align:center\">描述</th> \n   <th style=\"text-align:center\">默认值</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td style=\"text-align:center\"><code>enablePeriodicRefresh</code></td> \n   <td style=\"text-align:center\">是否允许周期性更新集群拓扑视图</td> \n   <td style=\"text-align:center\">false</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>refreshPeriod</code></td> \n   <td style=\"text-align:center\">更新集群拓扑视图周期</td> \n   <td style=\"text-align:center\">60秒</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>enableAdaptiveRefreshTrigger</code></td> \n   <td style=\"text-align:center\">设置自适应更新集群拓扑视图触发器<code>RefreshTrigger</code></td> \n   <td style=\"text-align:center\">-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>adaptiveRefreshTriggersTimeout</code></td> \n   <td style=\"text-align:center\">自适应更新集群拓扑视图触发器超时设置</td> \n   <td style=\"text-align:center\">30秒</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>refreshTriggersReconnectAttempts</code></td> \n   <td style=\"text-align:center\">自适应更新集群拓扑视图触发重连次数</td> \n   <td style=\"text-align:center\">5</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>dynamicRefreshSources</code></td> \n   <td style=\"text-align:center\">是否允许动态刷新拓扑资源</td> \n   <td style=\"text-align:center\">true</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>closeStaleConnections</code></td> \n   <td style=\"text-align:center\">是否允许关闭陈旧的连接</td> \n   <td style=\"text-align:center\">true</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>maxRedirects</code></td> \n   <td style=\"text-align:center\">集群重定向次数上限</td> \n   <td style=\"text-align:center\">5</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:center\"><code>validateClusterNodeMembership</code></td> \n   <td style=\"text-align:center\">是否校验集群节点的成员关系</td> \n   <td style=\"text-align:center\">true</td> \n  </tr> \n </tbody> \n</table> \n<h3 id=\"使用连接池\">使用连接池</h3> \n<p>引入连接池依赖<code>commons-pool2</code>：</p> \n<pre><code class=\"language-xml\">&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;\n    &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;\n    &lt;version&gt;2.7.0&lt;/version&gt;\n&lt;/dependency\n</code></pre> \n<p>基本使用如下：</p> \n<pre><code class=\"language-java\">@Test\npublic void testUseConnectionPool() throws Exception {\n    RedisURI redisUri = RedisURI.builder()\n            .withHost(\"localhost\")\n            .withPort(6379)\n            .withTimeout(Duration.of(10, ChronoUnit.SECONDS))\n            .build();\n    RedisClient redisClient = RedisClient.create(redisUri);\n    GenericObjectPoolConfig poolConfig = new GenericObjectPoolConfig();\n    GenericObjectPool&lt;StatefulRedisConnection&lt;String, String&gt;&gt; pool\n            = ConnectionPoolSupport.createGenericObjectPool(redisClient::connect, poolConfig);\n    try (StatefulRedisConnection&lt;String, String&gt; connection = pool.borrowObject()) {\n        RedisCommands&lt;String, String&gt; command = connection.sync();\n        SetArgs setArgs = SetArgs.Builder.nx().ex(5);\n        command.set(\"name\", \"throwable\", setArgs);\n        String n = command.get(\"name\");\n        log.info(\"Get value:{}\", n);\n    }\n    pool.close();\n    redisClient.shutdown();\n}\n</code></pre> \n<p>其中，同步连接的池化支持需要用<code>ConnectionPoolSupport</code>，异步连接的池化支持需要用<code>AsyncConnectionPoolSupport</code>（<code>Lettuce</code>5.1之后才支持）。</p> \n<h2 id=\"几个常见的渐进式删除例子\">几个常见的渐进式删除例子</h2> \n<p><strong>渐进式删除Hash中的域-属性：</strong></p> \n<pre><code class=\"language-java\">@Test\npublic void testDelBigHashKey() throws Exception {\n    // SCAN参数\n    ScanArgs scanArgs = ScanArgs.Builder.limit(2);\n    // TEMP游标\n    ScanCursor cursor = ScanCursor.INITIAL;\n    // 目标KEY\n    String key = \"BIG_HASH_KEY\";\n    prepareHashTestData(key);\n    log.info(\"开始渐进式删除Hash的元素...\");\n    int counter = 0;\n    do {\n        MapScanCursor&lt;String, String&gt; result = COMMAND.hscan(key, cursor, scanArgs);\n        // 重置TEMP游标\n        cursor = ScanCursor.of(result.getCursor());\n        cursor.setFinished(result.isFinished());\n        Collection&lt;String&gt; fields = result.getMap().values();\n        if (!fields.isEmpty()) {\n            COMMAND.hdel(key, fields.toArray(new String[0]));\n        }\n        counter++;\n    } while (!(ScanCursor.FINISHED.getCursor().equals(cursor.getCursor()) &amp;&amp; ScanCursor.FINISHED.isFinished() == cursor.isFinished()));\n    log.info(\"渐进式删除Hash的元素完毕,迭代次数:{} ...\", counter);\n}\n\nprivate void prepareHashTestData(String key) throws Exception {\n    COMMAND.hset(key, \"1\", \"1\");\n    COMMAND.hset(key, \"2\", \"2\");\n    COMMAND.hset(key, \"3\", \"3\");\n    COMMAND.hset(key, \"4\", \"4\");\n    COMMAND.hset(key, \"5\", \"5\");\n}\n</code></pre> \n<p><strong>渐进式删除集合中的元素：</strong></p> \n<pre><code class=\"language-java\">@Test\npublic void testDelBigSetKey() throws Exception {\n    String key = \"BIG_SET_KEY\";\n    prepareSetTestData(key);\n    // SCAN参数\n    ScanArgs scanArgs = ScanArgs.Builder.limit(2);\n    // TEMP游标\n    ScanCursor cursor = ScanCursor.INITIAL;\n    log.info(\"开始渐进式删除Set的元素...\");\n    int counter = 0;\n    do {\n        ValueScanCursor&lt;String&gt; result = COMMAND.sscan(key, cursor, scanArgs);\n        // 重置TEMP游标\n        cursor = ScanCursor.of(result.getCursor());\n        cursor.setFinished(result.isFinished());\n        List&lt;String&gt; values = result.getValues();\n        if (!values.isEmpty()) {\n            COMMAND.srem(key, values.toArray(new String[0]));\n        }\n        counter++;\n    } while (!(ScanCursor.FINISHED.getCursor().equals(cursor.getCursor()) &amp;&amp; ScanCursor.FINISHED.isFinished() == cursor.isFinished()));\n    log.info(\"渐进式删除Set的元素完毕,迭代次数:{} ...\", counter);\n}\n\nprivate void prepareSetTestData(String key) throws Exception {\n    COMMAND.sadd(key, \"1\", \"2\", \"3\", \"4\", \"5\");\n}\n</code></pre> \n<p><strong>渐进式删除有序集合中的元素：</strong></p> \n<pre><code class=\"language-java\">@Test\npublic void testDelBigZSetKey() throws Exception {\n    // SCAN参数\n    ScanArgs scanArgs = ScanArgs.Builder.limit(2);\n    // TEMP游标\n    ScanCursor cursor = ScanCursor.INITIAL;\n    // 目标KEY\n    String key = \"BIG_ZSET_KEY\";\n    prepareZSetTestData(key);\n    log.info(\"开始渐进式删除ZSet的元素...\");\n    int counter = 0;\n    do {\n        ScoredValueScanCursor&lt;String&gt; result = COMMAND.zscan(key, cursor, scanArgs);\n        // 重置TEMP游标\n        cursor = ScanCursor.of(result.getCursor());\n        cursor.setFinished(result.isFinished());\n        List&lt;ScoredValue&lt;String&gt;&gt; scoredValues = result.getValues();\n        if (!scoredValues.isEmpty()) {\n            COMMAND.zrem(key, scoredValues.stream().map(ScoredValue&lt;String&gt;::getValue).toArray(String[]::new));\n        }\n        counter++;\n    } while (!(ScanCursor.FINISHED.getCursor().equals(cursor.getCursor()) &amp;&amp; ScanCursor.FINISHED.isFinished() == cursor.isFinished()));\n    log.info(\"渐进式删除ZSet的元素完毕,迭代次数:{} ...\", counter);\n}\n\nprivate void prepareZSetTestData(String key) throws Exception {\n    COMMAND.zadd(key, 0, \"1\");\n    COMMAND.zadd(key, 0, \"2\");\n    COMMAND.zadd(key, 0, \"3\");\n    COMMAND.zadd(key, 0, \"4\");\n    COMMAND.zadd(key, 0, \"5\");\n}\n</code></pre> \n<h2 id=\"在springboot中使用lettuce\">在SpringBoot中使用Lettuce</h2> \n<p>个人认为，<code>spring-data-redis</code>中的<code>API</code>封装并不是很优秀，用起来比较重，不够灵活，这里结合前面的例子和代码，在<code>SpringBoot</code>脚手架项目中配置和整合<code>Lettuce</code>。先引入依赖：</p> \n<pre><code class=\"language-xml\">&lt;dependencyManagement&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;\n            &lt;version&gt;2.1.8.RELEASE&lt;/version&gt;\n            &lt;type&gt;pom&lt;/type&gt;\n            &lt;scope&gt;import&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/dependencyManagement&gt;\n&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n            &lt;dependency&gt;\n        &lt;groupId&gt;io.lettuce&lt;/groupId&gt;\n        &lt;artifactId&gt;lettuce-core&lt;/artifactId&gt;\n        &lt;version&gt;5.1.8.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n        &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;version&gt;1.18.10&lt;/version&gt;\n        &lt;scope&gt;provided&lt;/scope&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;        \n</code></pre> \n<p>一般情况下，每个应用应该使用单个<code>Redis</code>客户端实例和单个连接实例，这里设计一个脚手架，适配单机、普通主从、哨兵和集群四种使用场景。对于客户端资源，采用默认的实现即可。对于<code>Redis</code>的连接属性，比较主要的有<code>Host</code>、<code>Port</code>和<code>Password</code>，其他可以暂时忽略。基于约定大于配置的原则，先定制一系列属性配置类（其实有些配置是可以完全共用，但是考虑到要清晰描述类之间的关系，这里拆分多个配置属性类和多个配置方法）：</p> \n<pre><code class=\"language-java\">@Data\n@ConfigurationProperties(prefix = \"lettuce\")\npublic class LettuceProperties {\n\n    private LettuceSingleProperties single;\n    private LettuceReplicaProperties replica;\n    private LettuceSentinelProperties sentinel;\n    private LettuceClusterProperties cluster;\n\n}\n\n@Data\npublic class LettuceSingleProperties {\n\n    private String host;\n    private Integer port;\n    private String password;\n}\n\n@EqualsAndHashCode(callSuper = true)\n@Data\npublic class LettuceReplicaProperties extends LettuceSingleProperties {\n\n}\n\n@EqualsAndHashCode(callSuper = true)\n@Data\npublic class LettuceSentinelProperties extends LettuceSingleProperties {\n\n    private String masterId;\n}\n\n@EqualsAndHashCode(callSuper = true)\n@Data\npublic class LettuceClusterProperties extends LettuceSingleProperties {\n\n}\n</code></pre> \n<p>配置类如下，主要使用<code>@ConditionalOnProperty</code>做隔离，一般情况下，很少有人会在一个应用使用一种以上的<code>Redis</code>连接场景：</p> \n<pre><code class=\"language-java\">@RequiredArgsConstructor\n@Configuration\n@ConditionalOnClass(name = \"io.lettuce.core.RedisURI\")\n@EnableConfigurationProperties(value = LettuceProperties.class)\npublic class LettuceAutoConfiguration {\n\n    private final LettuceProperties lettuceProperties;\n\n    @Bean(destroyMethod = \"shutdown\")\n    public ClientResources clientResources() {\n        return DefaultClientResources.create();\n    }\n\n    @Bean\n    @ConditionalOnProperty(name = \"lettuce.single.host\")\n    public RedisURI singleRedisUri() {\n        LettuceSingleProperties singleProperties = lettuceProperties.getSingle();\n        return RedisURI.builder()\n                .withHost(singleProperties.getHost())\n                .withPort(singleProperties.getPort())\n                .withPassword(singleProperties.getPassword())\n                .build();\n    }\n\n    @Bean(destroyMethod = \"shutdown\")\n    @ConditionalOnProperty(name = \"lettuce.single.host\")\n    public RedisClient singleRedisClient(ClientResources clientResources, @Qualifier(\"singleRedisUri\") RedisURI redisUri) {\n        return RedisClient.create(clientResources, redisUri);\n    }\n\n    @Bean(destroyMethod = \"close\")\n    @ConditionalOnProperty(name = \"lettuce.single.host\")\n    public StatefulRedisConnection&lt;String, String&gt; singleRedisConnection(@Qualifier(\"singleRedisClient\") RedisClient singleRedisClient) {\n        return singleRedisClient.connect();\n    }\n\n    @Bean\n    @ConditionalOnProperty(name = \"lettuce.replica.host\")\n    public RedisURI replicaRedisUri() {\n        LettuceReplicaProperties replicaProperties = lettuceProperties.getReplica();\n        return RedisURI.builder()\n                .withHost(replicaProperties.getHost())\n                .withPort(replicaProperties.getPort())\n                .withPassword(replicaProperties.getPassword())\n                .build();\n    }\n\n    @Bean(destroyMethod = \"shutdown\")\n    @ConditionalOnProperty(name = \"lettuce.replica.host\")\n    public RedisClient replicaRedisClient(ClientResources clientResources, @Qualifier(\"replicaRedisUri\") RedisURI redisUri) {\n        return RedisClient.create(clientResources, redisUri);\n    }\n\n    @Bean(destroyMethod = \"close\")\n    @ConditionalOnProperty(name = \"lettuce.replica.host\")\n    public StatefulRedisMasterSlaveConnection&lt;String, String&gt; replicaRedisConnection(@Qualifier(\"replicaRedisClient\") RedisClient replicaRedisClient,\n                                                                                     @Qualifier(\"replicaRedisUri\") RedisURI redisUri) {\n        return MasterSlave.connect(replicaRedisClient, new Utf8StringCodec(), redisUri);\n    }\n\n    @Bean\n    @ConditionalOnProperty(name = \"lettuce.sentinel.host\")\n    public RedisURI sentinelRedisUri() {\n        LettuceSentinelProperties sentinelProperties = lettuceProperties.getSentinel();\n        return RedisURI.builder()\n                .withPassword(sentinelProperties.getPassword())\n                .withSentinel(sentinelProperties.getHost(), sentinelProperties.getPort())\n                .withSentinelMasterId(sentinelProperties.getMasterId())\n                .build();\n    }\n\n    @Bean(destroyMethod = \"shutdown\")\n    @ConditionalOnProperty(name = \"lettuce.sentinel.host\")\n    public RedisClient sentinelRedisClient(ClientResources clientResources, @Qualifier(\"sentinelRedisUri\") RedisURI redisUri) {\n        return RedisClient.create(clientResources, redisUri);\n    }\n\n    @Bean(destroyMethod = \"close\")\n    @ConditionalOnProperty(name = \"lettuce.sentinel.host\")\n    public StatefulRedisMasterSlaveConnection&lt;String, String&gt; sentinelRedisConnection(@Qualifier(\"sentinelRedisClient\") RedisClient sentinelRedisClient,\n                                                                                      @Qualifier(\"sentinelRedisUri\") RedisURI redisUri) {\n        return MasterSlave.connect(sentinelRedisClient, new Utf8StringCodec(), redisUri);\n    }\n\n    @Bean\n    @ConditionalOnProperty(name = \"lettuce.cluster.host\")\n    public RedisURI clusterRedisUri() {\n        LettuceClusterProperties clusterProperties = lettuceProperties.getCluster();\n        return RedisURI.builder()\n                .withHost(clusterProperties.getHost())\n                .withPort(clusterProperties.getPort())\n                .withPassword(clusterProperties.getPassword())\n                .build();\n    }\n\n    @Bean(destroyMethod = \"shutdown\")\n    @ConditionalOnProperty(name = \"lettuce.cluster.host\")\n    public RedisClusterClient redisClusterClient(ClientResources clientResources, @Qualifier(\"clusterRedisUri\") RedisURI redisUri) {\n        return RedisClusterClient.create(clientResources, redisUri);\n    }\n\n    @Bean(destroyMethod = \"close\")\n    @ConditionalOnProperty(name = \"lettuce.cluster\")\n    public StatefulRedisClusterConnection&lt;String, String&gt; clusterConnection(RedisClusterClient clusterClient) {\n        return clusterClient.connect();\n    }\n}\n</code></pre> \n<p>最后为了让<code>IDE</code>识别我们的配置，可以添加<code>IDE</code>亲缘性，<code>/META-INF</code>文件夹下新增一个文件<code>spring-configuration-metadata.json</code>，内容如下：</p> \n<pre><code class=\"language-json\">{\n  \"properties\": [\n    {\n      \"name\": \"lettuce.single\",\n      \"type\": \"club.throwable.spring.lettuce.LettuceSingleProperties\",\n      \"description\": \"单机配置\",\n      \"sourceType\": \"club.throwable.spring.lettuce.LettuceProperties\"\n    },\n    {\n      \"name\": \"lettuce.replica\",\n      \"type\": \"club.throwable.spring.lettuce.LettuceReplicaProperties\",\n      \"description\": \"主从配置\",\n      \"sourceType\": \"club.throwable.spring.lettuce.LettuceProperties\"\n    },\n    {\n      \"name\": \"lettuce.sentinel\",\n      \"type\": \"club.throwable.spring.lettuce.LettuceSentinelProperties\",\n      \"description\": \"哨兵配置\",\n      \"sourceType\": \"club.throwable.spring.lettuce.LettuceProperties\"\n    },\n    {\n      \"name\": \"lettuce.single\",\n      \"type\": \"club.throwable.spring.lettuce.LettuceClusterProperties\",\n      \"description\": \"集群配置\",\n      \"sourceType\": \"club.throwable.spring.lettuce.LettuceProperties\"\n    }\n  ]\n}\n</code></pre> \n<p>如果想<code>IDE</code>亲缘性做得更好，可以添加<code>/META-INF/additional-spring-configuration-metadata.json</code>进行更多细节定义。简单使用如下：</p> \n<pre><code class=\"language-java\">@Slf4j\n@Component\npublic class RedisCommandLineRunner implements CommandLineRunner {\n\n    @Autowired\n    @Qualifier(\"singleRedisConnection\")\n    private StatefulRedisConnection&lt;String, String&gt; connection;\n\n    @Override\n    public void run(String... args) throws Exception {\n        RedisCommands&lt;String, String&gt; redisCommands = connection.sync();\n        redisCommands.setex(\"name\", 5, \"throwable\");\n        log.info(\"Get value:{}\", redisCommands.get(\"name\"));\n    }\n}\n// Get value:throwable\n</code></pre> \n<h2 id=\"小结\">小结</h2> \n<p>本文算是基于<code>Lettuce</code>的官方文档，对它的使用进行全方位的分析，包括主要功能、配置都做了一些示例，限于篇幅部分特性和配置细节没有分析。<code>Lettuce</code>已经被<code>spring-data-redis</code>接纳作为官方的<code>Redis</code>客户端驱动，所以值得信赖，它的一些<code>API</code>设计确实比较合理，扩展性高的同时灵活性也高。个人建议，基于<code>Lettuce</code>包自行添加配置到<code>SpringBoot</code>应用用起来会得心应手，毕竟<code>RedisTemplate</code>实在太笨重，而且还屏蔽了<code>Lettuce</code>一些高级特性和灵活的<code>API</code>。</p> \n<p>参考资料：</p> \n<ul> \n <li><a href=\"https://lettuce.io/core/release/reference/index.html\">Lettuce Reference Guide</a></li> \n</ul> \n<h2 id=\"链接\">链接</h2> \n<ul> \n <li>Github Page：<a href=\"http://www.throwable.club/2019/09/28/redis-client-driver-lettuce-usage\">http://www.throwable.club/2019/09/28/redis-client-driver-lettuce-usage</a></li> \n <li>Coding Page：<a href=\"http://throwable.coding.me/2019/09/28/redis-client-driver-lettuce-usage\">http://throwable.coding.me/2019/09/28/redis-client-driver-lettuce-usage</a></li> \n</ul> \n<p>（本文完 c-14-d e-a-20190928 最近事太多...）</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514154046832.png\" title=\"\" alt=\"\"></p>',NULL,0,2,1,0,0,'前提是一个的`JavaRedisTemplateDebugspringdataredisLettuceLettuceLogo`长这样：既然能被生态所认可，想必有过人之处，于是','Lettuce',1,'2020-05-14 15:40:47','2020-05-18 09:48:16'),(100,'聊聊分布式事务，再说说解决方案',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h3 id=\"前言\">前言</h3> \n<p>最近很久没有写博客了，一方面是因为公司事情最近比较忙，另外一方面是因为在进行 <a href=\"http://www.cnblogs.com/savorboard/p/cap.html\">CAP</a> 的下一阶段的开发工作，不过目前已经告一段落了。</p> \n<p>接下来还是开始我们今天的话题，说说分布式事务，或者说是我眼中的分布式事务，因为每个人可能对其的理解都不一样。</p> \n<p>分布式事务是企业集成中的一个技术难点，也是每一个分布式系统架构中都会涉及到的一个东西，特别是在微服务架构中，几乎可以说是无法避免，本文就分布式事务来简单聊一下。</p> \n<h3 id=\"数据库事务\">数据库事务</h3> \n<p>在说分布式事务之前，我们先从数据库事务说起。 数据库事务可能大家都很熟悉，在开发过程中也会经常使用到。但是即使如此，可能对于一些细节问题，很多人仍然不清楚。比如很多人都知道数据库事务的几个特性：原子性(Atomicity )、一致性( Consistency )、隔离性或独立性( Isolation)和持久性(Durabilily)，简称就是ACID。但是再往下比如问到隔离性指的是什么的时候可能就不知道了，或者是知道隔离性是什么但是再问到数据库实现隔离的都有哪些级别，或者是每个级别他们有什么区别的时候可能就不知道了。</p> \n<p>本文并不打算介绍这些数据库事务的这些东西，有兴趣可以搜索一下相关资料。不过有一个知识点我们需要了解，就是假如数据库在提交事务的时候突然断电，那么它是怎么样恢复的呢？ 为什么要提到这个知识点呢？ 因为分布式系统的核心就是处理各种异常情况，这也是分布式系统复杂的地方，因为分布式的网络环境很复杂，这种“断电”故障要比单机多很多，所以我们在做分布式系统的时候，最先考虑的就是这种情况。这些异常可能有 机器宕机、网络异常、消息丢失、消息乱序、数据错误、不可靠的TCP、存储数据丢失、其他异常等等...</p> \n<p>我们接着说本地事务数据库断电的这种情况，它是怎么保证数据一致性的呢？我们使用SQL Server来举例，我们知道我们在使用 SQL Server 数据库是由两个文件组成的，一个数据库文件和一个日志文件，通常情况下，日志文件都要比数据库文件大很多。数据库进行任何写入操作的时候都是要先写日志的，同样的道理，我们在执行事务的时候数据库首先会记录下这个事务的redo操作日志，然后才开始真正操作数据库，在操作之前首先会把日志文件写入磁盘，那么当突然断电的时候，即使操作没有完成，在重新启动数据库时候，数据库会根据当前数据的情况进行undo回滚或者是redo前滚，这样就保证了数据的强一致性。</p> \n<p>接着，我们就说一下分布式事务。</p> \n<h3 id=\"分布式理论\">分布式理论</h3> \n<p>当我们的单个数据库的性能产生瓶颈的时候，我们可能会对数据库进行分区，这里所说的分区指的是物理分区，分区之后可能不同的库就处于不同的服务器上了，这个时候单个数据库的ACID已经不能适应这种情况了，而在这种ACID的集群环境下，再想保证集群的ACID几乎是很难达到，或者即使能达到那么效率和性能会大幅下降，最为关键的是再很难扩展新的分区了，这个时候如果再追求集群的ACID会导致我们的系统变得很差，这时我们就需要引入一个新的理论原则来适应这种集群的情况，就是 CAP 原则或者叫CAP定理，那么CAP定理指的是什么呢？</p> \n<h4 id=\"cap定理\">CAP定理</h4> \n<p>CAP定理是由加州大学伯克利分校Eric Brewer教授提出来的，他指出WEB服务无法同时满足一下3个属性：</p> \n<ul> \n <li>一致性(Consistency) ： 客户端知道一系列的操作都会同时发生(生效)</li> \n <li>可用性(Availability) ： 每个操作都必须以可预期的响应结束</li> \n <li>分区容错性(Partition tolerance) ： 即使出现单个组件无法可用,操作依然可以完成</li> \n</ul> \n<p>具体地讲在分布式系统中，在任何数据库设计中，一个Web应用至多只能同时支持上面的两个属性。显然，任何横向扩展策略都要依赖于数据分区。因此，设计人员必须在一致性与可用性之间做出选择。</p> \n<p><strong>这个定理在迄今为止的分布式系统中都是适用的！</strong> 为什么这么说呢？</p> \n<p>这个时候有同学可能会把数据库的2PC（两阶段提交）搬出来说话了。OK，我们就来看一下数据库的两阶段提交。</p> \n<p>对数据库分布式事务有了解的同学一定知道数据库支持的2PC，又叫做 XA Transactions。</p> \n<blockquote> \n <p>MySQL从5.5版本开始支持，SQL Server 2005 开始支持，Oracle 7 开始支持。</p> \n</blockquote> \n<p>其中，XA 是一个两阶段提交协议，该协议分为以下两个阶段：</p> \n<ul> \n <li>第一阶段：事务协调器要求每个涉及到事务的数据库预提交(precommit)此操作，并反映是否可以提交.</li> \n <li>第二阶段：事务协调器要求每个数据库提交数据。</li> \n</ul> \n<p>其中，如果有任何一个数据库否决此次提交，那么所有数据库都会被要求回滚它们在此事务中的那部分信息。这样做的缺陷是什么呢? 咋看之下我们可以在数据库分区之间获得一致性。</p> \n<p>如果CAP 定理是对的，那么它一定会影响到可用性。</p> \n<p>如果说系统的可用性代表的是执行某项操作相关所有组件的可用性的和。那么在两阶段提交的过程中，可用性就代表了涉及到的每一个数据库中可用性的和。我们假设两阶段提交的过程中每一个数据库都具有99.9%的可用性，那么如果两阶段提交涉及到两个数据库，这个结果就是99.8%。根据系统可用性计算公式，假设每个月43200分钟，99.9%的可用性就是43157分钟, 99.8%的可用性就是43114分钟，相当于每个月的宕机时间增加了43分钟。</p> \n<p>以上，可以验证出来，CAP定理从理论上来讲是正确的，CAP我们先看到这里，等会再接着说。</p> \n<h4 id=\"base理论\">BASE理论</h4> \n<p>在分布式系统中，我们往往追求的是可用性，它的重要程序比一致性要高，那么如何实现高可用性呢？ 前人已经给我们提出来了另外一个理论，就是BASE理论，它是用来对CAP定理进行进一步扩充的。BASE理论指的是：</p> \n<ul> \n <li>Basically Available（基本可用）</li> \n <li>Soft state（软状态）</li> \n <li>Eventually consistent（最终一致性）</li> \n</ul> \n<p>BASE理论是对CAP中的一致性和可用性进行一个权衡的结果，理论的核心思想就是：<strong>我们无法做到强一致，但每个应用都可以根据自身的业务特点，采用适当的方式来使系统达到最终一致性</strong>（Eventual consistency）。</p> \n<p>有了以上理论之后，我们来看一下分布式事务的问题。</p> \n<h3 id=\"分布式事务\">分布式事务</h3> \n<p>在分布式系统中，要实现分布式事务，无外乎那几种解决方案。</p> \n<h4 id=\"一、两阶段提交（2pc）\">一、两阶段提交（2PC）</h4> \n<p>和上一节中提到的数据库XA事务一样，两阶段提交就是使用XA协议的原理，我们可以从下面这个图的流程来很容易的看出中间的一些比如commit和abort的细节。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514161310483.png\" title=\"\" alt=\"\"></p> \n<p>两阶段提交这种解决方案属于牺牲了一部分可用性来换取的一致性。在实现方面，在 .NET 中，可以借助 TransactionScop 提供的 API 来编程实现分布式系统中的两阶段提交，比如WCF中就有实现这部分功能。不过在多服务器之间，需要依赖于DTC来完成事务一致性，Windows下微软搞的有MSDTC服务，Linux下就比较悲剧了。</p> \n<p>另外说一句，TransactionScop 默认不能用于异步方法之间事务一致，因为事务上下文是存储于当前线程中的，所以如果是在异步方法，需要显式的传递事务上下文。</p> \n<p><strong>优点：</strong> 尽量保证了数据的强一致，适合对数据强一致要求很高的关键领域。（其实也不能100%保证强一致）</p> \n<p><strong>缺点：</strong> 实现复杂，牺牲了可用性，对性能影响较大，不适合高并发高性能场景，如果分布式系统跨接口调用，目前 .NET 界还没有实现方案。</p> \n<h4 id=\"二、补偿事务（tcc）\">二、补偿事务（TCC）</h4> \n<p>TCC 其实就是采用的补偿机制，其核心思想是：针对每个操作，都要注册一个与其对应的确认和补偿（撤销）操作。它分为三个阶段：</p> \n<ul> \n <li> <p>Try 阶段主要是对业务系统做检测及资源预留</p> </li> \n <li> <p>Confirm 阶段主要是对业务系统做确认提交，Try阶段执行成功并开始执行 Confirm阶段时，默认 Confirm阶段是不会出错的。即：只要Try成功，Confirm一定成功。</p> </li> \n <li> <p>Cancel 阶段主要是在业务执行错误，需要回滚的状态下执行的业务取消，预留资源释放。</p> </li> \n</ul> \n<p>举个例子，假入 Bob 要向 Smith 转账，思路大概是：<br> 我们有一个本地方法，里面依次调用<br> 1、首先在 Try 阶段，要先调用远程接口把 Smith 和 Bob 的钱给冻结起来。<br> 2、在 Confirm 阶段，执行远程调用的转账的操作，转账成功进行解冻。<br> 3、如果第2步执行成功，那么转账成功，如果第二步执行失败，则调用远程冻结接口对应的解冻方法 (Cancel)。</p> \n<p><strong>优点：</strong> 跟2PC比起来，实现以及流程相对简单了一些，但数据的一致性比2PC也要差一些</p> \n<p><strong>缺点：</strong> 缺点还是比较明显的，在2,3步中都有可能失败。TCC属于应用层的一种补偿方式，所以需要程序员在实现的时候多写很多补偿的代码，在一些场景中，一些业务流程可能用TCC不太好定义及处理。</p> \n<h4 id=\"三、本地消息表（异步确保）\">三、本地消息表（异步确保）</h4> \n<p>本地消息表这种实现方式应该是业界使用最多的，其核心思想是将分布式事务拆分成本地事务进行处理，这种思路是来源于ebay。我们可以从下面的流程图中看出其中的一些细节：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514161311330.png\" title=\"\" alt=\"\"></p> \n<p>基本思路就是：</p> \n<p>消息生产方，需要额外建一个消息表，并记录消息发送状态。消息表和业务数据要在一个事务里提交，也就是说他们要在一个数据库里面。然后消息会经过MQ发送到消息的消费方。如果消息发送失败，会进行重试发送。</p> \n<p>消息消费方，需要处理这个消息，并完成自己的业务逻辑。此时如果本地事务处理成功，表明已经处理成功了，如果处理失败，那么就会重试执行。如果是业务上面的失败，可以给生产方发送一个业务补偿消息，通知生产方进行回滚等操作。</p> \n<p>生产方和消费方定时扫描本地消息表，把还没处理完成的消息或者失败的消息再发送一遍。如果有靠谱的自动对账补账逻辑，这种方案还是非常实用的。</p> \n<p>这种方案遵循BASE理论，采用的是最终一致性，笔者认为是这几种方案里面比较适合实际业务场景的，即不会出现像2PC那样复杂的实现(当调用链很长的时候，2PC的可用性是非常低的)，也不会像TCC那样可能出现确认或者回滚不了的情况。</p> \n<p><strong>优点：</strong> 一种非常经典的实现，避免了分布式事务，实现了最终一致性。在 .NET中 有现成的解决方案。</p> \n<p><strong>缺点：</strong> 消息表会耦合到业务系统中，如果没有封装好的解决方案，会有很多杂活需要处理。</p> \n<h4 id=\"四、mq-事务消息\">四、MQ 事务消息</h4> \n<p>有一些第三方的MQ是支持事务消息的，比如RocketMQ，他们支持事务消息的方式也是类似于采用的二阶段提交，但是市面上一些主流的MQ都是不支持事务消息的，比如 RabbitMQ 和 Kafka 都不支持。</p> \n<p>以阿里的 RocketMQ 中间件为例，其思路大致为：</p> \n<p>第一阶段Prepared消息，会拿到消息的地址。<br> 第二阶段执行本地事务，第三阶段通过第一阶段拿到的地址去访问消息，并修改状态。</p> \n<p>也就是说在业务方法内要想消息队列提交两次请求，一次发送消息和一次确认消息。如果确认消息发送失败了RocketMQ会定期扫描消息集群中的事务消息，这时候发现了Prepared消息，它会向消息发送者确认，所以生产方需要实现一个check接口，RocketMQ会根据发送端设置的策略来决定是回滚还是继续发送确认消息。这样就保证了消息发送与本地事务同时成功或同时失败。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514161311640.png\" title=\"\" alt=\"\"></p> \n<p>遗憾的是，RocketMQ并没有 .NET 客户端。有关 RocketMQ的更多消息，大家可以查看<a href=\"http://www.jianshu.com/p/453c6e7ff81c\">这篇博客</a></p> \n<p><strong>优点：</strong> 实现了最终一致性，不需要依赖本地数据库事务。</p> \n<p><strong>缺点：</strong> 实现难度大，主流MQ不支持，没有.NET客户端，RocketMQ事务消息部分代码也未开源。</p> \n<h4 id=\"五、sagas-事务模型\">五、Sagas 事务模型</h4> \n<p>Saga事务模型又叫做长时间运行的事务（Long-running-transaction）, 它是由普林斯顿大学的H.Garcia-Molina等人提出，它描述的是另外一种在没有两阶段提交的的情况下解决分布式系统中复杂的业务事务问题。你可以在<a href=\"https://www.cs.cornell.edu/andru/cs711/2002fa/reading/sagas.pdf\">这里</a>看到 Sagas 相关论文。</p> \n<p>我们这里说的是一种基于 Sagas 机制的工作流事务模型，这个模型的相关理论目前来说还是比较新的，以至于百度上几乎没有什么相关资料。</p> \n<p>该模型其核心思想就是拆分分布式系统中的长事务为多个短事务，或者叫多个本地事务，然后由 Sagas 工作流引擎负责协调，如果整个流程正常结束，那么就算是业务成功完成，如果在这过程中实现失败，那么Sagas工作流引擎就会以相反的顺序调用补偿操作，重新进行业务回滚。</p> \n<p>比如我们一次关于购买旅游套餐业务操作涉及到三个操作，他们分别是预定车辆，预定宾馆，预定机票，他们分别属于三个不同的远程接口。可能从我们程序的角度来说他们不属于一个事务，但是从业务角度来说是属于同一个事务的。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514161310972.png\" title=\"\" alt=\"\"></p> \n<p>他们的执行顺序如上图所示，所以当发生失败时，会依次进行取消的补偿操作。</p> \n<p>因为长事务被拆分了很多个业务流，所以 Sagas 事务模型最重要的一个部件就是工作流或者你也可以叫流程管理器（Process Manager），工作流引擎和Process Manager虽然不是同一个东西，但是在这里，他们的职责是相同的。在选择工作流引擎之后，最终的代码也许看起来是这样的</p> \n<pre><code class=\"language-java\">SagaBuilder saga = SagaBuilder.newSaga(\"trip\")\n        .activity(\"Reserve car\", ReserveCarAdapter.class) \n        .compensationActivity(\"Cancel car\", CancelCarAdapter.class) \n        .activity(\"Book hotel\", BookHotelAdapter.class) \n        .compensationActivity(\"Cancel hotel\", CancelHotelAdapter.class) \n        .activity(\"Book flight\", BookFlightAdapter.class) \n        .compensationActivity(\"Cancel flight\", CancelFlightAdapter.class) \n        .end()\n        .triggerCompensationOnAnyError();\n\ncamunda.getRepositoryService().createDeployment() \n        .addModelInstance(saga.getModel()) \n        .deploy();\n</code></pre> \n<p><a href=\"https://github.com/flowing/flowing-trip-booking-saga-c-sharp\">这里</a>有一个 C# 相关示例，有兴趣的同学可以看一下。</p> \n<p>优缺点这里我们就不说了，因为这个理论比较新，目前市面上还没有什么解决方案，即使是 Java 领域，我也没有搜索的太多有用的信息。</p> \n<h3 id=\"分布式事务解决方案：cap\">分布式事务解决方案：CAP</h3> \n<p>上面介绍的那些分布式事务的处理方案你在其他地方或许也可以看到，但是并没有相关的实际代码或者是开源代码，所以算不上什么干货，下面就放干货了。</p> \n<p>在 .NET 领域，似乎没有什么现成的关于分布式事务的解决方案，或者说是有但未开源。具笔者了解，有一些公司内部其实是有这种解决方案的，但是也是作为公司的一个核心产品之一，并未开源...</p> \n<p>鉴于以上原因，所以博主就打算自己写一个并且开源出来，所以从17年初就开始做这个事情，然后花了大半年的时间在一直不断完善，就是下面这个 CAP。</p> \n<p>Github <a href=\"https://github.com/dotnetcore/CAP\">CAP</a>：这里的 CAP 就不是 CAP 理论了，而是一个 .NET 分布式事务解决方案的名字。</p> \n<p>详细介绍：<br> <a href=\"http://www.cnblogs.com/savorboard/p/cap.html\">http://www.cnblogs.com/savorboard/p/cap.html</a><br> 相关文档：<br> <a href=\"http://www.cnblogs.com/savorboard/p/cap-document.html\">http://www.cnblogs.com/savorboard/p/cap-document.html</a></p> \n<p>夸张的是，这个解决方案是具有可视化界面（Dashboard）的，你可以很方面的看到哪些消息执行成功，哪些消息执行失败，到底是发送失败还是处理失败，一眼便知。</p> \n<p>最夸张的是，这个解决方案的可视化界面还提供了<strong>实时动态图表</strong>，这样不但可以看到实时的消息发送及处理情况，连当前的系统处理消息的速度都可以看到，还可以看到过去24小时内的历史消息吞吐量。</p> \n<p>最最夸张的是，这个解决方案的还帮你集成了 Consul 做分布式节点发现和注册还有心跳检查，你随时可以看到其他的节点的状况。</p> \n<p>最最最夸张的是，你以为你看其他节点的数据要登录到其他节点的Dashboard控制台看？错了，你随便打开其中任意一个节点的Dashboard，点一下就可以切换到你想看的节点的控制台界面了，就像你看本地的数据一样，他们是完全去中心化的。</p> \n<p>你以为这些就够了？不，远远不止：</p> \n<ul> \n <li>CAP 同时支持 RabbitMQ，Kafka 等消息队列</li> \n <li>CAP 同时支持 SQL Server, MySql, PostgreSql 等数据库</li> \n <li>CAP Dashboard 同时支持中文和英文界面双语言，妈妈再也不用担心我看不懂了</li> \n <li>CAP 提供了丰富的接口可以供扩展，什么序列化了，自定义处理了，自定义发送了统统不在话下</li> \n <li>CAP 基于MIT开源，你可以尽管拿去做二次开发。（记得保留MIT的License）</li> \n</ul> \n<p>这下你以为我说完了？ 不！</p> \n<p>你完全可以把 CAP 当做一个 EventBus 来使用，CAP具有优秀的消息处理能力，不要担心瓶颈会在CAP，那是永远不可能， 因为你随时可以在配置中指定CAP处理的消息使用的进程数， 只要你的数据库配置足够高...</p> \n<p>说了这么多，口干舌燥的，你不 <strong>Star</strong> 一下给个精神上的支持说不过去吧？ ^_^</p> \n<p>2号传送门： <a href=\"https://github.com/dotnetcore/CAP\">https://github.com/dotnetcore/CAP</a></p> \n<blockquote> \n <p>不 Star 也没关系，我选择原谅你~</p> \n</blockquote> \n<h3 id=\"总结\">总结</h3> \n<p>通过本文我们了解到两个分布式系统的理论，他们分别是CAP和BASE 理论，同时我们也总结并对比了几种分布式分解方案的优缺点，分布式事务本身是一个技术难题，是没有一种完美的方案应对所有场景的，具体还是要根据业务场景去抉择吧。 然后我们介绍了一种基于本地消息的的分布式事务解决方案CAP。</p> \n<p>如果你觉得本篇文章对您有帮助的话，感谢您的【推荐】。</p> \n<p>如果你对 .NET Core 有兴趣的话可以关注我，我会定期的在博客分享我的学习心得。</p> \n<hr> \n<blockquote> \n <p>本文地址：<a href=\"http://www.cnblogs.com/savorboard/p/distributed-system-transaction-consistency.html\">http://www.cnblogs.com/savorboard/p/distributed-system-transaction-consistency.html</a><br> 作者博客：<a href=\"http://www.cnblogs.com/savorboard\">Savorboard</a><br> 欢迎转载，请在明显位置给出出处及链接</p> \n</blockquote>',NULL,0,2,1,0,0,'前言最近很久没有写博客了，一方面是因为公司事情最近比较忙，另外一方面是因为在进行&quot;CAP&quot;的下一阶段的开发工作，不过目前已经告一段落了。接下来还是开始我们今天的话题，说说分','分布式事务',1,'2020-05-14 16:13:12','2020-05-14 16:22:38'),(101,'分布式事务的四种解决方案',1,'https://oscimg.oschina.net/oscnet/915a02484990dda820410c8cad2389c5386.jpg',NULL,0,'<div class=\"ui container\"> \n <div class=\"ui internally grid blog-detail bg-wrap\"> \n  <div class=\"row\"> \n   <div class=\"twelve wide computer sixteen wide tablet sixteen wide mobile column body-container\"> \n    <div class=\"float-menu-content\"> \n     <div class=\"ui large breadcrumb\"> \n      <h1 id=\"h1_1\">简述</h1> \n     </div> \n     <div class=\"ui large breadcrumb\">\n      分布式事务指事务的操作位于不同的节点上，需要保证事务的 AICD 特性。\n     </div> \n     <div class=\"article-detail\"> \n      <div id=\"articleContent\" class=\"content\"> \n       <p>例如在下单场景下，库存和订单如果不在同一个节点上，就涉及分布式事务。</p> \n       <h1 id=\"h1_2\">解决方案</h1> \n       <p>在分布式系统中，要实现分布式事务，无外乎那几种解决方案。</p> \n       <h2 id=\"h2_3\">一、两阶段提交（2PC）</h2> \n       <p>两阶段提交（Two-phase Commit，2PC），通过引入协调者（Coordinator）来协调参与者的行为，并最终决定这些参与者是否要真正执行事务。</p> \n       <h3 id=\"h3_4\">1. 运行过程</h3> \n       <h4 id=\"h4_5\">1.1 准备阶段</h4> \n       <p>协调者询问参与者事务是否执行成功，参与者发回事务执行结果。</p> \n       <p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514161325874.jpg\" title=\"\" alt=\"\"></p> \n       <h4 id=\"h4_6\">1.2 提交阶段</h4> \n       <p>如果事务在每个参与者上都执行成功，事务协调者发送通知让参与者提交事务；否则，协调者发送通知让参与者回滚事务。</p> \n       <p>需要注意的是，在准备阶段，参与者执行了事务，但是还未提交。只有在提交阶段接收到协调者发来的通知后，才进行提交或者回滚。</p> \n       <p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514161324368.jpg\" title=\"\" alt=\"\"></p> \n       <h3 id=\"h3_7\">2. 存在的问题</h3> \n       <p>2.1 同步阻塞&nbsp;所有事务参与者在等待其它参与者响应的时候都处于同步阻塞状态，无法进行其它操作。</p> \n       <p>2.2 单点问题&nbsp;协调者在 2PC 中起到非常大的作用，发生故障将会造成很大影响。特别是在阶段二发生故障，所有参与者会一直等待状态，无法完成其它操作。</p> \n       <p>2.3 数据不一致&nbsp;在阶段二，如果协调者只发送了部分 Commit 消息，此时网络发生异常，那么只有部分参与者接收到 Commit 消息，也就是说只有部分参与者提交了事务，使得系统数据不一致。</p> \n       <p>2.4 太过保守&nbsp;任意一个节点失败就会导致整个事务失败，没有完善的容错机制。</p> \n       <h2 id=\"h2_8\">二、补偿事务（TCC）</h2> \n       <p>TCC 其实就是采用的补偿机制，其核心思想是：针对每个操作，都要注册一个与其对应的确认和补偿（撤销）操作。它分为三个阶段：</p> \n       <ul> \n        <li> <p>Try 阶段主要是对业务系统做检测及资源预留</p> </li> \n        <li> <p>Confirm 阶段主要是对业务系统做确认提交，Try阶段执行成功并开始执行 Confirm阶段时，默认 Confirm阶段是不会出错的。即：只要Try成功，Confirm一定成功。</p> </li> \n        <li> <p>Cancel 阶段主要是在业务执行错误，需要回滚的状态下执行的业务取消，预留资源释放。</p> </li> \n       </ul> \n       <p>举个例子，假入 Bob 要向 Smith 转账，思路大概是： 我们有一个本地方法，里面依次调用</p> \n       <ol> \n        <li>首先在 Try 阶段，要先调用远程接口把 Smith 和 Bob 的钱给冻结起来。</li> \n        <li>在 Confirm 阶段，执行远程调用的转账的操作，转账成功进行解冻。</li> \n        <li>如果第2步执行成功，那么转账成功，如果第二步执行失败，则调用远程冻结接口对应的解冻方法 (Cancel)。</li> \n       </ol> \n       <p>优点：&nbsp;跟2PC比起来，实现以及流程相对简单了一些，但数据的一致性比2PC也要差一些</p> \n       <p>缺点：&nbsp;缺点还是比较明显的，在2,3步中都有可能失败。TCC属于应用层的一种补偿方式，所以需要程序员在实现的时候多写很多补偿的代码，在一些场景中，一些业务流程可能用TCC不太好定义及处理。</p> \n       <h2 id=\"h2_9\">三、本地消息表（异步确保）</h2> \n       <p>本地消息表与业务数据表处于同一个数据库中，这样就能利用本地事务来保证在对这两个表的操作满足事务特性，并且使用了消息队列来保证最终一致性。</p> \n       <ol> \n        <li>在分布式事务操作的一方完成写业务数据的操作之后向本地消息表发送一个消息，本地事务能保证这个消息一定会被写入本地消息表中。</li> \n        <li>之后将本地消息表中的消息转发到 Kafka 等消息队列中，如果转发成功则将消息从本地消息表中删除，否则继续重新转发。</li> \n        <li>在分布式事务操作的另一方从消息队列中读取一个消息，并执行消息中的操作。</li> \n       </ol> \n       <p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514161324236.jpg\" title=\"\" alt=\"\"></p> \n       <p>优点：&nbsp;一种非常经典的实现，避免了分布式事务，实现了最终一致性。</p> \n       <p>缺点：&nbsp;消息表会耦合到业务系统中，如果没有封装好的解决方案，会有很多杂活需要处理。</p> \n       <h2 id=\"h2_10\">四、MQ 事务消息</h2> \n       <p>有一些第三方的MQ是支持事务消息的，比如RocketMQ，他们支持事务消息的方式也是类似于采用的二阶段提交，但是市面上一些主流的MQ都是不支持事务消息的，比如 RabbitMQ 和 Kafka 都不支持。</p> \n       <p>以阿里的 RocketMQ 中间件为例，其思路大致为：</p> \n       <p>第一阶段Prepared消息，会拿到消息的地址。 第二阶段执行本地事务，第三阶段通过第一阶段拿到的地址去访问消息，并修改状态。</p> \n       <p>也就是说在业务方法内要想消息队列提交两次请求，一次发送消息和一次确认消息。如果确认消息发送失败了RocketMQ会定期扫描消息集群中的事务消息，这时候发现了Prepared消息，它会向消息发送者确认，所以生产方需要实现一个check接口，RocketMQ会根据发送端设置的策略来决定是回滚还是继续发送确认消息。这样就保证了消息发送与本地事务同时成功或同时失败。</p> \n       <p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200514161325104.jpg\" title=\"\" alt=\"\"></p> \n       <p>优点：&nbsp;实现了最终一致性，不需要依赖本地数据库事务。</p> \n       <p>缺点：&nbsp;实现难度大，主流MQ不支持，RocketMQ事务消息部分代码也未开源。</p> \n       <h1 id=\"h1_11\">总结</h1> \n       <p>通过本文我们总结并对比了几种分布式分解方案的优缺点，分布式事务本身是一个技术难题，是没有一种完美的方案应对所有场景的，具体还是要根据业务场景去抉择吧。阿里RocketMQ去实现的分布式事务，现在也有除了很多分布式事务的协调器，比如LCN等，大家可以多去尝试。</p> \n      </div> \n      <div class=\"ui hidden divider\">\n       &nbsp;\n      </div> \n      <p>&nbsp;</p> \n     </div> \n    </div> \n   </div> \n  </div> \n </div> \n</div> \n<div id=\"footer\" class=\"ui vertical footer segment mb-hide\">\n &nbsp;\n</div> \n<div id=\"copyright\">\n &nbsp;\n</div>',NULL,0,2,1,0,0,'简述分布式事务指事务的操作位于不同的节点上，需要保证事务的AICD特性。例如在下单场景下，库存和订单如果不在同一个节点上，就涉及分布式事务。解决方案在分布式系统中，要实现分布式事务，无外乎','分布式事务',1,'2020-05-14 16:13:27','2020-05-14 16:22:17'),(104,'神一样的 CAP 理论被应用在何方？',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<div class=\"rich_media_content\" id=\"js_content\"> \n <div>\n  <div>\n   <div>\n    <span title=\"\"></span>\n    <div>\n     “\n    </div> \n    <div>\n     <p><span>对于开发或设计分布式系统的架构师工程师来说，CAP 是必须要掌握的理论。</span></p>\n    </div>\n    <div></div>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTpdu3hpb6LKvgs9RAJahksu23ouUic7viaDsAlxAPFozQe78kct0fcXZQ/640?wx_fmt=png\" style=\"max-width:100%;\"><br></div>\n <p><span><em>图片来自 Pexels</em></span></p>\n <div>\n  <br>\n </div>\n <p><span>But：这个文章的重点并不是讨论 CAP 理论和细节，重点是说说 CAP 在微服务中的开发怎么起到一个指引作用，会通过几个微服务开发的例子说明，尽量的去贴近开发。</span></p>\n <p></p>\n <p><span>CAP 定理又被称为布鲁尔定理，是加州大学计算机科学家埃里克·布鲁尔提出来的猜想，后来被证明成为分布式计算领域公认的定理。</span></p>\n <div>\n  <br>\n </div>\n <p><span>不过布鲁尔在出来 CAP 的时候并没有对 CAP 三者（Consistency，Availability，Partition tolerance）进行详细的定义，所以在网上也出现了不少对 CAP 不同解读的声音。</span></p>\n <p></p>\n <div>\n  <div>\n   <div>\n    <p>CAP 定理</p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>CAP 定理在发展中存在过两个版本，我们以第二个版本为准：</span>\n </div>\n <div>\n  <div>\n   <div>\n    <div>\n     <p><span><em>在一个分布式系统中（指互相连接并共享数据的节点集合）中，当涉及到读写操作时，只能保证一致性（Consistence）、可用性（Availability）、分区容错性（Partition Tolerance）三者中的两个，另外一个必须被牺牲。</em></span></p>\n    </div>\n   </div>\n  </div>\n </div>\n <div><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTXOYYxb7jjocHaj6BmJaXlh8HKjSngv2kzw6qbkH2FonqUWc2rpzPAw/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br>\n </div>\n <div><br></div>\n <p><span>这个版本的 CAP 理论在探讨分布式系统，更加强调两点是互联和共享数据，其实也是理清楚了第一个版本中三选二的一些缺陷。</span></p>\n <div>\n  <br>\n </div>\n <p><span>分布式系统不一定都存在互联和共享数据，例如 Memcached 集群相互间就没有存在连接和共享数据。</span></p>\n <div>\n  <br>\n </div>\n <p><span>所以 Memcached 集群这类的分布式系统并不在&nbsp;CAP 理论讨论的范围，而像&nbsp;MySQL 集群就是互联和数据共享复制，因此&nbsp;<span>MySQL&nbsp;</span>集群是属于 CAP 理论讨论的对象。</span></p>\n <p></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <strong><span></span> <span></span> </strong>\n   </div>\n   <div>\n    <p><strong>一致性（Consistency）</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <p><span>一致性意思就是写操作之后进行读操作无论在哪个节点都需要返回写操作的值。</span></p>\n <p></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <strong><span></span> <span></span> </strong>\n   </div>\n   <div>\n    <p><strong>可用性（Availability）</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <p><span>非故障的节点在合理的时间内返回合理的响应。</span></p>\n <div>\n  <br>\n </div>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <span></span> \n    <span></span> \n   </div>\n   <div>\n    <p><strong>分区容错性（Partition Tolerance）</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <p><span>当网络出现分区后，系统依然能够继续旅行社职责。</span></p>\n <div>\n  <br>\n </div>\n <p><span>在分布式的环境下，网络无法做到 100% 可靠，有可能出现故障，因此分区是一个必须的选项。</span></p>\n <div>\n  <br>\n </div>\n <p><span>如果选择了 CA 而放弃了 P，若发生分区现象，为了保证 C，系统需要禁止写入，此时就与 A 发生冲突；如果是为了保证 A，则会出现正常的分区可以写入数据，有故障的分区不能写入数据，则与 C 就冲突了。</span></p>\n <div>\n  <br>\n </div>\n <p><span>因此分布式系统理论上不可能选择 CA 架构，而必须选择 CP 或 AP 架构。</span></p>\n <div>\n  <br>\n </div>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <span></span> \n    <span></span> \n   </div>\n   <div>\n    <p><strong>分布式事务 BASE&nbsp;理论</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <p><span>BASE 理论是对 CAP 的延伸和补充，是对 CAP 中的 AP 方案的一个补充，即使在选择 AP 方案的情况下，如何更好的最终达到 C。</span></p>\n <p></p>\n <p><span>BASE 是基本可用，柔性状态，最终一致性三个短语的缩写，核心的思想是即使无法做到强一致性，但应用可以采用适合的方式达到最终一致性。</span></p>\n <p></p>\n <div>\n  <div>\n   <div>\n    <p>CAP 在服务中实际的应用例子</p>\n   </div>\n  </div>\n </div>\n <div>\n  <span><strong><br></strong></span>\n </div>\n <div><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTuo07KQA67WbJ7wI5AedKMArUXrYmXsRZicVxKBiagOmiaJsq9tXGMkMog/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></div>\n <p><span>理解貌似讲多了，项目的 CAP 可以参考下李运华的《从零开始学架构》的书里面的 21，22 章，比较详细的描绘了 CAP 的理论细节和 CAP 的版本演化过程。</span></p>\n <div>\n  <br>\n </div>\n <div>\n  <span>这里着重讲解的是神一样的 CAP 在我们的微服务中怎么去指导和应用起来，大概会举几个平时常见的例子。</span>\n  <span></span>\n </div>\n <div><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTLGoqXSBcFicqOlgtDqa1K1ytcHMRNwbxT71HpmAy2P0jicKaFf6Sl6rQ/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></div>\n <div>\n  <div>\n   <div>\n    <p>服务注册中心，是选择 CA 还是选择 CP？</p>\n   </div>\n  </div>\n </div>\n <p></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <span></span> \n    <span></span> \n   </div>\n   <div>\n    <p><strong>服务注册中心解决的问题</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <p><span>在讨论 CAP 之前先明确下服务注册中心主要是解决什么问题：</span><span></span></p>\n <ul class=\"list-paddingleft-2\">\n  <li><p><strong><span>服务注册：</span></strong><span>实例将自身服务信息注册到注册中心，这部分信息包括服务的主机 IP 和服务的 Port，以及暴露服务自身状态和访问协议信息等。</span></p></li>\n  <li><p><strong><span>服务发现：</span></strong><span>实例请求注册中心所依赖的服务信息，服务实例通过注册中心，获取到注册到其中的服务实例的信息，通过这些信息去请求它们提供的服务。</span></p></li>\n </ul>\n <div></div>\n <div></div>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKT6ZlqT7jw4CUTILfZaUDpoKl6PQIDGyVxibnWxmhTpPjx4Ft2juIibtOw/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>目前作为注册中心的一些组件大致有：</span>\n </div>\n <ul class=\"list-paddingleft-2\">\n  <li><p><strong><span>Dubbo 的 Zookeeper</span></strong></p></li>\n  <li><p><strong><span>Spring Cloud 的 Eureka，Consul</span></strong></p></li>\n  <li><p><strong><span>RocketMQ&nbsp;的 nameServer</span></strong></p></li>\n  <li><p><strong><span>HDFS 的 nameNode</span></strong><span></span></p></li>\n </ul>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <div>\n  <br>\n </div>\n <div>\n  <span>目前微服务主流是 Dubbo 和 Spring Cloud，使用最多是 Zookeeper 和 Eureka，我们就来看看应该根据 CAP 理论怎么去选择注册中心。（Spring Cloud 也可以用 ZK，不过不是主流不讨论）</span>\n </div>\n <p></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <strong><span></span> <span></span> </strong>\n   </div>\n   <div>\n    <p><strong>Zookeeper 选择 CP</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>Zookeeper 保证 CP，即任何时刻对 Zookeeper 的访问请求能得到一致性的数据结果，同时系统对网络分割具备容错性，但是它不能保证每次服务的可用性。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>从实际情况来分析，在使用 Zookeeper 获取服务列表时，如果 ZK 正在选举或者 ZK 集群中半数以上的机器不可用，那么将无法获取数据。所以说，ZK 不能保证服务可用性。</span>\n </div>\n <p></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <strong><span></span> <span></span> </strong>\n   </div>\n   <div>\n    <p><strong>Eureka&nbsp;选择&nbsp;AP</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>Eureka 保证 AP，Eureka 在设计时优先保证可用性，每一个节点都是平等的。</span>\n </div>\n <p></p>\n <div>\n  <span>一部分节点挂掉不会影响到正常节点的工作，不会出现类似 ZK 的选举 Leader 的过程，客户端发现向某个节点注册或连接失败，会自动切换到其他的节点。</span>\n </div>\n <p></p>\n <div>\n  <span>只要有一台 Eureka 存在，就可以保证整个服务处在可用状态，只不过有可能这个服务上的信息并不是最新的信息。</span>\n </div>\n <p></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <strong><span></span> <span></span> </strong>\n   </div>\n   <div>\n    <p><strong>ZK&nbsp;和 Eureka 的数据一致性问题</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>先要明确一点，Eureka 的创建初心就是为一个注册中心，但是 ZK 更多是作为分布式协调服务的存在。</span>\n </div>\n <p></p>\n <div>\n  <span>只不过因为它的特性被 Dubbo 赋予了注册中心，它的职责更多是保证数据（配置数据，状态数据）在管辖下的所有服务之间保持一致。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>所以这个就不难理解为何 ZK 被设计成 CP 而不是 AP，ZK 最核心的算法 ZAB，就是为了解决分布式系统下数据在多个服务之间一致同步的问题。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>更深层的原因，ZK 是按照 CP 原则构建，也就是说它必须保持每一个节点的数据都保持一致。</span>\n </div>\n <p></p>\n <div>\n  <span>如果 ZK 下节点断开或者集群中出现网络分割（例如交换机的子网间不能互访），那么 ZK 会将它们从自己的管理范围中剔除，外界不能访问这些节点，即使这些节点是健康的可以提供正常的服务，所以导致这些节点请求都会丢失。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>而 Eureka 则完全没有这方面的顾虑，它的节点都是相对独立，不需要考虑数据一致性的问题，这个应该是 Eureka 的诞生就是为了注册中心而设计。</span>\n </div>\n <p></p>\n <p><span>相对 ZK 来说剔除了 Leader 节点选取和事务日志机制，这样更有利于维护和保证 Eureka 在运行的健壮性。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKT40CtqrSTwLXHTSLNWPWvZsiaBuEolJWkDxsgbB2DrdicbsqBsExEnAVQ/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>再来看看，数据不一致性在注册服务中会给 Eureka 带来什么问题，无非就是某一个节点被注册的服务多，某个节点注册的服务少，在某一个瞬间可能导致某些 IP 节点被调用数多，某些 IP 节点调用数少的问题。</span>\n </div>\n <p></p>\n <p><span>也有可能存在一些本应该被删除而没被删除的脏数据。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTarFzLU1RmibqicVACnpDVcAIVNYcPow4G1K5jMOB6elIfddUkBM8biaDw/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <strong><span></span> <span></span> </strong>\n   </div>\n   <div>\n    <p><strong>服务注册应该选择 AP 还是&nbsp;CP</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>对于服务注册来说，针对同一个服务，即使注册中心的不同节点保存的服务注册信息不相同，也并不会造成灾难性的后果。</span>\n </div>\n <p></p>\n <div>\n  <span>对于服务消费者来说，能消费才是最重要的，就算拿到的数据不是最新的数据，消费者本身也可以进行尝试失败重试。总比为了追求数据的一致性而获取不到实例信息整个服务不可用要好。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>所以，对于服务注册来说，可用性比数据一致性更加的重要，选择 AP。</span>\n </div>\n <p></p>\n <div>\n  <div>\n   <div>\n    <p>分布式锁，是选择 CA 还是选择 CP？</p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>这里实现分布式锁的方式选取了三种：</span>\n  <span></span>\n </div>\n <ul class=\"list-paddingleft-2\">\n  <li><p><strong><span>基于数据库实现分布式锁</span></strong></p></li>\n  <li><p><strong><span>基于 Redis 实现分布式锁</span></strong></p></li>\n  <li><p><strong><span>基于 Zookeeper&nbsp;实现分布式锁</span></strong><span></span></p></li>\n </ul>\n <div></div>\n <div></div>\n <div></div>\n <h4><br></h4>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <strong><span></span> <span></span> </strong>\n   </div>\n   <div>\n    <p><strong>基于数据库实现分布式锁</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <p><span>构建表结构：</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTWbCptZC9PNIeFuKel0r1SvMicWftmyP4I5c4YmlQ1SQc0RvjkbYJSYg/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <p><span>利用表的 UNIQUE KEY idx_lock（method_lock<span>）</span>作为唯一主键，当进行上锁时进行 Insert 动作，数据库成功录入则以为上锁成功，当数据库报出 Duplicate entry 则表示无法获取该锁。</span><span></span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTOuOYgd9xPlpjw5rLdUjk65C0TftF10Y2VH2t5BCCialNHcCibk0d47kQ/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>不过这种方式对于单主却无法自动切换主从的 MySQL 来说，基本就无法实现&nbsp;P&nbsp;分区容错性（<span>MySQL</span>&nbsp;自动主从切换在目前并没有十分完美的解决方案）。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>可以说这种方式强依赖于数据库的可用性，数据库写操作是一个单点，一旦数据库挂掉，就导致锁的不可用。这种方式基本不在 CAP 的一个讨论范围。</span>\n </div>\n <p></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <span></span> \n    <span></span> \n   </div>\n   <div>\n    <p><strong>基于 Redis 实现分布式锁</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>Redis 单线程串行处理天然就是解决串行化问题，用来解决分布式锁是再适合不过。</span>\n </div>\n <div>\n  <br>\n </div>\n <p><span>实现方式：</span><span></span></p>\n <div class=\"output_wrapper\">\n  <pre class=\"has\"><code class=\"language-javascript\">setnx&nbsp;key&nbsp;value&nbsp;Expire_time\n获取到锁&nbsp;返回&nbsp;1&nbsp;，&nbsp;获取失败&nbsp;返回&nbsp;0\n</code></pre>\n </div>\n <p></p>\n <p><span>为了解决数据库锁的无主从切换的问题，可以选择 Redis 集群，或者是 Sentinel 哨兵模式，实现主从故障转移，当 Master 节点出现故障，哨兵会从 Slave 中选取节点，重新变成新的 Master 节点。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTx2qg0pJvzzBCvB3bLTicbjCSibmbmwOPTs7ZYrVJribeNQXGPVNib4MIdQ/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>哨兵模式故障转移是由 Sentinel 集群进行监控判断，当 Maser 出现异常即复制中止，重新推选新 Slave 成为 Master，Sentinel 在重新进行选举并不在意主从数据是否复制完毕具备一致性。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>所以 Redis 的复制模式是属于 AP 的模式。保证可用性，在主从复制中“主”有数据，但是可能“从”还没有数据。</span>\n </div>\n <p></p>\n <p><span>这个时候，一旦主挂掉或者网络抖动等各种原因，可能会切换到“从”节点，这个时候可能会导致两个业务线程同时获取得两把锁。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKT3XWArTmnibJenTKVsSgCo0L5dpgA7FwGlVLbdibQ1icX2ZXg8dKWGJpWQ/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>这个过程如下：</span>\n  <span></span>\n </div>\n <ul class=\"list-paddingleft-2\">\n  <li><p><span>业务线程&nbsp;-1 向主节点请求锁</span></p></li>\n  <li><p><span>业务线程&nbsp;-1 获取锁</span></p></li>\n  <li><p><span>业务线程 -1 获取到锁并开始执行业务</span></p></li>\n  <li><p><span>这个时候 Redis 刚生成的锁在主从之间还未进行同步</span></p></li>\n  <li><p><span>Redis&nbsp;这时候主节点挂掉了</span></p></li>\n  <li><p><span>Redis&nbsp;的从节点升级为主节点</span></p></li>\n  <li><p><span>业务线程&nbsp;-2 想新的主节点请求锁</span></p></li>\n  <li><p><span>业务线程 -2 获取到新的主节点返回的锁</span></p></li>\n  <li><p><span>业务线程&nbsp;-2 获取到锁开始执行业务</span></p></li>\n  <li><p><span>这个时候业务线程 -1 和业务线程 -2 同时在执行任务</span></p></li>\n </ul>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <div>\n  <br>\n </div>\n <div>\n  <span>上述的问题其实并不是 Redis 的缺陷，只是 Redis 采用了 AP 模型，它本身无法确保我们对一致性的要求。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>Redis 官方推荐 Redlock 算法来保证，问题是 Redlock 至少需要三个 Redis 主从实例来实现，维护成本比较高。</span>\n </div>\n <p></p>\n <div>\n  <span>相当于 Redlock 使用三个 Redis 集群实现了自己的另一套一致性算法，比较繁琐，在业界也使用得比较少。</span>\n </div>\n <p></p>\n <div>\n  <span>能不能使用 Redis 作为分布式锁？</span>\n  <span>这个本身就不是 Redis 的问题，还是取决于业务场景。</span>\n </div>\n <p></p>\n <div>\n  <span>我们先要自己确认我们的场景是适合 AP 还是 CP ， 如果在社交发帖等场景下，我们并没有非常强的事务一致性问题，Redis 提供给我们高性能的 AP 模型是非常适合的。</span>\n </div>\n <p></p>\n <div>\n  <span>但如果是交易类型，对数据一致性非常敏感的场景，我们可能要寻找一种更加适合的 CP 模型。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <span></span> \n    <span></span> \n   </div>\n   <div>\n    <p><strong>基于 Zookeeper 实现分布式锁</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>刚刚也分析过，Redis 其实无法确保数据的一致性，先来看 Zookeeper 是否适合作为我们需要的分布式锁。</span>\n </div>\n <p></p>\n <p><span>首先 ZK 的模式是 CP 模型，也就是说，当 ZK 锁提供给我们进行访问的时候，在 ZK 集群中能确保这把锁在 ZK 的每一个节点都存在。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTBXzV0qjOXGfo7uUVZEnIsw55QGiaoTPJdYI8fn0ke2YhHl5KGN98WkQ/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>这个实际上是 ZK 的 Leader 通过二阶段提交写请求来保证的，这个也是 ZK 的集群规模大了的一个瓶颈点。</span>\n </div>\n <div>\n  <br>\n </div>\n <h5><strong><span>①ZK 锁实现的原理</span></strong><span></span></h5>\n <div>\n  <br>\n </div>\n <div>\n  <span>说 ZK 的锁问题之前先看看 Zookeeper 中几个特性，这几个特性构建了 ZK 的一把分布式锁。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>ZK 的特性如下：</span>\n  <span></span>\n </div>\n <ul class=\"list-paddingleft-2\">\n  <li><p><strong><span>有序节点：</span></strong><span>当在一个父目录下如 /lock 下创建 有序节点，节点会按照严格的先后顺序创建出自节点 lock000001，lock000002，lock0000003，以此类推，有序节点能严格保证各个自节点按照排序命名生成。</span></p></li>\n  <li><p><strong><span>临时节点：</span></strong><span>客户端建立了一个临时节点，在客户端的会话结束或会话超时，Zookepper 会自动删除该节点 ID。</span></p></li>\n  <li><p><strong><span>事件监听：</span></strong><span>在读取数据时，我们可以对节点设置监听，当节点的数据发生变化（1 节点创建 2 节点删除 3 节点数据变成 4 自节点变成）时，Zookeeper 会通知客户端。</span></p></li>\n </ul>\n <div></div>\n <div></div>\n <div></div>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKT2InxZsf6FVrmXVlMZtsJeWK65DYf7R8KDvCVy7zWWH0urffXFQibic4A/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>结合这几个特点，来看下 ZK 是怎么组合分布式锁：</span>\n  <span></span>\n </div>\n <ul class=\"list-paddingleft-2\">\n  <li><p><span>业务线程&nbsp;-1，业务线程&nbsp;-2 分别向 ZK 的 /lock 目录下，申请创建有序的临时节点。</span></p></li>\n  <li><p><span>业务线程&nbsp;-1 抢到&nbsp;/lock0001 的文件，也就是在整个目录下最小序的节点，也就是线程 -1 获取到了锁。</span></p></li>\n  <li><p><span>业务线程&nbsp;-2 只能抢到&nbsp;/lock0002 的文件，并不是最小序的节点，线程 2 未能获取锁。</span></p></li>\n  <li><p><span>业务线程&nbsp;-1 与 lock0001 建立了连接，并维持了心跳，维持的心跳也就是这把锁的租期。</span></p></li>\n  <li><p><span>当业务线程&nbsp;-1 完成了业务，将释放掉与 ZK 的连接，也就是释放了这把锁。</span></p></li>\n </ul>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <h5><br></h5>\n <h5><strong><span>②ZK 分布式锁的代码实现</span></strong><span></span></h5>\n <div>\n  <br>\n </div>\n <p><span>ZK 官方提供的客户端并不支持分布式锁的直接实现，我们需要自己写代码去利用 ZK 的这几个特性去进行实现。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTblYPNStglnz96RlhjoRlZagZ3YWTO1Lice9NNIfL5uicib7UX4KKIsGXg/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <span></span> \n    <span></span> \n   </div>\n   <div>\n    <p><strong>究竟该用 CP&nbsp;还是 AP 的分布式锁</strong></p>\n   </div>\n  </div>\n </div>\n <p></p>\n <div>\n  <span>首先得了解清楚我们使用分布式锁的场景，为何使用分布式锁，用它来帮我们解决什么问题，先聊场景后聊分布式锁的技术选型。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>无论是 Redis，ZK，例如 Redis 的 AP 模型会限制很多使用场景，但它却拥有了几者中最高的性能。</span>\n </div>\n <p></p>\n <div>\n  <span>Zookeeper 的分布式锁要比 Redis 可靠很多，但他繁琐的实现机制导致了它的性能不如 Redis，而且 ZK 会随着集群的扩大而性能更加下降。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>简单来说，先了解业务场景，后进行技术选型。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <div>\n   <div>\n    <p>分布式事务，是怎么从 ACID&nbsp;解脱，投身&nbsp;CAP/BASE</p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>如果说到事务，ACID 是传统数据库常用的设计理念，追求强一致性模型，关系数据库的 ACID 模型拥有高一致性+可用性，所以很难进行分区。</span>\n </div>\n <p></p>\n <div>\n  <span>在微服务中 ACID 已经是无法支持，我们还是回到 CAP 去寻求解决方案，不过根据上面的讨论，CAP 定理中，要么只能 CP，要么只能 AP。</span>\n </div>\n <p></p>\n <p><span>如果我们追求数据的一致性而忽略可用性这个在微服务中肯定是行不通的，如果我们追求可用性而忽略一致性，那么在一些重要的数据（例如支付，金额）肯定出现漏洞百出，这个也是无法接受。所以我们既要一致性，也要可用性。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTLeXuHswVicEYDr2JH7rt9X3lmlnvqmDibKv6lBXwx3rzHDSMffNrTRXA/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>都要是无法实现的，但我们能不能在一致性上作出一些妥协，不追求强一致性，转而追求最终一致性，所以引入 BASE 理论。</span>\n </div>\n <p></p>\n <div>\n  <span>在分布式事务中，BASE 最重要是为 CAP 提出了最终一致性的解决方案，BASE 强调牺牲高一致性，从而获取可用性，数据允许在一段时间内不一致，只要保证最终一致性就可以了。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <span></span> \n    <span></span> \n   </div>\n   <div>\n    <p><strong>实现最终一致性</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <strong><span>弱一致性：</span></strong>\n  <span>系统不能保证后续访问返回更新的值。需要在一些条件满足之后，更新的值才能返回。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>从更新操作开始，到系统保证任何观察者总是看到更新的值的这期间被称为不一致窗口。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <strong><span>最终一致性：</span></strong>\n  <span>这是弱一致性的特殊形式；存储系统保证如果没有对某个对象的新更新操作，最终所有的访问将返回这个对象的最后更新的值。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <span></span> \n    <span></span> \n   </div>\n   <div>\n    <p><strong>BASE 模型</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>BASE 模型是传统 ACID 模型的反面，不同于 ACID，BASE 强调牺牲高一致性，从而获得可用性，数据允许在一段时间内的不一致，只要保证最终一致就可以了。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>BASE 模型反 ACID 模型，完全不同 ACID 模型，牺牲高一致性，获得可用性或可靠性：Basically Available 基本可用。</span>\n </div>\n <p></p>\n <div>\n  <span>支持分区失败（e.g. sharding碎片划分数据库<span>）</span>Soft state 软状态，状态可以有一段时间不同步，异步。</span>\n </div>\n <p></p>\n <div>\n  <span>Eventually consistent 最终一致，最终数据是一致的就可以了，而不是时时一致。</span>\n </div>\n <p></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <span></span> \n    <span></span> \n   </div>\n   <div>\n    <p><strong>分布式事务</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>在分布式系统中，要实现分布式事务，无外乎几种解决方案。方案各有不同，不过其实都是遵循 BASE 理论，是最终一致性模型：</span>\n </div>\n <ul class=\"list-paddingleft-2\">\n  <li><p><strong><span>两阶段提交（2PC）</span></strong></p></li>\n  <li><p><strong><span>补偿事务（TCC）</span></strong></p></li>\n  <li><p><strong><span>本地消息表</span></strong></p></li>\n  <li><p><strong><span>MQ&nbsp;事务消息</span></strong><span></span></p></li>\n </ul>\n <div></div>\n <div></div>\n <div></div>\n <div></div>\n <h4><br></h4>\n <h4><strong><span>①两阶段提交（2PC）</span></strong></h4>\n <div>\n  <br>\n </div>\n <div>\n  <span>还有一个数据库的 XA 事务，不过目前在真正的互联网中实际的应用基本很少，两阶段提交就是使用 XA 原理。</span>\n </div>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTSvf59KazGmNsP8MDcu8sTcFicAR8S8K4C6RLPQMCuv0a5nHDaEdZK1g/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>在 XA 协议中分为两阶段：</span>\n  <span></span>\n </div>\n <ul class=\"list-paddingleft-2\">\n  <li><p><span>事务管理器要求每个涉及到事务的数据库预提交（Precommit<span>）</span>此操作，并反映是否可以提交。</span></p></li>\n  <li><p><span>事务协调器要求每个数据库提交数据，或者回滚数据。</span></p></li>\n </ul>\n <div></div>\n <div></div>\n <p></p>\n <div>\n  <span>说一下，为何在互联网的系统中没被改造过的两阶段提交基本很少被业界应用，最大的缺点就是同步阻塞问题。</span>\n </div>\n <p></p>\n <div>\n  <span>在资源准备就绪之后，资源管理器中的资源就一直处于阻塞，直到提交完成之后，才进行资源释放。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>这个在互联网高并发大数据的今天，两阶段的提交是不能满足现在互联网的发展。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>还有就是两阶段提交协议虽然为分布式数据强一致性所设计，但仍然存在数据不一致性的可能。</span>\n </div>\n <p></p>\n <div>\n  <span>例如：</span>\n  <span>在第二阶段中，假设协调者发出了事务 Commit 的通知，但是因为网络问题该通知仅被一部分参与者所收到并执行了 Commit 操作，其余的参与者则因为没有收到通知一直处于阻塞状态，这时候就产生了数据的不一致性。</span>\n </div>\n <div>\n  <br>\n </div>\n <h4><strong><span>②补偿事务（TCC）</span></strong><span></span></h4>\n <div>\n  <br>\n </div>\n <p><span>TCC 是服务化的两阶段编程模型，每个业务服务都必须实现 Try，Confirm，Cancel 三个方法，这三个方式可以对应到 SQL 事务中 Lock，Commit，Rollback。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTXMIgl7bRxyh2icibE1cNb2P1a292HH4ria8uZAjaNXkQKE1CPOnanR7rA/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <strong><span>相比两阶段提交，TCC 解决了几个问题：</span></strong>\n  <span></span>\n  <span>同步阻塞，引入了超时机制，超时后进行补偿，并不会像两阶段提交锁定了整个资源，将资源转换为业务逻辑形式，粒度变小。</span>\n </div>\n <p></p>\n <div>\n  <span>因为有了补偿机制，可以由业务活动管理器进行控制，保证数据一致性。</span>\n </div>\n <div>\n  <span></span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <strong><span>Try 阶段：</span></strong>\n  <span>T</span>\n  <span>ry 只是一个初步的操作，进行初步的确认，它的主要职责是完成所有业务的检查，预留业务资源。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <strong><span>Confirm 阶段：</span></strong>\n  <span>C</span>\n  <span>onfirm 是在 Try 阶段检查执行完毕后，继续执行的确认操作，必须满足幂等性操作，如果 Confirm 中执行失败，会有事务协调器触发不断的执行，直到满足为止。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <strong><span>Cancel 是取消执行：</span></strong>\n  <span>在 Try 没通过并释放掉 Try 阶段预留的资源，也必须满足幂等性，跟 Confirm 一样有可能被不断执行。</span>\n </div>\n <div>\n  <br>\n </div>\n <p><span>一个下订单，生成订单扣库存的例子：</span><span></span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTV6PicDhPQ8cDYNLPQhHu938SFLw3fM4gGdqIC657745tYLbogzoYVow/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <p><span>接下来看看，我们的下单扣减库存的流程怎么加入 TCC：</span><span></span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTBGDoERFmYH59kamIvFA6DGaJiaFJ6rCeX4LCS27yPys7WCg7yUxHWsQ/640?wx_fmt=png\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>在 Try 的时候，会让库存服务预留 N 个库存给这个订单使用，让订单服务产生一个“未确认”订单，同时产生这两个预留的资源。</span>\n </div>\n <p></p>\n <p><span>在 Confirm 的时候，会使用在 Try 预留的资源，在 TCC 事务机制中认为，如果在 Try 阶段能正常预留的资源，那么在 Confirm 一定能完整的提交。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_png/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTO2O2VDG9tSev4dVKUzOqJibyjNZzmL2icAvmoMMOIj6JGd4khvDaIxBA/640?wx_fmt=png\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>在 Try 的时候，有任务一方为执行失败，则会执行 Cancel 的接口操作，将在 Try 阶段预留的资源进行释放。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>这个并不是重点要论 TCC 事务是怎么实现，重点还是讨论分布式事务在 CAP+BASE 理论的应用。</span>\n </div>\n <div>\n  <br>\n </div>\n <p><span>实现可以参考：</span><span></span></p>\n <div class=\"output_wrapper\">\n  <pre class=\"has\"><code class=\"language-javascript\">https://github.com/changmingxie/tcc-transaction\n</code></pre>\n </div>\n <p></p>\n <h4><strong><span>③本地消息表</span></strong><span></span></h4>\n <div>\n  <br>\n </div>\n <p><span>本地消息表这个方案最初是 eBay 提出的，eBay 的完整方案：</span></p>\n <div class=\"output_wrapper\">\n  <pre class=\"has\"><code class=\"language-javascript\">https://queue.acm.org/detail.cfm?id=1394128\n</code></pre>\n </div>\n <p></p>\n <p><span>本地消息表这种实现方式应该是业界使用最多的，其核心思想是将分布式事务拆分成本地事务进行处理。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTlM5CrEZ29Nia1M1YkDxEjU4Gdt7dDQqOVsXI2990Q1h6qxEP9N4HNWw/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>对于本地消息队列来说，核心就是将大事务转变为小事务，还是用上面下订单扣库存的例子说明：</span>\n </div>\n <ul class=\"list-paddingleft-2\">\n  <li><p><span>当我们去创建订单的时候，我们新增一个本地消息表，把创建订单和扣减库存写入到本地消息表，放在同一个事务（依靠数据库本地事务保证一致性）。</span></p></li>\n  <li><p><span>配置一个定时任务去轮询这个本地事务表，扫描这个本地事务表，把没有发送出去的消息，发送给库存服务，当库存服务收到消息后，会进行减库存，并写入服务器的事务表，更新事务表的状态。</span></p></li>\n  <li><p><span>库存服务器通过定时任务或直接通知订单服务，订单服务在本地消息表更新状态。</span></p></li>\n </ul>\n <div></div>\n <div></div>\n <div></div>\n <p></p>\n <div>\n  <span>这里须注意的是，对于一些扫描发送未成功的任务，会进行重新发送，所以必须保证接口的幂等性。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>本地消息队列是 BASE 理论，是最终一致性模型，适用对一致性要求不高的情况。</span>\n </div>\n <div>\n  <br>\n </div>\n <h4><strong><span>④MQ 事务</span></strong><span></span></h4>\n <div>\n  <br>\n </div>\n <div>\n  <span>RocketMQ 在 4.3 版本已经正式宣布支持分布式事务，在选择 RokcetMQ 做分布式事务请务必选择 4.3 以上的版本。</span>\n </div>\n <div>\n  <br>\n </div>\n <p><span>RocketMQ 中实现了分布式事务，实际上是对本地消息表的一个封装，将本地消息表移动到了 MQ 内部。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKT7kju2jDInR6qTbdCh8bXlAUfRqJ54WCnpSibyLwuNIRlqC3YmOSeGBg/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>事务消息作为一种异步确保型事务， 将两个事务分支通过 MQ 进行异步解耦，RocketMQ 事务消息的设计流程同样借鉴了两阶段提交理论。</span>\n </div>\n <p></p>\n <p><span>整体交互流程如下图所示：</span><span></span></p>\n <div><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTMjzgl1pcjibJyF1RpLKHysBgFkyjb3CibZyibPQ28WseMYqHJEkANkIcw/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></div>\n <div>\n  <span>MQ 事务是对本地消息表的一层封装，将本地消息表移动到了 MQ 内部，所以也是基于 BASE 理论，是最终一致性模式，对强一致性要求不那么高的事务适用，同时 MQ 事务将整个流程异步化了，也非常适合在高并发情况下使用。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <div>\n   <div>\n    <p>RocketMQ&nbsp;选择同步/异步刷盘，<span>同</span><span>步</span><span>/异</span><span>步</span>复制，背后的&nbsp;CP&nbsp;和 AP&nbsp;思考</p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>虽然同步刷盘/异步刷盘，同步/异步复制，并没有对 CAP 直接的应用，但在配置的过程中也一样涉及到可用性和一致性的考虑。</span>\n </div>\n <p></p>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <strong><span></span> <span></span> </strong>\n   </div>\n   <div>\n    <p><strong>同步刷盘/异步刷盘</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTOl1A3JIWthibMmg1BqsjxTBJg4nWlBWRmyPXsWNqVI6kiaOpkAjbtV2g/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>RocketMQ 的消息是可以做到持久化的，数据会持久化到磁盘，RocketMQ 为了提高性能，尽可能保证磁盘的顺序写入。</span>\n </div>\n <p></p>\n <div>\n  <span>消息在 Producer 写入 RocketMQ 的时候，有两种写入磁盘方式：</span>\n </div>\n <ul class=\"list-paddingleft-2\">\n  <li><p><strong><span>异步刷盘：</span></strong><span>消息快速写入到内存的 Pagecache，就立马返回写成功状态，当内存的消息累计到一定程度的时候，会触发统一的写磁盘操作。这种方式可以保证大吞吐量，但也存在着消息可能未存入磁盘丢失的风险。</span></p></li>\n  <li><p><strong><span>同步刷盘：</span></strong><span>消息快速写入内存的 Pagecahe，立刻通知刷盘线程进行刷盘，等待刷盘完成之后，唤醒等待的线程，返回消息写成功的状态。</span></p></li>\n </ul>\n <div></div>\n <div></div>\n <h4><br></h4>\n <div>\n  <div>\n   <div>\n    <span></span> \n    <strong><span></span> <span></span> </strong>\n   </div>\n   <div>\n    <p><strong>同步复制/异步复制</strong></p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTKskib0YyTKAJYXcicN3icLUQgssibiclLvlJtBzHtp9AsGeldqZiciaaxZhDg/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>一个 Broker 组有&nbsp;Master&nbsp;和 Slave，消息需要从&nbsp;Master 复制到 Slave&nbsp;上，</span>\n  <span>所以有同步和异步两种复制方式：</span>\n </div>\n <ul class=\"list-paddingleft-2\">\n  <li><p><strong><span>同步复制：</span></strong><span>是等 Master 和 Slave 均写成功后才反馈给客户端写成功状态。</span></p></li>\n  <li><p><strong><span>异步复制：</span></strong><span>是只要 Master 写成功即可反馈给客户端写成功状态。</span></p></li>\n </ul>\n <div></div>\n <div></div>\n <p></p>\n <div>\n  <span>异步复制的优点是可以提高响应速度，但牺牲了一致性 ，一般实现该类协议的算法需要增加额外的补偿机制。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>同步复制的优点是可以保证一致性（一般通过两阶段提交协议<span>）</span>，但是开销较大，可用性不好（参见 CAP&nbsp;定理<span>）</span>，带来了更多的冲突和死锁等问题。</span>\n </div>\n <div>\n  <br>\n </div>\n <p><span>值得一提的是 Lazy+Primary/Copy 的复制协议在实际生产环境中是非常实用的。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTJMEO0qD0Ab5mRj72ujQJExsHJqCofpqwWKqIp269I65IfiaU0mKnYicA/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>RocketMQ 的设置要结合业务场景，合理设置刷盘方式和主从复制方式，尤其是 SYNC_FLUSH 方式，由于频繁的触发写磁盘动作，会明显降低性能。</span>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>通常情况下，应该把 Master 和 Slave 设置成 ASYNC_FLUSH 的刷盘方式，主从之间配置成 SYNC_MASTER 的复制方式，这样即使有一台机器出故障，仍然可以保证数据不丢。</span>\n </div>\n <p></p>\n <div>\n  <div>\n   <div>\n    <p>总结</p>\n   </div>\n  </div>\n </div>\n <div>\n  <br>\n </div>\n <div>\n  <span>在微服务的构建中，永远都逃离不了 CAP 理论，因为网络永远不稳定，硬件总会老化，软件可能出现 Bug，所以分区容错性在微服务中是躲不过的命题。</span>\n </div>\n <p></p>\n <p><span>可以这么说，只要是分布式，只要是集群都面临着 AP 或者 CP 的选择，但你很贪心的时候，既要一致性又要可用性，那只能对一致性作出一点妥协，也就是引入了 BASE 理论，在业务允许的情况下实现最终一致性。</span></p>\n <p><img src=\"https://ss.csdn.net/p?https://mmbiz.qpic.cn/mmbiz_jpg/MOwlO0INfQr06uHD6uIuYtMiaY5Hw0FKTKicwYnJM8gDMVnLDf7MsEPZQb5zuIYQIGauSCE7Eiclacdw5EMibJzJTQ/640?wx_fmt=jpeg\" style=\"max-width:100%;\"><br></p>\n <div>\n  <span>究竟是选 AP 还是选 CP，真的在于对业务的了解，例如金钱，库存相关会优先考虑 CP 模型，例如社区发帖相关可以优先选择 AP 模型，这个说白了基于对业务的了解是一个选择和妥协的过程。</span>\n </div>\n <div>\n  <br>\n </div>\n <p><span><em><span>作者：陈于喆</span></em></span></p>\n <p><span><em><span>简介：十余年的开发和架构经验，国内较早一批微服务开发实施者。曾任职国内互联网公司网易和唯品会高级研发工程师，后在创业公司担任技术总监/架构师，目前在洋葱集团任职技术研发副总监。</span></em></span></p>\n <p><span><em><span>编辑：陶家龙、孙淑娟</span></em></span></p>\n <p><span><em><span></span></em></span></p>\n <p><span></span></p>\n <div>\n  <div>\n   <p><span><strong>新福利:</strong></span></p>\n   <div>\n    <p><strong>从9月11日开始至10月15日截止，一共五周时间，每周二我会从公众号底部留言+转发+在看综合最多的读者中抽取一名读者，免费包邮送实体新书《HBase原理与实践》，留言互动起来吧~</strong></p>\n    <p><br></p></div></div></div> \n</div>',NULL,0,2,1,0,0,'“对于开发或设计分布式系统的架构师工程师来说，CAP是必须要掌握的理论。图片来自PexelsBut：这个文章的重点并不是讨论CAP理论和细节，重点是说说CAP...数据库','CAP',1,'2020-05-16 16:48:27','2020-05-16 17:05:54'),(105,'个人简历-java开发-积极找工作中-求内推',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200517153339737.png',NULL,0,'<p>简历下载：<a href=\"https://www.lcools.cn/static/file/%E7%AE%80%E5%8E%86-%E5%88%98%E5%B8%85-18408234575.doc\" target=\"_blank\" style=\"background-color: rgb(255, 255, 255);\">下载</a></p><p class=\"23\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:28.0000pt;\"><font face=\"微软雅黑\">刘帅</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:28.0000pt;\"><o:p></o:p></span></p><p class=\"22\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">4年工作经验 </span><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(153,153,153);\">| </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">本科</font> . 统招 </span><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(153,153,153);\">| </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">25岁 </span><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(153,153,153);\">| </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">男</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"22\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">联系电话：</font> 18408234575 </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"22\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">电子邮箱：</font> 1432678620@qq.com</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p>&nbsp;</o:p></span></p><p class=\"26\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:normal;font-size:12.0000pt;\"><font face=\"宋体\">个人优势</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p></o:p></span></p><p class=\"24\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">综合能力：</font> <font face=\"微软雅黑\">责任心</font> </span><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(153,153,153);\">| </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">自驱动</font> </span><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(153,153,153);\">| </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">执行力</font> </span><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(153,153,153);\">| </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">个人能力</font> </span><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(153,153,153);\">| </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">时间管理</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">能力描述：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">• 学习能力较强，执行力较强，做事认真负责</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">• 诚信，讲原则，有责任心，良好的协调沟通能力</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">• 逻辑性强，热爱技术，性格内敛，灵活，执着</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">• 有4年的工作经验，具有较强的抗压能力</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p>&nbsp;</o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><b><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-weight:bold;font-size:9.0000pt;\"><font face=\"微软雅黑\">技能描述：</font></span></b><b><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-weight:bold;font-size:9.0000pt;\"><o:p></o:p></span></b></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">●</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">&nbsp;</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">扎实</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">的</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">java基础，熟悉jvm性能调优、线程处理、设计模式、熟悉java编码规范</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● 熟悉</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">jvm内存模型</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">，</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">了解</font>Java的垃圾回收机制</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉</font>linux</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">常用的命令</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">，能完成系统的基本操作</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉</font>docker的基础知识及操作</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉</font>svn 、git的版本管理操作</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● 熟悉github</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">，</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">gitlab项目管理和代码托管的平台</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉</font>maven</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">的使用，常用的依赖管理和项目打包。</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● 熟悉数据库mysql、oracle，熟练掌握sql优化原理</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"padding:0pt 0pt 0pt 0pt ;word-break:break-all;mso-pagination:widow-orphan;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">R</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">edis</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">缓存</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">数据库</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">，</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">并对它的集群架构有所理解</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"padding:0pt 0pt 0pt 0pt ;word-break:break-all;mso-pagination:widow-orphan;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">了解常见的</font>mq（RabbitMQ ，ActiveMQ，Kafka）</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉</font>spring的常用的项目框架SSM、SSH 搭建</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">过相关</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">的项目</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉</font>&nbsp;SpringMVC、SpringBoot、MyBatis&nbsp;等编程框架</span><span style=\"mso-spacerun:\'yes\';font-family:Arial;mso-fareast-font-family:微软雅黑;\ncolor:rgb(51,51,51);letter-spacing:0.0000pt;text-transform:none;\nfont-style:normal;font-size:13.5000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">nginx、tomcat等web容器。</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">●</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">&nbsp;</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉微服务，了解常见的服务治理框架，例如</font>&nbsp;zookeeper、Spring&nbsp;Cloud&nbsp;等</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">●</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">&nbsp;</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉</font>WEB相关知识(如HTML, JAVASCRIPT, CSS</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">，</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">jquery等)</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">了解微信公众号的开发，搭建过简单的微信公众号</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"21\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\nline-height:13.5000pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">了解</font>shiro安全框架</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><br></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p></o:p></span></p><p class=\"26\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:normal;font-size:12.0000pt;\"><font face=\"宋体\">工作经历</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p></o:p></span></p><table class=\"31\" border=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse;width:100.0000%;margin-left:5.4000pt;\nborder:none;mso-padding-alt:0.7500pt 0.7500pt 0.7500pt 0.7500pt ;\"><tbody><tr><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"MsoNormal\" style=\"text-align:left;\"><b><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:bold;font-size:9.0000pt;\">亚信科技</span></b><span style=\"font-family:微软雅黑;color:rgb(51,51,51);font-size:10.5000pt;\"><o:p></o:p></span></p></td><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"28\" align=\"right\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;text-align:right;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">2016.07 - 至今</span><span style=\"font-family:微软雅黑;color:rgb(102,102,102);font-size:9.0000pt;\"><o:p></o:p></span></p></td></tr></tbody></table><p class=\"30\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">职位：</font>Java开发工程师 </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">我任职亚信科技公司</font>CMC SRD解决方案研发部门，该部门主要负责北京移动CRM系统新需求的开发维护以及去中心化升级。CRM系统包括的子系统或周边系统有 短厅、能力开放平台、cboss系统、boss系统、pce系统、日志中心等。在其中主要负责的任务包括 新需求功能的开发，问题工单的查询定位，部分需求的分析实现方案，为周边系统提供功能接口或调用功能接口，项目的去中心化升级。 </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:0.0000pt;margin-bottom:0.0000pt;margin-left:0.0000pt;\npadding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p>&nbsp;</o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p>&nbsp;</o:p></span></p><p class=\"26\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:normal;font-size:12.0000pt;\"><font face=\"宋体\">项目经历</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p></o:p></span></p><table class=\"31\" border=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse;width:100.0000%;margin-left:5.4000pt;\nborder:none;mso-padding-alt:0.7500pt 0.7500pt 0.7500pt 0.7500pt ;\"><tbody><tr><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"MsoNormal\" style=\"text-align:left;\"><b><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:bold;font-size:9.0000pt;\">甘肃移动工程敏捷中台开发软件采购项目</span></b><span style=\"font-family:微软雅黑;color:rgb(51,51,51);font-size:10.5000pt;\"><o:p></o:p></span></p></td><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"28\" align=\"right\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;text-align:right;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">2019.08 - 2020.05</span><span style=\"font-family:微软雅黑;color:rgb(102,102,102);font-size:9.0000pt;\"><o:p></o:p></span></p></td></tr></tbody></table><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">所属公司：</font>(亚信科技) </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;text-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目描述：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">甘肃移动工程敏捷中台开发项目，涉及的核心业务包括数据专线和住宿通融合业务</font>(宽带，固话，iptv)的下单。</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">主要核心功能包括</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">（</font>1）融合甩单快速受理</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">融合业务受理</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">整合业务环节、精简前台步骤，实现融合业务同屏受理、一键提交。</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">甩单提交</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">前台元素重构，部分属性中台代填。线下步骤从前台剥离，精简受理环节。前台甩单至业务池，客户快速离席。</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">数据驱动</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">用户画像精准匹配，场景营销支持实时推荐。</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">（</font>2）前台业务不间断</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">后台系统故障时，前台业务不中断、不打烊，应急库可快速接管订单，故障恢复，受理订单重新调度。</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;text-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">你的成就：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">主要工作内容：</font>&nbsp;&nbsp;</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">作为项目核心成员，参与从融合框架的前台融合业务页面的构件，后台融合大订单的预受理订单拆解，订单顺序依赖控制，到预受理订单数据状态控制，到和外围系统（合同系统，</font>OA系统）的交互，到最后协议订单完全竣工的整个流程的设计开发。</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">系统用到的工具及技术：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">数据存储用到了</font>oracle、redis&nbsp;</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">分布式集群框架</font>ZooKeeper</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">服务框架用到了</font>COMFrame、AISChedule、AICache</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">文档管理用到了</font>SVN</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">代码版本控制用到了</font>SVN</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">包管理依赖用到了</font>maven</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">周边系统交互用到了</font> WebService、HTTP、CSF</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">需求开发任务管理用的</font>DMP</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">其它相关工具如</font>plsqldev、IntelliJ&nbsp;IDEA&nbsp; 、UltraEdit、Xshell等</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p>&nbsp;</o:p></span></p><table class=\"31\" border=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse;width:100.0000%;margin-left:5.4000pt;\nborder:none;mso-padding-alt:0.7500pt 0.7500pt 0.7500pt 0.7500pt ;\"><tbody><tr><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"MsoNormal\" style=\"text-align:left;\"><b><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:bold;font-size:9.0000pt;\">北京移动<font face=\"Times New Roman\">CRM</font><font face=\"宋体\">三代</font></span></b><span style=\"font-family:微软雅黑;color:rgb(51,51,51);font-size:10.5000pt;\"><o:p></o:p></span></p></td><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"28\" align=\"right\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;text-align:right;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">2018.10 - 2019.07</span><span style=\"font-family:微软雅黑;color:rgb(102,102,102);font-size:9.0000pt;\"><o:p></o:p></span></p></td></tr></tbody></table><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">所属公司：</font>(亚信科技) </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;text-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目描述：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目描述：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;北京移动CRM三代项目 主要是对二代项目的去中心化升级，将各个模块分中心摘除来。其中包括有客管中心、产商品中心、订单中心、资源中心、物联网中心等。</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">系统用到的工具及技术：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">数据存储用到了</font>oracle、redis&nbsp;</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">分布式集群框架</font>ZooKeeper、Storm</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">服务框架用到了</font>COMFrame、AISChedule、AICache</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">文档管理用到了</font>SVN</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">代码版本控制用到了</font>git、GitLab</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">包管理依赖用到了</font>maven</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">周边系统交互用到了</font> WebService、HTTP、CSF</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">需求开发任务管理用的</font>DMP</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">其它相关工具如</font>plsqldev、IntelliJ&nbsp;IDEA&nbsp; 、UltraEdit、Xshell等</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;text-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">你的成就：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">主要工作内容：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">&nbsp; &nbsp; &nbsp; &nbsp; 参与客户中心项目的模块功能迁移割接，包括有客户信息管理、实名联系人管理、经办人管理等</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目成就收获：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">高质量高效率的完成开发任务</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟练使用项目中用到的相关工具</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉掌握项目中使用的相关技术框架</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">提高个人协调沟通能力、抗压能力等</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">提升了自己的职业素养</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p>&nbsp;</o:p></span></p><table class=\"31\" border=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse;width:100.0000%;margin-left:5.4000pt;\nborder:none;mso-padding-alt:0.7500pt 0.7500pt 0.7500pt 0.7500pt ;\"><tbody><tr><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"MsoNormal\" style=\"text-align:left;\"><b><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:bold;font-size:9.0000pt;\">北京移动积分中心</span></b><span style=\"font-family:微软雅黑;color:rgb(51,51,51);font-size:10.5000pt;\"><o:p></o:p></span></p></td><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"28\" align=\"right\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;text-align:right;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">2018.07 - 2018.09</span><span style=\"font-family:微软雅黑;color:rgb(102,102,102);font-size:9.0000pt;\"><o:p></o:p></span></p></td></tr></tbody></table><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">所属公司：</font>(亚信科技) </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;text-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目描述：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目描述：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;北京移动积分中心项目 主要的内容是对积分管理功能模块的去中心化升级，以及完成周边系统交互的配合改造。</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">系统用到的工具及技术：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">数据存储用到了</font>oracle、redis&nbsp;</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">分布式集群框架</font>ZooKeeper、Storm</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">服务框架用到了</font>COMFrame、AISChedule</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">文档管理用到了</font>SVN</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">代码版本控制用到了</font>git、GitLab</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">包管理依赖用到了</font>maven</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">周边系统交互用到了</font> WebService、HTTP、CSF</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">需求开发任务管理用的</font>DMP</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">其它相关工具如</font>plsqldev、IntelliJ&nbsp;IDEA&nbsp; 、UltraEdit、Xshell等</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;text-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">你的成就：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">主要工作内容：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">&nbsp; &nbsp; &nbsp; &nbsp; 对周边系统CRM交互的改造开发任务的进度管控、质量管控、规范管控，解决开发人员在过程中遇到的疑难问题，对联调测试的进度管控。</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目成就收获：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉对项目模块进度的把控管理</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟练使用项目中用到的相关工具</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉掌握项目中使用的相关技术框架</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">提高个人协调沟通能力、抗压能力、管理能力等</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">提升了自己的职业素养</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p>&nbsp;</o:p></span></p><table class=\"31\" border=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse;width:100.0000%;margin-left:5.4000pt;\nborder:none;mso-padding-alt:0.7500pt 0.7500pt 0.7500pt 0.7500pt ;\"><tbody><tr><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"MsoNormal\" style=\"text-align:left;\"><b><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:bold;font-size:9.0000pt;\">北京移动账户中心</span></b><span style=\"font-family:微软雅黑;color:rgb(51,51,51);font-size:10.5000pt;\"><o:p></o:p></span></p></td><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"28\" align=\"right\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;text-align:right;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">2017.11 - 2018.06</span><span style=\"font-family:微软雅黑;color:rgb(102,102,102);font-size:9.0000pt;\"><o:p></o:p></span></p></td></tr></tbody></table><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">所属公司：</font>(亚信科技) </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;text-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目描述：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目描述：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;北京移动账户中心项目 主要的内容是对账户信息、账单信息、预存和押金、计费、等功能模块的去中心化升级，以及完成周边系统交互的配合改造。</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">系统用到的工具及技术：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">数据存储用到了</font>oracle、redis&nbsp;</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">分布式集群框架</font>ZooKeeper、Storm</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">服务框架用到了</font>COMFrame、AISChedule</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">文档管理用到了</font>SVN</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">代码版本控制用到了</font>git、GitLab</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">包管理依赖用到了</font>maven</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">周边系统交互用到了</font> WebService、HTTP、CSF</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">需求开发任务管理用的</font>DMP</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">其它相关工具如</font>plsqldev、IntelliJ&nbsp;IDEA&nbsp; 、UltraEdit、Xshell等</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;text-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">你的成就：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">主要工作内容：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">&nbsp; &nbsp; &nbsp; &nbsp; 以及完成周边系统CRM交互的改造工作</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目成就收获：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">高质量高效率的完成开发任务</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟练使用项目中用到的相关工具</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉掌握项目中使用的相关技术框架</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">提高个人协调沟通能力、抗压能力等</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">提升了自己的职业素养</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p>&nbsp;</o:p></span></p><table class=\"31\" border=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse;width:100.0000%;margin-left:5.4000pt;\nborder:none;mso-padding-alt:0.7500pt 0.7500pt 0.7500pt 0.7500pt ;\"><tbody><tr><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"MsoNormal\" style=\"text-align:left;\"><b><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:bold;font-size:9.0000pt;\">北京移动<font face=\"Times New Roman\">CRM</font><font face=\"宋体\">二代</font></span></b><span style=\"font-family:微软雅黑;color:rgb(51,51,51);font-size:10.5000pt;\"><o:p></o:p></span></p></td><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"28\" align=\"right\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;text-align:right;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">2016.07 - 2017.10</span><span style=\"font-family:微软雅黑;color:rgb(102,102,102);font-size:9.0000pt;\"><o:p></o:p></span></p></td></tr></tbody></table><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;text-indent:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">所属公司：</font>(亚信科技) </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;text-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目描述：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目描述：</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;北京移动CRM二代项目主要内容包括渠道管理、客户管理、资源管理、产品管理、订单管理、基础管理等功能域。系统用到的工具及技术：</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">数据存储用到了</font>oracle、memcached、redis&nbsp;</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">服务框架用到了</font>APPframe、EXEframe、SECframe</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">前段内容用到了</font>html、jsp、JavaScript</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">版本控制和需求文档管理用到了</font>svn</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">周边系统交互用到了</font> WebService、HTTP</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">需求开发任务管理用的</font>DMP</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">其它相关工具如</font>plsqldev、eclipse、UltraEdit、Xshell等</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"29\" style=\"margin-top:7.5000pt;margin-right:0.0000pt;margin-bottom:7.5000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;text-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">你的成就：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">主要工作内容：</font> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;新需求功能的开发，问题工单的查询定位，部分需求的分析实现方案</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">项目成就收获：</font> </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">高质量高效率的完成开发任务</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟练使用项目中用到的相关工具</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">熟悉掌握项目中使用的相关技术框架</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">提高个人协调沟通能力、抗压能力等</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"27\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\ntext-align:left;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">● </span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">提升了自己的职业素养</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:0.0000pt;margin-bottom:0.0000pt;margin-left:0.0000pt;\npadding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p>&nbsp;</o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p>&nbsp;</o:p></span></p><p class=\"26\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:normal;font-size:12.0000pt;\"><font face=\"宋体\">教育经历</font></span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\"><o:p></o:p></span></p><table class=\"31\" border=\"0\" cellspacing=\"0\" style=\"border-collapse:collapse;width:100.0000%;margin-left:5.4000pt;\nborder:none;mso-padding-alt:0.7500pt 0.7500pt 0.7500pt 0.7500pt ;\"><tbody><tr><td valign=\"center\" style=\"padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;border-right:none;\nborder-top:none;border-bottom:none;\"><p class=\"MsoNormal\" style=\"text-align:left;\"><b><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:bold;font-size:9.0000pt;\">成都东软学院</span></b><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(51,51,51);\nfont-size:10.5000pt;\">&nbsp;&nbsp; </span><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(102,102,102);\nfont-size:9.0000pt;\">本科 <font face=\"Times New Roman\">. </font><font face=\"宋体\">统招 </font><font face=\"Times New Roman\">/ </font><font face=\"宋体\">计算机科学与技术</font></span><span style=\"font-family:微软雅黑;color:rgb(51,51,51);font-size:10.5000pt;\"><o:p></o:p></span></p></td><td width=\"195\" valign=\"center\" style=\"width:97.5000pt;padding:0.2500pt 0.2500pt 0.2500pt 0.2500pt ;border-left:none;\nborder-right:none;border-top:none;border-bottom:none;\"><p class=\"25\" align=\"right\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;text-align:right;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(102,102,102);\nfont-size:9.0000pt;\">2013.09 - 2017.06</span><span style=\"font-family:微软雅黑;color:rgb(102,102,102);font-size:9.0000pt;\"><o:p></o:p></span></p></td></tr></tbody></table><p class=\"MsoNormal\"><span style=\"mso-spacerun:\'yes\';font-family:\'Times New Roman\';color:rgb(0,0,0);\nfont-weight:normal;font-size:12.0000pt;\"><o:p>&nbsp;</o:p></span></p><p class=\"26\" style=\"margin-right:0.0000pt;margin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><span style=\"mso-spacerun:\'yes\';font-family:宋体;color:rgb(0,0,0);\nfont-weight:normal;font-size:12.0000pt;\"><font face=\"宋体\">业余活动</font></span><span style=\"mso-spacerun:\'yes\';font-family:宋体;color:rgb(0,0,0);\nfont-weight:normal;font-size:12.0000pt;\"><o:p></o:p></span></p><p class=\"26\" style=\"margin-top:0.0000pt;margin-right:0.0000pt;margin-bottom:0.0000pt;\nmargin-left:0.0000pt;padding:0pt 0pt 0pt 0pt ;\"><!--[if gte mso 9]><xml><w:LatentStyles DefLockedState=\"false\"  DefUnhideWhenUsed=\"true\"  DefSemiHidden=\"true\"  DefQFormat=\"false\"  DefPriority=\"99\"  LatentStyleCount=\"260\" >\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Normal\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"heading 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"heading 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"heading 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"heading 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"heading 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"heading 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"heading 7\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"heading 8\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"heading 9\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"index 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"index 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"index 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"index 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"index 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"index 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"index 7\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"index 8\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"index 9\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"toc 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"toc 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"toc 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"toc 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"toc 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"toc 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"toc 7\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"toc 8\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"toc 9\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Normal Indent\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"footnote text\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"annotation text\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"header\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"footer\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"index heading\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"caption\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"table of figures\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"envelope address\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"envelope return\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"footnote reference\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"annotation reference\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"line number\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"page number\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"endnote reference\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"endnote text\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"table of authorities\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"macro\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"toa heading\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Bullet\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Number\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Bullet 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Bullet 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Bullet 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Bullet 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Number 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Number 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Number 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Number 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Title\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Closing\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Signature\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Default Paragraph Font\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Body Text\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Body Text Indent\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Continue\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Continue 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Continue 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Continue 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Continue 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Message Header\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Subtitle\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Salutation\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Date\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Body Text First Indent\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Body Text First Indent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Note Heading\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Body Text 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Body Text 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Body Text Indent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Body Text Indent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Block Text\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Hyperlink\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"FollowedHyperlink\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Strong\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Emphasis\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Document Map\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Plain Text\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"E-mail Signature\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Normal (Web)\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"HTML Acronym\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"HTML Address\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"HTML Cite\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"HTML Code\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"HTML Definition\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"HTML Keyboard\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"HTML Preformatted\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"HTML Sample\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"HTML Typewriter\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"HTML Variable\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Normal Table\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"annotation subject\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"No List\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"1 / a / i\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"1 / 1.1 / 1.1.1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Article / Section\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Simple 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Simple 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Simple 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Classic 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Classic 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Classic 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Classic 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Colorful 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Colorful 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Colorful 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Columns 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Columns 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Columns 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Columns 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Columns 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Grid 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Grid 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Grid 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Grid 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Grid 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Grid 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Grid 7\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Grid 8\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table List 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table List 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table List 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table List 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table List 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table List 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table List 7\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table List 8\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table 3D effects 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table 3D effects 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table 3D effects 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Contemporary\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Elegant\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Professional\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Subtle 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Subtle 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Web 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Web 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Web 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Balloon Text\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Grid\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Table Theme\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Placeholder Text\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"No Spacing\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Shading\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light List\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Grid\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Dark List\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Shading\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful List\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Grid\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Shading Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light List Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Grid Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 1 Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 2 Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 1 Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"List Paragraph\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Quote\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Intense Quote\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 2 Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 1 Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 2 Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 3 Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Dark List Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Shading Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful List Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Grid Accent 1\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Shading Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light List Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Grid Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 1 Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 2 Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 1 Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 2 Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 1 Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 2 Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 3 Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Dark List Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Shading Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful List Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Grid Accent 2\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Shading Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light List Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Grid Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 1 Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 2 Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 1 Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 2 Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 1 Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 2 Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 3 Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Dark List Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Shading Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful List Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Grid Accent 3\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Shading Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light List Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Grid Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 1 Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 2 Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 1 Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 2 Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 1 Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 2 Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 3 Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Dark List Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Shading Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful List Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Grid Accent 4\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Shading Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light List Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Grid Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 1 Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 2 Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 1 Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 2 Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 1 Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 2 Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 3 Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Dark List Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Shading Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful List Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Grid Accent 5\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Shading Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light List Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Light Grid Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 1 Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Shading 2 Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 1 Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium List 2 Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 1 Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 2 Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Medium Grid 3 Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Dark List Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Shading Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful List Accent 6\" ></w:LsdException>\n<w:LsdException Locked=\"false\"  Priority=\"99\"  SemiHidden=\"false\"  Name=\"Colorful Grid Accent 6\" ></w:LsdException>\n</w:LatentStyles></xml><![endif]--></p><p class=\"29\" style=\"margin: 7.5pt 0pt; padding: 0pt;\"><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><font face=\"微软雅黑\">听歌，看电影，跑步，新技术学习，个人博客系统的维护（</font></span><a href=\"\" target=\"_blank\">https://www.lcools.cn</a><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\">）</span><span style=\"mso-spacerun:\'yes\';font-family:微软雅黑;color:rgb(0,0,0);\nfont-size:9.0000pt;\"><o:p></o:p></span></p>',NULL,1,3,0,0,1,'个人简历','个人简历',1,'2020-05-17 15:34:14','2020-07-09 16:55:03'),(106,'jvm分析与调优+调优标准',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2 class=\"title\"><a title=\"https://www.jianshu.com/p/30e8ff0f7dd9\" href=\"https://www.jianshu.com/p/30e8ff0f7dd9\" target=\"_blank\">jdk1.8——jvm分析与调优</a></h2> \n<h2><a title=\"https://baijiahao.baidu.com/s?id=1617167971312758600&amp;wfr=spider&amp;for=pc\" href=\"https://baijiahao.baidu.com/s?id=1617167971312758600&amp;wfr=spider&amp;for=pc\" target=\"_blank\">JVM性能调优的6大步骤，及关键调优参数详解</a></h2>',NULL,0,2,1,0,0,'jvm分析与调优+调优标准','jvm',1,'2020-05-17 16:21:03','2020-05-17 16:22:08'),(107,'JVM性能调优监控工具jps、jstack、jstat、jmap、jinfo使用详解',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2 id=\"h2_1\">jps</h2> \n<p>查看所有的jvm进程，包括进程ID，进程启动的路径等等。</p> \n<p>我自己也用PS，即：ps -ef | grep java</p> \n<h2 id=\"h2_2\">jstack</h2> \n<p>观察jvm中当前所有线程的运行情况和线程当前状态。</p> \n<p>系统崩溃了？如果java程序崩溃生成core文件，jstack工具可以用来获得core文件的java stack和native stack的信息，从而可以轻松地知道java程序是如何崩溃和在程序何处发生问题。</p> \n<p>系统hung住了？jstack工具还可以附属到正在运行的java程序中，看到当时运行的java程序的java stack和native stack的信息,&nbsp;如果现在运行的java程序呈现hung的状态，jstack是非常有用的。</p> \n<h2 id=\"h2_3\">jstat</h2> \n<p>jstat利用JVM内建的指令对Java应用程序的资源和性能进行实时的命令行的监控，包括了对进程的classloader，compiler，gc情况；</p> \n<p>特别的，一个极强的监视内存的工具，可以用来监视VM内存内的各种堆和非堆的大小及其内存使用量，以及加载类的数量。</p> \n<h2 id=\"h2_4\">jmap</h2> \n<p>监视进程运行中的jvm物理内存的占用情况，该进程内存内，所有对象的情况，例如产生了哪些对象，对象数量；</p> \n<p>系统崩溃了？jmap&nbsp;可以从core文件或进程中获得内存的具体匹配情况，包括Heap size, Perm size等等</p> \n<h2 id=\"h2_5\">jinfo</h2> \n<p>观察进程运行环境参数，包括Java System属性和JVM命令行参数</p> \n<p>系统崩溃了？jinfo可以从core文件里面知道崩溃的Java应用程序的配置信息。</p> \n<h2 id=\"h2_6\">备注</h2> \n<p>如果能熟练运用这些命令，尤其是在linux下，那么完全可以代替jprofile等监控工具。</p> \n<p>用命令的好处就是速度快，并且辅助于其他命令，比如grep gawk sed等，可以组装多种符合自己需求的工具。</p> \n<p>&nbsp;</p> \n<h1 id=\"h1_7\"><strong><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521170157173.png\" title=\"\" alt=\"雨伞\"></strong>怎么用</h1> \n<p>====================以下为较常用====================</p> \n<h2 id=\"h2_8\">jstat</h2> \n<p>具体参数如下：</p> \n<pre class=\"brush:java;toolbar: true; auto-links: false; hljs haml\"><code class=\"hljs haml\">-<span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<span class=\"ruby\"><span class=\"hljs-class\">：统计<span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\">class<span class=\"ruby\"><span class=\"hljs-class\">&nbsp;<span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\">loader<span class=\"ruby\"><span class=\"hljs-class\">行为信息&nbsp;<span class=\"ruby\"> </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code><code class=\"hljs haml\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"ruby\">-<span class=\"ruby\">compile：统计编译行为信息&nbsp; </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code><code class=\"hljs haml\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"ruby\"><span class=\"ruby\">-<span class=\"ruby\">gc：统计jdk&nbsp;gc时heap信息&nbsp; </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code><code class=\"hljs haml\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\">-<span class=\"ruby\">gccapacity：统计不同的generations（包括新生区，老年区，permanent区）相应的heap容量情况&nbsp; </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code><code class=\"hljs haml\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\">-<span class=\"ruby\">gccause：统计gc的情况，（同-gcutil）和引起gc的事件&nbsp; </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code><code class=\"hljs haml\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\">-<span class=\"ruby\">gcnew：统计gc时，新生代的情况&nbsp; </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code><code class=\"hljs haml\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\">-<span class=\"ruby\">gcnewcapacity：统计gc时，新生代heap容量&nbsp; </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code><code class=\"hljs haml\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\">-<span class=\"ruby\">gcold：统计gc时，老年区的情况&nbsp; </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code><code class=\"hljs haml\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\">-<span class=\"ruby\">gcoldcapacity：统计gc时，老年区heap容量&nbsp; </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code><code class=\"hljs haml\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\">-<span class=\"ruby\">gcpermcapacity：统计gc时，permanent区heap容量&nbsp; </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code><code class=\"hljs haml\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"hljs-title\"><span class=\"ruby\"><span class=\"hljs-class\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\"><span class=\"ruby\">-<span class=\"ruby\">gcutil：统计gc时，heap情况</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre> \n<p>&nbsp;</p> \n<p><strong>$ jstat -class 17970 1000 10&nbsp;(每隔1秒监控一次，一共做10次)&nbsp;</strong><br>Loaded&nbsp; Bytes&nbsp; Unloaded&nbsp; Bytes&nbsp;&nbsp;&nbsp;&nbsp; Time&nbsp;&nbsp;&nbsp;<br>&nbsp; 7837&nbsp; 8534.0&nbsp;&nbsp;&nbsp;&nbsp; 1069&nbsp; 1005.7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 27.87</p> \n<p>Loaded：Number of classes loaded.</p> \n<p>Bytes：Number of Kbytes loaded.</p> \n<p>Unloaded：Number of classes unloaded.</p> \n<p>Bytes：Number of Kbytes unloaded.</p> \n<p>Time：Time spent performing class load and unload operations.</p> \n<p><strong>$ jstat -gc 17970 2000 20&nbsp;(每隔2秒监控一次，共20次)</strong></p> \n<p><strong>$ jstat -gcutil 17970 1000 10&nbsp;(按百分比显式)&nbsp;</strong><br>S0C &nbsp; &nbsp; &nbsp; &nbsp;S1C &nbsp; &nbsp; &nbsp; S0U &nbsp; &nbsp; &nbsp;S1U &nbsp; &nbsp;EC &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;EU &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; OC &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;OU &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;PC &nbsp; &nbsp; &nbsp; &nbsp; PU &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;YGC &nbsp; &nbsp;YGCT &nbsp; &nbsp; &nbsp; &nbsp;FGC &nbsp;FGCT&nbsp;&nbsp;&nbsp;&nbsp; GCT&nbsp;&nbsp;&nbsp;<br>15936.0 15936.0 9030.8&nbsp; 0.0 &nbsp; &nbsp; 127872.0 61813.5&nbsp;&nbsp; 901120.0&nbsp;&nbsp; 544712.5&nbsp; 65536.0 35227.8&nbsp; 42078 2796.028&nbsp; 417&nbsp;&nbsp; 498.596 3294.624</p> \n<p>S0C：Current survivor space 0 capacity (KB).</p> \n<p>S1C：Current survivor space 1 capacity (KB).</p> \n<p>S0U：Current survivor space 0 utilization (KB).</p> \n<p>S1U：Current survivor space 1 utilization (KB).</p> \n<p>EC：Current eden space capacity (KB).</p> \n<p>EU：Eden space utilization (KB).</p> \n<p>OC：Current old space capacity (KB).</p> \n<p>OU：Old space utilization (KB).</p> \n<p>PC：Current permanent space capacity (KB).</p> \n<p>PU：Permanent space utilization (KB).</p> \n<p>YGC：Number of young generation GC Events.</p> \n<p>YGCT：Young generation garbage collection time.</p> \n<p>FGC：Number of full GC events.</p> \n<p>FGCT：Full garbage collection time.</p> \n<p>GCT：Total garbage collection time.</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521170157868.gif\" title=\"\" alt=\"\"></p> \n<p><strong>$ jstat -compiler 17970&nbsp;&nbsp;（显示VM实时编译的数量等信息）&nbsp;</strong><br>Compiled Failed Invalid&nbsp;&nbsp; Time&nbsp;&nbsp; FailedType FailedMethod&nbsp;<br>&nbsp;&nbsp;&nbsp; 3780&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp; 120.26&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 com/xxx/xxx run</p> \n<p>jstat –gccapacity :可以显示，VM内存中三代（young,old,perm）对象的使用和占用大小，如：PGCMN显示的是最小perm的内存使用量，PGCMX显示的是perm的内存最大使用量，PGC是当前新生成的perm内存占用量，PC是但前perm内存占用量。其他的可以根据这个类推，&nbsp;OC是old内纯的占用量。</p> \n<p><strong>[root<a href=\"http://my.oschina.net/u/570656\" rel=\"nofollow\" target=\"_blank\">@localhost</a>&nbsp;bin]# jstat -gccapacity 25917</strong></p> \n<p>NGCMN&nbsp; 640.0</p> \n<p>NGCMX&nbsp; 4992.0</p> \n<p>NGC&nbsp; 832.0</p> \n<p>S0C&nbsp; 64.0</p> \n<p>S1C&nbsp; 64.0</p> \n<p>EC&nbsp; 704.0</p> \n<p>OGCMN&nbsp; 1408.0</p> \n<p>OGCMX&nbsp; 60544.0</p> \n<p>OGC&nbsp; 9504.0</p> \n<p>OC&nbsp; 9504.0&nbsp; OC是old内纯的占用量</p> \n<p>PGCMN&nbsp; 8192.0&nbsp; PGCMN显示的是最小perm的内存使用量</p> \n<p>PGCMX&nbsp; 65536.0&nbsp; PGCMX显示的是perm的内存最大使用量</p> \n<p>PGC&nbsp; 12800.0&nbsp; PGC是当前新生成的perm内存占用量</p> \n<p>PC&nbsp; 12800.0&nbsp; PC是但前perm内存占用量</p> \n<p>YGC&nbsp; 164</p> \n<p>FGC&nbsp; 6</p> \n<p>jstat -gcnew pid: new对象的信息</p> \n<p><strong>[root<a href=\"http://my.oschina.net/u/570656\" rel=\"nofollow\" target=\"_blank\">@localhost</a>&nbsp;bin]# jstat -gcnew 25917</strong></p> \n<p>S0C&nbsp; S1C&nbsp; S0U&nbsp; S1U&nbsp; TT MTT&nbsp; DSS&nbsp; EC&nbsp; EU&nbsp; YGC&nbsp; YGCT</p> \n<p>64.0&nbsp; 64.0&nbsp; 47.4&nbsp; 0.0&nbsp; 2&nbsp; 15&nbsp; 32.0&nbsp; 704.0&nbsp; 145.7&nbsp; 168&nbsp; 0.254</p> \n<p>jstat -gcnewcapacity pid: new对象的信息及其占用量</p> \n<p><strong>[root<a href=\"http://my.oschina.net/u/570656\" rel=\"nofollow\" target=\"_blank\">@localhost</a>&nbsp;bin]# jstat -gcnewcapacity 25917</strong></p> \n<p>NGCMN&nbsp; NGCMX&nbsp; NGC&nbsp; S0CMX&nbsp; S0C&nbsp;&nbsp; S1CMX&nbsp; S1C&nbsp; ECMX&nbsp; EC&nbsp; YGC&nbsp; FGC</p> \n<p>640.0&nbsp; 4992.0&nbsp; 832.0 64.0&nbsp;&nbsp; 448.0 448.0&nbsp; 64.0&nbsp; 4096.0&nbsp; 704.0&nbsp; 168&nbsp; 6</p> \n<p>jstat -gcold pid: old对象的信息。</p> \n<p><strong>[root<a href=\"http://my.oschina.net/u/570656\" rel=\"nofollow\" target=\"_blank\">@localhost</a>&nbsp;bin]# jstat -gcold 25917</strong></p> \n<p>PC&nbsp; PU&nbsp; OC&nbsp; OU&nbsp; YGC&nbsp; FGC&nbsp; FGCT&nbsp; GCT</p> \n<p>12800.0&nbsp; 12617.6&nbsp; 9504.0&nbsp; 6561.3&nbsp; 169&nbsp; 6&nbsp; 0.335&nbsp; 0.591</p> \n<p>jstat -gcoldcapacity pid:old对象的信息及其占用量。</p> \n<p><strong>[root<a href=\"http://my.oschina.net/u/570656\" rel=\"nofollow\" target=\"_blank\">@localhost</a>&nbsp;bin]# jstat -gcoldcapacity 25917</strong></p> \n<p>OGCMN&nbsp; OGCMX&nbsp; OGC&nbsp; OC&nbsp; YGC&nbsp; FGC&nbsp; FGCT&nbsp; GCT</p> \n<p>1408.0&nbsp; 60544.0&nbsp; 9504.0&nbsp; 9504.0&nbsp; 169&nbsp; 6&nbsp; 0.335&nbsp; 0.591</p> \n<p>jstat -gcpermcapacity pid: perm对象的信息及其占用量。</p> \n<p><strong>[root@localhost bin]# jstat -gcpermcapacity 25917</strong></p> \n<p>PGCMN&nbsp; PGCMX&nbsp; PGC&nbsp; PC&nbsp; YGC&nbsp; FGC&nbsp; FGCT&nbsp; GCT</p> \n<p>8192.0&nbsp; 65536.0&nbsp; 12800.0&nbsp; 12800.0&nbsp; 169&nbsp; 6&nbsp; 0.335&nbsp; 0.591</p> \n<p>jstat -printcompilation pid:当前VM执行的信息。</p> \n<p><strong>[root@localhost bin]# jstat -printcompilation -h3&nbsp; 25917 1000 5</strong></p> \n<p>每1000毫秒打印一次，一共打印5次，还可以加上-h3每三行显示一下标题。</p> \n<p>Compiled&nbsp; Size&nbsp; Type Method</p> \n<p>788&nbsp; 73&nbsp; 1 java/io/File &lt;init&gt;</p> \n<p>788&nbsp; 73&nbsp; 1 java/io/File &lt;init&gt;</p> \n<p>788&nbsp; 73&nbsp; 1 java/io/File &lt;init&gt;</p> \n<p>Compiled&nbsp; Size&nbsp; Type Method</p> \n<p>788&nbsp; 73&nbsp; 1 java/io/File &lt;init&gt;</p> \n<p>788&nbsp; 73&nbsp; 1 java/io/File &lt;init&gt;</p> \n<h2 id=\"h2_9\">jmap</h2> \n<p><strong>jmap -dump:format=b,file=dump.bin pid&nbsp;</strong></p> \n<p>jmap&nbsp;可以从core文件或进程中获得内存的具体匹配情况，包括Heap size, Perm size等等，目前只有在Solaris和Linux的JDK版本里面才有。</p> \n<p>观察运行中的jvm物理内存的占用情况</p> \n<p>打印出某个java进程（使用pid）内存内的，所有‘对象’的情况（如：产生那些对象，及其数量）。</p> \n<p>可以输出所有内存中对象的工具，甚至可以将VM&nbsp;中的heap，以二进制输出成文本。使用方法&nbsp;jmap -histo pid。如果连用SHELL jmap -histo pid&gt;a.log可以将其保存到文本中去，在一段时间后，使用文本对比工具，可以对比出GC回收了哪些对象。jmap -dump:format=b,file=String 3024可以将3024进程的内存heap输出出来到String文件里。</p> \n<p><strong>[root@localhost bin]# jmap -histo&nbsp; 25917</strong></p> \n<p>Attaching to process ID 26221, please wait...</p> \n<p>Debugger attached successfully.</p> \n<p>Client compiler detected.</p> \n<p>JVM version is 1.5.0_08-b03</p> \n<p>Iterating over heap. This may take a while...</p> \n<p>Unknown oop at 0xaa6e42d0</p> \n<p>Oop\'s klass is null</p> \n<p>Object Histogram:</p> \n<p>Size&nbsp; Count&nbsp; Class description</p> \n<p>-------------------------------------------------------</p> \n<p>3722768 30467&nbsp; * ConstMethodKlass</p> \n<p>1976480 25334&nbsp; char[]</p> \n<p>1907880 46994&nbsp; * SymbolKlass</p> \n<p>1762088 2947&nbsp; byte[]</p> \n<p>1709536 30467&nbsp; * MethodKlass</p> \n<p>1487816 2600&nbsp; * ConstantPoolKlass</p> \n<p>1009576 2600&nbsp; * InstanceKlassKlass</p> \n<p>904880&nbsp; 2199&nbsp; * ConstantPoolCacheKlass</p> \n<p>741432&nbsp; 30893&nbsp; java.lang.String</p> \n<p>653576&nbsp; 4785&nbsp; int[]</p> \n<p>351760&nbsp; 4397&nbsp; java.lang.reflect.Method</p> \n<p>277824&nbsp; 2894&nbsp; java.lang.Class</p> \n<p>248704&nbsp; 3401&nbsp; short[]</p> \n<p>200888&nbsp; 4411&nbsp; java.lang.Object[]</p> \n<p>193656&nbsp; 4045&nbsp; java.lang.Object[]</p> \n<p>179744&nbsp; 5617&nbsp; java.util.TreeMap$Entry</p> \n<p>175688&nbsp; 1800&nbsp; java.util.HashMap$Entry[]</p> \n<p>165288&nbsp; 6887&nbsp; java.util.HashMap$Entry</p> \n<p>104736&nbsp; 3273&nbsp; java.lang.ref.SoftReference</p> \n<p>104136&nbsp; 4339&nbsp; java.lang.ref.WeakReference</p> \n<p>96096&nbsp; 3521&nbsp; java.lang.String[]</p> \n<p>86160&nbsp; 3590&nbsp; java.util.Hashtable$Entry</p> \n<p>85584&nbsp; 3566&nbsp; java.util.ArrayList</p> \n<p>83472&nbsp; 1206&nbsp; java.util.Hashtable$Entry[]</p> \n<p>82944&nbsp; 1728&nbsp; java.beans.MethodDescriptor</p> \n<p>80560&nbsp; 265&nbsp; * ObjArrayKlassKlass</p> \n<p>69120&nbsp; 1728&nbsp; java.util.HashMap</p> \n<p>52464&nbsp; 3055&nbsp; java.lang.Class[]</p> \n<p>43040&nbsp; 1076&nbsp; java.util.Hashtable</p> \n<p>42496&nbsp; 664&nbsp; org.apache.commons.modeler.AttributeInfo</p> \n<p>37880&nbsp; 947&nbsp; java.util.TreeMap</p> \n<p>33896&nbsp; 557&nbsp; javax.management.modelmbean.ModelMBeanAttributeInfo[]</p> \n<p>33152&nbsp; 518&nbsp; java.beans.PropertyDescriptor</p> \n<p>616&nbsp; 11&nbsp; org.springframework.aop.framework.ProxyFactory</p> \n<p>608&nbsp; 19&nbsp; java.util.PropertyPermission</p> \n<p>608&nbsp; 38&nbsp; org.springframework.beans.MutablePropertyValues</p> \n<p>608&nbsp; 38&nbsp; org.springframework.beans.factory.support.MethodOverrides</p> \n<p>608&nbsp; 2&nbsp; * ArrayKlassKlass</p> \n<p>608&nbsp; 38&nbsp; org.springframework.beans.factory.config.ConstructorArgumentValues</p> \n<p>608&nbsp; 4&nbsp; org.apache.xerces.impl.XMLDTDScannerImpl</p> \n<p>576&nbsp; 24&nbsp; java.util.Stack</p> \n<p>576&nbsp; 36&nbsp; java.util.regex.Pattern$Category</p> \n<p>576&nbsp; 24&nbsp; org.apache.naming.NamingEntry</p> \n<p>560&nbsp; 7&nbsp; java.net.URL[]</p> \n<p>552&nbsp; 23&nbsp; sun.management.MappedMXBeanType$BasicMXBeanType</p> \n<p>552&nbsp; 1&nbsp; java.util.Locale[]</p> \n<p>552&nbsp; 22&nbsp; java.io.ObjectStreamField[]</p> \n<p>544&nbsp; 17&nbsp; java.util.Collections$SynchronizedMap</p> \n<p>176&nbsp; 11&nbsp; java.util.regex.Pattern$Ctype</p> \n<p>8&nbsp; 1&nbsp; sun.reflect.GeneratedMethodAccessor49</p> \n<p>8&nbsp; 1&nbsp; sun.reflect.GeneratedMethodAccessor6</p> \n<p>8&nbsp; 1&nbsp; sun.reflect.GeneratedConstructorAccessor10</p> \n<p>Heap traversal took 12.003 seconds.</p> \n<h2 id=\"h2_10\">jinfo</h2> \n<p>可以输出并修改运行时的java&nbsp;进程的opts。用处比较简单，就是能输出并修改运行时的java进程的运行参数。用法是jinfo -opt&nbsp; pid&nbsp;如：查看2788的MaxPerm大小可以用&nbsp; jinfo -flag MaxPermSize 2788。</p> \n<h1 id=\"h1_11\"><strong><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521170157173.png\" title=\"\" alt=\"雨伞\"></strong>课外补充</h1> \n<h2 id=\"h2_12\">jstatd</h2> \n<p><a href=\"http://docs.oracle.com/javase/1.5.0/docs/tooldocs/share/jstatd.html\" rel=\"nofollow\" target=\"_blank\">http://docs.oracle.com/javase/1.5.0/docs/tooldocs/share/jstatd.html</a></p> \n<p>启动jvm监控服务。它是一个基于rmi的应用，向远程机器提供本机jvm应用程序的信息。默认端口1099。&nbsp;<br>实例：jstatd -J-Djava.security.policy=my.policy&nbsp;<br>my.policy文件需要自己建立，内如如下：&nbsp;<br>grant codebase \"file:$JAVA_HOME/lib/tools.jar\" {&nbsp;<br>permission java.security.AllPermission;&nbsp;<br>};</p> \n<h2 id=\"h2_13\">jdb</h2> \n<p>jdb&nbsp;用来对core文件和正在运行的Java进程进行实时地调试，里面包含了丰富的命令帮助您进行调试，它的功能和Sun studio里面所带的dbx非常相似，但&nbsp;jdb是专门用来针对Java应用程序的。</p> \n<p>用来对core文件和正在运行的Java进程进行实时地调试，里面包含了丰富的命令帮助您进行调试，它的功能和Sun studio里面所带的dbx非常相似，但&nbsp;jdb是专门用来针对Java应用程序的。</p> \n<h2 id=\"h2_14\">jconsole</h2> \n<p>jconsole是基于&nbsp;(JMX)的实时图形化监测工具，这个工具利用了内建到JVM里面的JMX指令来提供实时的性能和资源的监控，包括了Java程序的内存使用，Heap size,&nbsp;线程的状态，类的分配状态和空间使用等等。</p> \n<p>与jstat相当。</p> \n<p>jconsole:一个java GUI监视工具，可以以图表化的形式显示各种数据。并可通过远程连接监视远程的服务器VM。</p> \n<p>用java写的GUI程序，用来监控VM，并可监控远程的VM，非常易用，而且功能非常强。命令行里打&nbsp;jconsole，选则进程就可以了。</p>',NULL,0,2,1,0,0,'jps查看所有的jvm进程，包括进程ID，进程启动的路径等等。我自己也用PS，即：ps-ef|grepjavajstack观察jvm中当前所有线程的运行情况和线程当前状态。系统崩溃了','jvm',1,'2020-05-21 17:01:58','2020-05-21 17:17:43'),(108,'JVM内存模型详解',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;\"><strong>笔记大纲</strong></span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">1、jvm内存结构图</span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">2、jvm按照线程共享和私有内存区域划分结构图</span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">3、堆和栈在功能、内存大小、线程共享私有进行比较</span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">4、JVM运行结构图</span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">5、线程安全本质时序图</span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">6、jdk6、7、8三个版本内存模型比较</span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">7、jdk1.8为什么将方法区移除到本地内存</span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">8、jvm内存启动参数详解</span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <br>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;\"><strong>JVM内存结构图(JDK1.6)</strong></span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n 多线程共享内存区域:\n <span style=\"color:rgb(223,64,42);\"><strong>方法区、堆。</strong></span>\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n 每一个线程独享内存:\n <span style=\"color:rgb(223,64,42);\"><strong>java栈、本地方法栈、程序计数器。</strong></span>\n</div>\n<div>\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521170647810.png\" title=\"\" alt=\"\">\n</div>\n<div style=\"line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;color:rgb(82,140,216);\"><strong>程序计数器：</strong></span>较小的内存空间，\n <span style=\"color:rgb(223,64,42);\"><strong>当前线程执行的字节码的行号指示器</strong></span>；各线程之间独立存储，互不影响；\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;color:rgb(82,140,216);\"><strong>java 栈：</strong></span>线程私有，生命周期和线程，每个方法在执行的同时都会创建一个 栈帧用于\n <span style=\"color:rgb(223,64,42);\"><strong>存储局部变量表，操作数栈，动态链接，方法出口等信息</strong></span>。方法的执行就对应着栈帧在虚拟机栈中入栈和出栈的过程；栈里面存放着各种基本数据类型和对象的引用；\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;color:rgb(82,140,216);\"><strong>本地方法栈：</strong></span>本地方法栈保存的是native方法的信息，当一个JVM创建的线程调用native方法后，JVM不再为其在虚拟机栈中创建栈帧，\n <span style=\"color:rgb(223,64,42);\"><strong>JVM只是简单地动态链接并直接调用native方法</strong></span>；\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;color:rgb(82,140,216);\"><strong>堆：</strong></span>Java堆是程序员需要重点关注的一块区域，因为涉及到内存的分配(new关键字，反射等)与回收(回收算法，收集器等)；\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;color:rgb(82,140,216);\"><strong>方法区：</strong></span>也叫永久区，用于存储已经被虚拟机加载的类信息，常量(\"zdy\",\"123\"等)，静态变量(static变量)等数据。\n <span style=\"color:rgb(223,64,42);\"><strong>(jdk1.8已经将方法区去掉了，将方法区移动到直接内存)</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;color:rgb(82,140,216);\"><strong>运行时常量池：</strong></span>\n <span style=\"color:rgb(223,64,42);\"><strong>运行时常量池是方法区的一部分</strong></span>，用于存放编译期生成的各种字面(\"zdy\",\"123\"等)和符号引用。\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;color:rgb(82,140,216);\"><strong>直接内存：</strong></span>不是虚拟机运行时数据区的一部分，也不是java虚拟机规范中定义的内存区域；\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n 1）如果使用了NIO,这块区域会被频繁使用，在java堆内可以用directByteBuffer对象直接引用并操作；\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n 2） 这块内存不受java堆大小限制，但受本机总内存的限制，可以通过MaxDirectMemorySize来设置（默认与堆内存最大值一样），所以也会出现OOM异常；\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <br>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;\"><strong>JVM内存中按照线程共享和线程私有划分结构图(JDK1.6)</strong></span>\n</div>\n<div>\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521170643632.png\" title=\"\" alt=\"\">\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <br>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;\"><strong>堆和栈的区别</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">1）堆和栈功能上的区别</span>\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n 以栈帧的方式存储方法调用的过程，并存储方法调用过程中\n <span style=\"color:rgb(223,64,42);\"><strong>基本数据类型的变</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(223,64,42);\"><strong>量（int、short、long、byte、float、double、boolean、char等）以及对象的引</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(223,64,42);\"><strong>用变量</strong></span>，其内存分配在栈上，\n <span style=\"color:rgb(223,64,42);\"><strong>变量出了作用域就会自动释放</strong></span>；\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n 而堆内存用来\n <span style=\"color:rgb(223,64,42);\"><strong>存储Java中的对象</strong></span>。无论是成员变量，局部变量，还是类变量，\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n 它们指向的对象都存储在堆内存中；\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">2）堆和栈在线程共享和线程私有区别</span>\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(223,64,42);\"><strong>栈内存归属于单个线程</strong></span>，每个线程都会有一个栈内存，其存储的变量只能在其所属线程中可见，即栈内存可以理解成\n <span style=\"color:rgb(223,64,42);\"><strong>线程的私有内存</strong></span>。\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(223,64,42);\"><strong>堆内存中的对象对所有线程可见</strong></span>。堆内存中的对象可以被所有线程访问。\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">3）空间大小</span>\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n  栈的内存要远远小于堆内存，栈的深度是有限制的，如果递归没有及时跳出，很可能发生StackOverFlowError问题。\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n 你可以通过-Xss选项设置栈内存的大小(\n <span style=\"color:rgb(223,64,42);\"><strong>这个参数是设定单个线程的栈空间</strong></span>)。-Xms选项可以设置堆的开始时的大小，-Xmx选项可以设置堆的最大值\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <br>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;\"><strong>JVM内存运行时结构图</strong></span>\n</div>\n<div>\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521170645186.png\" title=\"\" alt=\"\">\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n 每一个线程独享的内存区域有:程序计数器、java栈、本地方法栈\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n 线程共享区域:堆内存、方法区(JDK1.8已经去掉了方法区)\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <br>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;\"><strong>线程安全本质</strong></span>\n</div>\n<div>\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521170646227.png\" title=\"\" alt=\"\">\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n 线程安全本质是由于多个线程对同一个堆内存中的Count变量操作的时候，每一个线程会在线程内部创建这个堆内存Count变量的副本，线程内所有的操作都是对这个Count副本进行操作。这时如果其他线程操作这个堆内存Count变量,改变了Count值对这个线程是不可见的。当前线程操作完Count变量将值从副本空间写到主内存(堆内存)的时候就会覆盖其他线程操作Count变量的结果，引发线程不安全问题。\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n <br>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;\"><strong>JDK1.6，JDK1.7，JDK1.8不同版本JVM内存模型区别</strong></span>\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n 相对于jdk1.6,jDK1.7将运行时常量池从方法区移除到堆内存。\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n 相对于JDK1.6,JDK1.8直接\n <span style=\"color:rgb(223,64,42);\"><strong>将方法区去掉</strong></span>，在本地内存中新增\n <span style=\"font-size:16px;color:rgb(223,64,42);\"><strong>元数据空间</strong></span>。运行时常量池仍然在堆中。元数据区存放类加载信息。\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <br>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;\"><strong>JDK1.8为什么要移除方法区</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n  1）永久代来存储类信息、常量、静态变量等数据不是个好主意, 很容易遇到内存溢出的问题.JDK8的实现中将类的元数据放入 native memory, 将字符串池和类的静态变量放入java堆中. 可以使用MaxMetaspaceSize对元数据区大小进行调整；\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n 2）对永久代进行调优是很困难的,同时将元空间与堆的垃圾回收进行了隔离，避免永久代引发的Full GC和OOM等问题；\n</div>\n<div style=\"text-align:left;text-indent:28px;line-height:1.75;font-size:14px;\">\n <br>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;\"><strong>JVM内存参数设定</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(28,72,127);\"><strong>-Xms 初始堆内存大小</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(28,72,127);\"><strong>-Xmx 最大堆内存大小</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(28,72,127);\"><strong>-Xss 单个线程栈大小</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(28,72,127);\"><strong>-XX:NewSize 初始新生代堆大小</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(28,72,127);\"><strong>-XX:MaxNewSize 生代最大堆大小</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(28,72,127);\"><strong>-XX:PermSize 方法区初始大小(JDK1.7及以前)</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(28,72,127);\"><strong>-XX:MaxPermSize 方法区最大大小(JDK1.7及以前)</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(28,72,127);\"><strong>-XX:MetaspaceSize 元数据区初始值(JDK1.8)</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"color:rgb(28,72,127);\"><strong>-XX:MaxMetaspaceSize 元数据区最大值(JDK1.8)</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-size:16px;\"><strong>参数设置示例</strong></span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">jdk1.7 windows设置tomcat的catalina.bat</span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n set JAVA_OPTS=-Xms1024m -Xmx1024m -Xss1m -XX:PermSize=128m -XX:MaxPermSize=256m -XX:NewSize=256m -XX:MaxNewSize=256m\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">jdk1.8 windows设置tomcat的catalina.bat</span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n set JAVA_OPTS=-Xms1024m -Xmx1024m -Xss1m -XX:MetaspaceSize=128m -XX:MAXMetaspaceSize=256m -XX:NewSize=256m -XX:MaxNewSize=256m\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <br>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">jdk1.7 linux设置tomcat的catalina.sh</span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n JAVA_OPTS=-Xms1024m -Xmx1024m -Xss1m -XX:PermSize=128m -XX:MaxPermSize=256m -XX:NewSize=256m -XX:MaxNewSize=256m\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n <span style=\"font-weight:bold;\">jdk1.8 linux设置tomcat的catalina.sh</span>\n</div>\n<div style=\"text-align:left;line-height:1.75;font-size:14px;\">\n JAVA_OPTS=-Xms1024m -Xmx1024m -Xss1m -XX:MetaspaceSize=128m -XX:MAXMetaspaceSize=256m -XX:NewSize=256m -XX:MaxNewSize=256m\n</div>',NULL,0,2,1,0,0,'笔记大纲1、jvm内存结构图2、jvm按照线程共享和私有内存区域划分结构图3、堆和栈在功能、内存大小、线程共享私有进行比较4、JVM运行结构图5、线程安全本质时序图6、jdk6、7、8三个版本内存模型比较7、jdk1.8为什么将方法区移除到本地内存8、jvm内存启动参数详解JVM内存结构图(JDK1.6)多线程共享内存区域:方法区、堆。每一个线程独享内存:java栈、本地方法栈、程序计数器。程序计...java','jvm',1,'2020-05-21 17:06:49','2020-05-21 17:08:05'),(109,'JVM堆内存(heap)详解',1,'http://i2.51cto.com/images/blog/201808/21/248dbe09bbf26285cba1760ad0355faa.png',NULL,0,'<p>很好的一篇文章，转载了<a href=\"http://blog.51cto.com/lizhenliang/2164876?wx=\" rel=\"nofollow\">http://blog.51cto.com/lizhenliang/2164876?wx=</a></p> \n<p>JAVA堆内存管理是影响性能主要因素之一。<br> 堆内存溢出是JAVA项目非常常见的故障，在解决该问题之前，必须先了解下JAVA堆内存是怎么工作的。</p> \n<p>先看下JAVA堆内存是如何划分的，如图：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521171147393.png\" title=\"\" alt=\"Java堆内存又溢出了！教你一招必杀技\"></p> \n<ol>\n <li>JVM内存划分为堆内存和非堆内存，堆内存分为年轻代（Young Generation）、老年代（Old Generation），非堆内存就一个永久代（Permanent Generation）。</li> \n <li>年轻代又分为Eden和Survivor区。Survivor区由FromSpace和ToSpace组成。Eden区占大容量，Survivor两个区占小容量，默认比例是8:1:1。</li> \n <li>堆内存用途：存放的是对象，垃圾收集器就是收集这些对象，然后根据GC算法回收。</li> \n <li>非堆内存用途：永久代，也称为方法区，存储程序运行时长期存活的对象，比如类的元数据、方法、常量、属性等。</li> \n</ol>\n<p>在JDK1.8版本废弃了永久代，替代的是元空间（MetaSpace），元空间与永久代上类似，都是方法区的实现，他们最大区别是：元空间并不在JVM中，而是使用本地内存。<br> 元空间有注意有两个参数：</p> \n<ul>\n <li>MetaspaceSize ：初始化元空间大小，控制发生GC阈值</li> \n <li>MaxMetaspaceSize ： 限制元空间大小上限，防止异常占用过多物理内存</li> \n</ul>\n<h2>为什么移除永久代？</h2> \n<p>移除永久代原因：为融合HotSpot JVM与JRockit VM（新JVM技术）而做出的改变，因为JRockit没有永久代。<br> 有了元空间就不再会出现永久代OOM问题了！</p> \n<h2>分代概念</h2> \n<p>新生成的对象首先放到年轻代Eden区，当Eden空间满了，触发Minor GC，存活下来的对象移动到Survivor0区，Survivor0区满后触发执行Minor GC，Survivor0区存活对象移动到Suvivor1区，这样保证了一段时间内总有一个survivor区为空。经过多次Minor GC仍然存活的对象移动到老年代。<br> 老年代存储长期存活的对象，占满时会触发Major GC=Full GC，GC期间会停止所有线程等待GC完成，所以对响应要求高的应用尽量减少发生Major GC，避免响应超时。<br> Minor GC ： 清理年轻代&nbsp;<br> Major GC ： 清理老年代<br> Full GC ： 清理整个堆空间，包括年轻代和永久代<br> 所有GC都会停止应用所有线程。</p> \n<h2>为什么分代？</h2> \n<p>将对象根据存活概率进行分类，对存活时间长的对象，放到固定区，从而减少扫描垃圾时间及GC频率。针对分类进行不同的垃圾回收算法，对算法扬长避短。</p> \n<h2>为什么survivor分为两块相等大小的幸存空间？</h2> \n<p>主要为了解决碎片化。如果内存碎片化严重，也就是两个对象占用不连续的内存，已有的连续内存不够新对象存放，就会触发GC。</p> \n<h2>JVM堆内存常用参数</h2> \n<table>\n <thead>\n  <tr>\n   <th>参数</th> \n   <th>描述</th> \n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td>-Xms</td> \n   <td>堆内存初始大小，单位m、g</td> \n  </tr>\n  <tr>\n   <td>-Xmx（MaxHeapSize）</td> \n   <td>堆内存最大允许大小，一般不要大于物理内存的80%</td> \n  </tr>\n  <tr>\n   <td>-XX:PermSize</td> \n   <td>非堆内存初始大小，一般应用设置初始化200m，最大1024m就够了</td> \n  </tr>\n  <tr>\n   <td>-XX:MaxPermSize</td> \n   <td>非堆内存最大允许大小</td> \n  </tr>\n  <tr>\n   <td>-XX:NewSize（-Xns）</td> \n   <td>年轻代内存初始大小</td> \n  </tr>\n  <tr>\n   <td>-XX:MaxNewSize（-Xmn）</td> \n   <td>年轻代内存最大允许大小，也可以缩写</td> \n  </tr>\n  <tr>\n   <td>-XX:SurvivorRatio=8</td> \n   <td>年轻代中Eden区与Survivor区的容量比例值，默认为8，即8:1</td> \n  </tr>\n  <tr>\n   <td>-Xss</td> \n   <td>堆栈内存大小</td> \n  </tr>\n </tbody>\n</table>\n<h2>垃圾回收算法（GC，Garbage Collection）</h2> \n<p>红色是标记的非活动对象，绿色是活动对象。</p> \n<ul>\n <li><strong>标记-清除（Mark-Sweep）</strong><br> GC分为两个阶段，标记和清除。首先标记所有可回收的对象，在标记完成后统一回收所有被标记的对象。同时会产生不连续的内存碎片。碎片过多会导致以后程序运行时需要分配较大对象时，无法找到足够的连续内存，而不得已再次触发GC。</li> \n</ul>\n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521171146543.png\" title=\"\" alt=\"Java堆内存又溢出了！教你一招必杀技\"></p> \n<ul>\n <li><strong>复制（Copy）</strong><br> 将内存按容量划分为两块，每次只使用其中一块。当这一块内存用完了，就将存活的对象复制到另一块上，然后再把已使用的内存空间一次清理掉。这样使得每次都是对半个内存区回收，也不用考虑内存碎片问题，简单高效。缺点需要两倍的内存空间。</li> \n</ul>\n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521171146921.png\" title=\"\" alt=\"Java堆内存又溢出了！教你一招必杀技\"></p> \n<ul>\n <li><strong>标记-整理（Mark-Compact）</strong><br> 也分为两个阶段，首先标记可回收的对象，再将存活的对象都向一端移动，然后清理掉边界以外的内存。此方法避免标记-清除算法的碎片问题，同时也避免了复制算法的空间问题。<br> 一般年轻代中执行GC后，会有少量的对象存活，就会选用复制算法，只要付出少量的存活对象复制成本就可以完成收集。而老年代中因为对象存活率高，没有额外过多内存空间分配，就需要使用标记-清理或者标记-整理算法来进行回收。</li> \n</ul>\n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200521171147137.png\" title=\"\" alt=\"Java堆内存又溢出了！教你一招必杀技\"></p> \n<h2>垃圾收集器</h2> \n<ul>\n <li><strong>串行收集器（Serial）</strong><br> 比较老的收集器，单线程。收集时，必须暂停应用的工作线程，直到收集结束。</li> \n <li><strong>并行收集器（Parallel）</strong><br> 多条垃圾收集线程并行工作，在多核CPU下效率更高，应用线程仍然处于等待状态。</li> \n <li><strong>CMS收集器（Concurrent Mark Sweep）</strong><br> CMS收集器是缩短暂停应用时间为目标而设计的，是基于标记-清除算法实现，整个过程分为4个步骤，包括： \n  <ul>\n   <li>初始标记（Initial Mark）</li> \n   <li>并发标记（Concurrent Mark）</li> \n   <li>重新标记（Remark）</li> \n   <li>并发清除（Concurrent Sweep）</li> \n  </ul></li> \n</ul>\n<p>其中，初始标记、重新标记这两个步骤仍然需要暂停应用线程。初始标记只是标记一下GC Roots能直接关联到的对象，速度很快，并发标记阶段是标记可回收对象，而重新标记阶段则是为了修正并发标记期间因用户程序继续运作导致标记产生变动的那一部分对象的标记记录，这个阶段暂停时间比初始标记阶段稍长一点，但远比并发标记时间段。<br> 由于整个过程中消耗最长的并发标记和并发清除过程收集器线程都可以与用户线程一起工作，所以，CMS收集器内存回收与用户一起并发执行的，大大减少了暂停时间。</p> \n<ul>\n <li><strong>G1收集器（Garbage First）</strong><br> G1收集器将堆内存划分多个大小相等的独立区域（Region），并且能预测暂停时间，能预测原因它能避免对整个堆进行全区收集。G1跟踪各个Region里的垃圾堆积价值大小（所获得空间大小以及回收所需时间），在后台维护一个优先列表，每次根据允许的收集时间，优先回收价值最大的Region，从而保证了再有限时间内获得更高的收集效率。<br> G1收集器工作工程分为4个步骤，包括： \n  <ul>\n   <li>初始标记（Initial Mark）</li> \n   <li>并发标记（Concurrent Mark）</li> \n   <li>最终标记（Final Mark）</li> \n   <li>筛选回收（Live Data Counting and Evacuation）</li> \n  </ul></li> \n</ul>\n<p>初始标记与CMS一样，标记一下GC Roots能直接关联到的对象。并发标记从GC Root开始标记存活对象，这个阶段耗时比较长，但也可以与应用线程并发执行。而最终标记也是为了修正在并发标记期间因用户程序继续运作而导致标记产生变化的那一部分标记记录。最后在筛选回收阶段对各个Region回收价值和成本进行排序，根据用户所期望的GC暂停时间来执行回收。</p> \n<h3>垃圾收集器参数</h3> \n<table>\n <thead>\n  <tr>\n   <th>参数</th> \n   <th>描述</th> \n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td>-XX:+UseSerialGC</td> \n   <td>串行收集器</td> \n  </tr>\n  <tr>\n   <td>-XX:+UseParallelGC</td> \n   <td>并行收集器</td> \n  </tr>\n  <tr>\n   <td>-XX:+UseParallelGCThreads=8</td> \n   <td>并行收集器线程数，同时有多少个线程进行垃圾回收，一般与CPU数量相等</td> \n  </tr>\n  <tr>\n   <td>-XX:+UseParallelOldGC</td> \n   <td>指定老年代为并行收集</td> \n  </tr>\n  <tr>\n   <td>-XX:+UseConcMarkSweepGC</td> \n   <td>CMS收集器（并发收集器）</td> \n  </tr>\n  <tr>\n   <td>-XX:+UseCMSCompactAtFullCollection</td> \n   <td>开启内存空间压缩和整理，防止过多内存碎片</td> \n  </tr>\n  <tr>\n   <td>-XX:CMSFullGCsBeforeCompaction=0</td> \n   <td>表示多少次Full GC后开始压缩和整理，0表示每次Full GC后立即执行压缩和整理</td> \n  </tr>\n  <tr>\n   <td>-XX:CMSInitiatingOccupancyFraction=80%</td> \n   <td>表示老年代内存空间使用80%时开始执行CMS收集，防止过多的Full GC</td> \n  </tr>\n  <tr>\n   <td>-XX:+UseG1GC</td> \n   <td>G1收集器</td> \n  </tr>\n  <tr>\n   <td>-XX:MaxTenuringThreshold=0</td> \n   <td>在年轻代经过几次GC后还存活，就进入老年代，0表示直接进入老年代</td> \n  </tr>\n </tbody>\n</table>\n<h2>为什么会堆内存溢出？</h2> \n<p>在年轻代中经过GC后还存活的对象会被复制到老年代中。当老年代空间不足时，JVM会对老年代进行完全的垃圾回收（Full GC）。如果GC后，还是无法存放从Survivor区复制过来的对象，就会出现OOM（Out of Memory）。</p> \n<p><strong>OOM（Out of Memory）异常常见有以下几个原因：</strong><br> 1）老年代内存不足：java.lang.OutOfMemoryError:Javaheapspace<br> 2）永久代内存不足：java.lang.OutOfMemoryError:PermGenspace<br> 3）代码bug，占用内存无法及时回收。<br> OOM在这几个内存区都有可能出现，实际遇到OOM时，能根据异常信息定位到哪个区的内存溢出。<br> 可以通过添加个参数-XX:+HeapDumpOnOutMemoryError，让虚拟机在出现内存溢出异常时Dump出当前的内存堆转储快照以便事后分析。</p> \n<p>熟悉了JAVA内存管理机制及配置参数，下面是对JAVA应用启动选项调优配置：</p> \n<pre class=\"has\">\n<code>JAVA_OPTS=\"-server -Xms512m -Xmx2g -XX:+UseG1GC -XX:SurvivorRatio=6 -XX:MaxGCPauseMillis=400 -XX:G1ReservePercent=15 -XX:ParallelGCThreads=4 -XX:\nConcGCThreads=1 -XX:InitiatingHeapOccupancyPercent=40 -XX:+PrintGCDetails  -XX:+PrintGCTimeStamps -Xloggc:../logs/gc.log\"</code></pre> \n<ul>\n <li>设置堆内存最小和最大值，最大值参考历史利用率设置</li> \n <li>设置GC垃圾收集器为G1</li> \n <li>启用GC日志，方便后期分析</li> \n</ul>\n<h2>小结</h2> \n<ul>\n <li>选择高效的GC算法，可有效减少停止应用线程时间。</li> \n <li>频繁Full GC会增加暂停时间和CPU使用率，可以加大老年代空间大小降低Full GC，但会增加回收时间，根据业务适当取舍。</li> \n</ul>',NULL,0,2,1,0,0,'很好的一篇文章，转载了http://blog.51cto.com/lizhenliang/2164876?wx=JAVA堆内存管理是影响性能主要因素之一。堆内存溢出是JAVA项目非常常见的故障，在解决该问题之前，必须先了解下JAVA堆内存是怎么工作的。先看下JAVA堆内存是如何划分的，如图：JVM内存划分为堆内存和非堆内存，堆内存分为年轻代（YoungGeneration）、老...java','jvm',1,'2020-05-21 17:11:47','2020-05-21 17:12:45'),(110,'什么是高并发 ，详细讲解',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>一、什么是高并发</p> \n<p>高并发（High Concurrency）是互联网分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计保证系统能够同时并行处理很多请求。</p> \n<p>&nbsp;</p> \n<p>高并发相关常用的一些指标有响应时间（Response Time），吞吐量（Throughput），每秒查询率QPS（Query Per Second），并发用户数等。</p> \n<p>&nbsp;</p> \n<p>响应时间：系统对请求做出响应的时间。例如系统处理一个HTTP请求需要200ms，这个200ms就是系统的响应时间。</p> \n<p>吞吐量：单位时间内处理的请求数量。</p> \n<p>QPS：每秒响应请求数。在互联网领域，这个指标和吞吐量区分的没有这么明显。</p> \n<p>并发用户数：同时承载正常使用系统功能的用户数量。例如一个即时通讯系统，同时在线量一定程度上代表了系统的并发用户数。</p> \n<p>&nbsp;</p> \n<p>二、如何提升系统的并发能力</p> \n<p>互联网分布式架构设计，提高系统并发能力的方式，方法论上主要有两种：垂直扩展（Scale Up）与水平扩展（Scale Out）。</p> \n<p>垂直扩展：提升单机处理能力。垂直扩展的方式又有两种：</p> \n<p>（1）增强单机硬件性能，例如：增加CPU核数如32核，升级更好的网卡如万兆，升级更好的硬盘如SSD，扩充硬盘容量如2T，扩充系统内存如128G；</p> \n<p>（2）提升单机架构性能，例如：使用Cache来减少IO次数，使用异步来增加单服务吞吐量，使用无锁数据结构来减少响应时间；</p> \n<p>&nbsp;</p> \n<p>在互联网业务发展非常迅猛的早期，如果预算不是问题，强烈建议使用“增强单机硬件性能”的方式提升系统并发能力，因为这个阶段，公司的战略往往是发展业务抢时间，而“增强单机硬件性能”往往是最快的方法。</p> \n<p>&nbsp;</p> \n<p>不管是提升单机硬件性能，还是提升单机架构性能，都有一个致命的不足：单机性能总是有极限的。所以互联网分布式架构设计高并发终极解决方案还是水平扩展。</p> \n<p>&nbsp;</p> \n<p>水平扩展：只要增加服务器数量，就能线性扩充系统性能。水平扩展对系统架构设计是有要求的，如何在架构各层进行可水平扩展的设计，以及互联网公司架构各层常见的水平扩展实践，是本文重点讨论的内容。</p> \n<p>&nbsp;</p> \n<p>三、常见的互联网分层架构</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200526105228060.png\" title=\"\" alt=\"\"><br> 常见互联网分布式架构如上，分为：</p> \n<p>（1）客户端层：典型调用方是浏览器browser或者手机应用APP</p> \n<p>（2）反向代理层：系统入口，反向代理</p> \n<p>（3）站点应用层：实现核心应用逻辑，返回html或者json</p> \n<p>（4）服务层：如果实现了服务化，就有这一层</p> \n<p>（5）数据-缓存层：缓存加速访问存储</p> \n<p>（6）数据-数据库层：数据库固化数据存储</p> \n<p>整个系统各层次的水平扩展，又分别是如何实施的呢？</p> \n<p>&nbsp;</p> \n<p>四、分层水平扩展架构实践</p> \n<p>反向代理层的水平扩展</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200526105227562.png\" title=\"\" alt=\"\"><br> 反向代理层的水平扩展，是通过“DNS轮询”实现的：dns-server对于一个域名配置了多个解析ip，每次DNS解析请求来访问dns-server，会轮询返回这些ip。</p> \n<p>当nginx成为瓶颈的时候，只要增加服务器数量，新增nginx服务的部署，增加一个外网ip，就能扩展反向代理层的性能，做到理论上的无限高并发。</p> \n<p>&nbsp;</p> \n<p>站点层的水平扩展</p> \n<p><img src=\"https://images2015.cnblogs.com/blog/1151134/201706/1151134-20170601181423883-757482818.png\" title=\"\" alt=\"\"><br> 站点层的水平扩展，是通过“nginx”实现的。通过修改nginx.conf，可以设置多个web后端。</p> \n<p>当web后端成为瓶颈的时候，只要增加服务器数量，新增web服务的部署，在nginx配置中配置上新的web后端，就能扩展站点层的性能，做到理论上的无限高并发。</p> \n<p>&nbsp;</p> \n<p>服务层的水平扩展</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200526105228921.png\" title=\"\" alt=\"\"><img src=\"https://images2015.cnblogs.com/blog/1151134/201706/1151134-20170601181540727-1420144971.png\" title=\"\" alt=\"\"><br> 服务层的水平扩展，是通过“服务连接池”实现的。</p> \n<p>站点层通过RPC-client调用下游的服务层RPC-server时，RPC-client中的连接池会建立与下游服务多个连接，当服务成为瓶颈的时候，只要增加服务器数量，新增服务部署，在RPC-client处建立新的下游服务连接，就能扩展服务层性能，做到理论上的无限高并发。如果需要优雅的进行服务层自动扩容，这里可能需要配置中心里服务自动发现功能的支持。</p> \n<p>&nbsp;</p> \n<p>数据层的水平扩展</p> \n<p>在数据量很大的情况下，数据层（缓存，数据库）涉及数据的水平扩展，将原本存储在一台服务器上的数据（缓存，数据库）水平拆分到不同服务器上去，以达到扩充系统性能的目的。</p> \n<p>&nbsp;</p> \n<p>互联网数据层常见的水平拆分方式有这么几种，以数据库为例：</p> \n<p>按照范围水平拆分</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200526105228921.png\" title=\"\" alt=\"\"><img src=\"https://images2015.cnblogs.com/blog/1151134/201706/1151134-20170601181656196-718003791.png\" title=\"\" alt=\"\"><br> 每一个数据服务，存储一定范围的数据，上图为例：</p> \n<p>user0库，存储uid范围1-1kw</p> \n<p>user1库，存储uid范围1kw-2kw</p> \n<p>这个方案的好处是：</p> \n<p>（1）规则简单，service只需判断一下uid范围就能路由到对应的存储服务；</p> \n<p>（2）数据均衡性较好；</p> \n<p>（3）比较容易扩展，可以随时加一个uid[2kw,3kw]的数据服务；</p> \n<p>不足是：</p> \n<p>（1）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求的负载不一定均衡，一般来说，新注册的用户会比老用户更活跃，大range的服务请求压力会更大；</p> \n<p>&nbsp;</p> \n<p>按照哈希水平拆分</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200526105228921.png\" title=\"\" alt=\"\"><img src=\"https://images2015.cnblogs.com/blog/1151134/201706/1151134-20170601181748821-5092464.png\" title=\"\" alt=\"\"><br> 每一个数据库，存储某个key值hash后的部分数据，上图为例：</p> \n<p>user0库，存储偶数uid数据</p> \n<p>user1库，存储奇数uid数据</p> \n<p>这个方案的好处是：</p> \n<p>（1）规则简单，service只需对uid进行hash能路由到对应的存储服务；</p> \n<p>（2）数据均衡性较好；</p> \n<p>（3）请求均匀性较好；</p> \n<p>不足是：</p> \n<p>（1）不容易扩展，扩展一个数据服务，hash方法改变时候，可能需要进行数据迁移；</p> \n<p>&nbsp;</p> \n<p>这里需要注意的是，通过水平拆分来扩充系统性能，与主从同步读写分离来扩充数据库性能的方式有本质的不同。</p> \n<p>通过水平拆分扩展数据库性能：</p> \n<p>（1）每个服务器上存储的数据量是总量的1/n，所以单机的性能也会有提升；</p> \n<p>（2）n个服务器上的数据没有交集，那个服务器上数据的并集是数据的全集；</p> \n<p>（3）数据水平拆分到了n个服务器上，理论上读性能扩充了n倍，写性能也扩充了n倍（其实远不止n倍，因为单机的数据量变为了原来的1/n）；</p> \n<p>通过主从同步读写分离扩展数据库性能：</p> \n<p>（1）每个服务器上存储的数据量是和总量相同；</p> \n<p>（2）n个服务器上的数据都一样，都是全集；</p> \n<p>（3）理论上读性能扩充了n倍，写仍然是单点，写性能不变；</p> \n<p>&nbsp;</p> \n<p>缓存层的水平拆分和数据库层的水平拆分类似，也是以范围拆分和哈希拆分的方式居多，就不再展开。</p> \n<p>&nbsp;</p> \n<p>五、总结</p> \n<p>高并发（High Concurrency）是互联网分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计保证系统能够同时并行处理很多请求。</p> \n<p>提高系统并发能力的方式，方法论上主要有两种：垂直扩展（Scale Up）与水平扩展（Scale Out）。前者垂直扩展可以通过提升单机硬件性能，或者提升单机架构性能，来提高并发性，但单机性能总是有极限的，互联网分布式架构设计高并发终极解决方案还是后者：水平扩展。</p> \n<p>互联网分层架构中，各层次水平扩展的实践又有所不同：</p> \n<p>（1）反向代理层可以通过“DNS轮询”的方式来进行水平扩展；</p> \n<p>（2）站点层可以通过nginx来进行水平扩展；</p> \n<p>（3）服务层可以通过服务连接池来进行水平扩展；</p> \n<p>（4）数据库可以按照数据范围，或者数据哈希的方式来进行水平扩展；</p> \n<p>各层实施水平扩展后，能够通过增加服务器数量的方式来提升系统的性能，做到理论上的性能无限。</p> \n<p>&nbsp;</p> \n<p>末了，希望文章的思路是清晰的，希望大家对高并发的概念和实践有个系统的认识，结合上一篇《<a href=\"http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=2651959728&amp;idx=1&amp;sn=933227840ec8cdc35d3a33ae3fe97ec5&amp;chksm=bd2d046c8a5a8d7a13551124af36bedf68f7a6e31f6f32828678d2adb108b86b7e08c678f22f&amp;scene=21#wechat_redirect\" rel=\"nofollow\">究竟啥才是互联网架构“高可用”</a>》的分享互联网分布式架构是不是逐步的不再神秘啦？</p>',NULL,0,2,1,0,0,'一、什么是高并发高并发（HighConcurrency）是互联网分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计保证系统能够同时并行处理很多请求。 高并发相关常用的一些指标有响应时间（ResponseTime），吞吐量（Throughput），每秒查询率QPS（QueryPerSecond），并发用户数等。 响应时间：系统对请求做出响应的时间。例如系统处理一...数据库','高并发',1,'2020-05-26 10:52:38','2020-05-26 10:53:53'),(111,'BIO、NIO、AIO系列一：NIO',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2>一、几个基本概念</h2> \n<p>1.同步、异步、阻塞、非阻塞</p> \n<p><strong>同步</strong>：用户触发IO操作，你发起了请求就得等着对方给你返回结果，你不能走，针对调用方的，你发起了请求你等</p> \n<p><strong>异步</strong>：触发触发了IO操作，即发起了请求以后可以做自己的事，等处理完以后会给你返回处理完成的标志，针对调用方的，你发起了请求你不等</p> \n<p><strong>阻塞</strong>：你调用我，我试图对文件进行读写的时候发现没有可读写的文件，我的程序就会进入等待状态，等可以读写了，我处理完给你返回结果，这里的等待和同步的等待有很大的区别，针对服务提供方的，你调用我我发现服务不可用我等</p> \n<p><strong>非阻塞</strong>：你调用我，我试图对文件读写的时候发现没有读写的文件，不等待直接返回，等我发现可以读写文件处理完了再给你返回成功标志，针对服务提供方的，你调用我我不等，我处理完了给你返回结果</p> \n<div>\n 2、Java对BIO、NIO、AIO的支持：\n</div> \n<div>\n Java BIO ：&nbsp;\n <strong>同步阻塞</strong>：你调用我，你等待我给你返回结果，我发现没有可读写的资源我也等待，两个一起等，JDK1.4以前的唯一选择，\n <strong>适用于数目比较少并且比较固定的架构，对服务器资源要求比较高，大家都在等资源，等服务提供方处理完了再给你返回结果</strong>\n</div> \n<div>\n Java NIO ：\n <strong>同步非阻塞：</strong>&nbsp;你调用我，你等待我给你返回结果，我发现没有可以读写的资源，我不等待先直接返回，等我发现有可以读写的资源以后处理完给你返回结果，\n <strong>适用于连接数目多且连接时间比较短（轻操作）的架构，比如聊天服务器，并发局限于应用中，编程比较复杂，JDK1.4开始支持。</strong>\n</div> \n<div>\n Java AIO(NIO.2) ：&nbsp;\n <strong>异步非阻塞</strong>：你调用我，你不等待继续做自己的事，我发现没有可以读写的资源，我也不等待继续做我自己的事，等有可以读写的资源的时候我处理完给你返回结果，\n <strong>适用于连接数目多且连接时间比较长（重操作）的架构，比如相册服务器，充分调用OS参与并发操作，编程比较复杂，JDK7开始支持。</strong>\n</div> \n<div> \n <div>\n  3、BIO、NIO、AIO适用场景分析:\n </div> \n <div>\n  BIO方式适用于连接数目比较小且固定的架构，这种方式对服务器资源要求比较高，并发局限于应用中，JDK1.4以前的唯一选择，但程序直观简单易理解。\n </div> \n <div>\n  NIO方式适用于连接数目多且连接比较短（轻操作）的架构，比如聊天服务器，并发局限于应用中，编程比较复杂，JDK1.4开始支持。\n </div> \n <div>\n  AIO方式使用于连接数目多且连接比较长（重操作）的架构，比如相册服务器，充分调用OS参与并发操作，编程比较复杂，JDK7开始支持。\n </div> \n <div>\n  &nbsp;\n </div> \n <div>\n  另外，I/O属于底层操作，需要操作系统支持，并发也需要操作系统的支持，所以性能方面不同操作系统差异会比较明显。\n </div> \n <div> \n  <h2><strong><span style=\"font-family: 黑体;\">二、</span>NIO<span style=\"font-family: 黑体;\">基础</span></strong></h2> \n  <h3><strong>1<span style=\"font-family: 宋体;\">、传统</span><span style=\"font-family: Calibri;\">BIO</span><span style=\"font-family: 宋体;\">模型-InputStream、OutputStream</span></strong></h3> \n  <p><span style=\"font-family: 宋体;\">传统</span>BIO是一种同步的阻塞IO，IO在进行读写时，该线程将被阻塞，线程无法进行其它操作。</p> \n  <p>IO流在读取时，会阻塞。直到发生以下情况：1、有数据可以读取。2、数据读取完成。3、发生异常。</p> \n  <p>服务端：</p> \n  <p>BioServer.java</p> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.ServerSocket;\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.Socket;\n</span><span style=\"color: #008080;\"> 4</span> \n<span style=\"color: #008080;\"> 5</span> \n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> BioServer {\n</span><span style=\"color: #008080;\"> 7</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) {\n</span><span style=\"color: #008080;\"> 8</span>         <span style=\"color: #0000ff;\">int</span> port=8080; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务端默认端口</span>\n<span style=\"color: #008080;\"> 9</span>         <span style=\"color: #0000ff;\">if</span>(args != <span style=\"color: #0000ff;\">null</span> &amp;&amp; args.length&gt;0<span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">10</span>             <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">11</span>                 port = Integer.valueOf(args[0<span style=\"color: #000000;\">]);\n</span><span style=\"color: #008080;\">12</span>             } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (NumberFormatException e) {\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">15</span>         ServerSocket server = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">17</span>             server = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ServerSocket(port);\n</span><span style=\"color: #008080;\">18</span>             System.out.println(\"启动了服务端，端口:\"+<span style=\"color: #000000;\">port);\n</span><span style=\"color: #008080;\">19</span>             Socket socket = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">20</span>             <span style=\"color: #0000ff;\">while</span>(<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">21</span>                 socket =<span style=\"color: #000000;\"> server.accept();//阻塞等待客户端连接\n</span><span style=\"color: #008080;\">22</span>                 <span style=\"color: #0000ff;\">new</span> Thread(<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> BioServerHandler(socket)).start();\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">24</span>         } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\">25</span> <span style=\"color: #000000;\">            e.printStackTrace();\n</span><span style=\"color: #008080;\">26</span>         } <span style=\"color: #0000ff;\">finally</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">27</span>             <span style=\"color: #0000ff;\">if</span>(server!=<span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">28</span>                 System.out.println(\"关闭了服务.\"<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">29</span>                 <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">30</span> <span style=\"color: #000000;\">                    server.close();\n</span><span style=\"color: #008080;\">31</span>                     server = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">32</span>                 } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {\n</span><span style=\"color: #008080;\">33</span> <span style=\"color: #000000;\">                    e.printStackTrace();\n</span><span style=\"color: #008080;\">34</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">35</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">36</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">37</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">38</span> }</pre> \n  </div> \n  <h3>BioServerHandler.java</h3> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.BufferedReader;\n</span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;\n</span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.InputStreamReader;\n</span><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.Socket;\n\n</span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> BioServerHandler <span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> Runnable {\n\n    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Socket socket;\n    </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> BioServerHandler(Socket socket){\n        </span><span style=\"color: #0000ff;\">this</span>.socket =<span style=\"color: #000000;\"> socket;\n    }\n    \n    @Override\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> run() {\n        BufferedReader in </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n            in </span>= <span style=\"color: #0000ff;\">new</span> BufferedReader(<span style=\"color: #0000ff;\">new</span> InputStreamReader(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.socket.getInputStream()));\n            String body </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n            </span><span style=\"color: #0000ff;\">while</span>(<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">){\n                body </span>= in.readLine(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">阻塞等待数据可以被读取</span>\n                <span style=\"color: #0000ff;\">if</span>(body == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n                    </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\n                }\n                System.out.println(</span>\"服务器接收到指令:\"+<span style=\"color: #000000;\">body);\n            }\n        } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n            </span><span style=\"color: #0000ff;\">if</span>(in != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n                </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n                    in.close();\n                    in </span>= <span style=\"color: #0000ff;\">null</span>;<span style=\"color: #008000;\">//\n</span>                } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e1) {\n                    e1.printStackTrace();\n                }\n            }\n            </span><span style=\"color: #0000ff;\">if</span>(socket != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n                </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n                    socket.close();\n                } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e1) {\n                    e1.printStackTrace();\n                }\n                </span><span style=\"color: #0000ff;\">this</span>.socket = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n            }\n        }\n    }\n\n}</span></pre> \n  </div> \n  <p>&nbsp;</p> \n  <p>客户端：</p> \n  <p>BioServerClient.java</p> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.PrintWriter;\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.Socket;\n</span><span style=\"color: #008080;\"> 4</span> \n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> BioServerClient {\n</span><span style=\"color: #008080;\"> 6</span> \n<span style=\"color: #008080;\"> 7</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) {\n</span><span style=\"color: #008080;\"> 8</span>         <span style=\"color: #0000ff;\">int</span> port=8080; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务端默认端口</span>\n<span style=\"color: #008080;\"> 9</span>         <span style=\"color: #0000ff;\">if</span>(args != <span style=\"color: #0000ff;\">null</span> &amp;&amp; args.length&gt;0<span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">10</span>             <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">11</span>                 port = Integer.valueOf(args[0<span style=\"color: #000000;\">]);\n</span><span style=\"color: #008080;\">12</span>             } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (NumberFormatException e) {\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">15</span>         Socket socket = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">16</span>         PrintWriter out = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">18</span>             socket = <span style=\"color: #0000ff;\">new</span> Socket(\"127.0.0.1\"<span style=\"color: #000000;\">, port);\n</span><span style=\"color: #008080;\">19</span>             out = <span style=\"color: #0000ff;\">new</span> PrintWriter(socket.getOutputStream(), <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">20</span>             out.println(\"9527\"<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">21</span>             System.out.println(\"客户端向服务端发送了指令\"<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">22</span>         } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">            e.printStackTrace();\n</span><span style=\"color: #008080;\">24</span>         } <span style=\"color: #0000ff;\">finally</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">25</span>             <span style=\"color: #0000ff;\">if</span>(out !=<span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">                out.close();\n</span><span style=\"color: #008080;\">27</span>                 out = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">29</span>             <span style=\"color: #0000ff;\">if</span>(socket != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">30</span>                 <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">31</span> <span style=\"color: #000000;\">                    socket.close();\n</span><span style=\"color: #008080;\">32</span>                 } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {\n</span><span style=\"color: #008080;\">33</span> <span style=\"color: #000000;\">                    e.printStackTrace();\n</span><span style=\"color: #008080;\">34</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">35</span>                 socket = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">36</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">37</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">39</span> }</pre> \n  </div> \n  <h3><strong>2<span style=\"font-family: 宋体;\">、伪异步</span><span style=\"font-family: Calibri;\">IO</span><span style=\"font-family: 宋体;\">模型</span></strong></h3> \n  <p><span style=\"font-family: 宋体;\">以传统</span>BIO模型为基础，通过线程池的方式维护所有的IO线程，实现相对高效的线程开销及管理。</p> \n  <p>&nbsp;服务端：</p> \n  <p>TimeServer.java</p> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.ServerSocket;\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.Socket;\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> TimeServer {\n</span><span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) {\n</span><span style=\"color: #008080;\"> 6</span>         <span style=\"color: #0000ff;\">int</span> port=8080; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务端默认端口</span>\n<span style=\"color: #008080;\"> 7</span>         ServerSocket server = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 8</span>         <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\"> 9</span>             server = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ServerSocket(port);\n</span><span style=\"color: #008080;\">10</span>             System.out.println(\"The time server is start in port:\"+<span style=\"color: #000000;\">port);\n</span><span style=\"color: #008080;\">11</span>             Socket socket = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">12</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">通过线程池的方式维护所有的IO线程，实现相对高效的线程开销及管理</span>\n<span style=\"color: #008080;\">13</span>             TimeServerHandlerExecutePool singleExecutor = <span style=\"color: #0000ff;\">new</span> TimeServerHandlerExecutePool(50, 10000<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">14</span>             \n<span style=\"color: #008080;\">15</span>             <span style=\"color: #0000ff;\">while</span>(<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">16</span>                 socket =<span style=\"color: #000000;\"> server.accept();\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">                new Thread(new TimeServerHandler(socket)).start();</span>\n<span style=\"color: #008080;\">18</span>                 singleExecutor.execute(<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> TimeServerHandler(socket));\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">20</span>         } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">            e.printStackTrace();\n</span><span style=\"color: #008080;\">22</span>         } <span style=\"color: #0000ff;\">finally</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">23</span>             <span style=\"color: #0000ff;\">if</span>(server!=<span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">24</span>                 System.out.println(\"The time server is close.\"<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">25</span>                 <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">                    server.close();\n</span><span style=\"color: #008080;\">27</span>                     server = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">28</span>                 } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">                    e.printStackTrace();\n</span><span style=\"color: #008080;\">30</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">31</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">32</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">33</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">34</span> }</pre> \n  </div> \n  <p>TimeServerHandler.java</p> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.BufferedReader;\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.InputStreamReader;\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.PrintWriter;\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.Socket;\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.Date;\n</span><span style=\"color: #008080;\"> 7</span> \n<span style=\"color: #008080;\"> 8</span> \n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> TimeServerHandler <span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> Runnable {\n</span><span style=\"color: #008080;\">10</span> \n<span style=\"color: #008080;\">11</span>     <span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Socket socket;\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> TimeServerHandler(Socket socket){\n</span><span style=\"color: #008080;\">13</span>         <span style=\"color: #0000ff;\">this</span>.socket =<span style=\"color: #000000;\"> socket;\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">15</span>     \n<span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">    @Override\n</span><span style=\"color: #008080;\">17</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> run() {\n</span><span style=\"color: #008080;\">18</span>         BufferedReader in = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">19</span>         PrintWriter out = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">20</span>         <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">21</span>             in = <span style=\"color: #0000ff;\">new</span> BufferedReader(<span style=\"color: #0000ff;\">new</span> InputStreamReader(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.socket.getInputStream()));\n</span><span style=\"color: #008080;\">22</span>             out = <span style=\"color: #0000ff;\">new</span> PrintWriter(<span style=\"color: #0000ff;\">this</span>.socket.getOutputStream(), <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">23</span>             String currentTime = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">24</span>             String body = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">25</span>             <span style=\"color: #0000ff;\">while</span>(<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">26</span>                 body =<span style=\"color: #000000;\"> in.readLine();\n</span><span style=\"color: #008080;\">27</span>                 <span style=\"color: #0000ff;\">if</span>(body == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">28</span>                     <span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">30</span>                 System.out.println(\"The time server(Thread:\"+Thread.currentThread()+\") receive order:\"+<span style=\"color: #000000;\">body);\n</span><span style=\"color: #008080;\">31</span>                 currentTime = \"QUERY TIME ORDER\".equalsIgnoreCase(body) ? <span style=\"color: #0000ff;\">new</span> Date(System.currentTimeMillis()).toString() : \"BAD ORDER\"<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">32</span> <span style=\"color: #000000;\">                out.println(currentTime);\n</span><span style=\"color: #008080;\">33</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">34</span>         } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\">35</span>             <span style=\"color: #0000ff;\">if</span>(in != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">36</span>                 <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">37</span> <span style=\"color: #000000;\">                    in.close();\n</span><span style=\"color: #008080;\">38</span>                     in = <span style=\"color: #0000ff;\">null</span>;<span style=\"color: #008000;\">//\n</span><span style=\"color: #008080;\">39</span>                 } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e1) {\n</span><span style=\"color: #008080;\">40</span> <span style=\"color: #000000;\">                    e1.printStackTrace();\n</span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">42</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">43</span>             <span style=\"color: #0000ff;\">if</span>(out != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">44</span>                 <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">45</span> <span style=\"color: #000000;\">                    out.close();\n</span><span style=\"color: #008080;\">46</span>                     out = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">47</span>                 } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e1) {\n</span><span style=\"color: #008080;\">48</span> <span style=\"color: #000000;\">                    e1.printStackTrace();\n</span><span style=\"color: #008080;\">49</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">50</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">51</span>             <span style=\"color: #0000ff;\">if</span>(socket != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">52</span>                 <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">53</span> <span style=\"color: #000000;\">                    socket.close();\n</span><span style=\"color: #008080;\">54</span>                 } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e1) {\n</span><span style=\"color: #008080;\">55</span> <span style=\"color: #000000;\">                    e1.printStackTrace();\n</span><span style=\"color: #008080;\">56</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">57</span>                 <span style=\"color: #0000ff;\">this</span>.socket = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">58</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">59</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">60</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">61</span> \n<span style=\"color: #008080;\">62</span> }</pre> \n  </div> \n  <p>&nbsp;服务端线程池TimeServerHandlerExecutePool.java</p> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.concurrent.ArrayBlockingQueue;\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.concurrent.ExecutorService;\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.concurrent.ThreadPoolExecutor;\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.concurrent.TimeUnit;\n</span><span style=\"color: #008080;\"> 5</span> \n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> TimeServerHandlerExecutePool {\n</span><span style=\"color: #008080;\"> 7</span> \n<span style=\"color: #008080;\"> 8</span>     <span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> ExecutorService executor;\n</span><span style=\"color: #008080;\"> 9</span>     \n<span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">public</span> TimeServerHandlerExecutePool(<span style=\"color: #0000ff;\">int</span> maxPoolSize, <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> queueSize) {\n</span><span style=\"color: #008080;\">11</span>         executor = <span style=\"color: #0000ff;\">new</span> ThreadPoolExecutor(Runtime.getRuntime().availableProcessors(), maxPoolSize, 120l, TimeUnit.SECONDS, <span style=\"color: #0000ff;\">new</span> ArrayBlockingQueue&lt;Runnable&gt;<span style=\"color: #000000;\">(queueSize));\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">13</span> \n<span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> execute(Runnable task) {\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">        executor.execute(task);\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">17</span> \n<span style=\"color: #008080;\">18</span> }</pre> \n  </div> \n  <p>&nbsp;</p> \n  <p>&nbsp;客户端：</p> \n  <p>TimeServerClient.java</p> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.BufferedReader;\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.InputStreamReader;\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.PrintWriter;\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.Socket;\n</span><span style=\"color: #008080;\"> 6</span> \n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> TimeServerClient {\n</span><span style=\"color: #008080;\"> 8</span> \n<span style=\"color: #008080;\"> 9</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) {\n</span><span style=\"color: #008080;\">10</span>         <span style=\"color: #0000ff;\">int</span> port=8080; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务端默认端口</span>\n<span style=\"color: #008080;\">11</span>         Socket socket = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">12</span>         BufferedReader in = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">13</span>         PrintWriter out = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">14</span>         <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">15</span>             socket = <span style=\"color: #0000ff;\">new</span> Socket(\"127.0.0.1\"<span style=\"color: #000000;\">, port);\n</span><span style=\"color: #008080;\">16</span>             in = <span style=\"color: #0000ff;\">new</span> BufferedReader(<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> InputStreamReader(socket.getInputStream()));\n</span><span style=\"color: #008080;\">17</span>             out = <span style=\"color: #0000ff;\">new</span> PrintWriter(socket.getOutputStream(), <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">18</span>             out.println(\"QUERY TIME ORDER\"<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">19</span>             System.out.println(\"Send order to server succeed.\"<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">20</span>             String resp =<span style=\"color: #000000;\"> in.readLine();\n</span><span style=\"color: #008080;\">21</span>             System.out.println(\"Now is : \"+<span style=\"color: #000000;\">resp);\n</span><span style=\"color: #008080;\">22</span>         } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">            e.printStackTrace();\n</span><span style=\"color: #008080;\">24</span>         } <span style=\"color: #0000ff;\">finally</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">25</span>             <span style=\"color: #0000ff;\">if</span>(out !=<span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">                out.close();\n</span><span style=\"color: #008080;\">27</span>                 out = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">29</span>             <span style=\"color: #0000ff;\">if</span>(in != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">30</span>                 <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">31</span> <span style=\"color: #000000;\">                    in.close();\n</span><span style=\"color: #008080;\">32</span>                 } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {\n</span><span style=\"color: #008080;\">33</span> <span style=\"color: #000000;\">                    e.printStackTrace();\n</span><span style=\"color: #008080;\">34</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">35</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">36</span>             <span style=\"color: #0000ff;\">if</span>(socket != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">37</span>                 <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">                    socket.close();\n</span><span style=\"color: #008080;\">39</span>                 } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {\n</span><span style=\"color: #008080;\">40</span> <span style=\"color: #000000;\">                    e.printStackTrace();\n</span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">42</span>                 socket = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">43</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">44</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">45</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">46</span> }</pre> \n  </div> \n  <h3><strong>3<span style=\"font-family: 宋体;\">、</span><span style=\"font-family: Calibri;\">NIO</span><span style=\"font-family: 宋体;\">模型</span></strong></h3> \n  <p>NIO<span style=\"font-family: 宋体;\">（</span>JDK1.4）<span style=\"font-family: 宋体;\">模型是一种同步非阻塞</span>IO，主要有三大核心部分：<strong>Channel(通道)，Buffer(缓冲区), Selector（多路复用器）</strong><span style=\"font-family: 宋体;\">。传统</span>IO基于字节流和字符流进行操作，而NIO基于Channel和Buffer(缓冲区)进行操作，数据总是从通道读取到缓冲区中，或者从缓冲区写入到通道中。Selector(多路复用器)用于监听多个通道的事件（比如：连接打开，数据到达）。因此，单个线程可以监听多个数据通道。</p> \n  <p><strong>NIO和传统IO（一下简称IO）之间第一个最大的区别是，IO是面向流的，NIO是面向缓冲区的</strong>。</p> \n  <p>IO的各种流是阻塞的。这意味着，当一个线程调用read() 或 write()时，该线程被阻塞，直到有一些数据被读取，或数据完全写入。该线程在此期间不能再干任何事情了。 NIO的非阻塞模式，使一个线程从某通道发送请求读取数据，但是它仅能得到目前可用的数据，如果目前没有数据可用时，就什么都不会获取。而不是保持线程阻塞，所以直至数据变的可以读取之前，该线程可以继续做其他的事情。 非阻塞写也是如此。一个线程请求写入一些数据到某通道，但不需要等待它完全写入，这个线程同时可以去做别的事情。 线程通常将非阻塞IO的空闲时间用于在其它通道上执行IO操作，所以一个单独的线程现在可以管理多个输入和输出通道（channel）。</p> \n  <p><strong>NIO<span style=\"font-family: 宋体;\">优点：</span></strong></p> \n  <p>1、<span style=\"font-family: 宋体;\">通过</span>Channel<span style=\"font-family: 宋体;\">注册到</span><span style=\"font-family: Calibri;\">Selector</span><span style=\"font-family: 宋体;\">上的状态来实现一种客户端与服务端的通信。</span></p> \n  <p>2、Channel<span style=\"font-family: 宋体;\">中数据的读取是通过</span><span style=\"font-family: Calibri;\">Buffer , </span><span style=\"font-family: 宋体;\">一种非阻塞的读取方式。</span></p> \n  <p>3<span style=\"font-family: 宋体;\">、</span><span style=\"font-family: Calibri;\">Selector </span><span style=\"font-family: 宋体;\">多路复用器 &nbsp;单线程模型， &nbsp;线程的资源开销相对比较小。</span></p> \n  <p>&nbsp;</p> \n  <p><strong>NIO<span style=\"font-family: 宋体;\">缺点</span></strong>：</p> \n  <p>&nbsp;</p> \n  <p>1. API<span style=\"font-family: 宋体;\">使用复杂。</span></p> \n  <p>&nbsp;</p> \n  <p>2. 需要具备一些多线程编码能力</p> \n  <p>&nbsp;</p> \n  <p>3. 断线重连问题比较严重</p> \n  <p>&nbsp;</p> \n  <p>4. NIO<span style=\"font-family: 宋体;\">还有一些</span><span style=\"font-family: Calibri;\">BUG</span></p> \n  <p>&nbsp;</p> \n  <h4><strong>Channel(<span style=\"font-family: 黑体;\">通道</span><span style=\"font-family: Arial;\">)</span></strong></h4> \n  <p><span style=\"font-family: 宋体;\">传统</span>IO操作对read()或write()方法的调用，可能会因为没有数据可读/可写而阻塞，直到有数据响应。也就是说读写数据的IO调用，可能会无限期的阻塞等待，效率依赖网络传输的速度。最重要的是在调用一个方法前，无法知道是否会被阻塞。</p> \n  <p>NIO的Channel抽象了一个重要特征就是可以通过配置它的阻塞行为，来实现非阻塞式的通道。</p> \n  <p>Channel是一个双向通道，与传统IO操作只<span style=\"font-family: 宋体;\">允许单向的读写不同的是，</span>NIO的Channel允许在一个通道上进行读和写的操作。</p> \n  <p>FileChannel:<span style=\"font-family: 宋体;\">文件</span></p> \n  <p>SocketChannel:</p> \n  <p>ServerSocketChannel:</p> \n  <p>DatagramChannel: UDP</p> \n  <h4><strong>Buffer(<span style=\"font-family: 黑体;\">缓冲区</span><span style=\"font-family: Arial;\">)</span></strong></h4> \n  <p>Bufer顾名思义，它是一个缓冲区，实际上是一个容器，一个连续数组。Channel提供从文件、网络读取数据的渠道，但是读写的数据都必须经过Buffer。&nbsp; &nbsp;</p> \n  <p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527193643146.png\" title=\"\" alt=\"\"></p> \n  <p>&nbsp;</p> \n  <p>Buffer缓冲区本质上是一块可以写入数据，然后可以从中读取数据的内存。这块内存被包装成NIO Buffer对象，并提供了一组方法，用来方便的访问该模块内存。为了理解Buffer的工作原理，需要熟悉它的三个属性<span style=\"font-family: 宋体;\">：</span>capacity、position和limit。</p> \n  <p>属性<span style=\"font-family: 宋体;\">：</span><strong>capacity、position和limit</strong>。</p> \n  <p>position和limit的含义取决于Buffer处在读模式还是写模式。不管Buffer处在什么模式，capacity的含义总是一样的。见下图：</p> \n  <p>&nbsp;<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527193642754.png\" title=\"\" alt=\"\"></p> \n  <p><strong>capacity：</strong><span style=\"font-family: 宋体;\">作为一个内存块，</span>Buffer有固定的大小值，也叫作“capacity”，只能往其中写入capacity个byte、long、char等类型。一旦Buffer满了，需要将其清空（通过读数据或者清楚数据）才能继续写数据。</p> \n  <p><strong>position</strong><span style=\"font-family: 宋体;\">：当你写数据到</span>Buffer中时，position表示当前的位置。初始<span style=\"font-family: 宋体;\">的</span>position值为0，当写入一个字节数据到Buffer中后，position会向前移动到下一个可插入数据的Buffer单元。position最大可为capacity-1。当读取数据时，也是从某个特定位置读，将Buffer从写模式切换到读模式，position会被重置为0。当从Buffer的position处读取一个字节数据后，position向前移动到下一个可读的位置。</p> \n  <p><strong>limit</strong><span style=\"font-family: 宋体;\">：在写模式下，</span>Buffer的limit表示你最多能往Buffer里写多少数据。 写模式下，limit等于Buffer的capacity。当切换Buffer到读模式时， limit表示你最多能读到多少数据。因此，当切换Buffer到读模式时，limit会被设置成写模式下的position值。换句话说，你能读到之前写入的所有数据（limit被设置成已写数据的数量，这个值在写模式下就是position）</p> \n  <p><strong>Buffer的分配</strong><span style=\"font-family: 宋体;\">：对</span>Buffer对象的操作必须首先进行分配，Buffer提供一个allocate(int capacity)方法分配一个指定字节大小的对象。</p> \n  <p><strong><span style=\"font-family: 宋体;\">向</span>Buffer中写数据</strong><span style=\"font-family: 宋体;\">：写数据到</span>Buffer中有两种方式：</p> \n  <p>1、从channel写到Buffer</p> \n  <p>int bytes = channel.read(buf); //将channel中的数据读取到buf中</p> \n  <p>2、通过Buffer的put()方法写到Buffer</p> \n  <p>buf.put(byte); //将数据通过put()方法写入到buf中</p> \n  <p><strong>flip()方法</strong><span style=\"font-family: 宋体;\">：将</span>Buffer从写模式切换到读模式，调用flip()方法会将position设置为0，并将limit设置为之前的position的值。</p> \n  <p><strong><span style=\"font-family: 宋体;\">从</span>Buffer中读数据</strong><span style=\"font-family: 宋体;\">：从</span>Buffer中读数据有两种方式：</p> \n  <p>1、从Buffer读取数据到Channel</p> \n  <p>int bytes = channel.write(buf); //将buf中的数据读取到channel中</p> \n  <p>2、通过Buffer的get()方法读取数据</p> \n  <p>byte bt = buf.get(); //从buf中读取一个byte</p> \n  <p><strong>rewind()方法</strong><span style=\"font-family: 宋体;\">：</span>Buffer.rewind()方法将position设置为0，使得可以重读Buffer中的所有数据，limit保持不变。<strong>Buffer中的数据，读取完成后，依然保存在Buffer中，可以重复读取</strong>。</p> \n  <p><strong>clear()与compact()方法</strong><span style=\"font-family: 宋体;\">：一旦读完</span>Buffer中的数据，需要让Buffer准备好再次被写入，可以通过clear()或compact()方法完成。如果调用的是clear()方法，position将被设置为0，limit设置为capacity的值。但是Buffer并未被清空<span style=\"font-family: 宋体;\">，只是通过这些标记告诉我们可以从哪里开始往</span>Buffer中写入多少数据。<strong>如果Buffer中还有一些未读的数据，调用clear()方法将被\"遗忘 \"</strong>。compact()方法将所有未读的数据拷贝到Buffer起始处，然后将position设置到最后一个未读元素的后面，limit属性依然设置为capacity。可以使得Buffer中的未读数据还可以在后续中被使用。</p> \n  <p><strong>mark()与reset()方法</strong><span style=\"font-family: 宋体;\">：通过调用</span>Buffer.mark()方法可以标记一个特定的position，之后可以通过调用Buffer.reset()恢复到这个position上。</p> \n  <h4>Selector(多路复用器)</h4> \n  <h4>Selector与Channel是相互配合使用的，将Channel注册在Selector上之后，才可以正确的使用Selector，但此时Channel必须为非阻塞模式。Selector可以监听Channel的四种状态（Connect、Accept、Read、Write），当监听到某一Channel的某个状态时，才允许对Channel进行相应的操作。</h4> \n  <p>Connect：某一个客户端连接成功后</p> \n  <p>Accept：准备好进行连接</p> \n  <p>Read:可读</p> \n  <p>Write:可写</p> \n  <p><strong>4、NIO示例：</strong></p> \n  <p><strong>服务端：</strong></p> \n  <p>MultiplexerTimeServer.java</p> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #008080;\">  1</span> <span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.studyio.demo3;\n</span><span style=\"color: #008080;\">  2</span> \n<span style=\"color: #008080;\">  3</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;\n</span><span style=\"color: #008080;\">  4</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.InetSocketAddress;\n</span><span style=\"color: #008080;\">  5</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.nio.ByteBuffer;\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.nio.channels.SelectionKey;\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.nio.channels.Selector;\n</span><span style=\"color: #008080;\">  8</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.nio.channels.ServerSocketChannel;\n</span><span style=\"color: #008080;\">  9</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.nio.channels.SocketChannel;\n</span><span style=\"color: #008080;\"> 10</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.Date;\n</span><span style=\"color: #008080;\"> 11</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.Iterator;\n</span><span style=\"color: #008080;\"> 12</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.Set;\n</span><span style=\"color: #008080;\"> 13</span> \n<span style=\"color: #008080;\"> 14</span> <span style=\"color: #008000;\">/**</span>\n<span style=\"color: #008080;\"> 15</span> <span style=\"color: #008000;\"> * \n</span><span style=\"color: #008080;\"> 16</span> <span style=\"color: #008000;\"> * </span><span style=\"color: #808080;\">@author</span><span style=\"color: #008000;\"> lgs\n</span><span style=\"color: #008080;\"> 17</span> <span style=\"color: #008000;\"> * \n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #008000;\"> * \n</span><span style=\"color: #008080;\"> 19</span>  <span style=\"color: #008000;\">*/</span>\n<span style=\"color: #008080;\"> 20</span> <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> MultiplexerTimeServer <span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> Runnable {\n</span><span style=\"color: #008080;\"> 21</span> \n<span style=\"color: #008080;\"> 22</span>     <span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Selector selector;\n</span><span style=\"color: #008080;\"> 23</span>     <span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> ServerSocketChannel serverChannel;\n</span><span style=\"color: #008080;\"> 24</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">volatile</span> <span style=\"color: #0000ff;\">boolean</span><span style=\"color: #000000;\"> stop;\n</span><span style=\"color: #008080;\"> 25</span>     \n<span style=\"color: #008080;\"> 26</span>     <span style=\"color: #0000ff;\">public</span> MultiplexerTimeServer(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> port) {\n</span><span style=\"color: #008080;\"> 27</span>         <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\"> 28</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">打开服务端的一个通道channel：ServerSocketChannel</span>\n<span style=\"color: #008080;\"> 29</span>             serverChannel =<span style=\"color: #000000;\"> ServerSocketChannel.open();\n</span><span style=\"color: #008080;\"> 30</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">把服务端的通道设置为非阻塞模式</span>\n<span style=\"color: #008080;\"> 31</span>             serverChannel.configureBlocking(<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\"> 32</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">绑定监听的端口地址</span>\n<span style=\"color: #008080;\"> 33</span>             serverChannel.socket().bind(<span style=\"color: #0000ff;\">new</span> InetSocketAddress(port), 1024<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\"> 34</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建Selector(多路复用器)线程</span>\n<span style=\"color: #008080;\"> 35</span>             selector =<span style=\"color: #000000;\"> Selector.open();\n</span><span style=\"color: #008080;\"> 36</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将服务端通道ServerSocketChannel注册到Selector，交给Selector监听,告诉客户端服务端是可以连接的了</span>\n<span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">            serverChannel.register(selector, SelectionKey.OP_ACCEPT);\n</span><span style=\"color: #008080;\"> 38</span>             System.out.println(\"The time server is start in port:\"+<span style=\"color: #000000;\">port);\n</span><span style=\"color: #008080;\"> 39</span>         } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\"> 40</span> <span style=\"color: #000000;\">            e.printStackTrace();\n</span><span style=\"color: #008080;\"> 41</span>             System.exit(1<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\"> 42</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 43</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\"> 44</span> \n<span style=\"color: #008080;\"> 45</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> stop(){\n</span><span style=\"color: #008080;\"> 46</span>         <span style=\"color: #0000ff;\">this</span>.stop = <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 47</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\"> 48</span> <span style=\"color: #000000;\">    @Override\n</span><span style=\"color: #008080;\"> 49</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> run() {\n</span><span style=\"color: #008080;\"> 50</span>         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">处理客户端消息</span>\n<span style=\"color: #008080;\"> 51</span>         <span style=\"color: #0000ff;\">while</span>(!<span style=\"color: #000000;\">stop){\n</span><span style=\"color: #008080;\"> 52</span>             <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\"> 53</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">通过Selector循环准备就绪的Key,这个key指的是客户端的通道</span>\n<span style=\"color: #008080;\"> 54</span> <span style=\"color: #000000;\">                selector.select();\n</span><span style=\"color: #008080;\"> 55</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">拿到key以后把key放入迭代器iterator</span>\n<span style=\"color: #008080;\"> 56</span>                 Set&lt;SelectionKey&gt; selectionKeys =<span style=\"color: #000000;\"> selector.selectedKeys();\n</span><span style=\"color: #008080;\"> 57</span>                 Iterator&lt;SelectionKey&gt; iterator =<span style=\"color: #000000;\"> selectionKeys.iterator();\n</span><span style=\"color: #008080;\"> 58</span>                 SelectionKey selectionKey = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 59</span>                 <span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\">(iterator.hasNext()){\n</span><span style=\"color: #008080;\"> 60</span>                     selectionKey =<span style=\"color: #000000;\"> iterator.next();\n</span><span style=\"color: #008080;\"> 61</span>                     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">取到key以后就移出，避免重复取</span>\n<span style=\"color: #008080;\"> 62</span> <span style=\"color: #000000;\">                    iterator.remove();\n</span><span style=\"color: #008080;\"> 63</span>                     <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\"> 64</span>                         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">处理客户端传递过来的数据</span>\n<span style=\"color: #008080;\"> 65</span> <span style=\"color: #000000;\">                        handleInput(selectionKey);\n</span><span style=\"color: #008080;\"> 66</span>                     } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\"> 67</span>                         <span style=\"color: #0000ff;\">if</span>(selectionKey!=<span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\"> 68</span> <span style=\"color: #000000;\">                            selectionKey.cancel();\n</span><span style=\"color: #008080;\"> 69</span>                             <span style=\"color: #0000ff;\">if</span>(selectionKey.channel()!=<span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\"> 70</span> <span style=\"color: #000000;\">                                selectionKey.channel().close();\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">                            }\n</span><span style=\"color: #008080;\"> 72</span> <span style=\"color: #000000;\">                        }\n</span><span style=\"color: #008080;\"> 73</span> <span style=\"color: #000000;\">                    }\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\"> 75</span>             } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\"> 76</span> <span style=\"color: #000000;\">                e.printStackTrace();\n</span><span style=\"color: #008080;\"> 77</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\"> 78</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 79</span>         <span style=\"color: #0000ff;\">if</span>(selector !=<span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\"> 80</span>             <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\"> 81</span> <span style=\"color: #000000;\">                selector.close();\n</span><span style=\"color: #008080;\"> 82</span>             } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {\n</span><span style=\"color: #008080;\"> 83</span> <span style=\"color: #000000;\">                e.printStackTrace();\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\"> 85</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 86</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\"> 87</span> \n<span style=\"color: #008080;\"> 88</span>     <span style=\"color: #008000;\">/**</span>\n<span style=\"color: #008080;\"> 89</span> <span style=\"color: #008000;\">     * 处理客户端传递过来的数据\n</span><span style=\"color: #008080;\"> 90</span> <span style=\"color: #008000;\">     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> selectionKey\n</span><span style=\"color: #008080;\"> 91</span> <span style=\"color: #008000;\">     * </span><span style=\"color: #808080;\">@throws</span><span style=\"color: #008000;\"> IOException\n</span><span style=\"color: #008080;\"> 92</span>      <span style=\"color: #008000;\">*/</span>\n<span style=\"color: #008080;\"> 93</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">void</span> handleInput(SelectionKey selectionKey) <span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> IOException {\n</span><span style=\"color: #008080;\"> 94</span>         <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(selectionKey.isValid()){\n</span><span style=\"color: #008080;\"> 95</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">客户端是可连接的</span>\n<span style=\"color: #008080;\"> 96</span>             <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (selectionKey.isAcceptable()) {\n</span><span style=\"color: #008080;\"> 97</span>                 ServerSocketChannel server =<span style=\"color: #000000;\"> (ServerSocketChannel) selectionKey.channel();\n</span><span style=\"color: #008080;\"> 98</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多路复用器监听到新的客户端连接，处理连接请求，完成TCP三次握手。</span>\n<span style=\"color: #008080;\"> 99</span>                 SocketChannel client =<span style=\"color: #000000;\"> server.accept();\n</span><span style=\"color: #008080;\">100</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置为非阻塞模式</span>\n<span style=\"color: #008080;\">101</span>                 client.configureBlocking(<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">102</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 将新连接注册到多路复用器上，监听其读操作，读取客户端发送的消息。</span>\n<span style=\"color: #008080;\">103</span> <span style=\"color: #000000;\">                client.register(selector, SelectionKey.OP_READ);\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">105</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">客户端是可读的</span>\n<span style=\"color: #008080;\">106</span>             <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(selectionKey.isReadable()){\n</span><span style=\"color: #008080;\">107</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取取客户端的通道</span>\n<span style=\"color: #008080;\">108</span>                 SocketChannel client =<span style=\"color: #000000;\"> (SocketChannel) selectionKey.channel();\n</span><span style=\"color: #008080;\">109</span>                 ByteBuffer receivebuffer = ByteBuffer.allocate(1024<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">110</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">读取客户端请求消息到缓冲区</span>\n<span style=\"color: #008080;\">111</span>                 <span style=\"color: #0000ff;\">int</span> count = client.read(receivebuffer);   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">非阻塞    </span>\n<span style=\"color: #008080;\">112</span>                 <span style=\"color: #0000ff;\">if</span> (count &gt; 0<span style=\"color: #000000;\">) {\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">                    receivebuffer.flip();\n</span><span style=\"color: #008080;\">114</span>                     <span style=\"color: #0000ff;\">byte</span>[] bytes = <span style=\"color: #0000ff;\">new</span> <span style=\"color: #0000ff;\">byte</span>[receivebuffer.remaining()]; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">remaining()方法\n</span><span style=\"color: #008080;\">115</span>                     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">从缓冲区读取消息到bytes数组里面</span>\n<span style=\"color: #008080;\">116</span> <span style=\"color: #000000;\">                    receivebuffer.get(bytes);\n</span><span style=\"color: #008080;\">117</span>                     String body = <span style=\"color: #0000ff;\">new</span> String(bytes, \"UTF-8\"<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">118</span>                     System.out.println(\"The time server(Thread:\"+Thread.currentThread()+\") receive order : \"+<span style=\"color: #000000;\">body);\n</span><span style=\"color: #008080;\">119</span>                     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将currentTime响应给客户端（客户端Channel）</span>\n<span style=\"color: #008080;\">120</span>                     String currentTime = \"QUERY TIME ORDER\".equalsIgnoreCase(body) ? <span style=\"color: #0000ff;\">new</span> Date(System.currentTimeMillis()).toString() : \"BAD ORDER\"<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">121</span>                     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务端向客户端响应数据,通过客户端的通道传递数据</span>\n<span style=\"color: #008080;\">122</span> <span style=\"color: #000000;\">                    doWrite(client, currentTime);\n</span><span style=\"color: #008080;\">123</span>                 }<span style=\"color: #0000ff;\">else</span> <span style=\"color: #0000ff;\">if</span>(count &lt; 0<span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #000000;\">                    selectionKey.channel();\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #000000;\">                    client.close();\n</span><span style=\"color: #008080;\">126</span>                 }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\n</span><span style=\"color: #008080;\">127</span>                     \n<span style=\"color: #008080;\">128</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">129</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">130</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">131</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">132</span> \n<span style=\"color: #008080;\">133</span>     <span style=\"color: #008000;\">/**</span>\n<span style=\"color: #008080;\">134</span> <span style=\"color: #008000;\">     * 服务端向客户端响应数据,通过客户端的通道传递数据\n</span><span style=\"color: #008080;\">135</span> <span style=\"color: #008000;\">     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> client\n</span><span style=\"color: #008080;\">136</span> <span style=\"color: #008000;\">     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> currentTime\n</span><span style=\"color: #008080;\">137</span> <span style=\"color: #008000;\">     * </span><span style=\"color: #808080;\">@throws</span><span style=\"color: #008000;\"> IOException\n</span><span style=\"color: #008080;\">138</span>      <span style=\"color: #008000;\">*/</span>\n<span style=\"color: #008080;\">139</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">void</span> doWrite(SocketChannel client, String currentTime) <span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> IOException {\n</span><span style=\"color: #008080;\">140</span>         <span style=\"color: #0000ff;\">if</span>(currentTime != <span style=\"color: #0000ff;\">null</span> &amp;&amp; currentTime.trim().length()&gt;0<span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">141</span>             ByteBuffer sendbuffer = ByteBuffer.allocate(1024<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">142</span> <span style=\"color: #000000;\">            sendbuffer.put(currentTime.getBytes());\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">            sendbuffer.flip();\n</span><span style=\"color: #008080;\">144</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将客户端响应消息写入到客户端Channel中。</span>\n<span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">            client.write(sendbuffer);\n</span><span style=\"color: #008080;\">146</span>             System.out.println(\"服务器端向客户端发送数据--：\" +<span style=\"color: #000000;\"> currentTime);\n</span><span style=\"color: #008080;\">147</span>         }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\n</span><span style=\"color: #008080;\">148</span>             System.out.println(\"没有数据\"<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">149</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">150</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">151</span> \n<span style=\"color: #008080;\">152</span> }</pre> \n  </div> \n  <p>服务端入口程序TimeServer.java</p> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> TimeServer {\n\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) {\n        </span><span style=\"color: #0000ff;\">int</span> port=8080; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务端默认端口</span>\n        MultiplexerTimeServer timeServer=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MultiplexerTimeServer(port);\n        </span><span style=\"color: #0000ff;\">new</span> Thread(timeServer, \"NIO-MultiplexerTimeServer-001\"<span style=\"color: #000000;\">).start();\n    }\n}</span></pre> \n  </div> \n  <p>&nbsp;</p> \n  <p><strong>&nbsp;客户端：</strong></p> \n  <p>TimeClientHandler.java</p> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #008080;\">  1</span> <span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> com.studyio.demo3;\n</span><span style=\"color: #008080;\">  2</span> \n<span style=\"color: #008080;\">  3</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.io.IOException;\n</span><span style=\"color: #008080;\">  4</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.net.InetSocketAddress;\n</span><span style=\"color: #008080;\">  5</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.nio.ByteBuffer;\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.nio.channels.SelectionKey;\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.nio.channels.Selector;\n</span><span style=\"color: #008080;\">  8</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.nio.channels.SocketChannel;\n</span><span style=\"color: #008080;\">  9</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.Iterator;\n</span><span style=\"color: #008080;\"> 10</span> <span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> java.util.Set;\n</span><span style=\"color: #008080;\"> 11</span> \n<span style=\"color: #008080;\"> 12</span> <span style=\"color: #008000;\">/**</span>\n<span style=\"color: #008080;\"> 13</span> <span style=\"color: #008000;\"> * \n</span><span style=\"color: #008080;\"> 14</span> <span style=\"color: #008000;\"> * </span><span style=\"color: #808080;\">@author</span><span style=\"color: #008000;\"> lgs\n</span><span style=\"color: #008080;\"> 15</span> <span style=\"color: #008000;\"> * \n</span><span style=\"color: #008080;\"> 16</span>  <span style=\"color: #008000;\">*/</span>\n<span style=\"color: #008080;\"> 17</span> <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> TimeClientHandler <span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> Runnable {\n</span><span style=\"color: #008080;\"> 18</span>     \n<span style=\"color: #008080;\"> 19</span>     <span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> String host;\n</span><span style=\"color: #008080;\"> 20</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> port;\n</span><span style=\"color: #008080;\"> 21</span>     <span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> SocketChannel socketChannel;\n</span><span style=\"color: #008080;\"> 22</span>     <span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> Selector selector;\n</span><span style=\"color: #008080;\"> 23</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">volatile</span> <span style=\"color: #0000ff;\">boolean</span><span style=\"color: #000000;\"> stop;\n</span><span style=\"color: #008080;\"> 24</span>     \n<span style=\"color: #008080;\"> 25</span>     <span style=\"color: #0000ff;\">public</span> TimeClientHandler(String host, <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> port) {\n</span><span style=\"color: #008080;\"> 26</span>         <span style=\"color: #0000ff;\">this</span>.host =<span style=\"color: #000000;\"> host;\n</span><span style=\"color: #008080;\"> 27</span>         <span style=\"color: #0000ff;\">this</span>.port =<span style=\"color: #000000;\"> port;\n</span><span style=\"color: #008080;\"> 28</span>         <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\"> 29</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">客户端打开一个通道SocketChannel</span>\n<span style=\"color: #008080;\"> 30</span>             socketChannel =<span style=\"color: #000000;\"> SocketChannel.open();\n</span><span style=\"color: #008080;\"> 31</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建Selector(多路复用器)线程</span>\n<span style=\"color: #008080;\"> 32</span>             selector =<span style=\"color: #000000;\"> Selector.open();\n</span><span style=\"color: #008080;\"> 33</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置为非阻塞模式</span>\n<span style=\"color: #008080;\"> 34</span>             socketChannel.configureBlocking(<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\"> 35</span>         } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\"> 36</span> <span style=\"color: #000000;\">            e.printStackTrace();\n</span><span style=\"color: #008080;\"> 37</span>             System.exit(1<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\"> 38</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 39</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\"> 40</span> \n<span style=\"color: #008080;\"> 41</span> <span style=\"color: #000000;\">    @Override\n</span><span style=\"color: #008080;\"> 42</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> run() {\n</span><span style=\"color: #008080;\"> 43</span>         <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\"> 44</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">连接服务端并发送数据</span>\n<span style=\"color: #008080;\"> 45</span> <span style=\"color: #000000;\">            doConnect();\n</span><span style=\"color: #008080;\"> 46</span>         } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\"> 47</span> <span style=\"color: #000000;\">            e.printStackTrace();\n</span><span style=\"color: #008080;\"> 48</span>             System.exit(1<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\"> 49</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 50</span>         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">处理服务端响应的数据,和服务端处理客户端发送的数据一样</span>\n<span style=\"color: #008080;\"> 51</span>         <span style=\"color: #0000ff;\">while</span>(!<span style=\"color: #000000;\">stop){\n</span><span style=\"color: #008080;\"> 52</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">轮训通道的状态</span>\n<span style=\"color: #008080;\"> 53</span>             <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\"> 54</span>                 selector.select(1000<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\"> 55</span>                 Set&lt;SelectionKey&gt; selectionKeys =<span style=\"color: #000000;\"> selector.selectedKeys();\n</span><span style=\"color: #008080;\"> 56</span>                 Iterator&lt;SelectionKey&gt; iterator =<span style=\"color: #000000;\"> selectionKeys.iterator();\n</span><span style=\"color: #008080;\"> 57</span>                 SelectionKey selectionKey = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 58</span>                 <span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\">(iterator.hasNext()){\n</span><span style=\"color: #008080;\"> 59</span>                     selectionKey =<span style=\"color: #000000;\"> iterator.next();\n</span><span style=\"color: #008080;\"> 60</span>                     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">取到key以后就移出，避免重复取</span>\n<span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">                    iterator.remove();\n</span><span style=\"color: #008080;\"> 62</span>                     <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\"> 63</span>                         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">处理服务端响应的数据</span>\n<span style=\"color: #008080;\"> 64</span> <span style=\"color: #000000;\">                        handleInput(selectionKey);\n</span><span style=\"color: #008080;\"> 65</span>                     } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\"> 66</span>                         <span style=\"color: #0000ff;\">if</span>(selectionKey!=<span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\"> 67</span> <span style=\"color: #000000;\">                            selectionKey.cancel();\n</span><span style=\"color: #008080;\"> 68</span>                             <span style=\"color: #0000ff;\">if</span>(selectionKey.channel()!=<span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\"> 69</span> <span style=\"color: #000000;\">                                selectionKey.channel().close();\n</span><span style=\"color: #008080;\"> 70</span> <span style=\"color: #000000;\">                            }\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">                        }\n</span><span style=\"color: #008080;\"> 72</span> <span style=\"color: #000000;\">                    }\n</span><span style=\"color: #008080;\"> 73</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\"> 74</span>             } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e) {\n</span><span style=\"color: #008080;\"> 75</span> <span style=\"color: #000000;\">                e.printStackTrace();\n</span><span style=\"color: #008080;\"> 76</span>                 System.exit(1<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\"> 77</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\"> 78</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 79</span>         <span style=\"color: #0000ff;\">if</span>(selector !=<span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\"> 80</span>             <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\"> 81</span> <span style=\"color: #000000;\">                selector.close();\n</span><span style=\"color: #008080;\"> 82</span>             } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException e) {\n</span><span style=\"color: #008080;\"> 83</span> <span style=\"color: #000000;\">                e.printStackTrace();\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\"> 85</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 86</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\"> 87</span> \n<span style=\"color: #008080;\"> 88</span>     <span style=\"color: #008000;\">/**</span>\n<span style=\"color: #008080;\"> 89</span> <span style=\"color: #008000;\">     * 处理服务端响应的数据\n</span><span style=\"color: #008080;\"> 90</span> <span style=\"color: #008000;\">     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> selectionKey\n</span><span style=\"color: #008080;\"> 91</span> <span style=\"color: #008000;\">     * </span><span style=\"color: #808080;\">@throws</span><span style=\"color: #008000;\"> Exception\n</span><span style=\"color: #008080;\"> 92</span>      <span style=\"color: #008000;\">*/</span>\n<span style=\"color: #008080;\"> 93</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">void</span> handleInput(SelectionKey selectionKey) <span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> Exception {\n</span><span style=\"color: #008080;\"> 94</span>         <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(selectionKey.isValid()){\n</span><span style=\"color: #008080;\"> 95</span>             SocketChannel client =<span style=\"color: #000000;\"> (SocketChannel) selectionKey.channel();\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (selectionKey.isConnectable()){\n</span><span style=\"color: #008080;\"> 97</span>                 <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(client.finishConnect()){\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #000000;\">                    client.register(selector, SelectionKey.OP_READ);\n</span><span style=\"color: #008080;\"> 99</span> <span style=\"color: #000000;\">                    doWrite(client);\n</span><span style=\"color: #008080;\">100</span>                 }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\n</span><span style=\"color: #008080;\">101</span>                     System.exit(1<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">103</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">104</span>             <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (selectionKey.isReadable()) {\n</span><span style=\"color: #008080;\">105</span>                 ByteBuffer receivebuffer = ByteBuffer.allocate(1024<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">106</span>                 <span style=\"color: #0000ff;\">int</span> count =<span style=\"color: #000000;\"> client.read(receivebuffer);\n</span><span style=\"color: #008080;\">107</span>                 <span style=\"color: #0000ff;\">if</span> (count &gt; 0<span style=\"color: #000000;\">) {\n</span><span style=\"color: #008080;\">108</span> <span style=\"color: #000000;\">                    receivebuffer.flip();\n</span><span style=\"color: #008080;\">109</span>                     <span style=\"color: #0000ff;\">byte</span>[] bytes = <span style=\"color: #0000ff;\">new</span> <span style=\"color: #0000ff;\">byte</span>[receivebuffer.remaining()]; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">remaining()方法</span>\n<span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">                    receivebuffer.get(bytes);\n</span><span style=\"color: #008080;\">111</span>                     String body = <span style=\"color: #0000ff;\">new</span> String(bytes, \"UTF-8\"<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">112</span>                     System.out.println(\"Now is \"+<span style=\"color: #000000;\">body);\n</span><span style=\"color: #008080;\">113</span>                     <span style=\"color: #0000ff;\">this</span>.stop = <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">114</span>                 }<span style=\"color: #0000ff;\">else</span> <span style=\"color: #0000ff;\">if</span>(count &lt; 0<span style=\"color: #000000;\">){\n</span><span style=\"color: #008080;\">115</span> <span style=\"color: #000000;\">                    selectionKey.channel();\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #000000;\">                    client.close();\n</span><span style=\"color: #008080;\">117</span>                 }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\n</span><span style=\"color: #008080;\">118</span>                     \n<span style=\"color: #008080;\">119</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">120</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">121</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">123</span> \n<span style=\"color: #008080;\">124</span>     <span style=\"color: #008000;\">/**</span>\n<span style=\"color: #008080;\">125</span> <span style=\"color: #008000;\">     * 连接服务端并发送数据\n</span><span style=\"color: #008080;\">126</span> <span style=\"color: #008000;\">     * </span><span style=\"color: #808080;\">@throws</span><span style=\"color: #008000;\"> Exception\n</span><span style=\"color: #008080;\">127</span>      <span style=\"color: #008000;\">*/</span>\n<span style=\"color: #008080;\">128</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">void</span> doConnect() <span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> Exception {\n</span><span style=\"color: #008080;\">129</span>         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">连接服务端</span>\n<span style=\"color: #008080;\">130</span>         <span style=\"color: #0000ff;\">boolean</span> connect = socketChannel.connect(<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> InetSocketAddress(host, port));\n</span><span style=\"color: #008080;\">131</span>         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否连接成功，如果连接成功，则监听Channel的读状态。</span>\n<span style=\"color: #008080;\">132</span>         <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\">(connect){\n</span><span style=\"color: #008080;\">133</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">连接成功就把客户端的通道注册到多路复用器上，并设置通道状态为可读</span>\n<span style=\"color: #008080;\">134</span> <span style=\"color: #000000;\">            socketChannel.register(selector, SelectionKey.OP_READ);\n</span><span style=\"color: #008080;\">135</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">写数据  写给服务端</span>\n<span style=\"color: #008080;\">136</span> <span style=\"color: #000000;\">            doWrite(socketChannel);\n</span><span style=\"color: #008080;\">137</span>         }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\n</span><span style=\"color: #008080;\">138</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果没有连接成功，则向多路复用器注册Connect(可连接)状态</span>\n<span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">            socketChannel.register(selector, SelectionKey.OP_CONNECT);\n</span><span style=\"color: #008080;\">140</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">141</span>         \n<span style=\"color: #008080;\">142</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">143</span> \n<span style=\"color: #008080;\">144</span>     <span style=\"color: #008000;\">/**</span>\n<span style=\"color: #008080;\">145</span> <span style=\"color: #008000;\">     * 写数据  写给服务端\n</span><span style=\"color: #008080;\">146</span> <span style=\"color: #008000;\">     * </span><span style=\"color: #808080;\">@param</span><span style=\"color: #008000;\"> channel\n</span><span style=\"color: #008080;\">147</span> <span style=\"color: #008000;\">     * </span><span style=\"color: #808080;\">@throws</span><span style=\"color: #008000;\"> IOException\n</span><span style=\"color: #008080;\">148</span>      <span style=\"color: #008000;\">*/</span>\n<span style=\"color: #008080;\">149</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">void</span> doWrite(SocketChannel channel) <span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> IOException {\n</span><span style=\"color: #008080;\">150</span>         ByteBuffer sendbuffer = ByteBuffer.allocate(1024<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">151</span>         sendbuffer.put(\"QUERY TIME ORDER\"<span style=\"color: #000000;\">.getBytes());\n</span><span style=\"color: #008080;\">152</span> <span style=\"color: #000000;\">        sendbuffer.flip();\n</span><span style=\"color: #008080;\">153</span>         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">向Channel中写入客户端的请求指令  写到服务端 写到通道里面</span>\n<span style=\"color: #008080;\">154</span> <span style=\"color: #000000;\">        channel.write(sendbuffer);\n</span><span style=\"color: #008080;\">155</span>         <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #000000;\">sendbuffer.hasRemaining()){\n</span><span style=\"color: #008080;\">156</span>             System.out.println(\"Send order to server succeed.\"<span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">157</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">158</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">159</span> }</pre> \n  </div> \n  <p>&nbsp;客户端程序入口：TimeServerClient.java</p> \n  <div class=\"cnblogs_code\"> \n   <pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> TimeServerClient {\n    \n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) {\n        </span><span style=\"color: #0000ff;\">int</span> port=8080; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务端默认端口</span>\n        <span style=\"color: #0000ff;\">new</span> Thread(<span style=\"color: #0000ff;\">new</span> TimeClientHandler(\"127.0.0.1\", port), \"NIO-TimeServerClient-001\"<span style=\"color: #000000;\">).start();\n    }\n}</span></pre> \n  </div> \n  <p>&nbsp;</p> \n  <p>&nbsp;</p> \n </div> \n</div>',NULL,0,2,1,0,0,'一、几个基本概念1.同步、异步、阻塞、非阻塞同步：用户触发IO操作，你发起了请求就得等着对方给你返回结果，你不能走，针对调用方的，你发起了请求你等异步：触发触发了IO操作，即发起了请求以后可以做','IO',1,'2020-05-27 19:36:43','2020-05-27 22:06:56');
INSERT INTO `biz_article` VALUES (112,'SQL调优',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2># 问题的提出</h2> \n<p>　在应用系统开发初期，由于开发数据库数据比较少，对于查询SQL语句，复杂视图的的编写等体会不出SQL语句各种写法的性能优劣，但是如果将应用 系统提交实际应用后，随着数据库中数据的增加，系统的响应速度就成为目前系统需要解决的最主要的问题之一。系统优化中一个很重要的方面就是SQL语句的优化。对于海量数据，劣质SQL语句和优质SQL语句之间的速度差别可以达到上百倍，可见对于一个系统不是简单地能实现其功能就可，而是要写出高质量的 SQL语句，提高系统的可用性。</p> \n<p>　　在多数情况下，Oracle使用索引来更快地遍历表，优化器主要根据定义的索引来提高性能。但是，如果在SQL语句的where子句中写的 SQL代码不合理，就会造成优化器删去索引而使用全表扫描，一般就这种SQL语句就是所谓的劣质SQL语句。在编写SQL语句时我们应清楚优化器根据何种原则来删除索引，这有助于写出高性能的SQL语句。</p> \n<p>&nbsp;</p> \n<p>随着软件技术的不断发展，系统性能越来越重要。<span style=\"font-size: 14px; line-height: 1.5;\">系统性能主要用：<span style=\"color: #ff0000;\"><strong>系统响应时间</strong></span>和<span style=\"color: #ff0000;\"><strong>并发性</strong></span>来衡量。</span></p> \n<p>&nbsp;</p> \n<p>造成SQL语句性能不佳大致有两个原因：</p> \n<p>l&nbsp; 开发人员只关注查询结果的正确性，忽视查询语句的效率。</p> \n<p>l&nbsp; 开发人员只关注SQL语句本身的效率，对SQL语句执行原理、影响SQL执行效率的主要因素不清楚。</p> \n<p>&nbsp;</p> \n<p>*&nbsp; 前者可以通过深入学习SQL语法及各种SQL调优技巧进行解决。</p> \n<p>&nbsp;&nbsp; SQL调优是一个系统工程，熟悉SQL语法、掌握各种内嵌函数、分析函数的用法只是编写高效SQL的必要条件。</p> \n<p>*&nbsp; 后者从分析SQL语句执行原理入手，指出SQL调优应在优化SQL解析和优化CBO上。</p> \n<h2># SQL语句调优</h2> \n<p>80%的数据库性能问题都是由于糟糕的SQL语句造成的。</p> \n<h3>## &nbsp;SQL语句优化的过程:</h3> \n<p>l&nbsp; 定位有问题的语句</p> \n<p>l&nbsp; 检查执行计划</p> \n<p>l&nbsp; 检查执行过程中优化器的统计信息</p> \n<p>l&nbsp; 分析相关表的记录数、索引情况</p> \n<p>l&nbsp; 改写SQL语句、使用HINT、调整索引、表分析</p> \n<p>l&nbsp; 有些SQL语句不具备优化的可能，需要优化处理方式</p> \n<p>l&nbsp; 达到最佳执行计划</p> \n<h3>## 什么是好的SQL语句？</h3> \n<p>l&nbsp; 尽量简单，模块化</p> \n<p>l&nbsp; 易读、易维护</p> \n<p>l&nbsp; 节省资源、内存、CPU</p> \n<p>l&nbsp; 扫描的数据块要少</p> \n<p>l&nbsp; 少排序</p> \n<p>l&nbsp; 不造成死锁</p> \n<h3>## 首先要搞明白什么叫执行计划？</h3> \n<p>执行计划是数据库根据SQL语句和相关表的统计信息作出的一个查询方案，这个方案是由查询优化器自动分析产生的，比如一条SQL语句如果用来从一个 10万条记录的表中查1条记录，那查询优化器会选择“索引查找”方式，如果该表进行了归档，当前只剩下5000条记录了，那查询优化器就会改变方案，采用 “全表扫描”方式。</p> \n<p>可见，执行计划并不是固定的，它是“个性化的”。产生一个正确的“执行计划”有两点很重要：</p> \n<p>(1) SQL语句是否清晰地告诉查询优化器它想干什么？</p> \n<p>(2)查询优化器得到的数据库统计信息是否是最新的、正确的？</p> \n<h2># 什么是索引？</h2> \n<p>SQL索引有两种，聚集索引和非聚集索引，索引主要目的是提高了SQL Server系统的性能，加快数据的查询速度与减少系统的响应时间</p> \n<p>&nbsp;</p> \n<p>下面举两个简单的例子：</p> \n<p>图书馆的例子：一个图书馆那么多书，怎么管理呢？建立一个字母开头的目录，例如：a开头的书，在第一排，b开头的在第二排，这样在找什么书就好说了，这个就是一个聚集索引，可是很多人借书找某某作者的，不知道书名怎么办？图书管理员在写一个目录，某某作者的书分别在第几排，第几排，这就是一个非聚集索引</p> \n<p>字典的例子：字典前面的目录，可以按照拼音和部首去查询，我们想查询一个字，只需要根据拼音或者部首去查询，就可以快速的定位到这个汉字了，这个就是索引的好处，拼音查询法就是聚集索引，部首查询就是一个非聚集索引.</p> \n<p>看了上面的例子，下面的一句话大家就很容易理解了：聚集索引存储记录是物理上连续存在，而非聚集索引是逻辑上的连续，物理存储并不连续。就像字段，聚集索引是连续的，a后面肯定是b，非聚集索引就不连续了，就像图书馆的某个作者的书，有可能在第1个货架上和第10个货架上。还有一个小知识点就是：聚集索引一个表只能有一个，而非聚集索引一个表可以存在多个。</p> \n<p>索引相关介绍：</p> \n<p><span style=\"color: #0000ff;\"><a href=\"http://www.cnblogs.com/ASPNET2008/archive/2010/12/18/1910147.html\"><span style=\"color: #0000ff;\">软件开发人员真的了解SQL索引吗(聚集索引)</span></a></span></p> \n<p><span style=\"color: #0000ff;\"><a href=\"http://www.cnblogs.com/ASPNET2008/archive/2010/12/18/1910183.html\"><span style=\"color: #0000ff;\">软件开发人员真的了解SQL索引吗(索引原理)</span></a></span></p> \n<p><span style=\"color: #0000ff;\"><a href=\"http://www.cnblogs.com/ASPNET2008/archive/2010/12/19/1910218.html\"><span style=\"color: #0000ff;\">软件开发人员真的了解SQL索引吗(索引使用原则)</span></a></span></p> \n<h3>## 索引的存储机制</h3> \n<p>　首先，无索引的表，查询时，是按照顺序存续的方法扫描每个记录来查找符合条件的记录，这样效率十分低下,举个例子，如果我们将字典的汉字随即打乱，没有前面的按照拼音或者部首查询，那么我们想找一个字，按照顺序的方式去一页页的找，这样效率有多底，大家可以想象。</p> \n<p><span style=\"color: #ff0000;\">聚集索引和非聚集索引的根本区别是表记录的排列顺序和与索引的排列顺序是否一致</span>，其实理解起来非常简单，还是举字典的例子：如果按照拼音查询，那么都是从a-z的，是具有连续性的，a后面就是b，b后面就是c，聚集索引就是这样的，他是和表的物理排列顺序是一样的，例如有id为聚集索引，那么1后面肯定是2,2后面肯定是3，所以说这样的搜索顺序的就是聚集索引。非聚集索引就和按照部首查询是一样是，可能按照偏房查询的时候，根据偏旁‘弓’字旁，索引出两个汉字，张和弘，但是这两个其实一个在100页，一个在1000页，（这里只是举个例子），他们的索引顺序和数据库表的排列顺序是不一样的，这个样的就是非聚集索引。</p> \n<p>原理明白了，那他们是怎么存储的呢？在这里简单的说一下，聚集索引就是在数据库被开辟一个物理空间存放他的排列的值，例如1-100，所以当插入数据时，他会重新排列整个整个物理空间，而非聚集索引其实可以看作是一个含有聚集索引的表，他只仅包含原表中非聚集索引的列和指向实际物理表的指针。他只记录一个指针，其实就有点和堆栈差不多的感觉了。</p> \n<h3>## 什么情况下设置索引</h3> \n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> \n <tbody> \n  <tr> \n   <td valign=\"top\"> <p align=\"left\">动作描述</p> </td> \n   <td valign=\"top\"> <p align=\"left\">使用聚集索引&nbsp;</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;使用非聚集索引</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;外键列</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;主键列</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;列经常被分组排序(order&nbsp;by)</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;返回某范围内的数据</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;不应</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;小数目的不同值</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;不应</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;大数目的不同值</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;不应</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;频繁更新的列</p> </td> \n   <td valign=\"top\"> <p align=\"left\">不应&nbsp;</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;频繁修改索引列</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;不应</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;应</p> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;一个或极少不同值</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;不应</p> </td> \n   <td valign=\"top\"> <p align=\"left\">&nbsp;不应</p> </td> \n  </tr> \n </tbody> \n</table> \n<p><strong>建立索引的原则</strong>：</p> \n<p>1) 定义主键的数据列一定要建立索引。</p> \n<p>2) 定义有外键的数据列一定要建立索引。</p> \n<p>3) 对于经常查询的数据列最好建立索引。</p> \n<p>4) 对于需要在指定范围内的快速或频繁查询的数据列;</p> \n<p>5) 经常用在WHERE子句中的数据列。</p> \n<p>6) 经常出现在关键字order by、group by、distinct后面的字段，建立索引。如果建立的是复合索引，索引的字段顺序要和这些关键字后面的字段顺序一致，否则索引不会被使用。</p> \n<p>7) 对于那些查询中很少涉及的列，重复值比较多的列不要建立索引。</p> \n<p>8) 对于定义为text、image和bit的数据类型的列不要建立索引。</p> \n<p>9) 对于经常存取的列避免建立索引</p> \n<p>9) 限制表上的索引数目。对一个存在大量更新操作的表，所建索引的数目一般不要超过3个，最多不要超过5个。索引虽说提高了访问速度，但太多索引会影响数据的更新操作。</p> \n<p>10) 对复合索引，按照字段在查询条件中出现的频度建立索引。在复合索引中，记录首先按照第一个字段排序。对于在第一个字段上取值相同的记录，系统再按照第二个字段的取值排序，以此类推。因此只有复合索引的第一个字段出现在查询条件中，该索引才可能被使用,因此将应用频度高的字段，放置在复合索引的前面，会使系统最大可能地使用此索引，发挥索引的作用。</p> \n<h2># SQL语句编写注意问题</h2> \n<blockquote> \n <p><span style=\"color: #ff0000;\">数据库系统按着从左到右的顺序来解析一个系列由 AND 连接的表达式</span>，但是<span style=\"color: #ff0000;\"> Oracle 却是个例外，它是从右向左地解析表达式</span>。可以利用数据库系统的这一特性，来将概率小的表达示放在前面，或者是如果两个表达式可能性相同，那么可将相对不复杂的表达式放在前面。这样做的话，如果第一个表达式为假的话，那么数据库系统就不必再费力去解析第二个表达式了。</p> \n</blockquote> \n<p>1.对查询进行优化，要尽量<strong>避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引</strong>。</p> \n<p>2.应尽量<strong>避免在 where 子句中对字段进行 null 值判断</strong>，否则将导致引擎放弃使用索引而进行全表扫描，如：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where num is null</pre> \n</div> \n<p>最好不要给数据库留NULL，尽可能的使用&nbsp;NOT NULL填充数据库.</p> \n<p>备注、描述、评论之类的可以设置为&nbsp;NULL，其他的，最好不要使用NULL。</p> \n<p>不要以为&nbsp;NULL&nbsp;不需要空间，比如：char(100)&nbsp;型，在字段建立时，空间就固定了，&nbsp;不管是否插入值（NULL也包含在内），都是占用&nbsp;100个字符的空间的，如果是varchar这样的变长字段，&nbsp;null&nbsp;不占用空间。</p> \n<p>可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where num = 0</pre> \n</div> \n<p>3.应尽量<strong>避免在 where 子句中使用 != 或 &lt;&gt; 操作符</strong>，否则将引擎放弃使用索引而进行全表扫描。<br>4.应尽量<strong>避免在 where 子句中使用 or 来连接条件</strong>，如果一个字段有索引，一个字段没有索引，将导致引擎放弃使用索引而进行全表扫描，如：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where num=10 or Name = \'admin\'</pre> \n</div> \n<p>可以这样查询：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where num = 10\nunion all\nselect id from t where Name = \'admin\'</pre> \n</div> \n<p>5.<strong>in 和 not in 也要慎用</strong>，否则会导致全表扫描，如：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where num in(1,2,3)</pre> \n</div> \n<p>对于<strong>连续的数值，能用 between</strong> 就不要用 in 了：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where num between 1 and 3</pre> \n</div> \n<p>很多时候<strong>用&nbsp;exists 代替 in</strong>&nbsp;是一个好的选择：</p> \n<div class=\"cnblogs_code\"> \n <pre>select num from a where num in(select num from b)</pre> \n</div> \n<p>用下面的语句替换：</p> \n<div class=\"cnblogs_code\"> \n <pre>select num from a where exists(select 1 from b where num=a.num)</pre> \n</div> \n<p>6.下面的查询也将导致全表扫描：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where name like ‘%abc%’</pre> \n</div> \n<p>若要提高效率，可以考虑全文检索。<br>7.如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where num = @num</pre> \n</div> \n<p>可以改为强制查询使用索引：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t with(index(索引名)) where num = @num</pre> \n</div> \n<p>8.应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where num/2 = 100</pre> \n</div> \n<p>应改为:</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where num = 100*2</pre> \n</div> \n<p>9.应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where substring(name,1,3) = ’abc’       -–name以abc开头的id\nselect id from t where datediff(day,createdate,’2005-11-30′) = 0    -–‘2005-11-30’    --生成的id</pre> \n</div> \n<p>应改为:</p> \n<div class=\"cnblogs_code\"> \n <pre>select id from t where name like \'abc%\'\nselect id from t where createdate &gt;= \'2005-11-30\' and createdate &lt; \'2005-12-1\'</pre> \n</div> \n<p>10.不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。<br>11.在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。<br>12.不要写一些没有意义的查询，如需要生成一个空表结构：</p> \n<div class=\"cnblogs_code\"> \n <pre>select col1,col2 into #t from t where 1=0</pre> \n</div> \n<p>这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：<br>create table #t(…)</p> \n<p>13.Update 语句，如果只更改1、2个字段，不要Update全部字段，否则频繁调用会引起明显的性能消耗，同时带来大量日志。<br>14.对于多张大数据量（这里几百条就算大了）的表JOIN，要先分页再JOIN，否则逻辑读会很高，性能很差。<br>15.select count(*) from table；这样不带任何条件的count会引起全表扫描，并且没有任何业务意义，是一定要杜绝的。</p> \n<p>16.索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有 必要。<br>17.应尽可能的避免更新 clustered 索引数据列，因为 clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。<br>18.尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连 接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。<br>19.<strong>尽可能的使用 varchar/nvarchar 代替 char/nchar</strong>&nbsp;，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。<br>20.任何地方都<strong>不要使用 select * from t ，用具体的字段列表代替“*”</strong>，不要返回用不到的任何字段。<br>21.尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。<br>22. 避免频繁创建和删除临时表，以减少系统表资源的消耗。临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件， 最好使用导出表。<br>23.在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。<br>24.如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。<br>25.尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。<br>26.使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。<br>27.与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时 间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。<br>28.在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。<br>29.尽量避免大事务操作，提高系统并发能力。<br>30.尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。</p> \n<p>&nbsp;</p> \n<p><strong>实际案例分析</strong>：拆分大的&nbsp;DELETE&nbsp;或INSERT&nbsp;语句，批量提交SQL语句<br>　　如果你需要在一个在线的网站上去执行一个大的&nbsp;DELETE&nbsp;或&nbsp;INSERT&nbsp;查询，你需要非常小心，要避免你的操作让你的整个网站停止相应。因为这两个操作是会锁表的，表一锁住了，别的操作都进不来了。<br>　　Apache&nbsp;会有很多的子进程或线程。所以，其工作起来相当有效率，而我们的服务器也不希望有太多的子进程，线程和数据库链接，这是极大的占服务器资源的事情，尤其是内存。<br>　　如果你把你的表锁上一段时间，比如30秒钟，那么对于一个有很高访问量的站点来说，这30秒所积累的访问进程/线程，数据库链接，打开的文件数，可能不仅仅会让你的WEB服务崩溃，还可能会让你的整台服务器马上挂了。<br>　　所以，如果你有一个大的处理，你一定把其拆分，使用&nbsp;LIMIT&nbsp;oracle(rownum),sqlserver(top)条件是一个好的方法。下面是一个mysql示例：</p> \n<div class=\"cnblogs_code\"> \n <pre>while(1){\n 　　//每次只做1000条\n　　 mysql_query(“delete from logs where log_date &lt;= ’2012-11-01’ limit 1000”);\n 　　if(mysql_affected_rows() == 0){<br>　　 　　//删除完成，退出！\n　　 　　break；\n　　}\n//每次暂停一段时间，释放表让其他进程/线程访问。\nusleep(50000)\n}</pre> \n</div> \n<p>&nbsp;SQL优化参考文档：<a style=\"color: #399ab2;\" href=\"http://www.jfox.info/SQL-you-hua\" target=\"_blank\">http://www.jfox.info/SQL-you-hua</a></p> \n<h2 id=\"major2\"># 针对专门操作符的调优</h2> \n<p>参考文档：<a style=\"color: #399ab2;\" href=\"http://www.ibm.com/developerworks/cn/data/library/techarticles/dm-1002limh/\" target=\"_blank\">SQL 语句性能调优</a><span style=\"color: #0000ff;\"><span style=\"color: #0000ff;\">&nbsp;</span></span></p> \n<h3 id=\"minor2.1\">与 (AND)&nbsp;</h3> \n<p>数据库系统按着从左到右的顺序来解析一个系列由 AND 连接的表达式，但是 Oracle 却是个例外，它是从右向左地解析表达式。可以利用数据库系统的这一特性，来将概率小的表达示放在前面，或者是如果两个表达式可能性相同，那么可将相对不复杂的表达式放在前面。这样做的话，如果第一个表达式为假的话，那么数据库系统就不必再费力去解析第二个表达式了。例如，可以这样转换：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE column1 = \'A\' AND column2 = \'B\'</pre> \n</div> \n<p>转换成：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE column2 = \'B\' AND column1 = \'A\'</pre> \n</div> \n<p>这里假设 column2 = \'B\'的概率较低，如果是 Oracle 数据库的话，只需将规则反过来用即可。</p> \n<h3 id=\"minor2.2\">或 (OR)</h3> \n<p>和与 (AND) 操作符相反，在用或 (OR) 操作符写 SQL 语句时，就应该将概率大的表达示放在左面，因为如果第一个表达示为假的话，OR 操作符意味着需要进行下一个表达示的解析。</p> \n<h3 id=\"minor2.3\">与 + 或</h3> \n<p>按照集合的展开法则，</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> A AND (B OR C) 与 (A AND B) OR (A AND C) 是等价表达示。</pre> \n</div> \n<p>假设有如表 3 所示的一张表，要执行一个 AND 操作符在前的表达示</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> SELECT * FROM Table1 \n \n WHERE (column1 = 1 AND column2 = \'A\') \n \n OR (column1 = 1 AND column2 = \'B\')</pre> \n</div> \n<h5 id=\"N10172\">表 3. AND+OR 查询</h5> \n<table class=\"ibm-data-table\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n <thead> \n  <tr>\n   <th>Row#</th>\n   <th>Colmun1</th>\n   <th>Column2</th>\n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>1</td> \n   <td>3</td> \n   <td>A</td> \n  </tr> \n  <tr> \n   <td>2</td> \n   <td>2</td> \n   <td>B</td> \n  </tr> \n  <tr> \n   <td>3</td> \n   <td>1</td> \n   <td>C</td> \n  </tr> \n </tbody> \n</table> \n<p>当数据库系统按照查询语进行搜索时，它按照下面的步骤执行：</p> \n<ul class=\"ibm-bullet-list\"> \n <li>索引查找 column1 = 1, 结果集 = {row 3}</li> \n <li>索引查找 column2 = ‘ A ’ , 结果集 = {row1}</li> \n <li>AND 合并结果集，结果集 = {}</li> \n <li>索引查找 column 1 = 1, 结果集 = {row 3}</li> \n <li>索引查找 column 2 = ‘ B ’ , 结果集 = {row2}</li> \n <li>AND 合并结果集，结果集 = {}</li> \n <li>OR 合并结集，结果集 = {}</li> \n</ul> \n<p>现在根据集合的展开法则，对上面的语句进行转换：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> SELECT * FROM Table1 \n\n WHERE column1 = 1 \n\n AND (column2 = \'A\' OR column2 = \'B\')</pre> \n</div> \n<p>按照新的顺序进行查搜索时，它按照下面的步骤执行：</p> \n<ul class=\"ibm-bullet-list\"> \n <li>索引查找 column2 = ‘ A ’ , 结果集 = {row1}</li> \n <li>索引查找 column 2 = ‘ B ’ , 结果集 = {row2}</li> \n <li>OR 合并结集，结果集 = {}</li> \n <li>索引查找 column1 = 1, 结果集 = {row 3}</li> \n <li>AND 合并结果集，结果集 = {}</li> \n</ul> \n<p>由此可见搜索次数少了一次。虽然一些数据库操作系统会自动的进行这样的转换，但是对于简单的查询来说，这样的转换还是有好处的。</p> \n<h3 id=\"minor2.4\">非 (NOT)</h3> \n<p>让非 (NOT) 表达示转换成更易读的形式。简单的条件能通过将比较操作符进行反转来达到转换的目的，例如：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE NOT (column1 &gt; 5)</pre> \n</div> \n<p>转换成：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE column1 &lt;= 5</pre> \n</div> \n<p>比较复杂的情况，根据集合的摩根定理：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> NOT (A AND B) = (NOT A) OR (NOT B) 和 NOT (A OR B) = (NOT A) AND (NOT B)</pre> \n</div> \n<p>根据这一定理，可以看出它可以至少二次的搜索有可能减少为一次。如下的查询条件：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE NOT (column1 &gt; 5 OR column2 = 7)</pre> \n</div> \n<p>可以转换成：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE column1 &lt;= 5 \n\n AND column2 &lt;&gt; 7</pre> \n</div> \n<p>但是，当转换成后的表达示中有不等操作符 &lt;&gt;，那么性能就会下降，毕竟，在一个值平均分布的集合中，不等的值的个数要远远大于相等的值的个数，正因为如此，一些数据库系统不会对非比较进行索引搜索，但是他们会为大于或小于进行索引搜索，所以可以将下面的查询进行如下转换：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE NOT (column1 = 0)</pre> \n</div> \n<p>转换成：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE column &lt;0 \n\n OR column &gt; 0</pre> \n</div> \n<h3 id=\"minor2.5\">IN</h3> \n<p>很多人认为如下的两个查询条件没有什么差别，因为它们返回的结果集是相同的：</p> \n<p>条件 1：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE column1 = 5 \n\n OR column1 = 6</pre> \n</div> \n<p>条件 2：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE column1 IN (5, 6)</pre> \n</div> \n<p>这样的想法并不完全正确，对于大多数的数据库操作系统来说，IN 要比 OR 执行的快。所以如果可以的话，要将 OR 换成 IN</p> \n<p>当 IN 操作符，是一系列密集的整型数字时，最好是查找哪些值不符合条件，而不是查找哪些值符合条件，因此，如下的查询条件就应该进行如下的转换：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE column1 IN (1, 3, 4, 5)</pre> \n</div> \n<p>转换成：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> ... WHERE column1 BETWEEN 1 AND 5 \n AND column1 &lt;&gt; 2</pre> \n</div> \n<p>当一系列的离散的值转换成算数表达示时，也可获得同样的性能提高。</p> \n<h3 id=\"minor2.6\">UNION</h3> \n<p>在 SQL 中，两个表的 UNION 就是两个表中不重复的值的集合，即 UNION 操作符返返回的两个或多个查询结果中不重复行的集合。这是一个很好的合并数据的方法，但是这并不是最好的方法。</p> \n<p>查询 1：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> SELECT * FROM Table1 \n\n WHERE column1 = 5 \n\n UNION \n\n SELECT * FROM Table1 \n\n WHERE column2 = 5</pre> \n</div> \n<p>查询 2：</p> \n<div class=\"codesection\"> \n <pre class=\"displaycode\"> SELECT DISTINCT * FROM Table1 \n\n WHERE column1 = 5 \n\n OR column2 = 5</pre> \n</div> \n<p>在上面的例子中，column1 和 column2 都没有索引。如果查询 2 总是比查询 1 执行的快的话，那么就可以建议总是将查询 1 转换成查询 2，但是有一种情况，这样做在一些数据库系统中可能会带来性能变差，这是由于两个优化缺陷所造成的。</p> \n<p>第一个优化缺陷就是很多优化器只优化一个 SELECT 语句中一个 WHERE 语句，所以查询 1 的两个 SELECT 语句都被执行。首先优化器根据查询条件 column1 = 5 为真来查找所有符合条件的所有行，然后据查询条件 column2 = 5 为真来查找所有符合条件的所有行，即两次表扫描，因此，如果 column1 = 5 没有索引的话，查询 1 将需要 2 倍于查询 2 所需的时间。如果 column1 = 5 有索引的话，仍然需要二次扫描，但是只有在某些数据库系统存在一个不常见的优化缺陷却将第一个优化缺陷给弥补了。当一些优化器发现查询中存在 OR 操作符时，就不使用索引查询，所以在这种情况下，并且只有在这种情况下，UNION 才比 OR 性能更高。这种情况很少见，所以仍然建议大家当待查询的列没有索引时使用 OR 来代替 UNION。</p>',NULL,0,2,1,0,1,'#问题的提出在应用系统开发初期，由于开发数据库数据比较少，对于查询SQL语句，复杂视图的的编写等体会不出SQL语句各种写法的性能优劣，但是如果将应用系统提交实际应用后，随着数据库中数据的增加，系','sql调优',1,'2020-05-27 19:57:01','2020-05-27 22:06:19'),(113,'SpringBoot 源码解析 （二）----- Spring Boot精髓：启动流程源码分析',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>本文从源代码的角度来看看Spring Boot的启动过程到底是怎么样的，为何以往纷繁复杂的配置到如今可以这么简便。</p> \n<h2 id=\"1-入口类\">入口类</h2> \n<div class=\"cnblogs_code\"> \n <pre><strong><span style=\"color: #000000;\">@SpringBootApplication </span></strong><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HelloWorldMainApplication {\n\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> main(String[] args) {\n       <strong> SpringApplication.run(HelloWorldMainApplication.</strong></span><strong><span style=\"color: #0000ff;\">class</span></strong><span style=\"color: #000000;\"><strong>, args);</strong>\n    }\n    \n}</span></pre> \n</div> \n<p>@SpringBootApplication我们上一篇文章中大概的讲过了，有兴趣的可以看看我第一篇关于SpringBoot的文章，本篇文章主要关注<strong>SpringApplication.run(HelloWorldMainApplication.</strong><strong>class</strong><strong>, args);</strong>，我们跟进去看看</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 调用静态类，参数对应的就是HelloWorldMainApplication.class以及main方法中的args</span>\n<span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> ConfigurableApplicationContext run(Class&lt;?&gt;<span style=\"color: #000000;\"> primarySource,String... args) {\n    </span><span style=\"color: #0000ff;\">return</span> run(<span style=\"color: #0000ff;\">new</span> Class&lt;?&gt;<span style=\"color: #000000;\">[] { primarySource }, args);\n}\n</span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ConfigurableApplicationContext run(Object[] sources, String[] args) {\n    </span><span style=\"color: #0000ff;\">return</span> <strong>(<span style=\"color: #0000ff;\">new</span></strong><span style=\"color: #000000;\"><strong> SpringApplication(sources)).run(args);</strong>\n}</span></pre> \n</div> \n<p>它实际上会构造一个<strong><span style=\"color: #000000;\">SpringApplication</span></strong>的实例，并把我们的启动类<strong>HelloWorldMainApplication.</strong><strong>class</strong>作为参数传进去，然后运行它的run方法</p> \n<p>SpringApplication构造器</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">public</span> SpringApplication(ResourceLoader resourceLoader, Class&lt;?&gt;<span style=\"color: #000000;\">... primarySources) {\n    </span><span style=\"color: #0000ff;\">this</span>.resourceLoader =<span style=\"color: #000000;\"> resourceLoader;\n    Assert.notNull(primarySources, </span>\"PrimarySources must not be null\"<span style=\"color: #000000;\">);\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">把HelloWorldMainApplication.class设置为属性存储起来</span>\n    <span style=\"color: #0000ff;\">this</span>.primarySources = <span style=\"color: #0000ff;\">new</span> LinkedHashSet&lt;&gt;<span style=\"color: #000000;\">(Arrays.asList(primarySources)); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置应用类型是Standard还是Web</span>\n    <span style=\"color: #0000ff;\">this</span>.webApplicationType =<span style=\"color: #000000;\"> deduceWebApplicationType(); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置初始化器(Initializer),最后会调用这些初始化器</span>\n    setInitializers((Collection) getSpringFactoriesInstances( ApplicationContextInitializer.<span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">)); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置监听器(Listener)</span>\n    setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.<span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">)); </span></strong><span style=\"color: #0000ff;\">this</span>.mainApplicationClass =<span style=\"color: #000000;\"> deduceMainApplicationClass();\n}</span></pre> \n</div> \n<p>先将HelloWorldMainApplication.class存储在this.primarySources属性中</p> \n<h3>设置应用类型</h3> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> WebApplicationType deduceWebApplicationType() {\n    </span><span style=\"color: #0000ff;\">if</span> (ClassUtils.isPresent(REACTIVE_WEB_ENVIRONMENT_CLASS, <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            </span>&amp;&amp; !ClassUtils.isPresent(MVC_WEB_ENVIRONMENT_CLASS, <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)) {\n        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> WebApplicationType.REACTIVE;\n    }\n    </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (String className : WEB_ENVIRONMENT_CLASSES) {\n        </span><span style=\"color: #0000ff;\">if</span> (!ClassUtils.isPresent(className, <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)) {\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> WebApplicationType.NONE;\n        }\n    }\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> WebApplicationType.SERVLET;\n}\n\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 相关常量</span>\n<span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">final</span> String REACTIVE_WEB_ENVIRONMENT_CLASS = \"org.springframework.\"\n        + \"web.reactive.DispatcherHandler\"<span style=\"color: #000000;\">;\n</span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">final</span> String MVC_WEB_ENVIRONMENT_CLASS = \"org.springframework.\"\n        + \"web.servlet.DispatcherServlet\"<span style=\"color: #000000;\">;\n</span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">final</span> String[] WEB_ENVIRONMENT_CLASSES = { \"javax.servlet.Servlet\"<span style=\"color: #000000;\">,\n        </span>\"org.springframework.web.context.ConfigurableWebApplicationContext\" };</pre> \n</div> \n<p>这里主要是通过类加载器判断<code>REACTIVE</code>相关的Class是否存在，如果不存在，则web环境即为<code>SERVLET</code>类型。这里设置好web环境类型，在后面会根据类型初始化对应环境。大家还记得我们第一篇文章中引入的依赖吗？</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">dependency</span><span style=\"color: #0000ff;\">&gt;</span>\n    <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">groupId</span><span style=\"color: #0000ff;\">&gt;</span>org.springframework.boot<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">groupId</span><span style=\"color: #0000ff;\">&gt;</span>\n    <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">artifactId</span><span style=\"color: #0000ff;\">&gt;</span>spring-boot-starter-web<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">artifactId</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">dependency</span><span style=\"color: #0000ff;\">&gt;</span></pre> \n</div> \n<p>spring-boot-starter-web 的pom又会引入Tomcat和spring-webmvc，如下</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">dependency</span><span style=\"color: #0000ff;\">&gt;</span>\n  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">groupId</span><span style=\"color: #0000ff;\">&gt;</span>org.springframework<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">groupId</span><span style=\"color: #0000ff;\">&gt;</span>\n  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">artifactId</span><span style=\"color: #0000ff;\">&gt;</span>spring-webmvc<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">artifactId</span><span style=\"color: #0000ff;\">&gt;</span>\n  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">version</span><span style=\"color: #0000ff;\">&gt;</span>5.0.5.RELEASE<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">version</span><span style=\"color: #0000ff;\">&gt;</span>\n  <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">scope</span><span style=\"color: #0000ff;\">&gt;</span>compile<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">scope</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">dependency</span><span style=\"color: #0000ff;\">&gt;</span></pre> \n</div> \n<p>&nbsp;我们来看看spring-webmvc这个jar包</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527200737000.png\" title=\"\" alt=\"\"></p> \n<p>很明显spring-webmvc中存在DispatcherServlet这个类，也就是我们以前SpringMvc的核心Servlet，通过类加载能加载DispatcherServlet这个类，那么我们的应用类型自然就是WebApplicationType.SERVLET</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">enum</span><span style=\"color: #000000;\"> WebApplicationType {\n    NONE,\n <strong> SERVLET,</strong>\n    REACTIVE;\n\n    </span><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> WebApplicationType() {\n    }\n}</span></pre> \n</div> \n<h3 id=\"212-设置初始化器initializer\">设置初始化器(Initializer)</h3> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置初始化器(Initializer),最后会调用这些初始化器</span>\n<strong>setInitializers((Collection) getSpringFactoriesInstances( ApplicationContextInitializer.<span style=\"color: #0000ff;\">class</span>));</strong></pre> \n</div> \n<p>我们先来看看<strong>getSpringFactoriesInstances</strong><strong>( ApplicationContextInitializer.class)</strong></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">private</span> &lt;T&gt; Collection&lt;T&gt; getSpringFactoriesInstances(Class&lt;T&gt;<span style=\"color: #000000;\"> type) {\n    </span><span style=\"color: #0000ff;\">return</span> getSpringFactoriesInstances(type, <span style=\"color: #0000ff;\">new</span> Class&lt;?&gt;<span style=\"color: #000000;\">[] {});\n}\n\n</span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 这里的入参type就是ApplicationContextInitializer.class</span></strong>\n<span style=\"color: #0000ff;\">private</span> &lt;T&gt; Collection&lt;T&gt; getSpringFactoriesInstances(Class&lt;T&gt;<span style=\"color: #000000;\"> type,\n        Class</span>&lt;?&gt;<span style=\"color: #000000;\">[] parameterTypes, Object... args) {\n    ClassLoader classLoader </span>=<span style=\"color: #000000;\"> Thread.currentThread().getContextClassLoader();\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 使用Set保存names来避免重复元素</span>\n    <strong>Set&lt;String&gt; names = <span style=\"color: #0000ff;\">new</span> LinkedHashSet&lt;&gt;</strong><span style=\"color: #000000;\"><strong>(</strong>\n            <strong>SpringFactoriesLoader.loadFactoryNames(type, classLoader)); </strong></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 根据names来进行实例化</span>\n    <strong>List&lt;T&gt; instances =<span style=\"color: #000000;\"> createSpringFactoriesInstances(type, parameterTypes, classLoader, args, names); </span></strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 对实例进行排序</span>\n<span style=\"color: #000000;\">    AnnotationAwareOrderComparator.sort(instances);\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> instances;\n}</span></pre> \n</div> \n<p>这里面首先会根据入参type读取所有的names(是一个String集合)，然后根据这个集合来完成对应的实例化操作：</p> \n<div class=\"cnblogs_code\"> \n <pre><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 入参就是ApplicationContextInitializer.class</span></strong>\n<span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> List&lt;String&gt; loadFactoryNames(Class&lt;?&gt;<span style=\"color: #000000;\"> factoryClass, ClassLoader classLoader) {\n  String factoryClassName </span>=<span style=\"color: #000000;\"> factoryClass.getName();\n\n  </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n      </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">从类路径的META-INF/spring.factories中加载所有默认的自动配置类</span></strong>\n      Enumeration&lt;URL&gt; urls = classLoader != <span style=\"color: #0000ff;\">null</span>?classLoader.getResources(\"META-INF/spring.factories\"):ClassLoader.getSystemResources(\"META-INF/spring.factories\"<span style=\"color: #000000;\">);\n      ArrayList result </span>= <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArrayList();\n\n      </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\">(urls.hasMoreElements()) {\n          URL url </span>=<span style=\"color: #000000;\"> (URL)urls.nextElement();\n          Properties properties </span>= PropertiesLoaderUtils.loadProperties(<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> UrlResource(url));\n          </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取ApplicationContextInitializer.class的所有值</span>\n          String factoryClassNames =</strong><span style=\"color: #000000;\"><strong> properties.getProperty(factoryClassName);</strong>\n          result.addAll(Arrays.asList(StringUtils.commaDelimitedListToStringArray(factoryClassNames)));\n      }\n\n      </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n  } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (IOException var8) {\n      </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> IllegalArgumentException(\"Unable to load [\" + factoryClass.getName() + \"] factories from location [\" + \"META-INF/spring.factories\" + \"]\"<span style=\"color: #000000;\">, var8);\n  }\n}</span></pre> \n</div> \n<p>这个方法会尝试从类路径的META-INF/spring.factories处读取相应配置文件，然后进行遍历，读取配置文件中Key为：org.springframework.context.ApplicationContextInitializer的value。以spring-boot-autoconfigure这个包为例，它的META-INF/spring.factories部分定义如下所示：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527200734434.png\" title=\"\" alt=\"\"></p> \n<div class=\"cnblogs_code\"> \n <pre><strong><span style=\"color: #000000;\">org.springframework.context.ApplicationContextInitializer=\\ org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer,\\ org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer</span></strong></pre> \n</div> \n<p>这两个类名会被读取出来，然后放入到Set&lt;String&gt;集合中，准备开始下面的实例化操作：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> parameterTypes: 上一步得到的names集合</span>\n<span style=\"color: #0000ff;\">private</span> &lt;T&gt; List&lt;T&gt; createSpringFactoriesInstances(Class&lt;T&gt;<span style=\"color: #000000;\"> type,\n        Class</span>&lt;?&gt;<span style=\"color: #000000;\">[] parameterTypes, ClassLoader classLoader, Object[] args,\n        Set</span>&lt;String&gt;<span style=\"color: #000000;\"> names) {\n    List</span>&lt;T&gt; instances = <span style=\"color: #0000ff;\">new</span> ArrayList&lt;T&gt;<span style=\"color: #000000;\">(names.size());\n    </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (String name : names) {\n        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n            Class</span>&lt;?&gt; instanceClass =<span style=\"color: #000000;\"> ClassUtils.forName(name, classLoader);\n            </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">确认被加载类是ApplicationContextInitializer的子类</span>\n</strong><span style=\"color: #000000;\"><strong> Assert.isAssignable(type, instanceClass);</strong>\n            Constructor</span>&lt;?&gt; constructor =<span style=\"color: #000000;\"> instanceClass.getDeclaredConstructor(parameterTypes);\n            </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">反射实例化对象</span>\n            T instance =<span style=\"color: #000000;\"> (T) BeanUtils.instantiateClass(constructor, args); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">加入List集合中</span>\n</strong><span style=\"color: #000000;\"><strong> instances.add(instance);</strong>\n        }\n        </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Throwable ex) {\n            </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> IllegalArgumentException(\n                    </span>\"Cannot instantiate \" + type + \" : \" +<span style=\"color: #000000;\"> name, ex);\n        }\n    }\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> instances;\n}</span></pre> \n</div> \n<p>确认被加载的类确实是org.springframework.context.ApplicationContextInitializer的子类，然后就是得到构造器进行初始化，最后放入到实例列表中。</p> \n<p>因此，所谓的初始化器就是org.springframework.context.ApplicationContextInitializer的实现类，这个接口是这样定义的：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">interface</span> ApplicationContextInitializer&lt;C <span style=\"color: #0000ff;\">extends</span> ConfigurableApplicationContext&gt;<span style=\"color: #000000;\"> {\n\n    </span><strong><span style=\"color: #0000ff;\">void</span></strong><span style=\"color: #000000;\"><strong> initialize(C applicationContext);</strong>\n\n}</span></pre> \n</div> \n<p>在Spring上下文被刷新之前进行初始化的操作。典型地比如在Web应用中，注册Property Sources或者是激活Profiles。Property Sources比较好理解，就是配置文件。Profiles是Spring为了在不同环境下(如DEV，TEST，PRODUCTION等)，加载不同的配置项而抽象出来的一个实体。</p> \n<h3 id=\"213-设置监听器listener\">设置监听器(Listener)</h3> \n<p>下面开始设置监听器：</p> \n<div class=\"cnblogs_code\"> \n <pre><strong>setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.<span style=\"color: #0000ff;\">class</span>));</strong></pre> \n</div> \n<p>我们还是跟进代码看看<strong>getSpringFactoriesInstances</strong></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #008000;\">//</span><strong><span style=\"color: #008000;\"> 这里的入参type是：org.springframework.context.ApplicationListener.class</span></strong>\n<span style=\"color: #0000ff;\">private</span> &lt;T&gt; Collection&lt;? <span style=\"color: #0000ff;\">extends</span> T&gt; getSpringFactoriesInstances(Class&lt;T&gt;<span style=\"color: #000000;\"> type) {\n    </span><span style=\"color: #0000ff;\">return</span> getSpringFactoriesInstances(type, <span style=\"color: #0000ff;\">new</span> Class&lt;?&gt;<span style=\"color: #000000;\">[] {});\n}\n\n</span><span style=\"color: #0000ff;\">private</span> &lt;T&gt; Collection&lt;? <span style=\"color: #0000ff;\">extends</span> T&gt; getSpringFactoriesInstances(Class&lt;T&gt;<span style=\"color: #000000;\"> type,\n        Class</span>&lt;?&gt;<span style=\"color: #000000;\">[] parameterTypes, Object... args) {\n    ClassLoader classLoader </span>=<span style=\"color: #000000;\"> Thread.currentThread().getContextClassLoader();\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Use names and ensure unique to protect against duplicates</span>\n    Set&lt;String&gt; names = <span style=\"color: #0000ff;\">new</span> LinkedHashSet&lt;String&gt;<span style=\"color: #000000;\">(\n            SpringFactoriesLoader.loadFactoryNames(type, classLoader));\n    List</span>&lt;T&gt; instances =<span style=\"color: #000000;\"> createSpringFactoriesInstances(type, parameterTypes,\n            classLoader, args, names);\n    AnnotationAwareOrderComparator.sort(instances);\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> instances;\n}</span></pre> \n</div> \n<p>可以发现，这个加载相应的类名，然后完成实例化的过程和上面在设置初始化器时如出一辙，同样，还是以spring-boot-autoconfigure这个包中的spring.factories为例，看看相应的Key-Value：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #000000;\">org.springframework.context.ApplicationListener=\\\norg.springframework.boot.autoconfigure.BackgroundPreinitializer\n\norg.springframework.context.ApplicationListener=\\\norg.springframework.boot.ClearCachesApplicationListener,\\\norg.springframework.boot.builder.ParentContextCloserApplicationListener,\\\norg.springframework.boot.context.FileEncodingApplicationListener,\\\norg.springframework.boot.context.config.AnsiOutputApplicationListener,\\\norg.springframework.boot.context.config.ConfigFileApplicationListener,\\\norg.springframework.boot.context.config.DelegatingApplicationListener,\\\norg.springframework.boot.context.logging.ClasspathLoggingApplicationListener,\\\norg.springframework.boot.context.logging.LoggingApplicationListener,\\\norg.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener</span></pre> \n</div> \n<p>这10个监听器会贯穿springBoot整个生命周期。至此，对于SpringApplication实例的初始化过程就结束了。</p> \n<h2 id=\"22-springapplicationrun方法\">SpringApplication.run方法</h2> \n<p>完成了SpringApplication实例化，下面开始调用run方法：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> ConfigurableApplicationContext run(String... args) {\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 计时工具</span>\n    StopWatch stopWatch = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StopWatch();\n    stopWatch.start();\n\n    ConfigurableApplicationContext context </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n    Collection</span>&lt;SpringBootExceptionReporter&gt; exceptionReporters = <span style=\"color: #0000ff;\">new</span> ArrayList&lt;&gt;<span style=\"color: #000000;\">();\n\n    configureHeadlessProperty();\n\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 第一步：获取并启动监听器</span>\n    SpringApplicationRunListeners listeners =<span style=\"color: #000000;\"> getRunListeners(args); listeners.starting(); </span></strong><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n        ApplicationArguments applicationArguments </span>= <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> DefaultApplicationArguments(args);\n\n        </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 第二步：根据SpringApplicationRunListeners以及参数来准备环境</span>\n        ConfigurableEnvironment environment =</strong><span style=\"color: #000000;\"><strong> prepareEnvironment(listeners,applicationArguments);</strong>\n        configureIgnoreBeanInfo(environment);\n\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 准备Banner打印器 - 就是启动Spring Boot的时候打印在console上的ASCII艺术字体</span>\n        Banner printedBanner =<span style=\"color: #000000;\"> printBanner(environment);\n\n        </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 第三步：创建Spring容器</span>\n        context =</strong><span style=\"color: #000000;\"><strong> createApplicationContext();</strong>\n\n        exceptionReporters </span>=<span style=\"color: #000000;\"> getSpringFactoriesInstances(\n                SpringBootExceptionReporter.</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">,\n                </span><span style=\"color: #0000ff;\">new</span> Class[] { ConfigurableApplicationContext.<span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> }, context);\n\n        </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 第四步：Spring容器前置处理</span>\n<span style=\"color: #000000;\"> prepareContext(context, environment, listeners, applicationArguments,printedBanner); </span></strong><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 第五步：刷新容器</span>\n<span style=\"color: #000000;\"> refreshContext(context);<br> 　　　　 </span></strong><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 第六步：Spring容器后置处理</span>\n<span style=\"color: #000000;\"> afterRefresh(context, applicationArguments); 　　　 </span></strong><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 第七步：发出结束执行的事件</span>\n<span style=\"color: #000000;\"> listeners.started(context); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 第八步：执行Runners</span>\n        <span style=\"color: #0000ff;\">this</span></strong><span style=\"color: #000000;\"><strong>.callRunners(context, applicationArguments);</strong>\n        stopWatch.stop();\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 返回容器</span>\n        <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> context;\n    }\n    </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Throwable ex) {\n        handleRunFailure(context, listeners, exceptionReporters, ex);\n        </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> IllegalStateException(ex);\n    }\n}</span></pre> \n</div> \n<ul> \n <li>第一步：获取并启动监听器</li> \n <li>第二步：根据SpringApplicationRunListeners以及参数来准备环境</li> \n <li>第三步：创建Spring容器</li> \n <li>第四步：Spring容器前置处理</li> \n <li>第五步：刷新容器</li> \n <li>第六步：Spring容器后置处理</li> \n <li>第七步：发出结束执行的事件</li> \n <li>第八步：执行Runners</li> \n</ul> \n<p>&nbsp;下面具体分析。</p> \n<h3>第一步：获取并启动监听器</h3> \n<p><strong>获取监听器</strong></p> \n<p>跟进<code>getRunListeners</code>方法：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> SpringApplicationRunListeners getRunListeners(String[] args) {\n    Class</span>&lt;?&gt;[] types = <span style=\"color: #0000ff;\">new</span> Class&lt;?&gt;[] { SpringApplication.<span style=\"color: #0000ff;\">class</span>, String[].<span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> };\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SpringApplicationRunListeners(logger, <strong>getSpringFactoriesInstances(SpringApplicationRunListener.</strong></span><strong><span style=\"color: #0000ff;\">class</span></strong>, types, <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">, args));\n}</span></pre> \n</div> \n<p>这里仍然利用了getSpringFactoriesInstances方法来获取实例，大家可以看看前面的这个方法分析，从META-INF/spring.factories中读取Key为org.springframework.boot.<strong>SpringApplicationRunListener</strong>的Values：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #000000;\">org.springframework.boot.SpringApplicationRunListener=\\\norg.springframework.boot.context.event.<strong>EventPublishingRunListener</strong></span></pre> \n</div> \n<p>getSpringFactoriesInstances中反射获取实例时会触发<code>EventPublishingRunListener</code>的构造函数，我们来看看<code>EventPublishingRunListener</code>的构造函数：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> EventPublishingRunListener <span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"><strong> SpringApplicationRunListener</strong>, Ordered {\n</span><span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> SpringApplication application;\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> String[] args;\n</span><span style=\"color: #008080;\"> 4</span>     <strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">广播器</span>\n<span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> SimpleApplicationEventMulticaster initialMulticaster; </span></strong><span style=\"color: #008080;\"> 6</span> \n<span style=\"color: #008080;\"> 7</span>     <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> EventPublishingRunListener(SpringApplication application, String[] args) {\n</span><span style=\"color: #008080;\"> 8</span>         <span style=\"color: #0000ff;\">this</span>.application =<span style=\"color: #000000;\"> application;\n</span><span style=\"color: #008080;\"> 9</span>         <span style=\"color: #0000ff;\">this</span>.args =<span style=\"color: #000000;\"> args;\n</span><span style=\"color: #008080;\">10</span>         <span style=\"color: #0000ff;\">this</span>.initialMulticaster = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimpleApplicationEventMulticaster();\n</span><span style=\"color: #008080;\">11</span>         <strong>Iterator var3 =<span style=\"color: #000000;\"> application.getListeners().iterator(); </span></strong><span style=\"color: #008080;\">12</span> \n<span style=\"color: #008080;\">13</span>         <span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\">(var3.hasNext()) {\n</span><span style=\"color: #008080;\">14</span>             ApplicationListener&lt;?&gt; listener =<span style=\"color: #000000;\"> (ApplicationListener)var3.next();\n</span><span style=\"color: #008080;\">15</span>            <strong> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将上面设置到SpringApplication的十一个监听器全部添加到SimpleApplicationEventMulticaster这个广播器中</span>\n<span style=\"color: #008080;\">16</span>             <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.initialMulticaster.addApplicationListener(listener); </span></strong><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">18</span> \n<span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">20</span>     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">略...</span>\n<span style=\"color: #008080;\">21</span> }</pre> \n</div> \n<p>我们看到<strong>EventPublishingRunListener里面有一个广播器，EventPublishingRunListener 的构造方法将SpringApplication的十一个监听器全部添加到SimpleApplicationEventMulticaster这个广播器中，</strong>我们来看看是如何添加到广播器：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">abstract</span> <span style=\"color: #0000ff;\">class</span> AbstractApplicationEventMulticaster <span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"> ApplicationEventMulticaster, BeanClassLoaderAware, BeanFactoryAware {\n</span><span style=\"color: #008080;\"> 2</span>     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">广播器的父类中存放保存监听器的内部内</span>\n<span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">final</span> AbstractApplicationEventMulticaster.ListenerRetriever defaultRetriever = <span style=\"color: #0000ff;\">new</span> AbstractApplicationEventMulticaster.ListenerRetriever(<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\"> 4</span> \n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">    @Override\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> <strong>addApplicationListener</strong>(ApplicationListener&lt;?&gt;<span style=\"color: #000000;\"> listener) {\n</span><span style=\"color: #008080;\"> 7</span>         <span style=\"color: #0000ff;\">synchronized</span> (<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.retrievalMutex) {\n</span><span style=\"color: #008080;\"> 8</span>             Object singletonTarget =<span style=\"color: #000000;\"> AopProxyUtils.getSingletonTarget(listener);\n</span><span style=\"color: #008080;\"> 9</span>             <span style=\"color: #0000ff;\">if</span> (singletonTarget <span style=\"color: #0000ff;\">instanceof</span><span style=\"color: #000000;\"> ApplicationListener) {\n</span><span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.defaultRetriever.applicationListeners.remove(singletonTarget);\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">12</span>           <strong>  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">内部类对象</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.defaultRetriever.applicationListeners.add(listener); </span></strong><span style=\"color: #008080;\">14</span>             <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.retrieverCache.clear();\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">17</span> \n<span style=\"color: #008080;\">18</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ListenerRetriever {\n</span><span style=\"color: #008080;\">19</span>       <strong>  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">保存所有的监听器</span>\n<span style=\"color: #008080;\">20</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">final</span> Set&lt;ApplicationListener&lt;?&gt;&gt; applicationListeners = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> LinkedHashSet(); </span></strong><span style=\"color: #008080;\">21</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">final</span> Set&lt;String&gt; applicationListenerBeans = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> LinkedHashSet();\n</span><span style=\"color: #008080;\">22</span>         <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">final</span> <span style=\"color: #0000ff;\">boolean</span><span style=\"color: #000000;\"> preFiltered;\n</span><span style=\"color: #008080;\">23</span> \n<span style=\"color: #008080;\">24</span>         <span style=\"color: #0000ff;\">public</span> ListenerRetriever(<span style=\"color: #0000ff;\">boolean</span><span style=\"color: #000000;\"> preFiltered) {\n</span><span style=\"color: #008080;\">25</span>             <span style=\"color: #0000ff;\">this</span>.preFiltered =<span style=\"color: #000000;\"> preFiltered;\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">27</span> \n<span style=\"color: #008080;\">28</span>         <span style=\"color: #0000ff;\">public</span> Collection&lt;ApplicationListener&lt;?&gt;&gt;<span style=\"color: #000000;\"> getApplicationListeners() {\n</span><span style=\"color: #008080;\">29</span>             LinkedList&lt;ApplicationListener&lt;?&gt;&gt; allListeners = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> LinkedList();\n</span><span style=\"color: #008080;\">30</span>             Iterator var2 = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.applicationListeners.iterator();\n</span><span style=\"color: #008080;\">31</span> \n<span style=\"color: #008080;\">32</span>             <span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\">(var2.hasNext()) {\n</span><span style=\"color: #008080;\">33</span>                 ApplicationListener&lt;?&gt; listener =<span style=\"color: #000000;\"> (ApplicationListener)var2.next();\n</span><span style=\"color: #008080;\">34</span> <span style=\"color: #000000;\">                allListeners.add(listener);\n</span><span style=\"color: #008080;\">35</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">36</span> \n<span style=\"color: #008080;\">37</span>             <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.applicationListenerBeans.isEmpty()) {\n</span><span style=\"color: #008080;\">38</span>                 BeanFactory beanFactory = AbstractApplicationEventMulticaster.<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.getBeanFactory();\n</span><span style=\"color: #008080;\">39</span>                 Iterator var8 = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.applicationListenerBeans.iterator();\n</span><span style=\"color: #008080;\">40</span> \n<span style=\"color: #008080;\">41</span>                 <span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\">(var8.hasNext()) {\n</span><span style=\"color: #008080;\">42</span>                     String listenerBeanName =<span style=\"color: #000000;\"> (String)var8.next();\n</span><span style=\"color: #008080;\">43</span> \n<span style=\"color: #008080;\">44</span>                     <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n</span><span style=\"color: #008080;\">45</span>                         ApplicationListener&lt;?&gt; listenerx = (ApplicationListener)beanFactory.getBean(listenerBeanName, ApplicationListener.<span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">46</span>                         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">this</span>.preFiltered || !<span style=\"color: #000000;\">allListeners.contains(listenerx)) {\n</span><span style=\"color: #008080;\">47</span> <span style=\"color: #000000;\">                            allListeners.add(listenerx);\n</span><span style=\"color: #008080;\">48</span> <span style=\"color: #000000;\">                        }\n</span><span style=\"color: #008080;\">49</span>                     } <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (NoSuchBeanDefinitionException var6) {\n</span><span style=\"color: #008080;\">50</span> <span style=\"color: #000000;\">                        ;\n</span><span style=\"color: #008080;\">51</span> <span style=\"color: #000000;\">                    }\n</span><span style=\"color: #008080;\">52</span> <span style=\"color: #000000;\">                }\n</span><span style=\"color: #008080;\">53</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">54</span> \n<span style=\"color: #008080;\">55</span> <span style=\"color: #000000;\">            AnnotationAwareOrderComparator.sort(allListeners);\n</span><span style=\"color: #008080;\">56</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> allListeners;\n</span><span style=\"color: #008080;\">57</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">58</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">59</span>     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">略...</span>\n<span style=\"color: #008080;\">60</span> }</pre> \n</div> \n<p>上述方法定义在SimpleApplicationEventMulticaster父类AbstractApplicationEventMulticaster中。关键代码为this.defaultRetriever.applicationListeners.add(listener);，这是一个内部类，用来保存所有的监听器。也就是在这一步，将spring.factories中的监听器传递到SimpleApplicationEventMulticaster中。我们现在知道<strong>EventPublishingRunListener中有一个广播器SimpleApplicationEventMulticaster，<strong>SimpleApplicationEventMulticaster广播器中又存放所有的监听器。</strong></strong></p> \n<p><strong>启动监听器</strong></p> \n<p>我们上面一步通过<code>getRunListeners</code>方法获取的监听器为<code>EventPublishingRunListener，从名字可以看出是启动事件发布监听器，主要用来发布启动事件。</code></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> EventPublishingRunListener <span style=\"color: #0000ff;\">implements</span><span style=\"color: #000000;\"><strong> SpringApplicationRunListener</strong>, Ordered {\n    </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> SpringApplication application;\n    </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> String[] args;\n    </span><strong><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">final</span> SimpleApplicationEventMulticaster initialMulticaster;</strong></pre> \n</div> \n<p>我们先来看看<strong>SpringApplicationRunListener这个接口</strong></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">package</span><span style=\"color: #000000;\"> org.springframework.boot;\n</span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">interface</span><span style=\"color: #000000;\"> SpringApplicationRunListener {\n\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 在run()方法开始执行时，该方法就立即被调用，可用于在初始化最早期时做一些工作</span>\n    <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> starting();\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 当environment构建完成，ApplicationContext创建之前，该方法被调用</span>\n    <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> environmentPrepared(ConfigurableEnvironment environment);\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 当ApplicationContext构建完成时，该方法被调用</span>\n    <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> contextPrepared(ConfigurableApplicationContext context);\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 在ApplicationContext完成加载，但没有被刷新前，该方法被调用</span>\n    <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> contextLoaded(ConfigurableApplicationContext context);\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 在ApplicationContext刷新并启动后，CommandLineRunners和ApplicationRunner未被调用前，该方法被调用</span>\n    <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> started(ConfigurableApplicationContext context);\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 在run()方法执行完成前该方法被调用</span>\n    <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> running(ConfigurableApplicationContext context);\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 当应用运行出错时该方法被调用</span>\n    <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> failed(ConfigurableApplicationContext context, Throwable exception);\n}</span></pre> \n</div> \n<p>SpringApplicationRunListener接口在Spring Boot 启动初始化的过程中各种状态时执行，我们也可以添加自己的监听器，在SpringBoot初始化时监听事件执行自定义逻辑，我们先来看看SpringBoot启动时第一个启动事件listeners.starting()：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #000000;\">@Override\n</span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> starting() {\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关键代码，先创建application启动事件`ApplicationStartingEvent`</span>\n   <strong> <span style=\"color: #0000ff;\">this</span>.initialMulticaster.multicastEvent</strong>(<strong><span style=\"color: #0000ff;\">new</span> ApplicationStartingEvent(<span style=\"color: #0000ff;\">this</span>.application, <span style=\"color: #0000ff;\">this</span></strong><span style=\"color: #000000;\"><strong>.args)</strong>);\n}</span></pre> \n</div> \n<p>这里先创建了一个启动事件<strong>ApplicationStartingEvent</strong>，我们继续跟进SimpleApplicationEventMulticaster，有个核心方法：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #000000;\">@Override\n</span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> multicastEvent(<span style=\"color: #0000ff;\">final</span><span style=\"color: #000000;\"> ApplicationEvent event, @Nullable ResolvableType eventType) {\n    ResolvableType type </span>= (eventType != <span style=\"color: #0000ff;\">null</span> ?<span style=\"color: #000000;\"> eventType : resolveDefaultEventType(event));\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">通过事件类型ApplicationStartingEvent获取对应的监听器</span>\n    <span style=\"color: #0000ff;\">for</span> (<span style=\"color: #0000ff;\">final</span> ApplicationListener&lt;?&gt;<span style=\"color: #000000;\"> listener : getApplicationListeners(event, type)) { </span></strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取线程池，如果为空则同步处理。这里线程池为空，还未没初始化。</span>\n        Executor executor =<span style=\"color: #000000;\"> getTaskExecutor();\n        </span><span style=\"color: #0000ff;\">if</span> (executor != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">异步发送事件</span>\n            executor.execute(() -&gt;<span style=\"color: #000000;\"> invokeListener(listener, event));\n        }\n        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {\n            </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">同步发送事件</span>\n</strong><span style=\"color: #000000;\"><strong> invokeListener(listener, event);</strong>\n        }\n    }\n}</span></pre> \n</div> \n<p>这里会根据事件类型<code>ApplicationStartingEvent</code>获取对应的监听器，在容器启动之后执行响应的动作，有如下4种监听器：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527200733048.png\" title=\"\" alt=\"\"></p> \n<p>我们选择springBoot 的日志监听器来进行讲解，核心代码如下：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #000000;\">@Override\n</span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> onApplicationEvent(ApplicationEvent event) {\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">在springboot启动的时候</span>\n    <span style=\"color: #0000ff;\">if</span> (event <span style=\"color: #0000ff;\">instanceof</span></strong><span style=\"color: #000000;\"><strong> ApplicationStartedEvent) {</strong>\n   <strong> onApplicationStartedEvent((ApplicationStartedEvent) event); } </strong></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">springboot的Environment环境准备完成的时候</span>\n    <span style=\"color: #0000ff;\">else</span> <span style=\"color: #0000ff;\">if</span> (event <span style=\"color: #0000ff;\">instanceof</span><span style=\"color: #000000;\"> ApplicationEnvironmentPreparedEvent) {\n        onApplicationEnvironmentPreparedEvent(\n                (ApplicationEnvironmentPreparedEvent) event);\n    }\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">在springboot容器的环境设置完成以后</span>\n    <span style=\"color: #0000ff;\">else</span> <span style=\"color: #0000ff;\">if</span> (event <span style=\"color: #0000ff;\">instanceof</span><span style=\"color: #000000;\"> ApplicationPreparedEvent) {\n        onApplicationPreparedEvent((ApplicationPreparedEvent) event);\n    }\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">容器关闭的时候</span>\n    <span style=\"color: #0000ff;\">else</span> <span style=\"color: #0000ff;\">if</span> (event <span style=\"color: #0000ff;\">instanceof</span> ContextClosedEvent &amp;&amp;<span style=\"color: #000000;\"> ((ContextClosedEvent) event)\n            .getApplicationContext().getParent() </span>== <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {\n        onContextClosedEvent();\n    }\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">容器启动失败的时候</span>\n    <span style=\"color: #0000ff;\">else</span> <span style=\"color: #0000ff;\">if</span> (event <span style=\"color: #0000ff;\">instanceof</span><span style=\"color: #000000;\"> ApplicationFailedEvent) {\n        onApplicationFailedEvent();\n    }\n}</span></pre> \n</div> \n<p>因为我们的事件类型为<code>ApplicationEvent</code>，所以会执行<code>onApplicationStartedEvent((ApplicationStartedEvent) event);</code>。springBoot会在运行过程中的不同阶段，发送各种事件，来执行对应监听器的对应方法。</p> \n<h3>第二步：环境构建</h3> \n<div class=\"cnblogs_code\"> \n <pre>ConfigurableEnvironment environment = <strong>prepareEnvironment</strong>(listeners,applicationArguments);</pre> \n</div> \n<p>跟进去该方法：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> ConfigurableEnvironment prepareEnvironment(\n        SpringApplicationRunListeners listeners,\n        ApplicationArguments applicationArguments) {\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取对应的ConfigurableEnvironment</span>\n    ConfigurableEnvironment environment =<span style=\"color: #000000;\"> getOrCreateEnvironment(); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">配置</span>\n<span style=\"color: #000000;\"> configureEnvironment(environment, applicationArguments.getSourceArgs()); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">发布环境已准备事件，这是第二次发布事件</span>\n</strong><span style=\"color: #000000;\"><strong> listeners.environmentPrepared(environment);</strong>\n    bindToSpringApplication(environment);\n    ConfigurationPropertySources.attach(environment);\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> environment;\n}</span></pre> \n</div> \n<p>来看一下<code>getOrCreateEnvironment()</code>方法，前面已经提到，<code>environment</code>已经被设置了<code>servlet</code>类型，所以这里创建的是环境对象是<code>StandardServletEnvironment</code>。</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">private</span><span style=\"color: #000000;\"> ConfigurableEnvironment getOrCreateEnvironment() {\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">this</span>.environment != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.environment;\n    }\n    </span><strong><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">this</span>.webApplicationType ==<span style=\"color: #000000;\"> WebApplicationType.SERVLET) { </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StandardServletEnvironment(); } </span></strong><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> StandardEnvironment();\n}</span></pre> \n</div> \n<p>接下来看一下<code>listeners.environmentPrepared(environment);</code>，上面已经提到了，这里是第二次发布事件。什么事件呢？来看一下根据事件类型获取到的监听器：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527200737371.png\" title=\"\" alt=\"\"></p> \n<p>主要来看一下<strong><code>ConfigFileApplicationListener</code></strong>，该监听器非常核心，主要用来处理项目配置。项目中的 properties 和yml文件都是其内部类所加载。具体来看一下：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527200733490.png\" title=\"\" alt=\"\"></p> \n<p>首先还是会去读<code>spring.factories</code>&nbsp;文件，<code>List&lt;EnvironmentPostProcessor&gt; postProcessors = loadPostProcessors();</code>获取的处理类有以下四种：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #000000;\"># Environment Post Processors\norg.springframework.boot.env.EnvironmentPostProcessor=\norg.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor，\norg.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor，\norg.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor</span></pre> \n</div> \n<p>在执行完上述三个监听器流程后，<code>ConfigFileApplicationListener</code>会执行该类本身的逻辑。由其内部类<code>Loader</code>加载项目制定路径下的配置文件：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">final</span> String DEFAULT_SEARCH_LOCATIONS = \"classpath:/,classpath:/config/,file:./,file:./config/\";</pre> \n</div> \n<p>至此，项目的变量配置已全部加载完毕，来一起看一下：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527200735937.png\" title=\"\" alt=\"\"></p> \n<p>这里一共6个配置文件，取值顺序由上到下。也就是说前面的配置变量会覆盖后面同名的配置变量。项目配置变量的时候需要注意这点。</p> \n<h3>第三步：创建容器</h3> \n<div class=\"cnblogs_code\"> \n <pre>context = createApplicationContext();</pre> \n</div> \n<p>继续跟进该方法：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">final</span> String DEFAULT_WEB_CONTEXT_CLASS = \"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext\"<span style=\"color: #000000;\">;\n</span><span style=\"color: #0000ff;\">protected</span><span style=\"color: #000000;\"> ConfigurableApplicationContext createApplicationContext() {\n    Class</span>&lt;?&gt; contextClass = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.applicationContextClass;\n    </span><span style=\"color: #0000ff;\">if</span> (contextClass == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {\n        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n            </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.webApplicationType) {\n            </span><span style=\"color: #0000ff;\">case</span><span style=\"color: #000000;\"> SERVLET:\n                contextClass </span>=<span style=\"color: #000000;\"> Class.forName(DEFAULT_WEB_CONTEXT_CLASS);\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\n            </span><span style=\"color: #0000ff;\">case</span><span style=\"color: #000000;\"> REACTIVE:\n                contextClass </span>=<span style=\"color: #000000;\"> Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS);\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\n            </span><span style=\"color: #0000ff;\">default</span><span style=\"color: #000000;\">:\n                contextClass </span>=<span style=\"color: #000000;\"> Class.forName(DEFAULT_CONTEXT_CLASS);\n            }\n        }\n        </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (ClassNotFoundException ex) {\n            </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> IllegalStateException(\n                    </span>\"Unable create a default ApplicationContext, \"\n                            + \"please specify an ApplicationContextClass\"<span style=\"color: #000000;\">,\n                    ex);\n        }\n    }\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass);\n}</span></pre> \n</div> \n<p>这里创建容器的类型 还是根据<code>webApplicationType</code>进行判断的，该类型为<code>SERVLET</code>类型，所以会通过反射装载对应的字节码，也就是<strong>AnnotationConfigServletWebServerApplicationContext</strong></p> \n<h3><strong>第四步：Spring容器前置处理</strong></h3> \n<p>这一步主要是在容器刷新之前的准备动作。包含一个非常关键的操作：<strong>将启动类注入容器，为后续开启自动化配置奠定基础。</strong></p> \n<div class=\"cnblogs_code\"> \n <pre><strong>prepareContext</strong>(context, environment, listeners, applicationArguments,printedBanner);</pre> \n</div> \n<p>继续跟进该方法：</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> prepareContext(ConfigurableApplicationContext context,\n        ConfigurableEnvironment environment, SpringApplicationRunListeners listeners,\n        ApplicationArguments applicationArguments, Banner printedBanner) {\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置容器环境，包括各种变量</span>\n<span style=\"color: #000000;\"> context.setEnvironment(environment); </span></strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行容器后置处理</span>\n<span style=\"color: #000000;\">    postProcessApplicationContext(context);\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行容器中的ApplicationContextInitializer（包括 spring.factories和自定义的实例）</span>\n<span style=\"color: #000000;\"> applyInitializers(context); 　　</span></strong><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">发送容器已经准备好的事件，通知各监听器</span>\n<span style=\"color: #000000;\"> listeners.contextPrepared(context); </span></strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">注册启动参数bean，这里将容器指定的参数封装成bean，注入容器</span>\n    context.getBeanFactory().registerSingleton(\"springApplicationArguments\"<span style=\"color: #000000;\">,\n            applicationArguments);\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置banner</span>\n    <span style=\"color: #0000ff;\">if</span> (printedBanner != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {\n        context.getBeanFactory().registerSingleton(</span>\"springBootBanner\"<span style=\"color: #000000;\">, printedBanner);\n    }\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取我们的启动类指定的参数，可以是多个</span>\n    Set&lt;Object&gt; sources =</strong><span style=\"color: #000000;\"><strong> getAllSources();</strong>\n    Assert.notEmpty(sources, </span>\"Sources must not be empty\"<span style=\"color: #000000;\">);\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">加载我们的启动类，将启动类注入容器</span>\n    load(context, sources.toArray(<span style=\"color: #0000ff;\">new</span> Object[0<span style=\"color: #000000;\">])); </span></strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">发布容器已加载事件。</span>\n<span style=\"color: #000000;\">    listeners.contextLoaded(context);\n}</span></pre> \n</div> \n<p><strong>调用初始化器</strong></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> applyInitializers(ConfigurableApplicationContext context) {\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 1. 从SpringApplication类中的initializers集合获取所有的ApplicationContextInitializer</span>\n    <span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> (ApplicationContextInitializer initializer : getInitializers()) { </span></strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 2. 循环调用ApplicationContextInitializer中的initialize方法</span>\n        Class&lt;?&gt; requiredType =<span style=\"color: #000000;\"> GenericTypeResolver.resolveTypeArgument(\n                initializer.getClass(), ApplicationContextInitializer.</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">);\n        Assert.isInstanceOf(requiredType, context, </span>\"Unable to call initializer.\"<span style=\"color: #000000;\">);\n      <strong> initializer.initialize(context);</strong>\n    }\n}</span></pre> \n</div> \n<p>这里终于用到了在创建SpringApplication实例时设置的初始化器了，依次对它们进行遍历，并调用initialize方法。我们也可以自定义初始化器，并实现<strong>initialize</strong>方法，然后放入META-INF/spring.factories配置文件中Key为：org.springframework.context.ApplicationContextInitializer的value中，这里我们自定义的初始化器就会被调用，是我们项目初始化的一种方式</p> \n<p><strong>加载启动指定类（重点）</strong></p> \n<p>大家先回到文章最开始看看，在创建<strong>SpringApplication</strong>实例时，先将<strong>HelloWorldMainApplication.class</strong>存储在this.primarySources属性中，现在就是用到这个属性的时候了，我们来看看<strong>getAllSources（）</strong></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">public</span> Set&lt;Object&gt;<span style=\"color: #000000;\"> getAllSources() {\n    Set</span>&lt;Object&gt; allSources = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> LinkedHashSet();\n    </span><span style=\"color: #0000ff;\">if</span> (!CollectionUtils.isEmpty(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.primarySources)) {\n        </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取primarySources属性，也就是之前存储的HelloWorldMainApplication.class</span>\n        allSources.addAll(<span style=\"color: #0000ff;\">this</span></strong><span style=\"color: #000000;\"><strong>.primarySources);</strong>\n    }\n\n    </span><span style=\"color: #0000ff;\">if</span> (!CollectionUtils.isEmpty(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.sources)) {\n        allSources.addAll(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.sources);\n    }\n\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> Collections.unmodifiableSet(allSources);\n}</span></pre> \n</div> \n<p>很明显，获取了this.primarySources属性，也就是我们的启动类<strong>HelloWorldMainApplication.class，</strong>我们接着看load(context, sources.toArray(new Object[0]));</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> load(ApplicationContext context, Object[] sources) {\n    BeanDefinitionLoader loader </span>=<span style=\"color: #000000;\"> createBeanDefinitionLoader(getBeanDefinitionRegistry(context), sources);\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">this</span>.beanNameGenerator != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {\n        loader.setBeanNameGenerator(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.beanNameGenerator);\n    }\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">this</span>.resourceLoader != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {\n        loader.setResourceLoader(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.resourceLoader);\n    }\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">this</span>.environment != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">) {\n        loader.setEnvironment(</span><span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.environment);\n    }\n    loader.load();\n}\n\n</span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">int</span> load(Class&lt;?&gt;<span style=\"color: #000000;\"> source) {\n    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (isGroovyPresent()\n            </span>&amp;&amp; GroovyBeanDefinitionSource.<span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">.isAssignableFrom(source)) {\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Any GroovyLoaders added in beans{} DSL can contribute beans here</span>\n        GroovyBeanDefinitionSource loader =<span style=\"color: #000000;\"> BeanUtils.instantiateClass(source,\n                GroovyBeanDefinitionSource.</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">);\n        load(loader);\n    }\n    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (isComponent(source)) {\n        </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">以注解的方式，将启动类bean信息存入beanDefinitionMap，也就是将HelloWorldMainApplication.class存入了beanDefinitionMap</span>\n        <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.annotatedReader.register(source); </span></strong><span style=\"color: #0000ff;\">return</span> 1<span style=\"color: #000000;\">;\n    }\n    </span><span style=\"color: #0000ff;\">return</span> 0<span style=\"color: #000000;\">;\n}</span></pre> \n</div> \n<p><code>启动类</code><strong>HelloWorldMainApplication.class</strong><code>被加载到 beanDefinitionMap中，后续该启动类将作为开启自动化配置的入口，后面一篇文章我会详细的分析，启动类是如何加载，以及自动化配置开启的详细流程。</code></p> \n<p><strong>通知监听器，容器已准备就绪</strong></p> \n<div class=\"cnblogs_code\"> \n <pre>listeners.contextLoaded(context);</pre> \n</div> \n<p>主还是针对一些日志等监听器的响应处理。</p> \n<h3>第五步：刷新容器</h3> \n<p>执行到这里，springBoot相关的处理工作已经结束，接下的工作就交给了spring。我们来看看<strong>refreshContext(context);</strong></p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> refresh(ApplicationContext applicationContext) {\n    Assert.isInstanceOf(AbstractApplicationContext.</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">, applicationContext);\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">调用创建的容器applicationContext中的refresh()方法</span>\n<span style=\"color: #000000;\">    ((AbstractApplicationContext)applicationContext).refresh();\n}\n</span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> refresh() <span style=\"color: #0000ff;\">throws</span><span style=\"color: #000000;\"> BeansException, IllegalStateException {\n    </span><span style=\"color: #0000ff;\">synchronized</span> (<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.startupShutdownMonitor) {\n        </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n         * 刷新上下文环境\n         </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n        prepareRefresh();\n\n        </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n         * 初始化BeanFactory，解析XML，相当于之前的XmlBeanFactory的操作，\n         </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n        ConfigurableListableBeanFactory beanFactory </span>=<span style=\"color: #000000;\"> obtainFreshBeanFactory();\n\n        </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n         * 为上下文准备BeanFactory，即对BeanFactory的各种功能进行填充，如常用的注解@Autowired @Qualifier等\n         * 添加ApplicationContextAwareProcessor处理器\n         * 在依赖注入忽略实现*Aware的接口，如EnvironmentAware、ApplicationEventPublisherAware等\n         * 注册依赖，如一个bean的属性中含有ApplicationEventPublisher(beanFactory)，则会将beanFactory的实例注入进去\n         </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n        prepareBeanFactory(beanFactory);\n\n        </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n            </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n             * 提供子类覆盖的额外处理，即子类处理自定义的BeanFactoryPostProcess\n             </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n            postProcessBeanFactory(beanFactory);\n\n            </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n             * 激活各种BeanFactory处理器,包括BeanDefinitionRegistryBeanFactoryPostProcessor和普通的BeanFactoryPostProcessor\n             * 执行对应的postProcessBeanDefinitionRegistry方法 和  postProcessBeanFactory方法\n             </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n            invokeBeanFactoryPostProcessors(beanFactory);\n\n            </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n             * 注册拦截Bean创建的Bean处理器，即注册BeanPostProcessor，不是BeanFactoryPostProcessor，注意两者的区别\n             * 注意，这里仅仅是注册，并不会执行对应的方法，将在bean的实例化时执行对应的方法\n             </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n            registerBeanPostProcessors(beanFactory);\n\n            </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n             * 初始化上下文中的资源文件，如国际化文件的处理等\n             </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n            initMessageSource();\n\n            </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n             * 初始化上下文事件广播器，并放入applicatioEventMulticaster,如ApplicationEventPublisher\n             </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n            initApplicationEventMulticaster();\n\n            </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n             * 给子类扩展初始化其他Bean\n             </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n            onRefresh();\n\n            </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n             * 在所有bean中查找listener bean，然后注册到广播器中\n             </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n            registerListeners();\n\n            </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n             * 设置转换器\n             * 注册一个默认的属性值解析器\n             * 冻结所有的bean定义，说明注册的bean定义将不能被修改或进一步的处理\n             * 初始化剩余的非惰性的bean，即初始化非延迟加载的bean\n             </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n            finishBeanFactoryInitialization(beanFactory);\n\n            </span><span style=\"color: #008000;\">/**</span><span style=\"color: #008000;\">\n             * 通过spring的事件发布机制发布ContextRefreshedEvent事件，以保证对应的监听器做进一步的处理\n             * 即对那种在spring启动后需要处理的一些类，这些类实现了ApplicationListener&lt;ContextRefreshedEvent&gt;，\n             * 这里就是要触发这些类的执行(执行onApplicationEvent方法)\n             * 另外，spring的内置Event有ContextClosedEvent、ContextRefreshedEvent、ContextStartedEvent、ContextStoppedEvent、RequestHandleEvent\n             * 完成初始化，通知生命周期处理器lifeCycleProcessor刷新过程，同时发出ContextRefreshEvent通知其他人\n             </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\n            finishRefresh();\n        }\n\n        </span><span style=\"color: #0000ff;\">finally</span><span style=\"color: #000000;\"> {\n    \n            resetCommonCaches();\n        }\n    }\n}</span></pre> \n</div> \n<p><code>refresh</code>方法在spring整个源码体系中举足轻重，是实现 ioc 和 aop的关键。我之前也有文章分析过这个过程，大家可以去看看</p> \n<h3>第六步：Spring容器后置处理</h3> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> afterRefresh(ConfigurableApplicationContext context,\n        ApplicationArguments args) {\n}</span></pre> \n</div> \n<p>扩展接口，设计模式中的模板方法，默认为空实现。如果有自定义需求，可以重写该方法。比如打印一些启动结束log，或者一些其它后置处理。</p> \n<h3>第七步：发出结束执行的事件</h3> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> started(ConfigurableApplicationContext context) {\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里就是获取的EventPublishingRunListener</span>\n    Iterator var2 = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">.listeners.iterator();\n\n    </span><span style=\"color: #0000ff;\">while</span><span style=\"color: #000000;\">(var2.hasNext()) {\n        SpringApplicationRunListener listener </span>=<span style=\"color: #000000;\"> (SpringApplicationRunListener)var2.next();\n        </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行EventPublishingRunListener的started方法</span>\n</strong><span style=\"color: #000000;\"><strong> listener.started(context);</strong>\n    }\n}\n\n</span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> started(ConfigurableApplicationContext context) {\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建ApplicationStartedEvent事件，并且发布事件 </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">我们看到是执行的ConfigurableApplicationContext这个容器的publishEvent方法，和前面的starting是不同的</span>\n    context.publishEvent(<span style=\"color: #0000ff;\">new</span> ApplicationStartedEvent(<span style=\"color: #0000ff;\">this</span>.application, <span style=\"color: #0000ff;\">this</span></strong><span style=\"color: #000000;\"><strong>.args, context));</strong>\n}</span></pre> \n</div> \n<p>获取EventPublishingRunListener监听器，并执行其started方法，并且将创建的Spring容器传进去了，创建一个ApplicationStartedEvent事件，并执行ConfigurableApplicationContext 的publishEvent方法，也就是说这里是在Spring容器中发布事件，并不是在SpringApplication中发布事件，和前面的starting是不同的，前面的starting是直接向SpringApplication中的11个监听器发布启动事件。</p> \n<h3>第八步：执行Runners</h3> \n<p>我们再来看看最后一步<strong>callRunners</strong>(context, applicationArguments);</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> callRunners(ApplicationContext context, ApplicationArguments args) {\n    List</span>&lt;Object&gt; runners = <span style=\"color: #0000ff;\">new</span> ArrayList&lt;Object&gt;<span style=\"color: #000000;\">();\n    </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取容器中所有的ApplicationRunner的Bean实例</span>\n    runners.addAll(context.getBeansOfType(ApplicationRunner.<span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\">).values()); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取容器中所有的CommandLineRunner的Bean实例</span>\n    runners.addAll(context.getBeansOfType(CommandLineRunner.<span style=\"color: #0000ff;\">class</span></strong><span style=\"color: #000000;\"><strong>).values());</strong>\n    AnnotationAwareOrderComparator.sort(runners);\n    </span><span style=\"color: #0000ff;\">for</span> (Object runner : <span style=\"color: #0000ff;\">new</span> LinkedHashSet&lt;Object&gt;<span style=\"color: #000000;\">(runners)) {\n        </span><span style=\"color: #0000ff;\">if</span> (runner <span style=\"color: #0000ff;\">instanceof</span><span style=\"color: #000000;\"> ApplicationRunner) {\n            </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行ApplicationRunner的run方法</span>\n</strong><span style=\"color: #000000;\"><strong> callRunner((ApplicationRunner) runner, args);</strong>\n        }\n        </span><span style=\"color: #0000ff;\">if</span> (runner <span style=\"color: #0000ff;\">instanceof</span><span style=\"color: #000000;\"> CommandLineRunner) {\n            </span><strong><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行CommandLineRunner的run方法</span>\n</strong><span style=\"color: #000000;\"><strong> callRunner((CommandLineRunner) runner, args);</strong>\n        }\n    }\n}</span></pre> \n</div> \n<p>如果是ApplicationRunner的话,则执行如下代码:</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> callRunner(ApplicationRunner runner, ApplicationArguments args) {\n    </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n     <strong> runner.run(args);</strong>\n    } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception var4) {\n        </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> IllegalStateException(\"Failed to execute ApplicationRunner\"<span style=\"color: #000000;\">, var4);\n    }\n}</span></pre> \n</div> \n<p>如果是CommandLineRunner的话,则执行如下代码:</p> \n<div class=\"cnblogs_code\"> \n <pre><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> callRunner(CommandLineRunner runner, ApplicationArguments args) {\n    </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\n        runner.run(args.getSourceArgs());\n    } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception var4) {\n        </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> IllegalStateException(\"Failed to execute CommandLineRunner\"<span style=\"color: #000000;\">, var4);\n    }\n}</span></pre> \n</div> \n<p>我们也可以自定义一些ApplicationRunner或者CommandLineRunner，实现其run方法，并注入到Spring容器中,在SpringBoot启动完成后，会执行所有的runner的run方法</p> \n<p>至此，SpringApplication大概分析了一遍，还有很多细节和核心留在下面文章中讲。</p> \n<p>&nbsp;</p> \n<p>&nbsp;</p> \n<p>&nbsp;</p> \n<p>&nbsp;</p>',NULL,0,2,1,0,1,'本文从源代码的角度来看看SpringBoot的启动过程到底是怎么样的，为何以往纷繁复杂的配置到如今可以这么简便。入口类@SpringBootApplicationpublicclassHe','SpringBoot',1,'2020-05-27 20:07:38','2020-05-27 22:05:42'),(114,'扒一扒JVM的垃圾回收机制，下次面试你准备好了吗',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>  相信和小编一样的程序猿们在日常工作或面试当中经常会遇到JVM的垃圾回收问题，有没有在夜深人静的时候详细捋一捋JVM垃圾回收机制中的知识点呢？没时间捋也没关系，因为小编接下来会给你捋一捋。</p> \n<!-- TOC --> \n<ul> \n <li><a href=\"#%E4%B8%80----%E6%8A%80%E6%9C%AF%E8%83%8C%E6%99%AF%E4%BD%A0%E8%A6%81%E4%BA%86%E8%A7%A3%E5%90%A7\">一、 技术背景你要了解吧</a></li> \n <li>[二、 哪些内存需要回收？](#二 哪些内存需要回收) \n  <ul> \n   <li><a href=\"#21-%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0%E7%AE%97%E6%B3%95\">2.1 引用计数算法</a> \n    <ul> \n     <li><a href=\"#211-%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90\">2.1.1 算法分析</a></li> \n     <li><a href=\"#212-%E4%BC%98%E7%BC%BA%E7%82%B9\">2.1.2 优缺点</a></li> \n     <li><a href=\"#213-%E6%98%AF%E4%B8%8D%E6%98%AF%E5%BE%88%E6%97%A0%E8%B6%A3%E6%9D%A5%E6%AE%B5%E4%BB%A3%E7%A0%81%E5%8E%8B%E5%8E%8B%E6%83%8A\">2.1.3 是不是很无趣，来段代码压压惊</a></li> \n    </ul> </li> \n   <li><a href=\"#22-%E5%8F%AF%E8%BE%BE%E6%80%A7%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95\">2.2 可达性分析算法</a></li> \n   <li><a href=\"#23-java%E4%B8%AD%E7%9A%84%E5%BC%95%E7%94%A8%E4%BD%A0%E4%BA%86%E8%A7%A3%E5%A4%9A%E5%B0%91\">2.3 Java中的引用你了解多少</a></li> \n   <li><a href=\"#24-%E5%AF%B9%E8%B1%A1%E6%AD%BB%E4%BA%A1%E8%A2%AB%E5%9B%9E%E6%94%B6%E5%89%8D%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E6%AC%A1%E6%8C%A3%E6%89%8E\">2.4 对象死亡（被回收）前的最后一次挣扎</a></li> \n   <li><a href=\"#25-%E6%96%B9%E6%B3%95%E5%8C%BA%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E9%9C%80%E8%A6%81%E5%9B%9E%E6%94%B6\">2.5 方法区如何判断是否需要回收</a></li> \n  </ul> </li> \n <li><a href=\"#%E4%B8%89%E5%B8%B8%E7%94%A8%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95\">三、常用的垃圾收集算法</a> \n  <ul> \n   <li><a href=\"#31-%E6%A0%87%E8%AE%B0-%E6%B8%85%E9%99%A4%E7%AE%97%E6%B3%95\">3.1 标记-清除算法</a></li> \n   <li><a href=\"#32-%E5%A4%8D%E5%88%B6%E7%AE%97%E6%B3%95\">3.2 复制算法</a></li> \n   <li><a href=\"#33-%E6%A0%87%E8%AE%B0-%E6%95%B4%E7%90%86%E7%AE%97%E6%B3%95\">3.3 标记-整理算法</a></li> \n   <li><a href=\"#34-%E5%88%86%E4%BB%A3%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95\">3.4 分代收集算法</a> \n    <ul> \n     <li><a href=\"#341-%E5%B9%B4%E8%BD%BB%E4%BB%A3young-generation%E7%9A%84%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95\">3.4.1 年轻代（Young Generation）的回收算法</a></li> \n     <li><a href=\"#342-%E5%B9%B4%E8%80%81%E4%BB%A3old-generation%E7%9A%84%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95\">3.4.2 年老代（Old Generation）的回收算法</a></li> \n     <li><a href=\"#343-%E6%8C%81%E4%B9%85%E4%BB%A3permanent-generation%E7%9A%84%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95\">3.4.3 持久代（Permanent Generation）的回收算法</a></li> \n    </ul> </li> \n  </ul> </li> \n <li><a href=\"#%E5%9B%9B%E5%B8%B8%E8%A7%81%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8\">四、常见的垃圾收集器</a></li> \n <li><a href=\"#%E4%BA%94gc%E6%98%AF%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E8%A7%A6%E5%8F%91%E7%9A%84%E9%9D%A2%E8%AF%95%E6%9C%80%E5%B8%B8%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98%E4%B9%8B%E4%B8%80\">五、GC是什么时候触发的（面试最常见的问题之一）</a> \n  <ul> \n   <li><a href=\"#51-scavenge-gc\">5.1 Scavenge GC</a></li> \n   <li><a href=\"#52-full-gc\">5.2 Full GC</a></li> \n  </ul> </li> \n <li><a href=\"#%E7%BB%93%E6%9D%9F%E8%AF%AD\">结束语</a></li> \n</ul> \n<!-- /TOC --> \n<h2 id=\"一、----技术背景你要了解吧\">一、 技术背景你要了解吧</h2> \n<p>  按照套路是要先装装X，谈谈JVM垃圾回收的前世今生的。说起垃圾回收（GC），大部分人都把这项技术当做Java语言的伴生产物。事实上，GC的历史比Java久远，早在1960年Lisp这门语言中就使用了内存动态分配和垃圾回收技术。设计和优化C++这门语言的专家们要长点心啦~~</p> \n<h2 id=\"二、-哪些内存需要回收？\">二、 哪些内存需要回收？</h2> \n<p>  猿们都知道JVM的内存结构包括五大区域：程序计数器、虚拟机栈、本地方法栈、堆区、方法区。其中程序计数器、虚拟机栈、本地方法栈3个区域随线程而生、随线程而灭，因此这几个区域的内存分配和回收都具备确定性，就不需要过多考虑回收的问题，因为方法结束或者线程结束时，内存自然就跟随着回收了。而Java堆区和方法区则不一样、不一样!(怎么不一样说的朗朗上口)，这部分内存的分配和回收是动态的，正是垃圾收集器所需关注的部分。</p> \n<p>  垃圾收集器在对堆区和方法区进行回收前，首先要确定这些区域的对象哪些可以被回收，哪些暂时还不能回收，这就要用到判断对象是否存活的算法！（面试官肯定没少问你吧）</p> \n<h3 id=\"21-引用计数算法\">2.1 引用计数算法</h3> \n<h4 id=\"211-算法分析\">2.1.1 算法分析</h4> \n<p>  引用计数是垃圾收集器中的早期策略。在这种方法中，堆中每个对象实例都有一个引用计数。当一个对象被创建时，就将该对象实例分配给一个变量，该变量计数设置为1。当任何其它变量被赋值为这个对象的引用时，计数加1（a = b,则b引用的对象实例的计数器+1），但当一个对象实例的某个引用超过了生命周期或者被设置为一个新值时，对象实例的引用计数器减1。任何引用计数器为0的对象实例可以被当作垃圾收集。当一个对象实例被垃圾收集时，它引用的任何对象实例的引用计数器减1。</p> \n<h4 id=\"212-优缺点\">2.1.2 优缺点</h4> \n<p><strong>优点</strong>：引用计数收集器可以很快的执行，交织在程序运行中。对程序需要不被长时间打断的实时环境比较有利。</p> \n<p><strong>缺点</strong>：无法检测出循环引用。如父对象有一个对子对象的引用，子对象反过来引用父对象。这样，他们的引用计数永远不可能为0。</p> \n<h4 id=\"213-是不是很无趣，来段代码压压惊\">2.1.3 是不是很无趣，来段代码压压惊</h4> \n<pre><code class=\"language-java\">public class ReferenceFindTest {\n    public static void main(String[] args) {\n        MyObject object1 = new MyObject();\n        MyObject object2 = new MyObject();\n          \n        object1.object = object2;\n        object2.object = object1;\n          \n        object1 = null;\n        object2 = null;\n    }\n}\n</code></pre> \n<p>  这段代码是用来验证引用计数算法不能检测出循环引用。最后面两句将<code>object1</code>和<code>object2</code>赋值为<code>null</code>，也就是说<code>object1</code>和<code>object2</code>指向的对象已经不可能再被访问，但是由于它们互相引用对方，导致它们的引用计数器都不为0，那么垃圾收集器就永远不会回收它们。</p> \n<h3 id=\"22-可达性分析算法\">2.2 可达性分析算法</h3> \n<p>  可达性分析算法是从离散数学中的图论引入的，程序把所有的引用关系看作一张图，从一个节点GC ROOT开始，寻找对应的引用节点，找到这个节点以后，继续寻找这个节点的引用节点，当所有的引用节点寻找完毕之后，剩余的节点则被认为是没有被引用到的节点，即无用的节点，无用的节点将会被判定为是可回收的对象。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201425636.jpg\" title=\"\" alt=\"\"></p> \n<p>  在Java语言中，可作为GC Roots的对象包括下面几种：</p> \n<p>  a) 虚拟机栈中引用的对象（栈帧中的本地变量表）；</p> \n<p>  b) 方法区中类静态属性引用的对象；</p> \n<p>  c) 方法区中常量引用的对象；</p> \n<p>  d) 本地方法栈中JNI（Native方法）引用的对象。</p> \n<h3 id=\"23-java中的引用你了解多少\">2.3 Java中的引用你了解多少</h3> \n<p>  无论是通过引用计数算法判断对象的引用数量，还是通过可达性分析算法判断对象的引用链是否可达，判定对象是否存活都与“引用”有关。在Java语言中，将引用又分为强引用、软引用、弱引用、虚引用4种，这四种引用强度依次逐渐减弱。</p> \n<ul> \n <li><font color=\"#0099ff\" size=\"4\" face=\"黑体\">强引用</font></li> \n</ul> \n<p>  在程序代码中普遍存在的，类似 <code>Object obj = new Object()</code> 这类引用，只要强引用还存在，垃圾收集器永远不会回收掉被引用的对象。</p> \n<ul> \n <li><font color=\"#0099ff\" size=\"4\" face=\"黑体\">软引用</font></li> \n</ul> \n<p>  用来描述一些还有用但并非必须的对象。对于软引用关联着的对象，在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行第二次回收。如果这次回收后还没有足够的内存，才会抛出内存溢出异常。</p> \n<ul> \n <li><font color=\"#0099ff\" size=\"4\" face=\"黑体\">弱引用</font></li> \n</ul> \n<p>  也是用来描述非必需对象的，但是它的强度比软引用更弱一些，被弱引用关联的对象只能生存到下一次垃圾收集发生之前。当垃圾收集器工作时，无论当前内存是否足够，都会回收掉只被弱引用关联的对象。</p> \n<ul> \n <li><font color=\"#0099ff\" size=\"4\" face=\"黑体\">虚引用</font></li> \n</ul> \n<p>  也叫幽灵引用或幻影引用（名字真会取，很魔幻的样子），是最弱的一种引用关系。一个对象是否有虚引用的存在，完全不会对其生存时间构成影响，也无法通过虚引用来取得一个对象实例。它的作用是能在这个对象被收集器回收时收到一个系统通知。</p> \n<p>  不要被概念吓到，也别担心，还没跑题，再深入，可就不好说了。小编罗列这四个概念的目的是为了说明，无论引用计数算法还是可达性分析算法都是基于强引用而言的。</p> \n<h3 id=\"24-对象死亡（被回收）前的最后一次挣扎\">2.4 对象死亡（被回收）前的最后一次挣扎</h3> \n<p>  即使在可达性分析算法中不可达的对象，也并非是“非死不可”，这时候它们暂时处于“缓刑”阶段，要真正宣告一个对象死亡，至少要经历两次标记过程。</p> \n<p>  <strong>第一次标记</strong>：如果对象在进行可达性分析后发现没有与GC Roots相连接的引用链，那它将会被第一次标记；</p> \n<p>  <strong>第二次标记</strong>：第一次标记后接着会进行一次筛选，筛选的条件是此对象是否有必要执行<code>finalize()</code>方法。在<code>finalize()</code>方法中没有重新与引用链建立关联关系的，将被进行第二次标记。</p> \n<p>  第二次标记成功的对象将真的会被回收，如果对象在<code>finalize()</code>方法中重新与引用链建立了关联关系，那么将会逃离本次回收，继续存活。猿们还跟的上吧，嘿嘿。</p> \n<h3 id=\"25-方法区如何判断是否需要回收\">2.5 方法区如何判断是否需要回收</h3> \n<p>  猿们，方法区存储内容是否需要回收的判断可就不一样咯。方法区主要回收的内容有：废弃常量和无用的类。对于废弃常量也可通过引用的可达性来判断，但是对于无用的类则需要同时满足下面3个条件：</p> \n<ul> \n <li>该类所有的实例都已经被回收，也就是Java堆中不存在该类的任何实例；</li> \n <li>加载该类的<code>ClassLoader</code>已经被回收；</li> \n <li>该类对应的<code>java.lang.Class</code>对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法。</li> \n</ul> \n<br> \n<font color=\"#0099ff\" size=\"5\" face=\"黑体\">讲了半天，主角终于要粉墨登场了。</font> \n<br> \n<h2 id=\"三、常用的垃圾收集算法\">三、常用的垃圾收集算法</h2> \n<h3 id=\"31-标记-清除算法\">3.1 标记-清除算法</h3> \n<p>  标记-清除算法采用从根集合（GC Roots）进行扫描，对存活的对象进行标记，标记完毕后，再扫描整个空间中未被标记的对象，进行回收，如下图所示。标记-清除算法不需要进行对象的移动，只需对不存活的对象进行处理，在存活对象比较多的情况下极为高效，但由于标记-清除算法直接回收不存活的对象，因此会造成内存碎片。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201425908.jpg\" title=\"\" alt=\"\"></p> \n<h3 id=\"32-复制算法\">3.2 复制算法</h3> \n<p>  复制算法的提出是为了克服句柄的开销和解决内存碎片的问题。它开始时把堆分成 一个对象 面和多个空闲面， 程序从对象面为对象分配空间，当对象满了，基于copying算法的垃圾 收集就从根集合（GC Roots）中扫描活动对象，并将每个 活动对象复制到空闲面(使得活动对象所占的内存之间没有空闲洞)，这样空闲面变成了对象面，原来的对象面变成了空闲面，程序会在新的对象面中分配内存。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201426671.jpg\" title=\"\" alt=\"\"></p> \n<h3 id=\"33-标记-整理算法\">3.3 标记-整理算法</h3> \n<p>  标记-整理算法采用标记-清除算法一样的方式进行对象的标记，但在清除时不同，在回收不存活的对象占用的空间后，会将所有的存活对象往左端空闲空间移动，并更新对应的指针。标记-整理算法是在标记-清除算法的基础上，又进行了对象的移动，因此成本更高，但是却解决了内存碎片的问题。具体流程见下图：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201426803.jpg\" title=\"\" alt=\"\"></p> \n<h3 id=\"34-分代收集算法\">3.4 分代收集算法</h3> \n<p>  分代收集算法是目前大部分JVM的垃圾收集器采用的算法。它的核心思想是根据对象存活的生命周期将内存划分为若干个不同的区域。一般情况下将堆区划分为老年代（Tenured Generation）和新生代（Young Generation），在堆区之外还有一个代就是永久代（Permanet Generation）。老年代的特点是每次垃圾收集时只有少量对象需要被回收，而新生代的特点是每次垃圾回收时都有大量的对象需要被回收，那么就可以根据不同代的特点采取最适合的收集算法。</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201427169.jpg\" title=\"\" alt=\"\"></p> \n<h4 id=\"341-年轻代（young-generation）的回收算法\">3.4.1 年轻代（Young Generation）的回收算法</h4> \n<p>a) 所有新生成的对象首先都是放在年轻代的。年轻代的目标就是尽可能快速的收集掉那些生命周期短的对象。</p> \n<p>b) 新生代内存按照8:1:1的比例分为一个eden区和两个survivor(survivor0,survivor1)区。一个Eden区，两个 Survivor区(一般而言)。大部分对象在Eden区中生成。回收时先将eden区存活对象复制到一个survivor0区，然后清空eden区，当这个survivor0区也存放满了时，则将eden区和survivor0区存活对象复制到另一个survivor1区，然后清空eden和这个survivor0区，此时survivor0区是空的，然后将survivor0区和survivor1区交换，即保持survivor1区为空， 如此往复。</p> \n<p>c) 当survivor1区不足以存放 eden和survivor0的存活对象时，就将存活对象直接存放到老年代。若是老年代也满了就会触发一次Full GC，也就是新生代、老年代都进行回收。</p> \n<p>d) 新生代发生的GC也叫做Minor GC，MinorGC发生频率比较高(不一定等Eden区满了才触发)。</p> \n<h4 id=\"342-年老代（old-generation）的回收算法\">3.4.2 年老代（Old Generation）的回收算法</h4> \n<p>a) 在年轻代中经历了N次垃圾回收后仍然存活的对象，就会被放到年老代中。因此，可以认为年老代中存放的都是一些生命周期较长的对象。</p> \n<p>b) 内存比新生代也大很多(大概比例是1:2)，当老年代内存满时触发Major GC即Full GC，Full GC发生频率比较低，老年代对象存活时间比较长，存活率标记高。</p> \n<h4 id=\"343-持久代（permanent-generation）的回收算法\">3.4.3 持久代（Permanent Generation）的回收算法</h4> \n<p>  用于存放静态文件，如Java类、方法等。持久代对垃圾回收没有显著影响，但是有些应用可能动态生成或者调用一些class，例如Hibernate 等，在这种时候需要设置一个比较大的持久代空间来存放这些运行过程中新增的类。持久代也称方法区，具体的回收可参见上文2.5节。</p> \n<br> \n<font color=\"#0099ff\" size=\"5\" face=\"黑体\">猿们加油跟上，离offer不远啦！！！</font> \n<br> ##四、常见的垃圾收集器 下面一张图是HotSpot虚拟机包含的所有收集器，图是借用过来滴： \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201426044.png\" title=\"\" alt=\"\"></p> \n<ul> \n <li>Serial收集器（复制算法)<br> 新生代单线程收集器，标记和清理都是单线程，优点是简单高效。是client级别默认的GC方式，可以通过<code>-XX:+UseSerialGC</code>来强制指定。</li> \n <li>Serial Old收集器(标记-整理算法)<br> 老年代单线程收集器，Serial收集器的老年代版本。</li> \n <li>ParNew收集器(停止-复制算法)　<br> 新生代收集器，可以认为是Serial收集器的多线程版本,在多核CPU环境下有着比Serial更好的表现。</li> \n <li>Parallel Scavenge收集器(停止-复制算法)<br> 并行收集器，追求高吞吐量，高效利用CPU。吞吐量一般为99%， 吞吐量= 用户线程时间/(用户线程时间+GC线程时间)。适合后台应用等对交互相应要求不高的场景。是server级别默认采用的GC方式，可用<code>-XX:+UseParallelGC</code>来强制指定，用<code>-XX:ParallelGCThreads=4</code>来指定线程数。</li> \n <li>Parallel Old收集器(停止-复制算法)<br> Parallel Scavenge收集器的老年代版本，并行收集器，吞吐量优先。</li> \n <li>CMS(Concurrent Mark Sweep)收集器（标记-清理算法）<br> 高并发、低停顿，追求最短GC回收停顿时间，cpu占用比较高，响应时间快，停顿时间短，多核cpu 追求高响应时间的选择。</li> \n</ul> \n<h2 id=\"五、gc是什么时候触发的（面试最常见的问题之一）\">五、GC是什么时候触发的（面试最常见的问题之一）</h2> \n<p>  由于对象进行了分代处理，因此垃圾回收区域、时间也不一样。GC有两种类型：Scavenge GC和Full GC。</p> \n<h3 id=\"51-scavenge-gc\">5.1 Scavenge GC</h3> \n<p>  一般情况下，当新对象生成，并且在Eden申请空间失败时，就会触发Scavenge GC，对Eden区域进行GC，清除非存活对象，并且把尚且存活的对象移动到Survivor区。然后整理Survivor的两个区。这种方式的GC是对年轻代的Eden区进行，不会影响到年老代。因为大部分对象都是从Eden区开始的，同时Eden区不会分配的很大，所以Eden区的GC会频繁进行。因而，一般在这里需要使用速度快、效率高的算法，使Eden去能尽快空闲出来。</p> \n<h3 id=\"52-full-gc\">5.2 Full GC</h3> \n<p>  对整个堆进行整理，包括Young、Tenured和Perm。Full GC因为需要对整个堆进行回收，所以比Scavenge GC要慢，因此应该尽可能减少Full GC的次数。在对JVM调优的过程中，很大一部分工作就是对于Full GC的调节。有如下原因可能导致Full GC：</p> \n<p>a) 年老代（Tenured）被写满；</p> \n<p>b) 持久代（Perm）被写满；</p> \n<p>c) System.gc()被显示调用；</p> \n<p>d) 上一次GC之后Heap的各域分配策略动态变化；</p> \n<h2 id=\"结束语\">结束语</h2> \n<blockquote></blockquote> \n<p>  内容的完整度和深度在一篇博文里面真的很难全部考虑，本文做了很大尝试，最后还是得投降。对于各个垃圾收集器的区别、运行过程中各内存区域参数的设置、GC日志的查看等内容后续再补上吧。文章概念很多，也借用了一些书籍和博文的经典总结，算是一个知识点整理后的输出吧，希望对大家有所裨益。</p>',NULL,0,2,1,0,0,'相信和小编一样的程序猿们在日常工作或面试当中经常会遇到JVM的垃圾回收问题，有没有在夜深人静的时候详细捋一捋JVM垃圾回收机制中的知识点呢？没时间捋也没关系，因为小编接下来会给你捋一捋。','GC',1,'2020-05-27 20:14:27','2020-05-27 22:05:06'),(115,'Lock和synchronized的区别和使用',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p><a class=\"replace_word\" title=\"Java SE知识库\" href=\"http://lib.csdn.net/base/javase\" target=\"_blank\">Java</a>并发编程：Lock</p> \n<p>今天看了并发实践这本书的ReentantLock这章，感觉对ReentantLock还是不够熟悉，有许多疑问，所有在网上找了很多文章看了一下，总体说的不够详细，重点和焦点问题没有谈到，但这篇文章相当不错，说的很全面，主要的重点都说到了，所有在这里转载了这篇文章。</p> \n<p>　　在上一篇文章中我们讲到了如何使用关键字synchronized来实现同步访问。本文我们继续来探讨这个问题，从<a class=\"replace_word\" title=\"Java 知识库\" href=\"http://lib.csdn.net/base/java\" target=\"_blank\">Java&nbsp;</a>5之后，在java.util.concurrent.locks包下提供了另外一种方式来实现同步访问，那就是Lock。</p> \n<p>　　也许有朋友会问，既然都可以通过synchronized来实现同步访问了，那么为什么还需要提供Lock？这个问题将在下面进行阐述。本文先从synchronized的缺陷讲起，然后再讲述java.util.concurrent.locks包下常用的有哪些类和接口，最后讨论以下一些关于锁的概念方面的东西</p> \n<p>　　以下是本文目录大纲：</p> \n<p>　　一.synchronized的缺陷</p> \n<p>　　二.java.util.concurrent.locks包下常用的类</p> \n<p>　　三.锁的相关概念介绍</p> \n<h2><a name=\"t0\"></a>一.synchronized的缺陷</h2> \n<p>　　synchronized是java中的一个关键字，也就是说是Java语言内置的特性。那么为什么会出现Lock呢？</p> \n<p>　　在上面一篇文章中，我们了解到如果一个代码块被synchronized修饰了，当一个线程获取了对应的锁，并执行该代码块时，其他线程便只能一直等待，等待获取锁的线程释放锁，而这里获取锁的线程释放锁只会有两种情况：</p> \n<p>　　1）获取锁的线程执行完了该代码块，然后线程释放对锁的占有；</p> \n<p>　　2）线程执行发生异常，此时JVM会让线程自动释放锁。</p> \n<p>　　那么如果这个获取锁的线程由于要等待IO或者其他原因（比如调用sleep方法）被阻塞了，但是又没有释放锁，其他线程便只能干巴巴地等待，试想一下，这多么影响程序执行效率。</p> \n<p>　　因此就需要有一种机制可以不让等待的线程一直无期限地等待下去（比如只等待一定的时间或者能够响应中断），通过Lock就可以办到。</p> \n<p>　　再举个例子：当有多个线程读写文件时，读操作和写操作会发生冲突现象，写操作和写操作会发生冲突现象，但是读操作和读操作不会发生冲突现象。</p> \n<p>　　但是采用synchronized关键字来实现同步的话，就会导致一个问题：</p> \n<p>　　如果多个线程都只是进行读操作，所以当一个线程在进行读操作时，其他线程只能等待无法进行读操作。</p> \n<p>　　因此就需要一种机制来使得多个线程都只是进行读操作时，线程之间不会发生冲突，通过Lock就可以办到。</p> \n<p>　　另外，通过Lock可以知道线程有没有成功获取到锁。这个是synchronized无法办到的。</p> \n<p>　　总结一下，也就是说Lock提供了比synchronized更多的功能。但是要注意以下几点：</p> \n<p>　　1）Lock不是Java语言内置的，synchronized是Java语言的关键字，因此是内置特性。Lock是一个类，通过这个类可以实现同步访问；</p> \n<p>　　2）Lock和synchronized有一点非常大的不同，采用synchronized不需要用户去手动释放锁，当synchronized方法或者synchronized代码块执行完之后，系统会自动让线程释放对锁的占用；而Lock则必须要用户去手动释放锁，如果没有主动释放锁，就有可能导致出现死锁现象。</p> \n<h2><a name=\"t1\"></a>二.java.util.concurrent.locks包下常用的类</h2> \n<p>　　下面我们就来探讨一下java.util.concurrent.locks包中常用的类和接口。</p> \n<p>　　1.Lock</p> \n<p>　　首先要说明的就是Lock，通过查看Lock的源码可知，Lock是一个接口：</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_969869\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">interface</code>&nbsp;\n         <code class=\"java plain\">Lock {</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">lock();</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">lockInterruptibly()&nbsp;</code>\n         <code class=\"java keyword\">throws</code>&nbsp;\n         <code class=\"java plain\">InterruptedException;</code>\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">boolean</code>&nbsp;\n         <code class=\"java plain\">tryLock();</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">boolean</code>&nbsp;\n         <code class=\"java plain\">tryLock(</code>\n         <code class=\"java keyword\">long</code>&nbsp;\n         <code class=\"java plain\">time, TimeUnit unit)&nbsp;</code>\n         <code class=\"java keyword\">throws</code>&nbsp;\n         <code class=\"java plain\">InterruptedException;</code>\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">unlock();</code>\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">Condition newCondition();</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>&nbsp;　　下面来逐个讲述Lock接口中每个方法的使用，lock()、tryLock()、tryLock(long time, TimeUnit unit)和lockInterruptibly()是用来获取锁的。unLock()方法是用来释放锁的。newCondition()这个方法暂且不在此讲述，会在后面的线程协作一文中讲述。</p> \n<p>　　在Lock中声明了四个方法来获取锁，那么这四个方法有何区别呢？</p> \n<p>　　首先lock()方法是平常使用得最多的一个方法，就是用来获取锁。如果锁已被其他线程获取，则进行等待。</p> \n<p>　　由于在前面讲到如果采用Lock，必须主动去释放锁，并且在发生异常时，不会自动释放锁。因此一般来说，使用Lock必须在try{}catch{}块中进行，并且将释放锁的操作放在finally块中进行，以保证锁一定被被释放，防止死锁的发生。通常使用Lock来进行同步的话，是以下面这种形式去使用的：</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_668314\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java plain\">Lock lock = ...;</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java plain\">lock.lock();</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java keyword\">try</code>\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//处理任务</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java plain\">}</code>\n         <code class=\"java keyword\">catch</code>\n         <code class=\"java plain\">(Exception ex){</code>\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java plain\">}</code>\n         <code class=\"java keyword\">finally</code>\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.unlock();&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//释放锁</code>\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>　　tryLock()方法是有返回值的，它表示用来尝试获取锁，如果获取成功，则返回true，如果获取失败（即锁已被其他线程获取），则返回false，也就说这个方法无论如何都会立即返回。在拿不到锁时不会一直在那等待。</p> \n<p>　　tryLock(long time, TimeUnit unit)方法和tryLock()方法是类似的，只不过区别在于这个方法在拿不到锁时会等待一定的时间，在时间期限之内如果还拿不到锁，就返回false。如果如果一开始拿到锁或者在等待期间内拿到了锁，则返回true。</p> \n<p>　　所以，一般情况下通过tryLock来获取锁时是这样使用的：</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_795936\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> \n       <div class=\"line number10 index9 alt1\">\n        10\n       </div> \n       <div class=\"line number11 index10 alt2\">\n        11\n       </div> \n       <div class=\"line number12 index11 alt1\">\n        12\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java plain\">Lock lock = ...;</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java keyword\">if</code>\n         <code class=\"java plain\">(lock.tryLock()) {</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">try</code>\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//处理任务</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n         <code class=\"java keyword\">catch</code>\n         <code class=\"java plain\">(Exception ex){</code>\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n         <code class=\"java keyword\">finally</code>\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.unlock();&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//释放锁</code>\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;</code>\n        </div> \n        <div class=\"line number10 index9 alt1\">\n         <code class=\"java plain\">}</code>\n         <code class=\"java keyword\">else</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number11 index10 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//如果不能获取锁，则直接做其他事情</code>\n        </div> \n        <div class=\"line number12 index11 alt1\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>&nbsp;　　lockInterruptibly()方法比较特殊，当通过这个方法去获取锁时，如果线程正在等待获取锁，则这个线程能够响应中断，即中断线程的等待状态。也就使说，当两个线程同时通过lock.lockInterruptibly()想获取某个锁时，假若此时线程A获取到了锁，而线程B只有在等待，那么对线程B调用threadB.interrupt()方法能够中断线程B的等待过程。</p> \n<p>　　由于lockInterruptibly()的声明中抛出了异常，所以lock.lockInterruptibly()必须放在try块中或者在调用lockInterruptibly()的方法外声明抛出InterruptedException。</p> \n<p>　　因此lockInterruptibly()一般的使用形式如下：</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_782918\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">method()&nbsp;</code>\n         <code class=\"java keyword\">throws</code>&nbsp;\n         <code class=\"java plain\">InterruptedException {</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.lockInterruptibly();</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">try</code>&nbsp;\n         <code class=\"java plain\">{&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//.....</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">finally</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.unlock();</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>　　注意，当一个线程获取了锁之后，是不会被interrupt()方法中断的。因为本身在前面的文章中讲过单独调用interrupt()方法不能中断正在运行过程中的线程，只能中断阻塞过程中的线程。</p> \n<p>　　因此当通过lockInterruptibly()方法获取某个锁时，如果不能获取到，只有进行等待的情况下，是可以响应中断的。</p> \n<p>　　而用synchronized修饰的话，当一个线程处于等待某个锁的状态，是无法被中断的，只有一直等待下去。</p> \n<p>　　2.ReentrantLock</p> \n<p>　　ReentrantLock，意思是“可重入锁”，关于可重入锁的概念在下一节讲述。ReentrantLock是唯一实现了Lock接口的类，并且ReentrantLock提供了更多的方法。下面通过一些实例看具体看一下如何使用ReentrantLock。</p> \n<p>　　例子1，lock()的正确使用方法</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_144109\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> \n       <div class=\"line number10 index9 alt1\">\n        10\n       </div> \n       <div class=\"line number11 index10 alt2\">\n        11\n       </div> \n       <div class=\"line number12 index11 alt1\">\n        12\n       </div> \n       <div class=\"line number13 index12 alt2\">\n        13\n       </div> \n       <div class=\"line number14 index13 alt1\">\n        14\n       </div> \n       <div class=\"line number15 index14 alt2\">\n        15\n       </div> \n       <div class=\"line number16 index15 alt1\">\n        16\n       </div> \n       <div class=\"line number17 index16 alt2\">\n        17\n       </div> \n       <div class=\"line number18 index17 alt1\">\n        18\n       </div> \n       <div class=\"line number19 index18 alt2\">\n        19\n       </div> \n       <div class=\"line number20 index19 alt1\">\n        20\n       </div> \n       <div class=\"line number21 index20 alt2\">\n        21\n       </div> \n       <div class=\"line number22 index21 alt1\">\n        22\n       </div> \n       <div class=\"line number23 index22 alt2\">\n        23\n       </div> \n       <div class=\"line number24 index23 alt1\">\n        24\n       </div> \n       <div class=\"line number25 index24 alt2\">\n        25\n       </div> \n       <div class=\"line number26 index25 alt1\">\n        26\n       </div> \n       <div class=\"line number27 index26 alt2\">\n        27\n       </div> \n       <div class=\"line number28 index27 alt1\">\n        28\n       </div> \n       <div class=\"line number29 index28 alt2\">\n        29\n       </div> \n       <div class=\"line number30 index29 alt1\">\n        30\n       </div> \n       <div class=\"line number31 index30 alt2\">\n        31\n       </div> \n       <div class=\"line number32 index31 alt1\">\n        32\n       </div> \n       <div class=\"line number33 index32 alt2\">\n        33\n       </div> \n       <div class=\"line number34 index33 alt1\">\n        34\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">class</code>&nbsp;\n         <code class=\"java plain\">Test {</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">private</code>&nbsp;\n         <code class=\"java plain\">ArrayList&lt;Integer&gt; arrayList =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">ArrayList&lt;Integer&gt;();</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">static</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">main(String[] args)&nbsp; {</code>\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">final</code>&nbsp;\n         <code class=\"java plain\">Test test =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Test();</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Thread(){</code>\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.insert(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">};</code>\n        </div> \n        <div class=\"line number10 index9 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}.start();</code>\n        </div> \n        <div class=\"line number11 index10 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number12 index11 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Thread(){</code>\n        </div> \n        <div class=\"line number13 index12 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number14 index13 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.insert(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number15 index14 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">};</code>\n        </div> \n        <div class=\"line number16 index15 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}.start();</code>\n        </div> \n        <div class=\"line number17 index16 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number18 index17 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number19 index18 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">insert(Thread thread) {</code>\n        </div> \n        <div class=\"line number20 index19 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">Lock lock =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">ReentrantLock();&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//注意这个地方</code>\n        </div> \n        <div class=\"line number21 index20 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.lock();</code>\n        </div> \n        <div class=\"line number22 index21 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">try</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number23 index22 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"得到了锁\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number24 index23 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">for</code>\n         <code class=\"java plain\">(</code>\n         <code class=\"java keyword\">int</code>&nbsp;\n         <code class=\"java plain\">i=</code>\n         <code class=\"java value\">0</code>\n         <code class=\"java plain\">;i&lt;</code>\n         <code class=\"java value\">5</code>\n         <code class=\"java plain\">;i++) {</code>\n        </div> \n        <div class=\"line number25 index24 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">arrayList.add(i);</code>\n        </div> \n        <div class=\"line number26 index25 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number27 index26 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;</code>\n         <code class=\"java keyword\">catch</code>&nbsp;\n         <code class=\"java plain\">(Exception e) {</code>\n        </div> \n        <div class=\"line number28 index27 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">// TODO: handle exception</code>\n        </div> \n        <div class=\"line number29 index28 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n         <code class=\"java keyword\">finally</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number30 index29 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"释放了锁\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number31 index30 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.unlock();</code>\n        </div> \n        <div class=\"line number32 index31 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number33 index32 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number34 index33 alt1\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>&nbsp;　　各位朋友先想一下这段代码的输出结果是什么？</p> \n<div class=\"cnblogs_code\">\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201825705.gif\" title=\"\" alt=\"\"> \n <div id=\"cnblogs_code_open_1cd40568-2200-4c5b-9a23-b361e15e5520\" class=\"cnblogs_code_hide\"> \n  <pre>Thread-0得到了锁\nThread-1得到了锁\nThread-0释放了锁\nThread-1释放了锁</pre> \n </div> \n</div> \n<p>　　也许有朋友会问，怎么会输出这个结果？第二个线程怎么会在第一个线程释放锁之前得到了锁？原因在于，在insert方法中的lock变量是局部变量，每个线程执行该方法时都会保存一个副本，那么理所当然每个线程执行到lock.lock()处获取的是不同的锁，所以就不会发生冲突。</p> \n<p>　　知道了原因改起来就比较容易了，只需要将lock声明为类的属性即可。</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_410590\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> \n       <div class=\"line number10 index9 alt1\">\n        10\n       </div> \n       <div class=\"line number11 index10 alt2\">\n        11\n       </div> \n       <div class=\"line number12 index11 alt1\">\n        12\n       </div> \n       <div class=\"line number13 index12 alt2\">\n        13\n       </div> \n       <div class=\"line number14 index13 alt1\">\n        14\n       </div> \n       <div class=\"line number15 index14 alt2\">\n        15\n       </div> \n       <div class=\"line number16 index15 alt1\">\n        16\n       </div> \n       <div class=\"line number17 index16 alt2\">\n        17\n       </div> \n       <div class=\"line number18 index17 alt1\">\n        18\n       </div> \n       <div class=\"line number19 index18 alt2\">\n        19\n       </div> \n       <div class=\"line number20 index19 alt1\">\n        20\n       </div> \n       <div class=\"line number21 index20 alt2\">\n        21\n       </div> \n       <div class=\"line number22 index21 alt1\">\n        22\n       </div> \n       <div class=\"line number23 index22 alt2\">\n        23\n       </div> \n       <div class=\"line number24 index23 alt1\">\n        24\n       </div> \n       <div class=\"line number25 index24 alt2\">\n        25\n       </div> \n       <div class=\"line number26 index25 alt1\">\n        26\n       </div> \n       <div class=\"line number27 index26 alt2\">\n        27\n       </div> \n       <div class=\"line number28 index27 alt1\">\n        28\n       </div> \n       <div class=\"line number29 index28 alt2\">\n        29\n       </div> \n       <div class=\"line number30 index29 alt1\">\n        30\n       </div> \n       <div class=\"line number31 index30 alt2\">\n        31\n       </div> \n       <div class=\"line number32 index31 alt1\">\n        32\n       </div> \n       <div class=\"line number33 index32 alt2\">\n        33\n       </div> \n       <div class=\"line number34 index33 alt1\">\n        34\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">class</code>&nbsp;\n         <code class=\"java plain\">Test {</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">private</code>&nbsp;\n         <code class=\"java plain\">ArrayList&lt;Integer&gt; arrayList =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">ArrayList&lt;Integer&gt;();</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">private</code>&nbsp;\n         <code class=\"java plain\">Lock lock =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">ReentrantLock();&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//注意这个地方</code>\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">static</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">main(String[] args)&nbsp; {</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">final</code>&nbsp;\n         <code class=\"java plain\">Test test =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Test();</code>\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Thread(){</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.insert(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number10 index9 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">};</code>\n        </div> \n        <div class=\"line number11 index10 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}.start();</code>\n        </div> \n        <div class=\"line number12 index11 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number13 index12 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Thread(){</code>\n        </div> \n        <div class=\"line number14 index13 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number15 index14 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.insert(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number16 index15 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">};</code>\n        </div> \n        <div class=\"line number17 index16 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}.start();</code>\n        </div> \n        <div class=\"line number18 index17 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number19 index18 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number20 index19 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">insert(Thread thread) {</code>\n        </div> \n        <div class=\"line number21 index20 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.lock();</code>\n        </div> \n        <div class=\"line number22 index21 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">try</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number23 index22 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"得到了锁\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number24 index23 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">for</code>\n         <code class=\"java plain\">(</code>\n         <code class=\"java keyword\">int</code>&nbsp;\n         <code class=\"java plain\">i=</code>\n         <code class=\"java value\">0</code>\n         <code class=\"java plain\">;i&lt;</code>\n         <code class=\"java value\">5</code>\n         <code class=\"java plain\">;i++) {</code>\n        </div> \n        <div class=\"line number25 index24 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">arrayList.add(i);</code>\n        </div> \n        <div class=\"line number26 index25 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number27 index26 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;</code>\n         <code class=\"java keyword\">catch</code>&nbsp;\n         <code class=\"java plain\">(Exception e) {</code>\n        </div> \n        <div class=\"line number28 index27 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">// TODO: handle exception</code>\n        </div> \n        <div class=\"line number29 index28 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n         <code class=\"java keyword\">finally</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number30 index29 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"释放了锁\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number31 index30 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.unlock();</code>\n        </div> \n        <div class=\"line number32 index31 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number33 index32 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number34 index33 alt1\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>&nbsp;　　这样就是正确地使用Lock的方法了。</p> \n<p>　　例子2，tryLock()的使用方法</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_860084\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> \n       <div class=\"line number10 index9 alt1\">\n        10\n       </div> \n       <div class=\"line number11 index10 alt2\">\n        11\n       </div> \n       <div class=\"line number12 index11 alt1\">\n        12\n       </div> \n       <div class=\"line number13 index12 alt2\">\n        13\n       </div> \n       <div class=\"line number14 index13 alt1\">\n        14\n       </div> \n       <div class=\"line number15 index14 alt2\">\n        15\n       </div> \n       <div class=\"line number16 index15 alt1\">\n        16\n       </div> \n       <div class=\"line number17 index16 alt2\">\n        17\n       </div> \n       <div class=\"line number18 index17 alt1\">\n        18\n       </div> \n       <div class=\"line number19 index18 alt2\">\n        19\n       </div> \n       <div class=\"line number20 index19 alt1\">\n        20\n       </div> \n       <div class=\"line number21 index20 alt2\">\n        21\n       </div> \n       <div class=\"line number22 index21 alt1\">\n        22\n       </div> \n       <div class=\"line number23 index22 alt2\">\n        23\n       </div> \n       <div class=\"line number24 index23 alt1\">\n        24\n       </div> \n       <div class=\"line number25 index24 alt2\">\n        25\n       </div> \n       <div class=\"line number26 index25 alt1\">\n        26\n       </div> \n       <div class=\"line number27 index26 alt2\">\n        27\n       </div> \n       <div class=\"line number28 index27 alt1\">\n        28\n       </div> \n       <div class=\"line number29 index28 alt2\">\n        29\n       </div> \n       <div class=\"line number30 index29 alt1\">\n        30\n       </div> \n       <div class=\"line number31 index30 alt2\">\n        31\n       </div> \n       <div class=\"line number32 index31 alt1\">\n        32\n       </div> \n       <div class=\"line number33 index32 alt2\">\n        33\n       </div> \n       <div class=\"line number34 index33 alt1\">\n        34\n       </div> \n       <div class=\"line number35 index34 alt2\">\n        35\n       </div> \n       <div class=\"line number36 index35 alt1\">\n        36\n       </div> \n       <div class=\"line number37 index36 alt2\">\n        37\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">class</code>&nbsp;\n         <code class=\"java plain\">Test {</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">private</code>&nbsp;\n         <code class=\"java plain\">ArrayList&lt;Integer&gt; arrayList =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">ArrayList&lt;Integer&gt;();</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">private</code>&nbsp;\n         <code class=\"java plain\">Lock lock =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">ReentrantLock();&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//注意这个地方</code>\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">static</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">main(String[] args)&nbsp; {</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">final</code>&nbsp;\n         <code class=\"java plain\">Test test =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Test();</code>\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Thread(){</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.insert(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number10 index9 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">};</code>\n        </div> \n        <div class=\"line number11 index10 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}.start();</code>\n        </div> \n        <div class=\"line number12 index11 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number13 index12 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Thread(){</code>\n        </div> \n        <div class=\"line number14 index13 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number15 index14 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.insert(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number16 index15 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">};</code>\n        </div> \n        <div class=\"line number17 index16 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}.start();</code>\n        </div> \n        <div class=\"line number18 index17 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number19 index18 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number20 index19 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">insert(Thread thread) {</code>\n        </div> \n        <div class=\"line number21 index20 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">if</code>\n         <code class=\"java plain\">(lock.tryLock()) {</code>\n        </div> \n        <div class=\"line number22 index21 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">try</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number23 index22 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"得到了锁\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number24 index23 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">for</code>\n         <code class=\"java plain\">(</code>\n         <code class=\"java keyword\">int</code>&nbsp;\n         <code class=\"java plain\">i=</code>\n         <code class=\"java value\">0</code>\n         <code class=\"java plain\">;i&lt;</code>\n         <code class=\"java value\">5</code>\n         <code class=\"java plain\">;i++) {</code>\n        </div> \n        <div class=\"line number25 index24 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">arrayList.add(i);</code>\n        </div> \n        <div class=\"line number26 index25 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number27 index26 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;</code>\n         <code class=\"java keyword\">catch</code>&nbsp;\n         <code class=\"java plain\">(Exception e) {</code>\n        </div> \n        <div class=\"line number28 index27 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">// TODO: handle exception</code>\n        </div> \n        <div class=\"line number29 index28 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n         <code class=\"java keyword\">finally</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number30 index29 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"释放了锁\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number31 index30 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.unlock();</code>\n        </div> \n        <div class=\"line number32 index31 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number33 index32 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;</code>\n         <code class=\"java keyword\">else</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number34 index33 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"获取锁失败\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number35 index34 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number36 index35 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number37 index36 alt2\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>&nbsp;　　输出结果：</p> \n<div class=\"cnblogs_code\">\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201825705.gif\" title=\"\" alt=\"\"> \n <div id=\"cnblogs_code_open_a9a7b436-a574-4d85-ba29-f5bb2a807990\" class=\"cnblogs_code_hide\"> \n  <pre>Thread-0得到了锁\nThread-1获取锁失败\nThread-0释放了锁</pre> \n </div> \n</div> \n<p>　　例子3，lockInterruptibly()响应中断的使用方法：</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_299544\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> \n       <div class=\"line number10 index9 alt1\">\n        10\n       </div> \n       <div class=\"line number11 index10 alt2\">\n        11\n       </div> \n       <div class=\"line number12 index11 alt1\">\n        12\n       </div> \n       <div class=\"line number13 index12 alt2\">\n        13\n       </div> \n       <div class=\"line number14 index13 alt1\">\n        14\n       </div> \n       <div class=\"line number15 index14 alt2\">\n        15\n       </div> \n       <div class=\"line number16 index15 alt1\">\n        16\n       </div> \n       <div class=\"line number17 index16 alt2\">\n        17\n       </div> \n       <div class=\"line number18 index17 alt1\">\n        18\n       </div> \n       <div class=\"line number19 index18 alt2\">\n        19\n       </div> \n       <div class=\"line number20 index19 alt1\">\n        20\n       </div> \n       <div class=\"line number21 index20 alt2\">\n        21\n       </div> \n       <div class=\"line number22 index21 alt1\">\n        22\n       </div> \n       <div class=\"line number23 index22 alt2\">\n        23\n       </div> \n       <div class=\"line number24 index23 alt1\">\n        24\n       </div> \n       <div class=\"line number25 index24 alt2\">\n        25\n       </div> \n       <div class=\"line number26 index25 alt1\">\n        26\n       </div> \n       <div class=\"line number27 index26 alt2\">\n        27\n       </div> \n       <div class=\"line number28 index27 alt1\">\n        28\n       </div> \n       <div class=\"line number29 index28 alt2\">\n        29\n       </div> \n       <div class=\"line number30 index29 alt1\">\n        30\n       </div> \n       <div class=\"line number31 index30 alt2\">\n        31\n       </div> \n       <div class=\"line number32 index31 alt1\">\n        32\n       </div> \n       <div class=\"line number33 index32 alt2\">\n        33\n       </div> \n       <div class=\"line number34 index33 alt1\">\n        34\n       </div> \n       <div class=\"line number35 index34 alt2\">\n        35\n       </div> \n       <div class=\"line number36 index35 alt1\">\n        36\n       </div> \n       <div class=\"line number37 index36 alt2\">\n        37\n       </div> \n       <div class=\"line number38 index37 alt1\">\n        38\n       </div> \n       <div class=\"line number39 index38 alt2\">\n        39\n       </div> \n       <div class=\"line number40 index39 alt1\">\n        40\n       </div> \n       <div class=\"line number41 index40 alt2\">\n        41\n       </div> \n       <div class=\"line number42 index41 alt1\">\n        42\n       </div> \n       <div class=\"line number43 index42 alt2\">\n        43\n       </div> \n       <div class=\"line number44 index43 alt1\">\n        44\n       </div> \n       <div class=\"line number45 index44 alt2\">\n        45\n       </div> \n       <div class=\"line number46 index45 alt1\">\n        46\n       </div> \n       <div class=\"line number47 index46 alt2\">\n        47\n       </div> \n       <div class=\"line number48 index47 alt1\">\n        48\n       </div> \n       <div class=\"line number49 index48 alt2\">\n        49\n       </div> \n       <div class=\"line number50 index49 alt1\">\n        50\n       </div> \n       <div class=\"line number51 index50 alt2\">\n        51\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">class</code>&nbsp;\n         <code class=\"java plain\">Test {</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">private</code>&nbsp;\n         <code class=\"java plain\">Lock lock =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">ReentrantLock();&nbsp;&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">static</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">main(String[] args)&nbsp; {</code>\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">Test test =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Test();</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">MyThread thread1 =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">MyThread(test);</code>\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">MyThread thread2 =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">MyThread(test);</code>\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">thread1.start();</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">thread2.start();</code>\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number10 index9 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">try</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number11 index10 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">Thread.sleep(</code>\n         <code class=\"java value\">2000</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number12 index11 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;</code>\n         <code class=\"java keyword\">catch</code>&nbsp;\n         <code class=\"java plain\">(InterruptedException e) {</code>\n        </div> \n        <div class=\"line number13 index12 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">e.printStackTrace();</code>\n        </div> \n        <div class=\"line number14 index13 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number15 index14 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">thread2.interrupt();</code>\n        </div> \n        <div class=\"line number16 index15 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number17 index16 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number18 index17 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">insert(Thread thread)&nbsp;</code>\n         <code class=\"java keyword\">throws</code>&nbsp;\n         <code class=\"java plain\">InterruptedException{</code>\n        </div> \n        <div class=\"line number19 index18 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.lockInterruptibly();&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//注意，如果需要正确中断等待锁的线程，必须将获取锁放在外面，然后将InterruptedException抛出</code>\n        </div> \n        <div class=\"line number20 index19 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">try</code>&nbsp;\n         <code class=\"java plain\">{&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number21 index20 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"得到了锁\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number22 index21 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">long</code>&nbsp;\n         <code class=\"java plain\">startTime = System.currentTimeMillis();</code>\n        </div> \n        <div class=\"line number23 index22 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">for</code>\n         <code class=\"java plain\">(&nbsp;&nbsp;&nbsp; ;&nbsp;&nbsp;&nbsp;&nbsp; ;) {</code>\n        </div> \n        <div class=\"line number24 index23 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">if</code>\n         <code class=\"java plain\">(System.currentTimeMillis() - startTime &gt;= Integer.MAX_VALUE)</code>\n        </div> \n        <div class=\"line number25 index24 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">break</code>\n         <code class=\"java plain\">;</code>\n        </div> \n        <div class=\"line number26 index25 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java comments\">//插入数据</code>\n        </div> \n        <div class=\"line number27 index26 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number28 index27 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number29 index28 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">finally</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number30 index29 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(Thread.currentThread().getName()+</code>\n         <code class=\"java string\">\"执行finally\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number31 index30 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">lock.unlock();</code>\n        </div> \n        <div class=\"line number32 index31 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"释放了锁\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number33 index32 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number34 index33 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number35 index34 alt2\">\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number36 index35 alt1\">\n         &nbsp;\n        </div> \n        <div class=\"line number37 index36 alt2\">\n         <code class=\"java keyword\">class</code>&nbsp;\n         <code class=\"java plain\">MyThread&nbsp;</code>\n         <code class=\"java keyword\">extends</code>&nbsp;\n         <code class=\"java plain\">Thread {</code>\n        </div> \n        <div class=\"line number38 index37 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">private</code>&nbsp;\n         <code class=\"java plain\">Test test =&nbsp;</code>\n         <code class=\"java keyword\">null</code>\n         <code class=\"java plain\">;</code>\n        </div> \n        <div class=\"line number39 index38 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java plain\">MyThread(Test test) {</code>\n        </div> \n        <div class=\"line number40 index39 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">this</code>\n         <code class=\"java plain\">.test = test;</code>\n        </div> \n        <div class=\"line number41 index40 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number42 index41 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java color1\">@Override</code>\n        </div> \n        <div class=\"line number43 index42 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number44 index43 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number45 index44 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">try</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number46 index45 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.insert(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number47 index46 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;</code>\n         <code class=\"java keyword\">catch</code>&nbsp;\n         <code class=\"java plain\">(InterruptedException e) {</code>\n        </div> \n        <div class=\"line number48 index47 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(Thread.currentThread().getName()+</code>\n         <code class=\"java string\">\"被中断\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number49 index48 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number50 index49 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number51 index50 alt2\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>　　运行之后，发现thread2能够被正确中断。</p> \n<p>　　3.ReadWriteLock</p> \n<p>　　ReadWriteLock也是一个接口，在它里面只定义了两个方法：</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_763061\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> \n       <div class=\"line number10 index9 alt1\">\n        10\n       </div> \n       <div class=\"line number11 index10 alt2\">\n        11\n       </div> \n       <div class=\"line number12 index11 alt1\">\n        12\n       </div> \n       <div class=\"line number13 index12 alt2\">\n        13\n       </div> \n       <div class=\"line number14 index13 alt1\">\n        14\n       </div> \n       <div class=\"line number15 index14 alt2\">\n        15\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">interface</code>&nbsp;\n         <code class=\"java plain\">ReadWriteLock {</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java preprocessor\">/**</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java preprocessor\">* Returns the lock used for reading.</code>\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java preprocessor\">*</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java preprocessor\">* @return the lock used for reading.</code>\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java preprocessor\">*/</code>\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">Lock readLock();</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         &nbsp;\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java preprocessor\">/**</code>\n        </div> \n        <div class=\"line number10 index9 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java preprocessor\">* Returns the lock used for writing.</code>\n        </div> \n        <div class=\"line number11 index10 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java preprocessor\">*</code>\n        </div> \n        <div class=\"line number12 index11 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java preprocessor\">* @return the lock used for writing.</code>\n        </div> \n        <div class=\"line number13 index12 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java preprocessor\">*/</code>\n        </div> \n        <div class=\"line number14 index13 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">Lock writeLock();</code>\n        </div> \n        <div class=\"line number15 index14 alt2\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>&nbsp;　　一个用来获取读锁，一个用来获取写锁。也就是说将文件的读写操作分开，分成2个锁来分配给线程，从而使得多个线程可以同时进行读操作。下面的ReentrantReadWriteLock实现了ReadWriteLock接口。</p> \n<p>　　4.ReentrantReadWriteLock</p> \n<p>　　ReentrantReadWriteLock里面提供了很多丰富的方法，不过最主要的有两个方法：readLock()和writeLock()用来获取读锁和写锁。</p> \n<p>　　下面通过几个例子来看一下ReentrantReadWriteLock具体用法。</p> \n<p>　　假如有多个线程要同时进行读操作的话，先看一下synchronized达到的效果：</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_806554\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> \n       <div class=\"line number10 index9 alt1\">\n        10\n       </div> \n       <div class=\"line number11 index10 alt2\">\n        11\n       </div> \n       <div class=\"line number12 index11 alt1\">\n        12\n       </div> \n       <div class=\"line number13 index12 alt2\">\n        13\n       </div> \n       <div class=\"line number14 index13 alt1\">\n        14\n       </div> \n       <div class=\"line number15 index14 alt2\">\n        15\n       </div> \n       <div class=\"line number16 index15 alt1\">\n        16\n       </div> \n       <div class=\"line number17 index16 alt2\">\n        17\n       </div> \n       <div class=\"line number18 index17 alt1\">\n        18\n       </div> \n       <div class=\"line number19 index18 alt2\">\n        19\n       </div> \n       <div class=\"line number20 index19 alt1\">\n        20\n       </div> \n       <div class=\"line number21 index20 alt2\">\n        21\n       </div> \n       <div class=\"line number22 index21 alt1\">\n        22\n       </div> \n       <div class=\"line number23 index22 alt2\">\n        23\n       </div> \n       <div class=\"line number24 index23 alt1\">\n        24\n       </div> \n       <div class=\"line number25 index24 alt2\">\n        25\n       </div> \n       <div class=\"line number26 index25 alt1\">\n        26\n       </div> \n       <div class=\"line number27 index26 alt2\">\n        27\n       </div> \n       <div class=\"line number28 index27 alt1\">\n        28\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">class</code>&nbsp;\n         <code class=\"java plain\">Test {</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">private</code>&nbsp;\n         <code class=\"java plain\">ReentrantReadWriteLock rwl =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">ReentrantReadWriteLock();</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">static</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">main(String[] args)&nbsp; {</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">final</code>&nbsp;\n         <code class=\"java plain\">Test test =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Test();</code>\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Thread(){</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.get(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number10 index9 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">};</code>\n        </div> \n        <div class=\"line number11 index10 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}.start();</code>\n        </div> \n        <div class=\"line number12 index11 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number13 index12 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Thread(){</code>\n        </div> \n        <div class=\"line number14 index13 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number15 index14 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.get(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number16 index15 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">};</code>\n        </div> \n        <div class=\"line number17 index16 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}.start();</code>\n        </div> \n        <div class=\"line number18 index17 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number19 index18 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number20 index19 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number21 index20 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">synchronized</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">get(Thread thread) {</code>\n        </div> \n        <div class=\"line number22 index21 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">long</code>&nbsp;\n         <code class=\"java plain\">start = System.currentTimeMillis();</code>\n        </div> \n        <div class=\"line number23 index22 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">while</code>\n         <code class=\"java plain\">(System.currentTimeMillis() - start &lt;=&nbsp;</code>\n         <code class=\"java value\">1</code>\n         <code class=\"java plain\">) {</code>\n        </div> \n        <div class=\"line number24 index23 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"正在进行读操作\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number25 index24 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number26 index25 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"读操作完毕\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number27 index26 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number28 index27 alt1\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>&nbsp;　　这段程序的输出结果会是，直到thread1执行完读操作之后，才会打印thread2执行读操作的信息。</p> \n<div class=\"cnblogs_code\">\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201825705.gif\" title=\"\" alt=\"\"> \n <div id=\"cnblogs_code_open_2fcad098-c1ce-4cf6-b645-9589be86d47b\" class=\"cnblogs_code_hide\"> \n  <div class=\"cnblogs_code_toolbar\">\n   <span class=\"cnblogs_code_copy\"><a title=\"复制代码\" target=\"_blank\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201826046.gif\" title=\"\" alt=\"复制代码\"></a></span>\n  </div> \n  <pre>Thread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0读操作完毕\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1读操作完毕</pre> \n  <div class=\"cnblogs_code_toolbar\">\n   <span class=\"cnblogs_code_copy\"><a title=\"复制代码\" target=\"_blank\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201826046.gif\" title=\"\" alt=\"复制代码\"></a></span>\n  </div> \n </div> \n</div> \n<p>　　而改成用读写锁的话：</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_289697\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> \n       <div class=\"line number10 index9 alt1\">\n        10\n       </div> \n       <div class=\"line number11 index10 alt2\">\n        11\n       </div> \n       <div class=\"line number12 index11 alt1\">\n        12\n       </div> \n       <div class=\"line number13 index12 alt2\">\n        13\n       </div> \n       <div class=\"line number14 index13 alt1\">\n        14\n       </div> \n       <div class=\"line number15 index14 alt2\">\n        15\n       </div> \n       <div class=\"line number16 index15 alt1\">\n        16\n       </div> \n       <div class=\"line number17 index16 alt2\">\n        17\n       </div> \n       <div class=\"line number18 index17 alt1\">\n        18\n       </div> \n       <div class=\"line number19 index18 alt2\">\n        19\n       </div> \n       <div class=\"line number20 index19 alt1\">\n        20\n       </div> \n       <div class=\"line number21 index20 alt2\">\n        21\n       </div> \n       <div class=\"line number22 index21 alt1\">\n        22\n       </div> \n       <div class=\"line number23 index22 alt2\">\n        23\n       </div> \n       <div class=\"line number24 index23 alt1\">\n        24\n       </div> \n       <div class=\"line number25 index24 alt2\">\n        25\n       </div> \n       <div class=\"line number26 index25 alt1\">\n        26\n       </div> \n       <div class=\"line number27 index26 alt2\">\n        27\n       </div> \n       <div class=\"line number28 index27 alt1\">\n        28\n       </div> \n       <div class=\"line number29 index28 alt2\">\n        29\n       </div> \n       <div class=\"line number30 index29 alt1\">\n        30\n       </div> \n       <div class=\"line number31 index30 alt2\">\n        31\n       </div> \n       <div class=\"line number32 index31 alt1\">\n        32\n       </div> \n       <div class=\"line number33 index32 alt2\">\n        33\n       </div> \n       <div class=\"line number34 index33 alt1\">\n        34\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">class</code>&nbsp;\n         <code class=\"java plain\">Test {</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">private</code>&nbsp;\n         <code class=\"java plain\">ReentrantReadWriteLock rwl =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">ReentrantReadWriteLock();</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">static</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">main(String[] args)&nbsp; {</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">final</code>&nbsp;\n         <code class=\"java plain\">Test test =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Test();</code>\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Thread(){</code>\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.get(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number10 index9 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">};</code>\n        </div> \n        <div class=\"line number11 index10 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}.start();</code>\n        </div> \n        <div class=\"line number12 index11 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number13 index12 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">Thread(){</code>\n        </div> \n        <div class=\"line number14 index13 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">run() {</code>\n        </div> \n        <div class=\"line number15 index14 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">test.get(Thread.currentThread());</code>\n        </div> \n        <div class=\"line number16 index15 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">};</code>\n        </div> \n        <div class=\"line number17 index16 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}.start();</code>\n        </div> \n        <div class=\"line number18 index17 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number19 index18 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;&nbsp;</code>\n        </div> \n        <div class=\"line number20 index19 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number21 index20 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">get(Thread thread) {</code>\n        </div> \n        <div class=\"line number22 index21 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">rwl.readLock().lock();</code>\n        </div> \n        <div class=\"line number23 index22 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">try</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number24 index23 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">long</code>&nbsp;\n         <code class=\"java plain\">start = System.currentTimeMillis();</code>\n        </div> \n        <div class=\"line number25 index24 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number26 index25 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">while</code>\n         <code class=\"java plain\">(System.currentTimeMillis() - start &lt;=&nbsp;</code>\n         <code class=\"java value\">1</code>\n         <code class=\"java plain\">) {</code>\n        </div> \n        <div class=\"line number27 index26 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"正在进行读操作\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number28 index27 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number29 index28 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">System.out.println(thread.getName()+</code>\n         <code class=\"java string\">\"读操作完毕\"</code>\n         <code class=\"java plain\">);</code>\n        </div> \n        <div class=\"line number30 index29 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}&nbsp;</code>\n         <code class=\"java keyword\">finally</code>&nbsp;\n         <code class=\"java plain\">{</code>\n        </div> \n        <div class=\"line number31 index30 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">rwl.readLock().unlock();</code>\n        </div> \n        <div class=\"line number32 index31 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number33 index32 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number34 index33 alt1\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>&nbsp;　　此时打印的结果为：</p> \n<div class=\"cnblogs_code\">\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201825705.gif\" title=\"\" alt=\"\"> \n <div id=\"cnblogs_code_open_17f72437-2f27-4887-a1a4-7eea4305396e\" class=\"cnblogs_code_hide\"> \n  <div class=\"cnblogs_code_toolbar\">\n   <span class=\"cnblogs_code_copy\"><a title=\"复制代码\" target=\"_blank\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201826046.gif\" title=\"\" alt=\"复制代码\"></a></span>\n  </div> \n  <pre>Thread-0正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-0正在进行读操作\nThread-1正在进行读操作\nThread-0读操作完毕\nThread-1读操作完毕</pre> \n  <div class=\"cnblogs_code_toolbar\">\n   <span class=\"cnblogs_code_copy\"><a title=\"复制代码\" target=\"_blank\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201826046.gif\" title=\"\" alt=\"复制代码\"></a></span>\n  </div> \n </div> \n</div> \n<p>　　说明thread1和thread2在同时进行读操作。</p> \n<p>　　这样就大大提升了读操作的效率。</p> \n<p>　　不过要注意的是，如果有一个线程已经占用了读锁，则此时其他线程如果要申请写锁，则申请写锁的线程会一直等待释放读锁。</p> \n<p>　　如果有一个线程已经占用了写锁，则此时其他线程如果申请写锁或者读锁，则申请的线程会一直等待释放写锁。</p> \n<p>　　关于ReentrantReadWriteLock类中的其他方法感兴趣的朋友可以自行查阅API文档。</p> \n<p>　　5.Lock和synchronized的选择</p> \n<p>　　总结来说，Lock和synchronized有以下几点不同：</p> \n<p>　　1）Lock是一个接口，而synchronized是Java中的关键字，synchronized是内置的语言实现；</p> \n<p>　　2）synchronized在发生异常时，会自动释放线程占有的锁，因此不会导致死锁现象发生；而Lock在发生异常时，如果没有主动通过unLock()去释放锁，则很可能造成死锁现象，因此使用Lock时需要在finally块中释放锁；</p> \n<p>　　3）Lock可以让等待锁的线程响应中断，而synchronized却不行，使用synchronized时，等待的线程会一直等待下去，不能够响应中断；</p> \n<p>　　4）通过Lock可以知道有没有成功获取锁，而synchronized却无法办到。</p> \n<p>　　5）Lock可以提高多个线程进行读操作的效率。</p> \n<p>　　在性能上来说，如果竞争资源不激烈，两者的性能是差不多的，而当竞争资源非常激烈时（即有大量线程同时竞争），此时Lock的性能要远远优于synchronized。所以说，在具体使用时要根据适当情况选择。</p> \n<h2><a name=\"t2\"></a>三.锁的相关概念介绍</h2> \n<p>　　在前面介绍了Lock的基本使用，这一节来介绍一下与锁相关的几个概念。</p> \n<p>　　1.可重入锁</p> \n<p>　　如果锁具备可重入性，则称作为可重入锁。像synchronized和ReentrantLock都是可重入锁，可重入性在我看来实际上表明了锁的分配机制：基于线程的分配，而不是基于方法调用的分配。举个简单的例子，当一个线程执行到某个synchronized方法时，比如说method1，而在method1中会调用另外一个synchronized方法method2，此时线程不必重新去申请锁，而是可以直接执行方法method2。</p> \n<p>　　看下面这段代码就明白了：</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_298525\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> \n       <div class=\"line number2 index1 alt1\">\n        2\n       </div> \n       <div class=\"line number3 index2 alt2\">\n        3\n       </div> \n       <div class=\"line number4 index3 alt1\">\n        4\n       </div> \n       <div class=\"line number5 index4 alt2\">\n        5\n       </div> \n       <div class=\"line number6 index5 alt1\">\n        6\n       </div> \n       <div class=\"line number7 index6 alt2\">\n        7\n       </div> \n       <div class=\"line number8 index7 alt1\">\n        8\n       </div> \n       <div class=\"line number9 index8 alt2\">\n        9\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java keyword\">class</code>&nbsp;\n         <code class=\"java plain\">MyClass {</code>\n        </div> \n        <div class=\"line number2 index1 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">synchronized</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">method1() {</code>\n        </div> \n        <div class=\"line number3 index2 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">method2();</code>\n        </div> \n        <div class=\"line number4 index3 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number5 index4 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number6 index5 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java keyword\">public</code>&nbsp;\n         <code class=\"java keyword\">synchronized</code>&nbsp;\n         <code class=\"java keyword\">void</code>&nbsp;\n         <code class=\"java plain\">method2() {</code>\n        </div> \n        <div class=\"line number7 index6 alt2\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;\n        </div> \n        <div class=\"line number8 index7 alt1\">\n         <code class=\"java spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>\n         <code class=\"java plain\">}</code>\n        </div> \n        <div class=\"line number9 index8 alt2\">\n         <code class=\"java plain\">}</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>&nbsp;　　上述代码中的两个方法method1和method2都用synchronized修饰了，假如某一时刻，线程A执行到了method1，此时线程A获取了这个对象的锁，而由于method2也是synchronized方法，假如synchronized不具备可重入性，此时线程A需要重新申请锁。但是这就会造成一个问题，因为线程A已经持有了该对象的锁，而又在申请获取该对象的锁，这样就会线程A一直等待永远不会获取到的锁。</p> \n<p>　　而由于synchronized和Lock都具备可重入性，所以不会发生上述现象。</p> \n<p>　　2.可中断锁</p> \n<p>　　可中断锁：顾名思义，就是可以相应中断的锁。</p> \n<p>　　在Java中，synchronized就不是可中断锁，而Lock是可中断锁。</p> \n<p>　　如果某一线程A正在执行锁中的代码，另一线程B正在等待获取该锁，可能由于等待时间过长，线程B不想等待了，想先处理其他事情，我们可以让它中断自己或者在别的线程中中断它，这种就是可中断锁。</p> \n<p>　　在前面演示lockInterruptibly()的用法时已经体现了Lock的可中断性。</p> \n<p>　　3.公平锁</p> \n<p>　　公平锁即尽量以请求锁的顺序来获取锁。比如同是有多个线程在等待一个锁，当这个锁被释放时，等待时间最久的线程（最先请求的线程）会获得该所，这种就是公平锁。</p> \n<p>　　非公平锁即无法保证锁的获取是按照请求锁的顺序进行的。这样就可能导致某个或者一些线程永远获取不到锁。</p> \n<p>　　在Java中，synchronized就是非公平锁，它无法保证等待的线程获取锁的顺序。</p> \n<p>　　而对于ReentrantLock和ReentrantReadWriteLock，它默认情况下是非公平锁，但是可以设置为公平锁。</p> \n<p>　　看一下这2个类的源代码就清楚了：</p> \n<p>　　<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201825764.jpg\" title=\"\" alt=\"\"></p> \n<p>　　在ReentrantLock中定义了2个静态内部类，一个是NotFairSync，一个是FairSync，分别用来实现非公平锁和公平锁。</p> \n<p>　　我们可以在创建ReentrantLock对象时，通过以下方式来设置锁的公平性：</p> \n<div class=\"cnblogs_Highlighter sh-gutter\"> \n <div> \n  <div id=\"highlighter_448483\" class=\"syntaxhighlighter  java\"> \n   <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"> \n    <tbody> \n     <tr> \n      <td class=\"gutter\"> \n       <div class=\"line number1 index0 alt2\">\n        1\n       </div> </td> \n      <td class=\"code\"> \n       <div class=\"container\"> \n        <div class=\"line number1 index0 alt2\">\n         <code class=\"java plain\">ReentrantLock lock =&nbsp;</code>\n         <code class=\"java keyword\">new</code>&nbsp;\n         <code class=\"java plain\">ReentrantLock(</code>\n         <code class=\"java keyword\">true</code>\n         <code class=\"java plain\">);</code>\n        </div> \n       </div> </td> \n     </tr> \n    </tbody> \n   </table> \n  </div> \n </div> \n</div> \n<p>&nbsp;　　如果参数为true表示为公平锁，为fasle为非公平锁。默认情况下，如果使用无参构造器，则是非公平锁。</p> \n<p>　　<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527201825203.jpg\" title=\"\" alt=\"\"></p> \n<p>　　另外在ReentrantLock类中定义了很多方法，比如：</p> \n<p>　　isFair()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //判断锁是否是公平锁</p> \n<p>　　isLocked()&nbsp;&nbsp;&nbsp; //判断锁是否被任何线程获取了</p> \n<p>　　isHeldByCurrentThread()&nbsp;&nbsp; //判断锁是否被当前线程获取了</p> \n<p>　　hasQueuedThreads()&nbsp;&nbsp; //判断是否有线程在等待该锁</p> \n<p>　　在ReentrantReadWriteLock中也有类似的方法，同样也可以设置为公平锁和非公平锁。不过要记住，ReentrantReadWriteLock并未实现Lock接口，它实现的是ReadWriteLock接口。</p> \n<p>　　4.读写锁</p> \n<p>　　读写锁将对一个资源（比如文件）的访问分成了2个锁，一个读锁和一个写锁。</p> \n<p>　　正因为有了读写锁，才使得多个线程之间的读操作不会发生冲突。</p> \n<p>　　ReadWriteLock就是读写锁，它是一个接口，ReentrantReadWriteLock实现了这个接口。</p> \n<p>　　可以通过readLock()获取读锁，通过writeLock()获取写锁。</p> \n<p>　　上面已经演示过了读写锁的使用方法，在此不再赘述。</p>',NULL,0,2,1,0,0,'Java并发编程：Lock今天看了并发实践这本书的ReentantLock这章，感觉对ReentantLock还是不够熟悉，有许多疑问，所有在网上找了很多文章看了一下，总体说的不够详细，重点和焦点问','java锁',1,'2020-05-27 20:18:26','2020-05-27 22:04:27'),(116,'我们常说的 CAS 自旋锁是什么',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<blockquote> \n <p>CAS（Compare and swap），即比较并交换，也是实现我们平时所说的自旋锁或乐观锁的核心操作。</p> \n</blockquote> \n<p>它的实现很简单，就是用一个预期的值和内存值进行比较，如果两个值相等，就用预期的值替换内存值，并返回 true。否则，返回 false。</p> \n<h3 id=\"保证原子操作\"><strong>保证原子操作</strong></h3> \n<p>任何技术的出现都是为了解决某些特定的问题， CAS 要解决的问题就是保证原子操作。原子操作是什么，原子就是最小不可拆分的，原子操作就是最小不可拆分的操作，也就是说操作一旦开始，就不能被打断，直到操作完成。在多线程环境下，原子操作是保证线程安全的重要手段。举个例子来说，假设有两个线程在工作，都想对某个值做修改，就拿自增操作来说吧，要对一个整数 i 进行自增操作，需要基本的三个步骤：</p> \n<p>1、读取 i 的当前值；</p> \n<p>2、对 i 值进行加 1 操作；</p> \n<p>3、将 i 值写回内存；</p> \n<p>假设两个进程都读取了 i 的当前值，假设是 0，这时候 A 线程对 i 加 1 了，B 线程也 加 1，最后 i 的是 1 ，而不是 2。这就是因为自增操作不是原子操作，分成的这三个步骤可以被干扰。如下面这个例子，10个线程，每个线程都执行 10000 次 i++ 操作，我们期望的值是 100,000，但是很遗憾，结果总是小于 100,000 的。</p> \n<pre><code class=\"language-java\">	  \n    static int i = 0;\n    \n    public static void add(){\n        i++;\n    }\n    \n    private static class Plus implements Runnable{\n\n        @Override\n        public void run(){\n            for(int k = 0;k&lt;10000;k++){\n                add();\n            }\n        }\n    }\n    \n    public static void main(String[] args) throws InterruptedException{\n        Thread[] threads = new Thread[10];\n        for(int i = 0;i&lt;10;i++){\n            threads[i] = new Thread(new Plus());\n            threads[i].start();\n        }\n\n        for(int i = 0;i&lt;10;i++){\n            threads[i].join();\n        }\n        System.out.println(i);\n    }\n</code></pre> \n<p>既然这样，那怎么办。没错，也许你已经想到了，可以加锁或者利用 synchronized 实现，例如，将 add() 方法修改为如下这样：</p> \n<pre><code class=\"language-java\">public synchronized static void add(){\n        i++;\n    }\n</code></pre> \n<p>或者，加锁操作，例如下面使用 ReentrantLock （可重入锁）实现。</p> \n<pre><code class=\"language-java\">private static Lock lock = new ReentrantLock();\n    public static void add(){\n        lock.lock();\n        i++;\n        lock.unlock();\n    }\n</code></pre> \n<h3 id=\"cas-实现自旋锁\"><strong>CAS 实现自旋锁</strong></h3> \n<p>既然用锁或 synchronized 关键字可以实现原子操作，那么为什么还要用 CAS 呢，因为加锁或使用 synchronized 关键字带来的性能损耗较大，而用 CAS 可以实现乐观锁，它实际上是直接利用了 CPU 层面的指令，所以性能很高。</p> \n<p>上面也说了，CAS 是实现自旋锁的基础，CAS 利用 CPU 指令保证了操作的原子性，以达到锁的效果，至于自旋呢，看字面意思也很明白，自己旋转，翻译成人话就是循环，一般是用一个无限循环实现。这样一来，一个无限循环中，执行一个 CAS 操作，当操作成功，返回 true 时，循环结束；当返回 false 时，接着执行循环，继续尝试 CAS 操作，直到返回 true。</p> \n<p>其实 JDK 中有好多地方用到了 CAS ,尤其是<code> java.util.concurrent</code>包下，比如 CountDownLatch、Semaphore、ReentrantLock 中，再比如 <code>java.util.concurrent.atomic</code> 包下，相信大家都用到过 Atomic* ，比如 AtomicBoolean、AtomicInteger 等。</p> \n<p>这里拿 AtomicBoolean 来举个例子，因为它足够简单。</p> \n<pre><code class=\"language-java\">public class AtomicBoolean implements java.io.Serializable {\n    private static final long serialVersionUID = 4654671469794556979L;\n    // setup to use Unsafe.compareAndSwapInt for updates\n    private static final Unsafe unsafe = Unsafe.getUnsafe();\n    private static final long valueOffset;\n\n    static {\n        try {\n            valueOffset = unsafe.objectFieldOffset\n                (AtomicBoolean.class.getDeclaredField(\"value\"));\n        } catch (Exception ex) { throw new Error(ex); }\n    }\n\n    private volatile int value;\n    \n    public final boolean get() {\n        return value != 0;\n    }\n\n    public final boolean compareAndSet(boolean expect, boolean update) {\n        int e = expect ? 1 : 0;\n        int u = update ? 1 : 0;\n        return unsafe.compareAndSwapInt(this, valueOffset, e, u);\n    }\n   \n  }\n</code></pre> \n<p>这是 AtomicBoolean 的部分代码，我们看到这里面又几个关键方法和属性。</p> \n<p>1、使用了 sun.misc.Unsafe 对象，这个类提供了一系列直接操作内存对象的方法，只是在 jdk 内部使用，不建议开发者使用；</p> \n<p>2、value 表示实际值，可以看到 get 方法实际是根据 value 是否等于0来判断布尔值的，这里的 value 定义为 volatile，因为 volatile 可以保证内存可见性，也就是 value 值只要发生变化，其他线程是马上可以看到变化后的值的；<strong>下一篇会讲一下 volatile 可见性问题，欢迎关注</strong></p> \n<p>3、valueOffset 是 value 值的内存偏移量，用 unsafe.objectFieldOffset 方法获得，用作后面的 compareAndSet 方法；</p> \n<p>4、compareAndSet 方法，这就是实现 CAS 的核心方法了，在使用 AtomicBoolean 的这个方法时，只需要传递期望值和待更新的值即可，而它里面调用了 unsafe.compareAndSwapInt(this, valueOffset, e, u) 方法，它是个 native 方法，用 c++ 实现，具体的代码就不贴了，总之是利用了 CPU 的 cmpxchg 指令完成比较并替换，当然根据具体的系统版本不同，实现起来也有所区别，感兴趣的可以自行搜一下相关文章。</p> \n<h3 id=\"使用场景\"><strong>使用场景</strong></h3> \n<ul> \n <li>CAS 适合简单对象的操作，比如布尔值、整型值等；</li> \n <li>CAS 适合冲突较少的情况，如果太多线程在同时自旋，那么长时间循环会导致 CPU 开销很大；</li> \n</ul> \n<p>比如 AtomicBoolean 可以用在这样一个场景下，系统需要根据一个布尔变量的状态属性来判断是否需要执行一些初始化操作，如果是多线程的环境下，避免多次重复执行，可以使用 AtomicBoolean 来实现，伪代码如下：</p> \n<pre><code class=\"language-java\">private final static AtomicBoolean flag = new AtomicBoolean();\n    if(flag.compareAndSet(false,true)){\n        init();\n    }\n</code></pre> \n<p>比如 AtomicInteger 可以用在计数器中，多线程环境中，保证计数准确。</p> \n<h3 id=\"aba问题\"><strong>ABA问题</strong></h3> \n<p>CAS 存在一个问题，就是一个值从 A 变为 B ，又从 B 变回了 A，这种情况下，CAS 会认为值没有发生过变化，但实际上是有变化的。对此，并发包下倒是有 AtomicStampedReference 提供了根据版本号判断的实现，可以解决一部分问题。</p> \n<p>微信公众号，多谢关注：<br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527203045276.png\" title=\"\" alt=\"\"></p>',NULL,0,2,1,0,0,'CAS（Compareandswap），即比较并交换，也是实现我们平时所说的自旋锁或乐观锁的核心操作。它的实现很简单，就是用一个预期的值和内存值进行比较，如果两个值相等，就用预期的值替换内存值，','CAS',1,'2020-05-27 20:30:45','2020-05-27 22:03:48'),(117,'【Java】线程池的作用',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p><span style=\"font-size: 14px;\">在程序启动的时候就创建若干线程来响应处理，它们被称为线程池，里面的线程叫工作线程&nbsp;</span><br><span style=\"font-size: 14px;\">　　<strong>第一</strong>：降低资源消耗。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。&nbsp;</span><br><span style=\"font-size: 14px;\">　　<strong>第二</strong>：提高响应速度。当任务到达时，任务可以不需要等到线程创建就能立即执行。&nbsp;</span><br><span style=\"font-size: 14px;\">　　<strong>第三</strong>：提高线程的可管理性。&nbsp;</span><br><span style=\"font-size: 14px;\">常用线程池：ExecutorService 是主要的实现类，其中常用的有 :</span><br><span style=\"font-size: 14px;\">Executors.newSingleThreadPool()</span></p> \n<p><span style=\"font-size: 14px;\">&nbsp; &nbsp; 　　newFixedThreadPool()</span></p> \n<p><span style=\"font-size: 14px;\">&nbsp; &nbsp; 　　newcachedTheadPool()</span></p> \n<p>&nbsp; &nbsp;　　&nbsp;<span style=\"font-size: 14px;\">newScheduledThreadPool()</span></p>',NULL,0,2,1,0,0,'在程序启动的时候就创建若干线程来响应处理，它们被称为线程池，里面的线程叫工作线程第一：降低资源消耗。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。第二：提高响应速度。当任务到达时，任务可以','线程池',1,'2020-05-27 20:32:35','2020-05-27 22:03:15'),(119,'高并发编程系列：ConcurrentHashMap的实现原理(JDK1.7和JDK1.8)',1,'http://p99.pstatp.com/large/pgc-image/710c228d6c124dc29b871ba93931e939',NULL,0,'<p>HashMap、CurrentHashMap 的实现原理基本都是BAT面试必考内容，<a title=\"\" href=\"http://youzhixueyuan.com/the-underlying-structure-and-principle-of-hashmap.html\" target=\"_blank\" data-original-title=\"\">阿里P8架构师谈：深入探讨HashMap的底层结构、原理、扩容机制</a>深入谈过hashmap的实现原理以及在JDK 1.8的实现区别，今天主要谈CurrentHashMap的实现原理，以及在JDK1.7和1.8的区别。</p> \n<blockquote> \n <p>内容目录：</p> \n <p>1.哈希表</p> \n <p>2.ConcurrentHashMap与HashMap、HashTable的区别</p> \n <p>3.CurrentHashMap在JDK1.7和JDK1.8版本的区别</p> \n</blockquote> \n<div class=\"pgc-img\">\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527205122631.png\" title=\"\" alt=\"并发编程系列：ConcurrentHashMap的实现原理(JDK1.7和JDK1.8)\">\n</div> \n<h2>哈希表</h2> \n<p>1.介绍</p> \n<p>&nbsp;</p> \n<p>哈希表就是一种以 键-值(key-indexed) 存储数据的结构，我们只要输入待查找的值即key，即可查找到其对应的值。</p> \n<p>哈希的思路很简单，如果所有的键都是整数，那么就可以使用一个简单的无序数组来实现：将键作为索引，值即为其对应的值，这样就可以快速访问任意键的值。这是对于简单的键的情况，我们将其扩展到可以处理更加复杂的类型的键。</p> \n<p>&nbsp;</p> \n<p>2.链式哈希表</p> \n<p>链式哈希表从根本上说是由一组链表构成。每个链表都可以看做是一个“桶”，我们将所有的元素通过散列的方式放到具体的不同的桶中。插入元素时，首先将其键传入一个哈希函数（该过程称为哈希键），函数通过散列的方式告知元素属于哪个“桶”，然后在相应的链表头插入元素。查找或删除元素时，用同们的方式先找到元素的“桶”，然后遍历相应的链表，直到发现我们想要的元素。因为每个“桶”都是一个链表，所以链式哈希表并不限制包含元素的个数。然而，如果表变得太大，它的性能将会降低。</p> \n<p>&nbsp;</p> \n<p>&nbsp;<img src=\"http://youzhixueyuan.com/wp-content/uploads/2018/11/20181114113450_30847.jpg\" title=\"高并发编程系列：ConcurrentHashMap的实现原理(JDK1.7和JDK1.8)\" alt=\"高并发编程系列：ConcurrentHashMap的实现原理(JDK1.7和JDK1.8)\"></p> \n<p>&nbsp;</p> \n<p>3.应用场景</p> \n<p>&nbsp;</p> \n<p>我们熟知的缓存技术（比如redis、memcached）的核心其实就是在内存中维护一张巨大的哈希表，还有大家熟知的HashMap、CurrentHashMap等的应用。</p> \n<p>&nbsp;</p> \n<h2>ConcurrentHashMap与HashMap等的区别</h2> \n<p>1.HashMap</p> \n<p>我们知道HashMap是线程不安全的，在多线程环境下，使用Hashmap进行put操作会引起死循环，导致CPU利用率接近100%，所以在并发情况下不能使用HashMap。</p> \n<p>&nbsp;</p> \n<p>2.HashTable</p> \n<p>HashTable和HashMap的实现原理几乎一样，差别无非是</p> \n<ul> \n <li>&nbsp;HashTable不允许key和value为null</li> \n <li>&nbsp;HashTable是线程安全的</li> \n</ul> \n<p>但是HashTable线程安全的策略实现代价却太大了，简单粗暴，get/put所有相关操作都是synchronized的，这相当于给整个哈希表加了一把大锁。</p> \n<p>多线程访问时候，只要有一个线程访问或操作该对象，那其他线程只能阻塞，相当于将所有的操作串行化，在竞争激烈的并发场景中性能就会非常差。</p> \n<p>&nbsp;</p> \n<p>3.ConcurrentHashMap</p> \n<p>主要就是为了应对hashmap在并发环境下不安全而诞生的，ConcurrentHashMap的设计与实现非常精巧，大量的利用了volatile，final，CAS等lock-free技术来减少锁竞争对于性能的影响。</p> \n<p>我们都知道Map一般都是数组+链表结构（JDK1.8该为数组+红黑树）。</p> \n<p><img src=\"http://youzhixueyuan.com/wp-content/uploads/2018/11/20181114110627_73725.jpg\" title=\"高并发编程系列：ConcurrentHashMap的实现原理(JDK1.7和JDK1.8)\" alt=\"高并发编程系列：ConcurrentHashMap的实现原理(JDK1.7和JDK1.8)\"></p> \n<p>ConcurrentHashMap避免了对全局加锁改成了局部加锁操作，这样就极大地提高了并发环境下的操作速度，由于ConcurrentHashMap在JDK1.7和1.8中的实现非常不同，接下来我们谈谈JDK在1.7和1.8中的区别。</p> \n<h2>JDK1.7版本的CurrentHashMap的实现原理</h2> \n<p>&nbsp;</p> \n<p>在JDK1.7中ConcurrentHashMap采用了数组+Segment+分段锁的方式实现。</p> \n<p>&nbsp;</p> \n<p>1.Segment(分段锁)</p> \n<p>&nbsp;</p> \n<p>ConcurrentHashMap中的分段锁称为Segment，它即类似于HashMap的结构，即内部拥有一个Entry数组，数组中的每个元素又是一个链表,同时又是一个ReentrantLock（Segment继承了ReentrantLock）。</p> \n<p>&nbsp;</p> \n<p>2.内部结构</p> \n<p>ConcurrentHashMap使用分段锁技术，将数据分成一段一段的存储，然后给每一段数据配一把锁，当一个线程占用锁访问其中一个段数据的时候，其他段的数据也能被其他线程访问，能够实现真正的并发访问。如下图是ConcurrentHashMap的内部结构图：</p> \n<div class=\"pgc-img\">\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527205123338.png\" title=\"\" alt=\"并发编程系列：ConcurrentHashMap的实现原理(JDK1.7和JDK1.8)\">\n</div> \n<p class=\"ql-align-justify\">从上面的结构我们可以了解到，ConcurrentHashMap定位一个元素的过程需要进行两次Hash操作。</p> \n<p class=\"ql-align-justify\">第一次Hash定位到Segment，第二次Hash定位到元素所在的链表的头部。</p> \n<p class=\"ql-align-justify\">&nbsp;</p> \n<p class=\"ql-align-justify\">3.该结构的优劣势</p> \n<p class=\"ql-align-justify\"><strong>坏处</strong></p> \n<p class=\"ql-align-justify\">这一种结构的带来的副作用是Hash的过程要比普通的HashMap要长</p> \n<p class=\"ql-align-justify\">&nbsp;</p> \n<p class=\"ql-align-justify\">好处</p> \n<p class=\"ql-align-justify\">写操作的时候可以只对元素所在的Segment进行加锁即可，不会影响到其他的Segment，这样，在最理想的情况下，ConcurrentHashMap可以最高同时支持Segment数量大小的写操作（刚好这些写操作都非常平均地分布在所有的Segment上）。</p> \n<p class=\"ql-align-justify\">&nbsp;</p> \n<p class=\"ql-align-justify\">所以，通过这一种结构，ConcurrentHashMap的并发能力可以大大的提高。</p> \n<h2>JDK1.8版本的CurrentHashMap的实现原理</h2> \n<p>JDK8中ConcurrentHashMap参考了JDK8 HashMap的实现，采用了数组+链表+红黑树的实现方式来设计，内部大量采用CAS操作，这里我简要介绍下CAS。</p> \n<p>CAS是compare and swap的缩写，即我们所说的比较交换。cas是一种基于锁的操作，而且是乐观锁。在java中锁分为乐观锁和悲观锁。悲观锁是将资源锁住，等一个之前获得锁的线程释放锁之后，下一个线程才可以访问。而乐观锁采取了一种宽泛的态度，通过某种方式不加锁来处理资源，比如通过给记录加version来获取数据，性能较悲观锁有很大的提高。</p> \n<p>CAS 操作包含三个操作数 —— 内存位置（V）、预期原值（A）和新值(B)。如果内存地址里面的值和A的值是一样的，那么就将内存里面的值更新成B。CAS是通过无限循环来获取数据的，若果在第一轮循环中，a线程获取地址里面的值被b线程修改了，那么a线程需要自旋，到下次循环才有可能机会执行。</p> \n<div>\n &nbsp;\n</div> \n<p>JDK8中彻底放弃了Segment转而采用的是Node，其设计思想也不再是JDK1.7中的分段锁思想。</p> \n<p>&nbsp;</p> \n<p>Node：保存key，value及key的hash值的数据结构。其中value和next都用volatile修饰，保证并发的可见性。</p> \n<p>&nbsp;</p> \n<pre class=\"prettyprint lang-java\"><span class=\"pun\">&lt;<span class=\"pln\">strong<span class=\"pun\">&gt;<span class=\"kwd\">class<span class=\"pln\"> <span class=\"typ\">Node<span class=\"pun\">&lt;<span class=\"pln\">K<span class=\"pun\">,<span class=\"pln\">V<span class=\"pun\">&gt;<span class=\"pln\"> <span class=\"kwd\">implements<span class=\"pln\"> <span class=\"typ\">Map<span class=\"pun\">.<span class=\"typ\">Entry<span class=\"pun\">&lt;<span class=\"pln\">K<span class=\"pun\">,<span class=\"pln\">V<span class=\"pun\">&gt;<span class=\"pln\"> <span class=\"pun\">{<span class=\"pln\"> <span class=\"kwd\">final<span class=\"pln\"> <span class=\"kwd\">int<span class=\"pln\"> hash<span class=\"pun\">;<span class=\"pln\"> <span class=\"kwd\">final<span class=\"pln\"> K key<span class=\"pun\">;<span class=\"pln\"> <span class=\"kwd\">volatile<span class=\"pln\"> V val<span class=\"pun\">;<span class=\"pln\"> <span class=\"kwd\">volatile<span class=\"pln\"> <span class=\"typ\">Node<span class=\"pun\">&lt;<span class=\"pln\">K<span class=\"pun\">,<span class=\"pln\">V<span class=\"pun\">&gt;<span class=\"pln\"> next<span class=\"pun\">;<span class=\"pln\"> <span class=\"com\">//... 省略部分代码<span class=\"pln\"> <span class=\"pun\">}<span class=\"pln\"> <span class=\"pun\">&lt;/<span class=\"pln\">strong<span class=\"pun\">&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre> \n<p>&nbsp;</p> \n<p>&nbsp;</p> \n<p>Java8 ConcurrentHashMap结构基本上和Java8的HashMap一样，不过保证线程安全性。</p> \n<p>&nbsp;</p> \n<p>&nbsp;</p> \n<p>在JDK8中ConcurrentHashMap的结构，由于引入了红黑树，使得ConcurrentHashMap的实现非常复杂，我们都知道，红黑树是一种性能非常好的二叉查找树，其查找性能为O（logN），但是其实现过程也非常复杂，而且可读性也非常差，Doug<br>Lea的思维能力确实不是一般人能比的，早期完全采用链表结构时Map的查找时间复杂度为O（N），JDK8中ConcurrentHashMap在链表的长度大于某个阈值的时候会将链表转换成红黑树进一步提高其查找性能。</p> \n<div class=\"pgc-img\">\n <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527205122681.png\" title=\"\" alt=\"并发编程系列：ConcurrentHashMap的实现原理(JDK1.7和JDK1.8)\">\n</div> \n<h2>总结</h2> \n<p>其实可以看出JDK1.8版本的ConcurrentHashMap的数据结构已经接近HashMap，相对而言，ConcurrentHashMap只是增加了同步的操作来控制并发，从JDK1.7版本的ReentrantLock+Segment+HashEntry，到JDK1.8版本中synchronized+CAS+HashEntry+红黑树。</p> \n<p>1.数据结构：取消了Segment分段锁的数据结构，取而代之的是数组+链表+红黑树的结构。<br>2.保证线程安全机制：JDK1.7采用segment的分段锁机制实现线程安全，其中segment继承自ReentrantLock。JDK1.8采用CAS+Synchronized保证线程安全。<br>3.锁的粒度：原来是对需要进行数据操作的Segment加锁，现调整为对每个数组元素加锁（Node）。<br>4.链表转化为红黑树:定位结点的hash算法简化会带来弊端,Hash冲突加剧,因此在链表节点数量大于8时，会将链表转化为红黑树进行存储。<br>5.查询时间复杂度：从原来的遍历链表O(n)，变成遍历红黑树O(logN)。</p>',NULL,0,2,1,0,0,'HashMap、CurrentHashMap的实现原理基本都是BAT面试必考内容，阿里P8架构师谈：深入探讨HashMap的底层结构、原理、扩容机制深入谈过hashmap的实现原理以及在JDK1.','HashMap、CurrentHashMap',1,'2020-05-27 20:51:23','2020-05-27 22:02:43'),(120,'HashMap面试必问的数据结构相关知识总结',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>　　如果在看这篇文章时,对HashMap的结构还不是很了解,建议你参考前段时间写的<a href=\"https://www.cnblogs.com/Young111/p/11471049.html\" target=\"_blank\">《刨死你系列——HashMap剖析(基于jdk1.8)》</a>，可能会对下面的提及到知识点有些帮助。</p> \n<p><strong>1：HashMap 的数据结构？</strong></p> \n<p>A：哈希表结构（链表散列：数组+链表）实现，结合数组和链表的优点。当链表长度超过&nbsp;8&nbsp;时，链表转换为红黑树。<br>transient Node&lt;K,V&gt;[] table;</p> \n<p><strong>2：HashMap 的工作原理？</strong></p> \n<p>　　HashMap 底层是&nbsp;hash 数组和单向链表实现，数组中的每个元素都是链表，由&nbsp;Node 内部类（实现 Map.Entry&lt;K,V&gt;接口）实现，HashMap 通过 put &amp; get 方法存储和获取。</p> \n<p>存储对象时，将 K/V 键值传给 put() 方法：</p> \n<p>　　①、调用 hash(K) 方法计算 K 的 hash 值，然后结合数组长度，计算得数组下标；</p> \n<p>　　②、调整数组大小（当容器中的元素个数大于 capacity * loadfactor 时，容器会进行扩容resize 为 2n）；<br>　　③、i.如果&nbsp;K 的 hash 值在 HashMap 中不存在，则执行插入，若存在，则发生碰撞；<br>　　　　ii.如果 K 的 hash 值在 HashMap 中存在，且它们两者&nbsp;equals 返回 true，则更新键值对；<br>　　　　iii. 如果 K 的 hash 值在 HashMap 中存在，且它们两者&nbsp;equals 返回 false，则插入链表的尾部（尾插法）或者红黑树中（树的添加方式）。</p> \n<p>（JDK 1.7&nbsp;之前使用头插法、JDK 1.8&nbsp;使用尾插法）<br>（注意：当碰撞导致链表大于 TREEIFY_THRESHOLD = 8 时，就把链表转换成红黑树）</p> \n<p>　　获取对象时，将 K 传给 get() 方法：①、调用 hash(K) 方法（计算 K 的 hash 值）从而获取该键值所在链表的数组下标；②、顺序遍历链表，equals()方法查找相同 Node 链表中 K 值对应的 V 值。</p> \n<p>hashCode 是定位的，存储位置；equals是定性的，比较两者是否相等。</p> \n<p><strong>3.当两个对象的 hashCode 相同会发生什么？</strong></p> \n<p>　　因为 hashCode 相同，不一定就是相等的（equals方法比较），所以两个对象所在数组的下标相同，\"碰撞\"就此发生。又因为 HashMap 使用链表存储对象，这个 Node 会存储到链表中。</p> \n<p><strong>4.你知道 hash 的实现吗？为什么要这样实现？</strong></p> \n<p>　　JDK 1.8 中，是通过 hashCode() 的高 16 位异或低 16 位实现的：(h = k.hashCode()) ^ (h &gt;&gt;&gt; 16)，主要是从速度，功效和质量来考虑的，减少系统的开销，也不会造成因为高位没有参与下标的计算，从而引起的碰撞。</p> \n<p><strong>5.为什么要用异或运算符？</strong><br>　　保证了对象的 hashCode 的 32 位值只要有一位发生改变，整个 hash() 返回值就会改变。尽可能的减少碰撞。</p> \n<p><strong>6.HashMap 的 table 的容量如何确定？loadFactor 是什么？ 该容量如何变化？这种变化会带来什么问题？</strong></p> \n<p>　　①、table 数组大小是由&nbsp;capacity&nbsp;这个参数确定的，默认是16，也可以构造时传入，最大限制是1&lt;&lt;30；<br>　　②、loadFactor 是装载因子，主要目的是用来确认table 数组是否需要动态扩展，默认值是0.75，比如table 数组大小为 16，装载因子为 0.75 时，threshold 就是12，当 table 的实际大小超过 12 时，table就需要动态扩容；<br>　　③、扩容时，调用 resize() 方法，将&nbsp;table 长度变为原来的两倍（注意是&nbsp;table 长度，而不是 threshold）<br>　　④、如果数据很大的情况下，扩展时将会带来性能的损失，在性能要求很高的地方，这种损失很可能很致命。</p> \n<p><strong>7.HashMap中put方法的过程？</strong></p> \n<ul> \n <li>答：“调用哈希函数获取Key对应的hash值，再计算其数组下标；</li> \n <li>如果没有出现哈希冲突，则直接放入数组；如果出现哈希冲突，则以链表的方式放在链表后面；</li> \n <li>如果链表长度超过阀值( TREEIFY THRESHOLD==8)，就把链表转成红黑树，链表长度低于6，就把红黑树转回链表;</li> \n <li>如果结点的key已经存在，则替换其value即可；</li> \n <li>如果集合中的键值对大于12，调用resize方法进行数组扩容。”</li> \n</ul> \n<p><strong>8.数组扩容的过程？</strong></p> \n<p>　　创建一个新的数组，其容量为旧数组的两倍，并重新计算旧数组中结点的存储位置。结点在新数组中的位置只有两种，原下标位置或原下标+旧数组的大小。</p> \n<p><strong>9.<span class=\"bjh-h3\">拉链法导致的链表过深问题为什么不用二叉查找树代替，而选择红黑树？为什么不一直使用红黑树？</span></strong></p> \n<p><strong><span class=\"bjh-h3\">　　</span></strong><span class=\"bjh-p\">之所以选择红黑树是为了解决二叉查找树的缺陷，二叉查找树在特殊情况下会变成一条线性结构（这就跟原来使用链表结构一样了，造成很深的问题），遍历查找会非常慢。而红黑树在插入新数据后可能需要通过左旋，右旋、变色这些操作来保持平衡，引入红黑树就是为了查找数据快，解决链表查询深度的问题，我们知道红黑树属于平衡二叉树，但是为了保持“平衡”是需要付出代价的，但是该代价所损耗的资源要比遍历线性链表要少，所以当长度大于8的时候，会使用红黑树，如果链表长度很短的话，根本不需要引入红黑树，引入反而会慢。</span></p> \n<p><strong><span class=\"bjh-p\">10.说说你对红黑树的见解？</span></strong></p> \n<ul> \n <li><span class=\"bjh-p\">1、每个节点非红即黑</span></li> \n <li><span class=\"bjh-p\">2、根节点总是黑色的</span></li> \n <li><span class=\"bjh-p\">3、如果节点是红色的，则它的子节点必须是黑色的（反之不一定）</span></li> \n <li><span class=\"bjh-p\">4、每个叶子节点都是黑色的空节点（NIL节点）</span></li> \n <li><span class=\"bjh-p\">5、从根节点到叶节点或空子节点的每条路径，必须包含相同数目的黑色节点（即相同的黑色高度）</span></li> \n</ul> \n<p><strong>11.jdk8中对HashMap做了哪些改变？</strong></p> \n<ul> \n <li>在java 1.8中，如果链表的长度超过了8，那么链表将转换为红黑树。（桶的数量必须大于64，小于64的时候只会扩容）</li> \n <li>发生hash碰撞时，java 1.7 会在链表的头部插入，而java 1.8会在链表的尾部插入</li> \n <li>在java 1.8中，Entry被Node替代(换了一个马甲)。</li> \n</ul> \n<p><strong>12.HashMap，LinkedHashMap，TreeMap 有什么区别？</strong></p> \n<p>　　HashMap 参考其他问题；<br>　　LinkedHashMap&nbsp;保存了记录的插入顺序，在用 Iterator 遍历时，先取到的记录肯定是先插入的；遍历比 HashMap 慢；<br>　　TreeMap&nbsp;实现&nbsp;SortMap&nbsp;接口，能够把它保存的记录根据键排序（默认按键值升序排序，也可以指定排序的比较器）</p> \n<p><strong>13.HashMap &amp; TreeMap &amp; LinkedHashMap 使用场景？</strong></p> \n<p>　　一般情况下，使用最多的是&nbsp;HashMap。<br>　　HashMap：在 Map 中插入、删除和定位元素时；<br>　　TreeMap：在需要按自然顺序或自定义顺序遍历键的情况下；<br>　　LinkedHashMap：在需要输出的顺序和输入的顺序相同的情况下。</p> \n<p><strong>14.HashMap 和 HashTable 有什么区别？</strong></p> \n<p>　　①、HashMap&nbsp;是线程不安全的，HashTable&nbsp;是线程安全的；<br>　　②、由于线程安全，所以 HashTable 的效率比不上 HashMap；<br>　　③、HashMap最多只允许一条记录的键为null，允许多条记录的值为null，而&nbsp;HashTable不允许；<br>　　④、HashMap&nbsp;默认初始化数组的大小为16，HashTable&nbsp;为&nbsp;11，前者扩容时，扩大两倍，后者扩大两倍+1；<br>　　⑤、HashMap 需要重新计算 hash 值，而 HashTable 直接使用对象的 hashCode</p> \n<p><strong>15.Java 中的另一个线程安全的与 HashMap 极其类似的类是什么？同样是线程安全，它与 HashTable 在线程同步上有什么不同？</strong></p> \n<p>　　ConcurrentHashMap&nbsp;类（是 Java并发包 java.util.concurrent 中提供的一个线程安全且高效的 HashMap 实现）。<br>　　HashTable&nbsp;是使用&nbsp;synchronize&nbsp;关键字加锁的原理（就是对对象加锁）；<br>　　而针对&nbsp;ConcurrentHashMap，在&nbsp;JDK 1.7&nbsp;中采用&nbsp;分段锁的方式；JDK 1.8&nbsp;中直接采用了CAS（无锁算法）+ synchronized。</p> \n<p><strong>16.HashMap &amp; ConcurrentHashMap 的区别？</strong></p> \n<p>　　除了加锁，原理上无太大区别。另外，HashMap 的键值对允许有null，但是ConCurrentHashMap 都不允许。</p> \n<p><strong>17.为什么 ConcurrentHashMap 比 HashTable 效率要高？</strong></p> \n<p>　　HashTable&nbsp;使用一把锁（锁住整个链表结构）处理并发问题，多个线程竞争一把锁，容易阻塞；</p> \n<p>　　ConcurrentHashMap&nbsp;</p> \n<ul> \n <li>JDK 1.7&nbsp;中使用分段锁（ReentrantLock + Segment + HashEntry），相当于把一个 HashMap 分成多个段，每段分配一把锁，这样支持多线程访问。锁粒度：基于 Segment，包含多个 HashEntry。</li> \n <li>JDK 1.8&nbsp;中使用&nbsp;CAS + synchronized + Node + 红黑树。锁粒度：Node（首结点）（实现 Map.Entry&lt;K,V&gt;）。锁粒度降低了。</li> \n</ul> \n<p><strong>18.针对 ConcurrentHashMap 锁机制具体分析（JDK 1.7 VS JDK 1.8）？</strong></p> \n<p>　　JDK 1.7&nbsp;中，采用分段锁的机制，实现并发的更新操作，底层采用数组+链表的存储结构，包括两个核心静态内部类&nbsp;Segment 和 HashEntry。<br>　　　　①、Segment&nbsp;继承&nbsp;ReentrantLock（重入锁）&nbsp;用来充当锁的角色，每个 Segment 对象守护每个散列映射表的若干个桶；<br>　　　　②、HashEntry 用来封装映射表的键-值对；<br>　　　　③、每个桶是由若干个 HashEntry 对象链接起来的链表</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527210103642.png\" title=\"\" alt=\"\"></p> \n<p>　　JDK 1.8&nbsp;中，采用Node + CAS + Synchronized来保证并发安全。取消类 Segment，直接用&nbsp;table 数组存储键值对；当 HashEntry 对象组成的链表长度超过 TREEIFY_THRESHOLD 时，链表转换为红黑树，提升性能。底层变更为数组 + 链表 + 红黑树。</p> \n<div class=\"image-package\"> \n <div class=\"image-container\"> \n  <div class=\"image-view\" data-width=\"768\" data-height=\"261\">\n   <img src=\"https://upload-images.jianshu.io/upload_images/7779232-1e8ed39548081a1f.png\" title=\"\" alt=\"\">\n  </div> \n </div> \n</div> \n<p>&nbsp;</p> \n<p><strong>19.ConcurrentHashMap 在 JDK 1.8 中，为什么要使用内置锁 synchronized 来代替重入锁 ReentrantLock？</strong></p> \n<p>　　①、粒度降低了；<br>　　②、JVM 开发团队没有放弃 synchronized，而且基于 JVM 的 synchronized&nbsp;优化空间更大，更加自然。<br>　　③、在大量的数据操作下，对于 JVM 的内存压力，基于 API 的&nbsp;ReentrantLock 会开销更多的内存。</p> \n<p><strong>20.ConcurrentHashMap 简单介绍？</strong></p> \n<p>①、重要的常量：<br>　　private transient volatile int&nbsp;sizeCtl;<br>　　当为负数时，-1 表示正在初始化，-N 表示 N - 1 个线程正在进行扩容；<br>　　当为 0 时，表示 table 还没有初始化；<br>　　当为其他正数时，表示初始化或者下一次进行扩容的大小。</p> \n<p>②、数据结构：<br>　　Node 是存储结构的基本单元，继承 HashMap 中的 Entry，用于存储数据；<br>　　TreeNode 继承 Node，但是数据结构换成了二叉树结构，是红黑树的存储结构，用于红黑树中存储数据；<br>　　TreeBin 是封装 TreeNode 的容器，提供转换红黑树的一些条件和锁的控制。</p> \n<p>③、存储对象时（put()&nbsp;方法）：<br>　　1.如果没有初始化，就调用 initTable() 方法来进行初始化；<br>　　2.如果没有 hash 冲突就直接&nbsp;CAS 无锁插入；<br>　　3.如果需要扩容，就先进行扩容；<br>　　4.如果存在 hash 冲突，就加锁来保证线程安全，两种情况：一种是链表形式就直接遍历到尾端插入，一种是红黑树就按照红黑树结构插入；<br>　　5.如果该链表的数量大于阀值 8，就要先转换成红黑树的结构，break 再一次进入循环<br>　　6.如果添加成功就调用&nbsp;addCount() 方法统计 size，并且检查是否需要扩容。</p> \n<p>④、扩容方法 transfer()：默认容量为&nbsp;16，扩容时，容量变为原来的两倍。<br>　　helpTransfer()：调用多个工作线程一起帮助进行扩容，这样的效率就会更高。</p> \n<p>⑤、获取对象时（get()方法）：<br>　　1.计算 hash 值，定位到该 table 索引位置，如果是首结点符合就返回；<br>　　2.如果遇到扩容时，会调用标记正在扩容结点 ForwardingNode.find()方法，查找该结点，匹配就返回；<br>　　3.以上都不符合的话，就往下遍历结点，匹配就返回，否则最后就返回 null。</p> \n<p><strong>21.ConcurrentHashMap 的并发度是什么？</strong></p> \n<p>　　程序运行时能够同时更新 ConccurentHashMap 且不产生锁竞争的最大线程数。默认为 16，且可以在构造函数中设置。当用户设置并发度时，ConcurrentHashMap 会使用大于等于该值的最小2幂指数作为实际并发度（假如用户设置并发度为17，实际并发度则为32）</p> \n<hr> \n<p>有时间会对HashTable，ConcurrentHashmap解析。</p> \n<p>参考博客：<a href=\"https://www.cnblogs.com/heqiyoujing/p/11143298.html\">https://www.cnblogs.com/heqiyoujing/p/11143298.html</a></p> \n<p>　　　　　<a href=\"https://www.jianshu.com/p/75adf47958a7\">https://www.jianshu.com/p/75adf47958a7</a></p>',NULL,0,2,1,0,0,'如果在看这篇文章时,对HashMap的结构还不是很了解,建议你参考前段时间写的《刨死你系列——HashMap剖析(基于jdk1.8)》，可能会对下面的提及到知识点有些帮助。1：HashMap的数据','HashMap',1,'2020-05-27 21:01:04','2020-05-27 22:01:38'),(121,'java中链表和数组的区别？',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p class=\"p\"><span style=\"font-family: 宋体;\">综述：数组是线性结构，可以直接索引，即要去第</span>i<span style=\"font-family: 宋体;\">个元素，</span><span style=\"font-family: Calibri;\">a[i]</span><span style=\"font-family: 宋体;\">即可。链表也是线性结构，要取第</span><span style=\"font-family: Calibri;\">i</span><span style=\"font-family: 宋体;\">个元素，只需用指针往后遍历</span><span style=\"font-family: Calibri;\">i</span><span style=\"font-family: 宋体;\">次就可。貌似链表比数组还要麻烦些，而且效率低些。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">想到这些相同处中的一些细微的不同处，于是他们的真正不同处渐渐显现了：链表的效率为何比数组低些？先从两者的初始化开始。数组无需初始化，因为数组的元素在内存的栈区，系统自动申请空间。而链表的结点元素在内存的堆区，每个元素须手动申请空间，如</span>malloc<span style=\"font-family: 宋体;\">。也就是说数组是静态分配内存，而链表是动态分配内存。链表如此麻烦为何还要用链表呢？数组不能完全代替链表吗？为何那时候要用链表？因为管理系统中的插入，删除等操作都很灵活，而数组则大小固定，也无法灵活高效的插入，删除。因为堆操作灵活性更强。数组每次插入一个元素就需要移动已有元素，而链表元素在堆上，无需这么麻烦。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">说了这么多，数组和链表的区别整理如下：</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">数组静态分配内存，链表动态分配内存；</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">数组在内存中连续，链表不连续；</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">数组元素在栈区，链表元素在堆区；</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">数组利用下标定位，时间复杂度为</span>O(1)<span style=\"font-family: 宋体;\">，链表定位元素时间复杂度</span><span style=\"font-family: Calibri;\">O(n)</span><span style=\"font-family: 宋体;\">；</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">数组插入或删除元素的时间复杂度</span>O(n)<span style=\"font-family: 宋体;\">，链表的时间复杂度</span><span style=\"font-family: Calibri;\">O(1)</span><span style=\"font-family: 宋体;\">。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">&nbsp;1.数组的特点：</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　i </span><span style=\"font-family: 宋体;\">在内存中，数组是一块连续的区域。</span> 例如看<span style=\"font-family: 宋体;\">电影来说，几个去在电影院看电影必须坐在一起。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">&nbsp; ii 数组需要预留空间，在使用前要先申请占内存的大小，可能会浪费内存空间。</span> <span style=\"font-family: 宋体;\">比如看电影时，为了保证</span>10<span style=\"font-family: 宋体;\">个人能坐在一起，必须提前订好</span><span style=\"font-family: Calibri;\">10</span><span style=\"font-family: 宋体;\">个连续的位置。这样的好处就是能保证</span><span style=\"font-family: Calibri;\">10</span><span style=\"font-family: 宋体;\">个人可以在一起。但是这样的缺点是，如果来的人不够</span><span style=\"font-family: Calibri;\">10</span><span style=\"font-family: 宋体;\">个，那么剩下的位置就浪费了。如果临时有多来了个人，那么</span><span style=\"font-family: Calibri;\">10</span><span style=\"font-family: 宋体;\">个就不够用了，这时可能需要将第</span><span style=\"font-family: Calibri;\">11</span><span style=\"font-family: 宋体;\">个位置上的人挪走，或者是他们</span><span style=\"font-family: Calibri;\">11</span><span style=\"font-family: 宋体;\">个人重新去找一个</span><span style=\"font-family: Calibri;\">11</span><span style=\"font-family: 宋体;\">连坐的位置，效率都很低。如果没有找到符合要求的作为，那么就没法坐了。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">&nbsp; iii 插入数据和删除数据效率低，插入数据时，这个位置后面的数据在内存中都要向后移。删除数据时，这个数据后面的数据都要往前移动。</span> <span style=\"font-family: 宋体;\">比如原来去了</span>5<span style=\"font-family: 宋体;\">个人，然后后来又去了一个人要坐在第三个位置上，那么第三个到第五个都要往后移动一个位子，将第三个位置留给新来的人。 当这个人走了的时候，因为他们要连在一起的，所以他后面几个人要往前移动一个位置，把这个空位补上。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">&nbsp; iiii 随机读取效率很高。因为数组是连续的，知道每一个数据的内存地址，可以直接找到给地址的数据。<span style=\"font-family: 宋体;\">并且不利于扩展，数组定义的空间不够时要重新定义数组</span>。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　2 .链表的特点<br></span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　</span><span style=\"font-family: 宋体;\">i 在内存中可以存在任何地方，不要求连续。</span> <span style=\"font-family: 宋体;\">在电影院几个人可以随便坐。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">&nbsp; ii 每一个数据都保存了下一个数据的内存地址，通过这个地址找到下一个数据。</span> <span style=\"font-family: 宋体;\">第一个人知道第二个人的座位号，第二个人知道第三个人的座位号</span>……</p> \n<p class=\"p\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"font-family: 宋体;\">iii 增加数据和删除数据很容易。</span> <span style=\"font-family: 宋体;\">再来个人可以随便坐，比如来了个人要做到第三个位置，那他只需要把自己的位置告诉第二个人，然后问第二个人拿到原来第三个人的位置就行了。其他人都不用动。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">&nbsp;iiii 查找数据时效率低，因为不具有随机访问性，所以访问某个位置的数据都要从第一个数据开始访问，然后根据第一个数据保存的下一个数据的地址找到第二个数据，以此类推。</span> <span style=\"font-family: 宋体;\">要找到第三个人，必须从第一个人开始问起。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">iiiii 不指定大小，扩展方便。链表大小不用定义，数据随意增删。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">3.各自的优缺点：</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　（1）数组的优点：</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　　　i：随机访问性强</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　　　ii：查询速度快</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　（2）数组的缺点：</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　　　i：增删速度慢</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　　　ii：可能浪费内存</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　　　iii：内存空间要求高，必须有足够大的连续内存存储空间。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　　　iiii：数组的大小固定，不能动态扩展。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　（3）链表的优点</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　　　i：插入删除速度快</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　　　ii：大小不固定，可以动态扩展。</span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\">　　　　iii：<span style=\"font-family: 宋体;\">内存利用率高，不会浪费内存</span></span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\"><span style=\"font-family: 宋体;\">　　（4）链表的缺点：</span></span></p> \n<p class=\"p\"><span style=\"font-family: 宋体;\"><span style=\"font-family: 宋体;\">　　　　i：<span style=\"font-family: 宋体;\">不能随机查找，必须从第一个开始遍历，查找效率低</span></span></span></p> \n<p class=\"p\">&nbsp;</p> \n<p class=\"p\">&nbsp;</p> \n<p class=\"p\">&nbsp;</p> \n<p class=\"p\">&nbsp;</p>',NULL,0,2,1,0,0,'综述：数组是线性结构，可以直接索引，即要去第i个元素，a[i]即可。链表也是线性结构，要取第i个元素，只需用指针往后遍历i次就可。貌似链表比数组还要麻烦些，而且效率低些。想到这些相同处中的一些细微的','数据结构',1,'2020-05-27 21:04:10','2020-05-27 22:01:04'),(122,'数据结构：八大数据结构分类',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<!-- flowchart 箭头图标 勿删 --> \n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display: none;\"> \n <path stroke-linecap=\"round\" d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path> \n</svg> \n<p>本文目录：</p> \n<p></p>\n<div class=\"toc\"> \n <ul> \n  <li><a href=\"#数据结构分类\" rel=\"nofollow\">数据结构分类</a></li> \n  <li><a href=\"#1数组\" rel=\"nofollow\">1、数组</a></li> \n  <li><a href=\"#2栈\" rel=\"nofollow\">2、栈</a></li> \n  <li><a href=\"#3队列\" rel=\"nofollow\">3、队列</a></li> \n  <li><a href=\"#4链表\" rel=\"nofollow\">4、链表</a></li> \n  <li><a href=\"#5树\" rel=\"nofollow\">5、树</a></li> \n  <li><a href=\"#6散列表\" rel=\"nofollow\">6、散列表</a></li> \n  <li><a href=\"#7堆\" rel=\"nofollow\">7、堆</a></li> \n  <li><a href=\"#8图\" rel=\"nofollow\">8、图</a></li> \n </ul> \n</div> \n<p></p> \n<h1 id=\"数据结构分类\">数据结构分类</h1> \n<p>数据结构是指相互之间存在着一种或多种关系的数据元素的集合和该集合中数据元素之间的关系组成 。 <br> 常用的数据结构有：数组，栈，链表，队列，树，图，堆，散列表等，如图所示： <br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527210530436.png\" title=\"\" alt=\"这里写图片描述\"> <br> 每一种数据结构都有着独特的数据存储方式，下面为大家介绍它们的结构和优缺点。</p> \n<h1 id=\"1数组\">1、数组</h1> \n<p>数组是可以再内存中连续存储多个元素的结构，在内存中的分配也是连续的，数组中的元素通过数组下标进行访问，数组下标从0开始。例如下面这段代码就是将数组的第一个元素赋值为 1。</p> \n<pre class=\"prettyprint\"><code class=\" hljs cs\"><span class=\"hljs-keyword\">int</span>[] data = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[<span class=\"hljs-number\">100</span>]；data[<span class=\"hljs-number\">0</span>]  = <span class=\"hljs-number\">1</span>;\n</code></pre> \n<p>优点： <br> 1、按照索引查询元素速度快 <br> 2、按照索引遍历数组方便</p> \n<p>缺点： <br> 1、数组的大小固定后就无法扩容了 <br> 2、数组只能存储一种类型的数据 <br> 3、添加，删除的操作慢，因为要移动其他的元素。</p> \n<p>适用场景： <br> 频繁查询，对存储空间要求不大，很少增加和删除的情况。</p> \n<h1 id=\"2栈\">2、栈</h1> \n<p>栈是一种特殊的线性表，仅能在线性表的一端操作，栈顶允许操作，栈底不允许操作。 栈的特点是：先进后出，或者说是后进先出，从栈顶放入元素的操作叫入栈，取出元素叫出栈。 <br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527210530657.png\" title=\"\" alt=\"这里写图片描述\"> <br> 栈的结构就像一个集装箱，越先放进去的东西越晚才能拿出来，所以，栈常应用于实现递归功能方面的场景，例如斐波那契数列。</p> \n<h1 id=\"3队列\">3、队列</h1> \n<p>队列与栈一样，也是一种线性表，不同的是，队列可以在一端添加元素，在另一端取出元素，也就是：先进先出。从一端放入元素的操作称为入队，取出元素为出队，示例图如下： <br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527210530831.png\" title=\"\" alt=\"这里写图片描述\"> <br> 使用场景：因为队列先进先出的特点，在多线程阻塞队列管理中非常适用。</p> \n<h1 id=\"4链表\">4、链表</h1> \n<p>链表是物理存储单元上非连续的、非顺序的存储结构，数据元素的逻辑顺序是通过链表的指针地址实现，每个元素包含两个结点，一个是存储元素的数据域 (内存空间)，另一个是指向下一个结点地址的指针域。根据指针的指向，链表能形成不同的结构，例如单链表，双向链表，循环链表等。 <br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527210528792.png\" title=\"\" alt=\"这里写图片描述\"> <br> 链表的优点： <br> 链表是很常用的一种数据结构，不需要初始化容量，可以任意加减元素； <br> 添加或者删除元素时只需要改变前后两个元素结点的指针域指向地址即可，所以添加，删除很快；</p> \n<p>缺点： <br> 因为含有大量的指针域，占用空间较大； <br> 查找元素需要遍历链表来查找，非常耗时。</p> \n<p>适用场景： <br> 数据量较小，需要频繁增加，删除操作的场景</p> \n<h1 id=\"5树\">5、树</h1> \n<p><strong>树</strong>是一种数据结构，它是由n（n&gt;=1）个有限节点组成一个具有层次关系的集合。把它叫做 “树” 是因为它看起来像一棵倒挂的树，也就是说它是根朝上，而叶朝下的。它具有以下的特点：</p> \n<ul> \n <li>每个节点有零个或多个子节点； </li> \n <li>没有父节点的节点称为根节点；</li> \n <li>每一个非根节点有且只有一个父节点；</li> \n <li>除了根节点外，每个子节点可以分为多个不相交的子树；</li> \n</ul> \n<p>在日常的应用中，我们讨论和用的更多的是树的其中一种结构，就是<strong>二叉树</strong>。 <br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527210531642.png\" title=\"\" alt=\"这里写图片描述\"> <br> 二叉树是树的特殊一种，具有如下特点：</p> \n<p>1、每个结点最多有两颗子树，结点的度最大为2。 <br> 2、左子树和右子树是有顺序的，次序不能颠倒。 <br> 3、即使某结点只有一个子树，也要区分左右子树。 </p> \n<p>二叉树是一种比较有用的折中方案，它添加，删除元素都很快，并且在查找方面也有很多的算法优化，所以，二叉树既有链表的好处，也有数组的好处，是两者的优化方案，在处理大批量的动态数据方面非常有用。</p> \n<p>扩展： <br> 二叉树有很多扩展的数据结构，包括平衡二叉树、红黑树、B+树等，这些数据结构二叉树的基础上衍生了很多的功能，在实际应用中广泛用到，例如mysql的数据库索引结构用的就是B+树，还有HashMap的底层源码中用到了红黑树。这些二叉树的功能强大，但算法上比较复杂，想学习的话还是需要花时间去深入的。</p> \n<h1 id=\"6散列表\">6、散列表</h1> \n<p>散列表，也叫哈希表，是根据关键码和值 (key和value) 直接进行访问的数据结构，通过key和value来映射到集合中的一个位置，这样就可以很快找到集合中的对应元素。</p> \n<p><strong>记录的存储位置=f(key)</strong> </p> \n<p>这里的对应关系 <strong>f</strong> 成为散列函数，又称为哈希 (hash函数)，而散列表就是把Key通过一个固定的算法函数既所谓的哈希函数转换成一个整型数字，然后就将该数字对数组长度进行取余，取余结果就当作数组的下标，将value存储在以该数字为下标的数组空间里，这种存储空间可以充分利用数组的查找优势来查找元素，所以查找的速度很快。</p> \n<p>哈希表在应用中也是比较常见的，就如Java中有些集合类就是借鉴了哈希原理构造的，例如HashMap，HashTable等，利用hash表的优势，对于集合的查找元素时非常方便的，然而，因为哈希表是基于数组衍生的数据结构，在添加删除元素方面是比较慢的，所以很多时候需要用到一种数组链表来做，也就是拉链法。拉链法是数组结合链表的一种结构，较早前的hashMap底层的存储就是采用这种结构，直到jdk1.8之后才换成了数组加红黑树的结构，其示例图如下： <br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527210531953.png\" title=\"\" alt=\"这里写图片描述\"> <br> 从图中可以看出，左边很明显是个数组，数组的每个成员包括一个指针，指向一个链表的头，当然这个链表可能为空，也可能元素很多。我们根据元素的一些特征把元素分配到不同的链表中去，也是根据这些特征，找到正确的链表，再从链表中找出这个元素。 </p> \n<p>哈希表的应用场景很多，当然也有很多问题要考虑，比如哈希冲突的问题，如果处理的不好会浪费大量的时间，导致应用崩溃。</p> \n<h1 id=\"7堆\">7、堆</h1> \n<p>堆是一种比较特殊的数据结构，可以被看做一棵树的数组对象，具有以下的性质：</p> \n<ul> \n <li><p>堆中某个节点的值总是不大于或不小于其父节点的值；</p></li> \n <li><p>堆总是一棵完全二叉树。</p></li> \n</ul> \n<p>将根节点最大的堆叫做最大堆或大根堆，根节点最小的堆叫做最小堆或小根堆。常见的堆有二叉堆、斐波那契堆等。</p> \n<p>堆的定义如下：n个元素的序列{k1,k2,ki,…,kn}当且仅当满足下关系时，称之为堆。 <br> (ki &lt;= k2i,ki &lt;= k2i+1)或者(ki &gt;= k2i,ki &gt;= k2i+1), (i = 1,2,3,4…n/2)，满足前者的表达式的成为小顶堆，满足后者表达式的为大顶堆，这两者的结构图可以用完全二叉树排列出来，示例图如下： <br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527210530045.png\" title=\"\" alt=\"这里写图片描述\"> <br> 因为堆有序的特点，一般用来做数组中的排序，称为堆排序。</p> \n<h1 id=\"8图\">8、图</h1> \n<p>图是由结点的有穷集合V和边的集合E组成。其中，为了与树形结构加以区别，在图结构中常常将结点称为顶点，边是顶点的有序偶对，若两个顶点之间存在一条边，就表示这两个顶点具有相邻关系。 </p> \n<p>按照顶点指向的方向可分为无向图和有向图： <br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527210529925.png\" title=\"\" alt=\"这里写图片描述\"> <br> <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200527210531760.png\" title=\"\" alt=\"这里写图片描述\"> <br> 图是一种比较复杂的数据结构，在存储数据上有着比较复杂和高效的算法，分别有邻接矩阵 、邻接表、十字链表、邻接多重表、边集数组等存储结构，这里不做展开，读者有兴趣可以自己学习深入。</p>',NULL,0,2,1,0,0,'数据结构分类数据结构是指相互之间存在着一种或多种关系的数据元素的集合和该集合中数据元素之间的关系组成。常用的数据结构有：数组，栈，链表，队列，树，图，堆，散列表等，如图所示：每一种数据结构都有着独特的数据存储方式，下面为大家介绍它们的结构和优缺点。1、数组数组是可以再内存中连续存储多个元素的结构，在内存中的分配也是连续的，数组中的元素通过数组下标进行访问，数组下标从0开始...数据结构与算法','数据结构',1,'2020-05-27 21:05:32','2020-05-27 22:00:21'),(123,'Spring Boot笔记',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,1,'<h1 id=\"-spring-boot-\"><strong>一、</strong>Spring Boot 入门</h1>\n<h2 id=\"1-spring-boot-\">1、Spring Boot 简介</h2>\n<blockquote>\n<p>简化Spring应用开发的一个框架；</p>\n<p>整个Spring技术栈的一个大整合；</p>\n<p>J2EE开发的一站式解决方案；</p>\n</blockquote>\n<h2 id=\"2-\">2、微服务</h2>\n<p>2014，martin fowler</p>\n<p>微服务：架构风格（服务微化）</p>\n<p>一个应用应该是一组小型服务；可以通过HTTP的方式进行互通；</p>\n<p>单体应用：ALL IN ONE</p>\n<p>微服务：每一个功能元素最终都是一个可独立替换和独立升级的软件单元；</p>\n<p><a href=\"https://martinfowler.com/articles/microservices.html#MicroservicesAndSoa\">详细参照微服务文档</a></p>\n<h2 id=\"3-\">3、环境准备</h2>\n<p><a href=\"http://www.gulixueyuan.com/\">http://www.gulixueyuan.com/</a> 谷粒学院</p>\n<p>环境约束</p>\n<p>–jdk1.8：Spring Boot 推荐jdk1.7及以上；java version &quot;1.8.0_112&quot;</p>\n<p>–maven3.x：maven 3.3以上版本；Apache Maven 3.3.9</p>\n<p>–IntelliJIDEA2017：IntelliJ IDEA 2017.2.2 x64、STS</p>\n<p>–SpringBoot 1.5.9.RELEASE：1.5.9；</p>\n<p>统一环境；</p>\n<h3 id=\"1-maven-\">1、MAVEN设置；</h3>\n<p>给maven 的settings.xml配置文件的profiles标签添加</p>\n<pre><code class=\"lang-xml\">&lt;profile&gt;\n  &lt;id&gt;jdk-1.8&lt;/id&gt;\n  &lt;activation&gt;\n    &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;\n    &lt;jdk&gt;1.8&lt;/jdk&gt;\n  &lt;/activation&gt;\n  &lt;properties&gt;\n    &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;\n    &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;\n    &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;\n  &lt;/properties&gt;\n&lt;/profile&gt;\n</code></pre>\n<h3 id=\"2-idea-\">2、IDEA设置</h3>\n<p>整合maven进来；</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180129151045.png\" alt=\"idea设置\"></p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180129151112.png\" alt=\"images/\"></p>\n<h2 id=\"4-spring-boot-helloworld\">4、Spring Boot HelloWorld</h2>\n<p>一个功能：</p>\n<p>浏览器发送hello请求，服务器接受请求并处理，响应Hello World字符串；</p>\n<h3 id=\"1-maven-jar-\">1、创建一个maven工程；（jar）</h3>\n<h3 id=\"2-spring-boot-\">2、导入spring boot相关的依赖</h3>\n<pre><code class=\"lang-xml\">    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;1.5.9.RELEASE&lt;/version&gt;\n    &lt;/parent&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n</code></pre>\n<h3 id=\"3-spring-boot-\">3、编写一个主程序；启动Spring Boot应用</h3>\n<pre><code class=\"lang-java\">\n/**\n *  @SpringBootApplication 来标注一个主程序类，说明这是一个Spring Boot应用\n */\n@SpringBootApplication\npublic class HelloWorldMainApplication {\n\n    public static void main(String[] args) {\n\n        // Spring应用启动起来\n        SpringApplication.run(HelloWorldMainApplication.class,args);\n    }\n}\n</code></pre>\n<h3 id=\"4-controller-service\">4、编写相关的Controller、Service</h3>\n<pre><code class=\"lang-java\">@Controller\npublic class HelloController {\n\n    @ResponseBody\n    @RequestMapping(&quot;/hello&quot;)\n    public String hello(){\n        return &quot;Hello World!&quot;;\n    }\n}\n</code></pre>\n<h3 id=\"5-\">5、运行主程序测试</h3>\n<h3 id=\"6-\">6、简化部署</h3>\n<pre><code class=\"lang-xml\"> &lt;!-- 这个插件，可以将应用打包成一个可执行的jar包；--&gt;\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n</code></pre>\n<p>将这个应用打成jar包，直接使用java -jar的命令进行执行；</p>\n<h2 id=\"5-hello-world-\">5、Hello World探究</h2>\n<h3 id=\"1-pom-\">1、POM文件</h3>\n<h4 id=\"1-\">1、父项目</h4>\n<pre><code class=\"lang-xml\">&lt;parent&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n    &lt;version&gt;1.5.9.RELEASE&lt;/version&gt;\n&lt;/parent&gt;\n\n他的父项目是\n&lt;parent&gt;\n  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n  &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;\n  &lt;version&gt;1.5.9.RELEASE&lt;/version&gt;\n  &lt;relativePath&gt;../../spring-boot-dependencies&lt;/relativePath&gt;\n&lt;/parent&gt;\n他来真正管理Spring Boot应用里面的所有依赖版本；\n</code></pre>\n<p>Spring Boot的版本仲裁中心；</p>\n<p>以后我们导入依赖默认是不需要写版本；（没有在dependencies里面管理的依赖自然需要声明版本号）</p>\n<h4 id=\"2-\">2、启动器</h4>\n<pre><code class=\"lang-xml\">&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p><strong>spring-boot-starter</strong>-==web==：</p>\n<p>​    spring-boot-starter：spring-boot场景启动器；帮我们导入了web模块正常运行所依赖的组件；</p>\n<p>Spring Boot将所有的功能场景都抽取出来，做成一个个的starters（启动器），只需要在项目里面引入这些starter相关场景的所有依赖都会导入进来。要用什么功能就导入什么场景的启动器</p>\n<h3 id=\"2-\">2、主程序类，主入口类</h3>\n<pre><code class=\"lang-java\">/**\n *  @SpringBootApplication 来标注一个主程序类，说明这是一个Spring Boot应用\n */\n@SpringBootApplication\npublic class HelloWorldMainApplication {\n\n    public static void main(String[] args) {\n\n        // Spring应用启动起来\n        SpringApplication.run(HelloWorldMainApplication.class,args);\n    }\n}\n</code></pre>\n<p>@<strong>SpringBootApplication</strong>:    Spring Boot应用标注在某个类上说明这个类是SpringBoot的主配置类，SpringBoot就应该运行这个类的main方法来启动SpringBoot应用；</p>\n<pre><code class=\"lang-java\">@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@SpringBootConfiguration\n@EnableAutoConfiguration\n@ComponentScan(excludeFilters = {\n      @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),\n      @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) })\npublic @interface SpringBootApplication {\n</code></pre>\n<p>@<strong>SpringBootConfiguration</strong>:Spring Boot的配置类；</p>\n<p>​        标注在某个类上，表示这是一个Spring Boot的配置类；</p>\n<p>​        @<strong>Configuration</strong>:配置类上来标注这个注解；</p>\n<p>​            配置类 -----  配置文件；配置类也是容器中的一个组件；@Component</p>\n<p>@<strong>EnableAutoConfiguration</strong>：开启自动配置功能；</p>\n<p>​        以前我们需要配置的东西，Spring Boot帮我们自动配置；@<strong>EnableAutoConfiguration</strong>告诉SpringBoot开启自动配置功能；这样自动配置才能生效；</p>\n<pre><code class=\"lang-java\">@AutoConfigurationPackage\n@Import(EnableAutoConfigurationImportSelector.class)\npublic @interface EnableAutoConfiguration {\n</code></pre>\n<p>​          @<strong>AutoConfigurationPackage</strong>：自动配置包</p>\n<p>​        @<strong>Import</strong>(AutoConfigurationPackages.Registrar.class)：</p>\n<p>​        Spring的底层注解@Import，给容器中导入一个组件；导入的组件由AutoConfigurationPackages.Registrar.class；</p>\n<p>==将主配置类（@SpringBootApplication标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器；==</p>\n<p>​    @<strong>Import</strong>(EnableAutoConfigurationImportSelector.class)；</p>\n<p>​        给容器中导入组件？</p>\n<p>​        <strong>EnableAutoConfigurationImportSelector</strong>：导入哪些组件的选择器；</p>\n<p>​        将所有需要导入的组件以全类名的方式返回；这些组件就会被添加到容器中；</p>\n<p>​        会给容器中导入非常多的自动配置类（xxxAutoConfiguration）；就是给容器中导入这个场景需要的所有组件，并配置好这些组件；        <img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180129224104.png\" alt=\"自动配置类\"></p>\n<p>有了自动配置类，免去了我们手动编写配置注入功能组件等的工作；</p>\n<p>​        SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,classLoader)；</p>\n<p>==Spring Boot在启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值，将这些值作为自动配置类导入到容器中，自动配置类就生效，帮我们进行自动配置工作；==以前我们需要自己配置的东西，自动配置类都帮我们；</p>\n<p>J2EE的整体整合解决方案和自动配置都在spring-boot-autoconfigure-1.5.9.RELEASE.jar；</p>\n<p>​        </p>\n<p>==Spring注解版（谷粒学院）==</p>\n<h2 id=\"6-spring-initializer-spring-boot-\">6、使用Spring Initializer快速创建Spring Boot项目</h2>\n<h3 id=\"1-idea-spring-initializer-\">1、IDEA：使用 Spring Initializer快速创建项目</h3>\n<p>IDE都支持使用Spring的项目创建向导快速创建一个Spring Boot项目；</p>\n<p>选择我们需要的模块；向导会联网创建Spring Boot项目；</p>\n<p>默认生成的Spring Boot项目；</p>\n<ul>\n<li>主程序已经生成好了，我们只需要我们自己的逻辑</li>\n<li>resources文件夹中目录结构<ul>\n<li>static：保存所有的静态资源； js css  images；</li>\n<li>templates：保存所有的模板页面；（Spring Boot默认jar包使用嵌入式的Tomcat，默认不支持JSP页面）；可以使用模板引擎（freemarker、thymeleaf）；</li>\n<li>application.properties：Spring Boot应用的配置文件；可以修改一些默认设置；</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-sts-spring-starter-project-\">2、STS使用 Spring Starter Project快速创建项目</h3>\n<hr>\n<h1 id=\"-\">二、配置文件</h1>\n<h2 id=\"1-\">1、配置文件</h2>\n<p>SpringBoot使用一个全局的配置文件，配置文件名是固定的；</p>\n<p>•application.properties</p>\n<p>•application.yml</p>\n<p>配置文件的作用：修改SpringBoot自动配置的默认值；SpringBoot在底层都给我们自动配置好；</p>\n<p>YAML（YAML Ain&#39;t Markup Language）</p>\n<p>​    YAML  A Markup Language：是一个标记语言</p>\n<p>​    YAML   isn&#39;t Markup Language：不是一个标记语言；</p>\n<p>标记语言：</p>\n<p>​    以前的配置文件；大多都使用的是  <strong>xxxx.xml</strong>文件；</p>\n<p>​    YAML：<strong>以数据为中心</strong>，比json、xml等更适合做配置文件；</p>\n<p>​    YAML：配置例子</p>\n<pre><code class=\"lang-yaml\">server:\n  port: 8081\n</code></pre>\n<p>​    XML：</p>\n<pre><code class=\"lang-xml\">&lt;server&gt;\n    &lt;port&gt;8081&lt;/port&gt;\n&lt;/server&gt;\n</code></pre>\n<h2 id=\"2-yaml-\">2、YAML语法：</h2>\n<h3 id=\"1-\">1、基本语法</h3>\n<p>k:(空格)v：表示一对键值对（空格必须有）；</p>\n<p>以<strong>空格</strong>的缩进来控制层级关系；只要是左对齐的一列数据，都是同一个层级的</p>\n<pre><code class=\"lang-yaml\">server:\n    port: 8081\n    path: /hello\n</code></pre>\n<p>属性和值也是大小写敏感；</p>\n<h3 id=\"2-\">2、值的写法</h3>\n<h4 id=\"-\">字面量：普通的值（数字，字符串，布尔）</h4>\n<p>​    k: v：字面直接来写；</p>\n<p>​        字符串默认不用加上单引号或者双引号；</p>\n<p>​        &quot;&quot;：双引号；不会转义字符串里面的特殊字符；特殊字符会作为本身想表示的意思</p>\n<p>​                name:   &quot;zhangsan \\n lisi&quot;：输出；zhangsan 换行  lisi</p>\n<p>​        &#39;&#39;：单引号；会转义特殊字符，特殊字符最终只是一个普通的字符串数据</p>\n<p>​                name:   ‘zhangsan \\n lisi’：输出；zhangsan \\n  lisi</p>\n<h4 id=\"-map-\">对象、Map（属性和值）（键值对）：</h4>\n<p>​    k: v：在下一行来写对象的属性和值的关系；注意缩进</p>\n<p>​        对象还是k: v的方式</p>\n<pre><code class=\"lang-yaml\">friends:\n        lastName: zhangsan\n        age: 20\n</code></pre>\n<p>行内写法：</p>\n<pre><code class=\"lang-yaml\">friends: {lastName: zhangsan,age: 18}\n</code></pre>\n<h4 id=\"-list-set-\">数组（List、Set）：</h4>\n<p>用- 值表示数组中的一个元素</p>\n<pre><code class=\"lang-yaml\">pets:\n - cat\n - dog\n - pig\n</code></pre>\n<p>行内写法</p>\n<pre><code class=\"lang-yaml\">pets: [cat,dog,pig]\n</code></pre>\n<h2 id=\"3-\">3、配置文件值注入</h2>\n<p>配置文件</p>\n<pre><code class=\"lang-yaml\">person:\n    lastName: hello\n    age: 18\n    boss: false\n    birth: 2017/12/12\n    maps: {k1: v1,k2: 12}\n    lists:\n      - lisi\n      - zhaoliu\n    dog:\n      name: 小狗\n      age: 12\n</code></pre>\n<p>javaBean：</p>\n<pre><code class=\"lang-java\">/**\n * 将配置文件中配置的每一个属性的值，映射到这个组件中\n * @ConfigurationProperties：告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定；\n *      prefix = \"person\"：配置文件中哪个下面的所有属性进行一一映射\n *\n * 只有这个组件是容器中的组件，才能容器提供的@ConfigurationProperties功能；\n *\n */\n@Component\n@ConfigurationProperties(prefix = \"person\")\npublic class Person {\n\n    private String lastName;\n    private Integer age;\n    private Boolean boss;\n    private Date birth;\n\n    private Map&lt;String,Object&gt; maps;\n    private List&lt;Object&gt; lists;\n    private Dog dog;\n</code></pre>\n<p>我们可以导入配置文件处理器，以后编写配置就有提示了</p>\n<pre><code class=\"lang-xml\">&lt;!--导入配置文件处理器，配置文件进行绑定就会有提示--&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n</code></pre>\n<h4 id=\"1-properties-idea-utf-8-\">1、properties配置文件在idea中默认utf-8可能会乱码</h4>\n<p>调整</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180130161620.png\" alt=\"idea配置乱码\"></p>\n<h4 id=\"2-value-configurationproperties-\">2、@Value获取值和@ConfigurationProperties获取值比较</h4>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>@ConfigurationProperties</th>\n<th>@Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>功能</td>\n<td>批量注入配置文件中的属性</td>\n<td>一个个指定</td>\n</tr>\n<tr>\n<td>松散绑定（松散语法）</td>\n<td>支持</td>\n<td>不支持</td>\n</tr>\n<tr>\n<td>SpEL</td>\n<td>不支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>JSR303数据校验</td>\n<td>支持</td>\n<td>不支持</td>\n</tr>\n<tr>\n<td>复杂类型封装</td>\n<td>支持</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table>\n<p>配置文件yml还是properties他们都能获取到值；</p>\n<p>如果说，我们只是在某个业务逻辑中需要获取一下配置文件中的某项值，使用@Value；</p>\n<p>如果说，我们专门编写了一个javaBean来和配置文件进行映射，我们就直接使用@ConfigurationProperties；</p>\n<h4 id=\"3-\">3、配置文件注入值数据校验</h4>\n<pre><code class=\"lang-java\">@Component\n@ConfigurationProperties(prefix = \"person\")\n@Validated\npublic class Person {\n\n    /**\n     * &lt;bean class=\"Person\"&gt;\n     *      &lt;property name=\"lastName\" value=\"字面量/${key}从环境变量、配置文件中获取值/#{SpEL}\"&gt;&lt;/property&gt;\n     * &lt;bean/&gt;\n     */\n\n   //lastName必须是邮箱格式\n    @Email\n    //@Value(\"${person.last-name}\")\n    private String lastName;\n    //@Value(\"#{11*2}\")\n    private Integer age;\n    //@Value(\"true\")\n    private Boolean boss;\n\n    private Date birth;\n    private Map&lt;String,Object&gt; maps;\n    private List&lt;Object&gt; lists;\n    private Dog dog;\n</code></pre>\n<h4 id=\"4-propertysource-importresource-bean\">4、@PropertySource&amp;@ImportResource&amp;@Bean</h4>\n<p>@<strong>PropertySource</strong>：加载指定的配置文件；</p>\n<pre><code class=\"lang-java\">/**\n * 将配置文件中配置的每一个属性的值，映射到这个组件中\n * @ConfigurationProperties：告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定；\n *      prefix = \"person\"：配置文件中哪个下面的所有属性进行一一映射\n *\n * 只有这个组件是容器中的组件，才能容器提供的@ConfigurationProperties功能；\n *  @ConfigurationProperties(prefix = \"person\")默认从全局配置文件中获取值；\n *\n */\n@PropertySource(value = {\"classpath:person.properties\"})\n@Component\n@ConfigurationProperties(prefix = \"person\")\n//@Validated\npublic class Person {\n\n    /**\n     * &lt;bean class=\"Person\"&gt;\n     *      &lt;property name=\"lastName\" value=\"字面量/${key}从环境变量、配置文件中获取值/#{SpEL}\"&gt;&lt;/property&gt;\n     * &lt;bean/&gt;\n     */\n\n   //lastName必须是邮箱格式\n   // @Email\n    //@Value(\"${person.last-name}\")\n    private String lastName;\n    //@Value(\"#{11*2}\")\n    private Integer age;\n    //@Value(\"true\")\n    private Boolean boss;\n</code></pre>\n<p>@<strong>ImportResource</strong>：导入Spring的配置文件，让配置文件里面的内容生效；</p>\n<p>Spring Boot里面没有Spring的配置文件，我们自己编写的配置文件，也不能自动识别；</p>\n<p>想让Spring的配置文件生效，加载进来；@<strong>ImportResource</strong>标注在一个配置类上</p>\n<pre><code class=\"lang-java\">@ImportResource(locations = {&quot;classpath:beans.xml&quot;})\n导入Spring的配置文件让其生效\n</code></pre>\n<p>不来编写Spring的配置文件</p>\n<pre><code class=\"lang-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;\n\n\n    &lt;bean id=\"helloService\" class=\"com.atguigu.springboot.service.HelloService\"&gt;&lt;/bean&gt;\n&lt;/beans&gt;\n</code></pre>\n<p>SpringBoot推荐给容器中添加组件的方式；推荐使用全注解的方式</p>\n<p>1、配置类<strong>@Configuration</strong>------&gt;Spring配置文件</p>\n<p>2、使用<strong>@Bean</strong>给容器中添加组件</p>\n<pre><code class=\"lang-java\">/**\n * @Configuration：指明当前类是一个配置类；就是来替代之前的Spring配置文件\n *\n * 在配置文件中用&lt;bean&gt;&lt;bean/&gt;标签添加组件\n *\n */\n@Configuration\npublic class MyAppConfig {\n\n    //将方法的返回值添加到容器中；容器中这个组件默认的id就是方法名\n    @Bean\n    public HelloService helloService02(){\n        System.out.println(\"配置类@Bean给容器中添加组件了...\");\n        return new HelloService();\n    }\n}\n</code></pre>\n<p>##4、配置文件占位符</p>\n<h3 id=\"1-\">1、随机数</h3>\n<pre><code class=\"lang-java\">${random.value}、${random.int}、${random.long}\n${random.int(10)}、${random.int[1024,65536]}\n</code></pre>\n<h3 id=\"2-\">2、占位符获取之前配置的值，如果没有可以是用:指定默认值</h3>\n<pre><code class=\"lang-properties\">person.last-name=张三${random.uuid}\nperson.age=${random.int}\nperson.birth=2017/12/15\nperson.boss=false\nperson.maps.k1=v1\nperson.maps.k2=14\nperson.lists=a,b,c\nperson.dog.name=${person.hello:hello}_dog\nperson.dog.age=15\n</code></pre>\n<h2 id=\"5-profile\">5、Profile</h2>\n<h3 id=\"1-profile-\">1、多Profile文件</h3>\n<p>我们在主配置文件编写的时候，文件名可以是   application-{profile}.properties/yml</p>\n<p>默认使用application.properties的配置；</p>\n<h3 id=\"2-yml-\">2、yml支持多文档块方式</h3>\n<pre><code class=\"lang-yml\">\nserver:\n  port: 8081\nspring:\n  profiles:\n    active: prod\n\n---\nserver:\n  port: 8083\nspring:\n  profiles: dev\n\n\n---\n\nserver:\n  port: 8084\nspring:\n  profiles: prod  #指定属于哪个环境\n</code></pre>\n<h3 id=\"3-profile\">3、激活指定profile</h3>\n<p>​    1、在配置文件中指定  spring.profiles.active=dev</p>\n<p>​    2、命令行：</p>\n<p>​        java -jar spring-boot-02-config-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev；</p>\n<p>​        可以直接在测试的时候，配置传入命令行参数</p>\n<p>​    3、虚拟机参数；</p>\n<p>​        -Dspring.profiles.active=dev</p>\n<h2 id=\"6-\">6、配置文件加载位置</h2>\n<p>springboot 启动会扫描以下位置的application.properties或者application.yml文件作为Spring boot的默认配置文件</p>\n<p>–file:./config/</p>\n<p>–file:./</p>\n<p>–classpath:/config/</p>\n<p>–classpath:/</p>\n<p>优先级由高到底，高优先级的配置会覆盖低优先级的配置；</p>\n<p>SpringBoot会从这四个位置全部加载主配置文件；<strong>互补配置</strong>；</p>\n<p>==我们还可以通过spring.config.location来改变默认的配置文件位置==</p>\n<p><strong>项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；指定配置文件和默认加载的这些配置文件共同起作用形成互补配置；</strong></p>\n<p>java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --spring.config.location=G:/application.properties</p>\n<h2 id=\"7-\">7、外部配置加载顺序</h2>\n<p><strong>==SpringBoot也可以从以下位置加载配置； 优先级从高到低；高优先级的配置覆盖低优先级的配置，所有的配置会形成互补配置==</strong></p>\n<p><strong>1.命令行参数</strong></p>\n<p>所有的配置都可以在命令行上进行指定</p>\n<p>java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --server.port=8087  --server.context-path=/abc</p>\n<p>多个配置用空格分开； --配置项=值</p>\n<p>2.来自java:comp/env的JNDI属性</p>\n<p>3.Java系统属性（System.getProperties()）</p>\n<p>4.操作系统环境变量</p>\n<p>5.RandomValuePropertySource配置的random.*属性值</p>\n<p>==<strong>由jar包外向jar包内进行寻找；</strong>==</p>\n<p>==<strong>优先加载带profile</strong>==</p>\n<p><strong>6.jar包外部的application-{profile}.properties或application.yml(带spring.profile)配置文件</strong></p>\n<p><strong>7.jar包内部的application-{profile}.properties或application.yml(带spring.profile)配置文件</strong></p>\n<p>==<strong>再来加载不带profile</strong>==</p>\n<p><strong>8.jar包外部的application.properties或application.yml(不带spring.profile)配置文件</strong></p>\n<p><strong>9.jar包内部的application.properties或application.yml(不带spring.profile)配置文件</strong></p>\n<p>10.@Configuration注解类上的@PropertySource</p>\n<p>11.通过SpringApplication.setDefaultProperties指定的默认属性</p>\n<p>所有支持的配置加载来源；</p>\n<p><a href=\"https://docs.spring.io/spring-boot/docs/1.5.9.RELEASE/reference/htmlsingle/#boot-features-external-config\">参考官方文档</a></p>\n<h2 id=\"8-\">8、自动配置原理</h2>\n<p>配置文件到底能写什么？怎么写？自动配置原理；</p>\n<p><a href=\"https://docs.spring.io/spring-boot/docs/1.5.9.RELEASE/reference/htmlsingle/#common-application-properties\">配置文件能配置的属性参照</a></p>\n<h3 id=\"1-\">1、<strong>自动配置原理：</strong></h3>\n<p>1）、SpringBoot启动的时候加载主配置类，开启了自动配置功能 ==@EnableAutoConfiguration==</p>\n<p><strong>2）、@EnableAutoConfiguration 作用：</strong></p>\n<ul>\n<li>利用EnableAutoConfigurationImportSelector给容器中导入一些组件？</li>\n</ul>\n<ul>\n<li><p>可以查看selectImports()方法的内容；</p>\n</li>\n<li><p>List<String> configurations = getCandidateConfigurations(annotationMetadata,      attributes);获取候选的配置</p>\n<ul>\n<li><pre><code class=\"lang-java\">SpringFactoriesLoader.loadFactoryNames()\n扫描所有jar包类路径下  META-INF/spring.factories\n把扫描到的这些文件的内容包装成properties对象\n从properties中获取到EnableAutoConfiguration.class类（类名）对应的值，然后把他们添加在容器中\n</code></pre>\n<p>​</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>==将 类路径下  META-INF/spring.factories 里面配置的所有EnableAutoConfiguration的值加入到了容器中；==</strong></p>\n<pre><code class=\"lang-properties\"># Auto Configure\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\norg.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\\norg.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\\norg.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\\\norg.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\\\norg.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\\norg.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration,\\\norg.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\\\norg.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\\\norg.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.ldap.LdapDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\\\norg.springframework.boot.autoconfigure.elasticsearch.jest.JestAutoConfiguration,\\\norg.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\\\norg.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\\\norg.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\\\norg.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\\\norg.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\\\norg.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\\\norg.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\\\norg.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\\\norg.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\\\norg.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\\\norg.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mobile.DeviceResolverAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mobile.SitePreferenceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\\\norg.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.SecurityAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.SecurityFilterAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration,\\\norg.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\\\norg.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\\\norg.springframework.boot.autoconfigure.social.SocialWebAutoConfiguration,\\\norg.springframework.boot.autoconfigure.social.FacebookAutoConfiguration,\\\norg.springframework.boot.autoconfigure.social.LinkedInAutoConfiguration,\\\norg.springframework.boot.autoconfigure.social.TwitterAutoConfiguration,\\\norg.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\\\norg.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\\\norg.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\\\norg.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.MultipartAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.WebClientAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration,\\\norg.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration,\\\norg.springframework.boot.autoconfigure.websocket.WebSocketMessagingAutoConfiguration,\\\norg.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration\n</code></pre>\n<p>每一个这样的  xxxAutoConfiguration类都是容器中的一个组件，都加入到容器中；用他们来做自动配置；</p>\n<p>3）、每一个自动配置类进行自动配置功能；</p>\n<p>4）、以<strong>HttpEncodingAutoConfiguration（Http编码自动配置）</strong>为例解释自动配置原理；</p>\n<pre><code class=\"lang-java\">@Configuration   //表示这是一个配置类，以前编写的配置文件一样，也可以给容器中添加组件\n@EnableConfigurationProperties(HttpEncodingProperties.class)  //启动指定类的ConfigurationProperties功能；将配置文件中对应的值和HttpEncodingProperties绑定起来；并把HttpEncodingProperties加入到ioc容器中\n\n@ConditionalOnWebApplication //Spring底层@Conditional注解（Spring注解版），根据不同的条件，如果满足指定的条件，整个配置类里面的配置就会生效；    判断当前应用是否是web应用，如果是，当前配置类生效\n\n@ConditionalOnClass(CharacterEncodingFilter.class)  //判断当前项目有没有这个类CharacterEncodingFilter；SpringMVC中进行乱码解决的过滤器；\n\n@ConditionalOnProperty(prefix = &quot;spring.http.encoding&quot;, value = &quot;enabled&quot;, matchIfMissing = true)  //判断配置文件中是否存在某个配置  spring.http.encoding.enabled；如果不存在，判断也是成立的\n//即使我们配置文件中不配置pring.http.encoding.enabled=true，也是默认生效的；\npublic class HttpEncodingAutoConfiguration {\n\n      //他已经和SpringBoot的配置文件映射了\n      private final HttpEncodingProperties properties;\n\n   //只有一个有参构造器的情况下，参数的值就会从容器中拿\n      public HttpEncodingAutoConfiguration(HttpEncodingProperties properties) {\n        this.properties = properties;\n    }\n\n    @Bean   //给容器中添加一个组件，这个组件的某些值需要从properties中获取\n    @ConditionalOnMissingBean(CharacterEncodingFilter.class) //判断容器没有这个组件？\n    public CharacterEncodingFilter characterEncodingFilter() {\n        CharacterEncodingFilter filter = new OrderedCharacterEncodingFilter();\n        filter.setEncoding(this.properties.getCharset().name());\n        filter.setForceRequestEncoding(this.properties.shouldForce(Type.REQUEST));\n        filter.setForceResponseEncoding(this.properties.shouldForce(Type.RESPONSE));\n        return filter;\n    }\n</code></pre>\n<p>根据当前不同的条件判断，决定这个配置类是否生效？</p>\n<p>一但这个配置类生效；这个配置类就会给容器中添加各种组件；这些组件的属性是从对应的properties类中获取的，这些类里面的每一个属性又是和配置文件绑定的；</p>\n<p>5）、所有在配置文件中能配置的属性都是在xxxxProperties类中封装者‘；配置文件能配置什么就可以参照某个功能对应的这个属性类</p>\n<pre><code class=\"lang-java\">@ConfigurationProperties(prefix = &quot;spring.http.encoding&quot;)  //从配置文件中获取指定的值和bean的属性进行绑定\npublic class HttpEncodingProperties {\n\n   public static final Charset DEFAULT_CHARSET = Charset.forName(&quot;UTF-8&quot;);\n</code></pre>\n<p><strong>精髓：</strong></p>\n<p>​    <strong>1）、SpringBoot启动会加载大量的自动配置类</strong></p>\n<p>​    <strong>2）、我们看我们需要的功能有没有SpringBoot默认写好的自动配置类；</strong></p>\n<p>​    <strong>3）、我们再来看这个自动配置类中到底配置了哪些组件；（只要我们要用的组件有，我们就不需要再来配置了）</strong></p>\n<p>​    <strong>4）、给容器中自动配置类添加组件的时候，会从properties类中获取某些属性。我们就可以在配置文件中指定这些属性的值；</strong></p>\n<p>xxxxAutoConfigurartion：自动配置类；</p>\n<p>给容器中添加组件</p>\n<p>xxxxProperties:封装配置文件中相关属性；</p>\n<h3 id=\"2-\">2、细节</h3>\n<h4 id=\"1-conditional-spring-conditional-\">1、@Conditional派生注解（Spring注解版原生的@Conditional作用）</h4>\n<p>作用：必须是@Conditional指定的条件成立，才给容器中添加组件，配置配里面的所有内容才生效；</p>\n<table>\n<thead>\n<tr>\n<th>@Conditional扩展注解</th>\n<th>作用（判断是否满足当前指定条件）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>@ConditionalOnJava</td>\n<td>系统的java版本是否符合要求</td>\n</tr>\n<tr>\n<td>@ConditionalOnBean</td>\n<td>容器中存在指定Bean；</td>\n</tr>\n<tr>\n<td>@ConditionalOnMissingBean</td>\n<td>容器中不存在指定Bean；</td>\n</tr>\n<tr>\n<td>@ConditionalOnExpression</td>\n<td>满足SpEL表达式指定</td>\n</tr>\n<tr>\n<td>@ConditionalOnClass</td>\n<td>系统中有指定的类</td>\n</tr>\n<tr>\n<td>@ConditionalOnMissingClass</td>\n<td>系统中没有指定的类</td>\n</tr>\n<tr>\n<td>@ConditionalOnSingleCandidate</td>\n<td>容器中只有一个指定的Bean，或者这个Bean是首选Bean</td>\n</tr>\n<tr>\n<td>@ConditionalOnProperty</td>\n<td>系统中指定的属性是否有指定的值</td>\n</tr>\n<tr>\n<td>@ConditionalOnResource</td>\n<td>类路径下是否存在指定资源文件</td>\n</tr>\n<tr>\n<td>@ConditionalOnWebApplication</td>\n<td>当前是web环境</td>\n</tr>\n<tr>\n<td>@ConditionalOnNotWebApplication</td>\n<td>当前不是web环境</td>\n</tr>\n<tr>\n<td>@ConditionalOnJndi</td>\n<td>JNDI存在指定项</td>\n</tr>\n</tbody>\n</table>\n<p><strong>自动配置类必须在一定的条件下才能生效；</strong></p>\n<p>我们怎么知道哪些自动配置类生效；</p>\n<p><strong>==我们可以通过启用  debug=true属性；来让控制台打印自动配置报告==</strong>，这样我们就可以很方便的知道哪些自动配置类生效；</p>\n<pre><code class=\"lang-java\">=========================\nAUTO-CONFIGURATION REPORT\n=========================\n\n\nPositive matches:（自动配置类启用的）\n-----------------\n\n   DispatcherServletAutoConfiguration matched:\n      - @ConditionalOnClass found required class &#39;org.springframework.web.servlet.DispatcherServlet&#39;; @ConditionalOnMissingClass did not find unwanted class (OnClassCondition)\n      - @ConditionalOnWebApplication (required) found StandardServletEnvironment (OnWebApplicationCondition)\n\n\nNegative matches:（没有启动，没有匹配成功的自动配置类）\n-----------------\n\n   ActiveMQAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes &#39;javax.jms.ConnectionFactory&#39;, &#39;org.apache.activemq.ActiveMQConnectionFactory&#39; (OnClassCondition)\n\n   AopAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes &#39;org.aspectj.lang.annotation.Aspect&#39;, &#39;org.aspectj.lang.reflect.Advice&#39; (OnClassCondition)\n</code></pre>\n<h1 id=\"-\">三、日志</h1>\n<h2 id=\"1-\">1、日志框架</h2>\n<p> 小张；开发一个大型系统；</p>\n<p>​        1、System.out.println(&quot;&quot;)；将关键数据打印在控制台；去掉？写在一个文件？</p>\n<p>​        2、框架来记录系统的一些运行时信息；日志框架 ；  zhanglogging.jar；</p>\n<p>​        3、高大上的几个功能？异步模式？自动归档？xxxx？  zhanglogging-good.jar？</p>\n<p>​        4、将以前框架卸下来？换上新的框架，重新修改之前相关的API；zhanglogging-prefect.jar；</p>\n<p>​        5、JDBC---数据库驱动；</p>\n<p>​            写了一个统一的接口层；日志门面（日志的一个抽象层）；logging-abstract.jar；</p>\n<p>​            给项目中导入具体的日志实现就行了；我们之前的日志框架都是实现的抽象层；</p>\n<p><strong>市面上的日志框架；</strong></p>\n<p>JUL、JCL、Jboss-logging、logback、log4j、log4j2、slf4j....</p>\n<table>\n<thead>\n<tr>\n<th>日志门面  （日志的抽象层）</th>\n<th>日志实现</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><del>JCL（Jakarta  Commons Logging）</del>    SLF4j（Simple  Logging Facade for Java）    <strong><del>jboss-logging</del></strong></td>\n<td>Log4j  JUL（java.util.logging）  Log4j2  <strong>Logback</strong></td>\n</tr>\n</tbody>\n</table>\n<p>左边选一个门面（抽象层）、右边来选一个实现；</p>\n<p>日志门面：  SLF4J；</p>\n<p>日志实现：Logback；</p>\n<p>SpringBoot：底层是Spring框架，Spring框架默认是用JCL；‘</p>\n<p>​    <strong>==SpringBoot选用 SLF4j和logback；==</strong></p>\n<h2 id=\"2-slf4j-\">2、SLF4j使用</h2>\n<h3 id=\"1-slf4j-https-www-slf4j-org\">1、如何在系统中使用SLF4j   <a href=\"https://www.slf4j.org\">https://www.slf4j.org</a></h3>\n<p>以后开发的时候，日志记录方法的调用，不应该来直接调用日志的实现类，而是调用日志抽象层里面的方法；</p>\n<p>给系统里面导入slf4j的jar和  logback的实现jar</p>\n<pre><code class=\"lang-java\">import org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class HelloWorld {\n  public static void main(String[] args) {\n    Logger logger = LoggerFactory.getLogger(HelloWorld.class);\n    logger.info(&quot;Hello World&quot;);\n  }\n}\n</code></pre>\n<p>图示；</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/concrete-bindings.png\" alt=\"images/concrete-bindings.png\"></p>\n<p>每一个日志的实现框架都有自己的配置文件。使用slf4j以后，<strong>配置文件还是做成日志实现框架自己本身的配置文件；</strong></p>\n<h3 id=\"2-\">2、遗留问题</h3>\n<p>a（slf4j+logback）: Spring（commons-logging）、Hibernate（jboss-logging）、MyBatis、xxxx</p>\n<p>统一日志记录，即使是别的框架和我一起统一使用slf4j进行输出？</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/legacy.png\" alt=\"\"></p>\n<p><strong>如何让系统中所有的日志都统一到slf4j；</strong></p>\n<p>==1、将系统中其他日志框架先排除出去；==</p>\n<p>==2、用中间包来替换原有的日志框架；==</p>\n<p>==3、我们导入slf4j其他的实现==</p>\n<h2 id=\"3-springboot-\">3、SpringBoot日志关系</h2>\n<pre><code class=\"lang-xml\">        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n</code></pre>\n<p>SpringBoot使用它来做日志功能；</p>\n<pre><code class=\"lang-xml\">    &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n</code></pre>\n<p>底层依赖关系</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180131220946.png\" alt=\"\"></p>\n<p>总结：</p>\n<p>​    1）、SpringBoot底层也是使用slf4j+logback的方式进行日志记录</p>\n<p>​    2）、SpringBoot也把其他的日志都替换成了slf4j；</p>\n<p>​    3）、中间替换包？</p>\n<pre><code class=\"lang-java\">@SuppressWarnings(&quot;rawtypes&quot;)\npublic abstract class LogFactory {\n\n    static String UNSUPPORTED_OPERATION_IN_JCL_OVER_SLF4J = &quot;http://www.slf4j.org/codes.html#unsupported_operation_in_jcl_over_slf4j&quot;;\n\n    static LogFactory logFactory = new SLF4JLogFactory();\n</code></pre>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180131221411.png\" alt=\"\"></p>\n<p>​    4）、如果我们要引入其他框架？一定要把这个框架的默认日志依赖移除掉？</p>\n<p>​            Spring框架用的是commons-logging；</p>\n<pre><code class=\"lang-xml\">        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-core&lt;/artifactId&gt;\n            &lt;exclusions&gt;\n                &lt;exclusion&gt;\n                    &lt;groupId&gt;commons-logging&lt;/groupId&gt;\n                    &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;\n                &lt;/exclusion&gt;\n            &lt;/exclusions&gt;\n        &lt;/dependency&gt;\n</code></pre>\n<p><strong>==SpringBoot能自动适配所有的日志，而且底层使用slf4j+logback的方式记录日志，引入其他框架的时候，只需要把这个框架依赖的日志框架排除掉即可；==</strong></p>\n<h2 id=\"4-\">4、日志使用；</h2>\n<h3 id=\"1-\">1、默认配置</h3>\n<p>SpringBoot默认帮我们配置好了日志；</p>\n<pre><code class=\"lang-java\">    //记录器\n    Logger logger = LoggerFactory.getLogger(getClass());\n    @Test\n    public void contextLoads() {\n        //System.out.println();\n\n        //日志的级别；\n        //由低到高   trace&lt;debug&lt;info&lt;warn&lt;error\n        //可以调整输出的日志级别；日志就只会在这个级别以以后的高级别生效\n        logger.trace(\"这是trace日志...\");\n        logger.debug(\"这是debug日志...\");\n        //SpringBoot默认给我们使用的是info级别的，没有指定级别的就用SpringBoot默认规定的级别；root级别\n        logger.info(\"这是info日志...\");\n        logger.warn(\"这是warn日志...\");\n        logger.error(\"这是error日志...\");\n\n\n    }\n</code></pre>\n<pre><code>    日志输出格式：\n        %d表示日期时间，\n        %thread表示线程名，\n        %-5level：级别从左显示5个字符宽度\n        %logger{50} 表示logger名字最长50个字符，否则按照句点分割。 \n        %msg：日志消息，\n        %n是换行符\n    --&gt;\n    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n\n</code></pre><p>SpringBoot修改日志的默认配置</p>\n<pre><code class=\"lang-properties\">logging.level.com.atguigu=trace\n\n\n#logging.path=\n# 不指定路径在当前项目下生成springboot.log日志\n# 可以指定完整的路径；\n#logging.file=G:/springboot.log\n\n# 在当前磁盘的根路径下创建spring文件夹和里面的log文件夹；使用 spring.log 作为默认文件\nlogging.path=/spring/log\n\n#  在控制台输出的日志的格式\nlogging.pattern.console=%d{yyyy-MM-dd} [%thread] %-5level %logger{50} - %msg%n\n# 指定文件中日志输出的格式\nlogging.pattern.file=%d{yyyy-MM-dd} === [%thread] === %-5level === %logger{50} ==== %msg%n\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>logging.file</th>\n<th>logging.path</th>\n<th>Example</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>(none)</td>\n<td>(none)</td>\n<td></td>\n<td>只在控制台输出</td>\n</tr>\n<tr>\n<td>指定文件名</td>\n<td>(none)</td>\n<td>my.log</td>\n<td>输出日志到my.log文件</td>\n</tr>\n<tr>\n<td>(none)</td>\n<td>指定目录</td>\n<td>/var/log</td>\n<td>输出到指定目录的 spring.log 文件中</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-\">2、指定配置</h3>\n<p>给类路径下放上每个日志框架自己的配置文件即可；SpringBoot就不使用他默认配置的了</p>\n<table>\n<thead>\n<tr>\n<th>Logging System</th>\n<th>Customization</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Logback</td>\n<td><code>logback-spring.xml</code>, <code>logback-spring.groovy</code>, <code>logback.xml</code> or <code>logback.groovy</code></td>\n</tr>\n<tr>\n<td>Log4j2</td>\n<td><code>log4j2-spring.xml</code> or <code>log4j2.xml</code></td>\n</tr>\n<tr>\n<td>JDK (Java Util Logging)</td>\n<td><code>logging.properties</code></td>\n</tr>\n</tbody>\n</table>\n<p>logback.xml：直接就被日志框架识别了；</p>\n<p><strong>logback-spring.xml</strong>：日志框架就不直接加载日志的配置项，由SpringBoot解析日志配置，可以使用SpringBoot的高级Profile功能</p>\n<pre><code class=\"lang-xml\">&lt;springProfile name=\"staging\"&gt;\n    &lt;!-- configuration to be enabled when the \"staging\" profile is active --&gt;\n      可以指定某段配置只在某个环境下生效\n&lt;/springProfile&gt;\n</code></pre>\n<p>如：</p>\n<pre><code class=\"lang-xml\">&lt;appender name=\"stdout\" class=\"ch.qos.logback.core.ConsoleAppender\"&gt;\n        &lt;!--\n        日志输出格式：\n            %d表示日期时间，\n            %thread表示线程名，\n            %-5level：级别从左显示5个字符宽度\n            %logger{50} 表示logger名字最长50个字符，否则按照句点分割。 \n            %msg：日志消息，\n            %n是换行符\n        --&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;springProfile name=\"dev\"&gt;\n                &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} ----&gt; [%thread] ---&gt; %-5level %logger{50} - %msg%n&lt;/pattern&gt;\n            &lt;/springProfile&gt;\n            &lt;springProfile name=\"!dev\"&gt;\n                &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} ==== [%thread] ==== %-5level %logger{50} - %msg%n&lt;/pattern&gt;\n            &lt;/springProfile&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n</code></pre>\n<p>如果使用logback.xml作为日志配置文件，还要使用profile功能，会有以下错误</p>\n<p> <code>no applicable action for [springProfile]</code></p>\n<h2 id=\"5-\">5、切换日志框架</h2>\n<p>可以按照slf4j的日志适配图，进行相关的切换；</p>\n<p>slf4j+log4j的方式；</p>\n<pre><code class=\"lang-xml\">&lt;dependency&gt;\n  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n  &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n  &lt;exclusions&gt;\n    &lt;exclusion&gt;\n      &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;\n      &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;\n    &lt;/exclusion&gt;\n    &lt;exclusion&gt;\n      &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt;\n      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n    &lt;/exclusion&gt;\n  &lt;/exclusions&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n  &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n  &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p>切换为log4j2</p>\n<pre><code class=\"lang-xml\">   &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n            &lt;exclusions&gt;\n                &lt;exclusion&gt;\n                    &lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt;\n                    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;/exclusion&gt;\n            &lt;/exclusions&gt;\n        &lt;/dependency&gt;\n\n&lt;dependency&gt;\n  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n  &lt;artifactId&gt;spring-boot-starter-log4j2&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre>\n<hr>\n<h1 id=\"-web-\">四、Web开发</h1>\n<h2 id=\"1-\">1、简介</h2>\n<p>使用SpringBoot；</p>\n<p><strong>1）、创建SpringBoot应用，选中我们需要的模块；</strong></p>\n<p><strong>2）、SpringBoot已经默认将这些场景配置好了，只需要在配置文件中指定少量配置就可以运行起来</strong></p>\n<p><strong>3）、自己编写业务代码；</strong></p>\n<p><strong>自动配置原理？</strong></p>\n<p>这个场景SpringBoot帮我们配置了什么？能不能修改？能修改哪些配置？能不能扩展？xxx</p>\n<pre><code>xxxxAutoConfiguration：帮我们给容器中自动配置组件；\nxxxxProperties:配置类来封装配置文件的内容；\n</code></pre><h2 id=\"2-springboot-\">2、SpringBoot对静态资源的映射规则；</h2>\n<pre><code class=\"lang-java\">@ConfigurationProperties(prefix = &quot;spring.resources&quot;, ignoreUnknownFields = false)\npublic class ResourceProperties implements ResourceLoaderAware {\n  //可以设置和静态资源有关的参数，缓存时间等\n</code></pre>\n<pre><code class=\"lang-java\">    WebMvcAuotConfiguration：\n        @Override\n        public void addResourceHandlers(ResourceHandlerRegistry registry) {\n            if (!this.resourceProperties.isAddMappings()) {\n                logger.debug(&quot;Default resource handling disabled&quot;);\n                return;\n            }\n            Integer cachePeriod = this.resourceProperties.getCachePeriod();\n            if (!registry.hasMappingForPattern(&quot;/webjars/**&quot;)) {\n                customizeResourceHandlerRegistration(\n                        registry.addResourceHandler(&quot;/webjars/**&quot;)\n                                .addResourceLocations(\n                                        &quot;classpath:/META-INF/resources/webjars/&quot;)\n                        .setCachePeriod(cachePeriod));\n            }\n            String staticPathPattern = this.mvcProperties.getStaticPathPattern();\n              //静态资源文件夹映射\n            if (!registry.hasMappingForPattern(staticPathPattern)) {\n                customizeResourceHandlerRegistration(\n                        registry.addResourceHandler(staticPathPattern)\n                                .addResourceLocations(\n                                        this.resourceProperties.getStaticLocations())\n                        .setCachePeriod(cachePeriod));\n            }\n        }\n\n        //配置欢迎页映射\n        @Bean\n        public WelcomePageHandlerMapping welcomePageHandlerMapping(\n                ResourceProperties resourceProperties) {\n            return new WelcomePageHandlerMapping(resourceProperties.getWelcomePage(),\n                    this.mvcProperties.getStaticPathPattern());\n        }\n\n       //配置喜欢的图标\n        @Configuration\n        @ConditionalOnProperty(value = &quot;spring.mvc.favicon.enabled&quot;, matchIfMissing = true)\n        public static class FaviconConfiguration {\n\n            private final ResourceProperties resourceProperties;\n\n            public FaviconConfiguration(ResourceProperties resourceProperties) {\n                this.resourceProperties = resourceProperties;\n            }\n\n            @Bean\n            public SimpleUrlHandlerMapping faviconHandlerMapping() {\n                SimpleUrlHandlerMapping mapping = new SimpleUrlHandlerMapping();\n                mapping.setOrder(Ordered.HIGHEST_PRECEDENCE + 1);\n                  //所有  **/favicon.ico \n                mapping.setUrlMap(Collections.singletonMap(&quot;**/favicon.ico&quot;,\n                        faviconRequestHandler()));\n                return mapping;\n            }\n\n            @Bean\n            public ResourceHttpRequestHandler faviconRequestHandler() {\n                ResourceHttpRequestHandler requestHandler = new ResourceHttpRequestHandler();\n                requestHandler\n                        .setLocations(this.resourceProperties.getFaviconLocations());\n                return requestHandler;\n            }\n\n        }\n</code></pre>\n<p>==1）、所有 /webjars/** ，都去 classpath:/META-INF/resources/webjars/ 找资源；==</p>\n<p>​    webjars：以jar包的方式引入静态资源；</p>\n<p><a href=\"http://www.webjars.org/\">http://www.webjars.org/</a></p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180203181751.png\" alt=\"\"></p>\n<p>localhost:8080/webjars/jquery/3.3.1/jquery.js</p>\n<pre><code class=\"lang-xml\">&lt;!--引入jquery-webjar--&gt;在访问的时候只需要写webjars下面资源的名称即可\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.webjars&lt;/groupId&gt;\n            &lt;artifactId&gt;jquery&lt;/artifactId&gt;\n            &lt;version&gt;3.3.1&lt;/version&gt;\n        &lt;/dependency&gt;\n</code></pre>\n<p>==2）、&quot;/**&quot; 访问当前项目的任何资源，都去（静态资源的文件夹）找映射==</p>\n<pre><code>&quot;classpath:/META-INF/resources/&quot;, \n&quot;classpath:/resources/&quot;,\n&quot;classpath:/static/&quot;, \n&quot;classpath:/public/&quot; \n&quot;/&quot;：当前项目的根路径\n</code></pre><p>localhost:8080/abc ===  去静态资源文件夹里面找abc</p>\n<p>==3）、欢迎页； 静态资源文件夹下的所有index.html页面；被&quot;/**&quot;映射；==</p>\n<p>​    localhost:8080/   找index页面</p>\n<p>==4）、所有的 **/favicon.ico  都是在静态资源文件下找；==</p>\n<h2 id=\"3-\">3、模板引擎</h2>\n<p>JSP、Velocity、Freemarker、Thymeleaf</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/template-engine.png\" alt=\"\"></p>\n<p>SpringBoot推荐的Thymeleaf；</p>\n<p>语法更简单，功能更强大；</p>\n<h3 id=\"1-thymeleaf-\">1、引入thymeleaf；</h3>\n<pre><code class=\"lang-xml\">        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;\n              2.1.6\n        &lt;/dependency&gt;\n切换thymeleaf版本\n&lt;properties&gt;\n        &lt;thymeleaf.version&gt;3.0.9.RELEASE&lt;/thymeleaf.version&gt;\n        &lt;!-- 布局功能的支持程序  thymeleaf3主程序  layout2以上版本 --&gt;\n        &lt;!-- thymeleaf2   layout1--&gt;\n        &lt;thymeleaf-layout-dialect.version&gt;2.2.2&lt;/thymeleaf-layout-dialect.version&gt;\n  &lt;/properties&gt;\n</code></pre>\n<h3 id=\"2-thymeleaf-\">2、Thymeleaf使用</h3>\n<pre><code class=\"lang-java\">@ConfigurationProperties(prefix = &quot;spring.thymeleaf&quot;)\npublic class ThymeleafProperties {\n\n    private static final Charset DEFAULT_ENCODING = Charset.forName(&quot;UTF-8&quot;);\n\n    private static final MimeType DEFAULT_CONTENT_TYPE = MimeType.valueOf(&quot;text/html&quot;);\n\n    public static final String DEFAULT_PREFIX = &quot;classpath:/templates/&quot;;\n\n    public static final String DEFAULT_SUFFIX = &quot;.html&quot;;\n      //\n</code></pre>\n<p>只要我们把HTML页面放在classpath:/templates/，thymeleaf就能自动渲染；</p>\n<p>使用：</p>\n<p>1、导入thymeleaf的名称空间</p>\n<pre><code class=\"lang-xml\">&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\"&gt;\n</code></pre>\n<p>2、使用thymeleaf语法；</p>\n<pre><code class=\"lang-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;成功！&lt;/h1&gt;\n    &lt;!--th:text 将div里面的文本内容设置为 --&gt;\n    &lt;div th:text=\"${hello}\"&gt;这是显示欢迎信息&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h3 id=\"3-\">3、语法规则</h3>\n<p>1）、th:text；改变当前元素里面的文本内容；</p>\n<p>​    th：任意html属性；来替换原生属性的值</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/2018-02-04_123955.png\" alt=\"\"></p>\n<p>2）、表达式？</p>\n<pre><code class=\"lang-properties\">Simple expressions:（表达式语法）\n    Variable Expressions: ${...}：获取变量值；OGNL；\n            1）、获取对象的属性、调用方法\n            2）、使用内置的基本对象：\n                #ctx : the context object.\n                #vars: the context variables.\n                #locale : the context locale.\n                #request : (only in Web Contexts) the HttpServletRequest object.\n                #response : (only in Web Contexts) the HttpServletResponse object.\n                #session : (only in Web Contexts) the HttpSession object.\n                #servletContext : (only in Web Contexts) the ServletContext object.\n\n                ${session.foo}\n            3）、内置的一些工具对象：\n#execInfo : information about the template being processed.\n#messages : methods for obtaining externalized messages inside variables expressions, in the same way as they would be obtained using #{…} syntax.\n#uris : methods for escaping parts of URLs/URIs\n#conversions : methods for executing the configured conversion service (if any).\n#dates : methods for java.util.Date objects: formatting, component extraction, etc.\n#calendars : analogous to #dates , but for java.util.Calendar objects.\n#numbers : methods for formatting numeric objects.\n#strings : methods for String objects: contains, startsWith, prepending/appending, etc.\n#objects : methods for objects in general.\n#bools : methods for boolean evaluation.\n#arrays : methods for arrays.\n#lists : methods for lists.\n#sets : methods for sets.\n#maps : methods for maps.\n#aggregates : methods for creating aggregates on arrays or collections.\n#ids : methods for dealing with id attributes that might be repeated (for example, as a result of an iteration).\n\n    Selection Variable Expressions: *{...}：选择表达式：和${}在功能上是一样；\n        补充：配合 th:object=\"${session.user}：\n   &lt;div th:object=\"${session.user}\"&gt;\n    &lt;p&gt;Name: &lt;span th:text=\"*{firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;\n    &lt;p&gt;Surname: &lt;span th:text=\"*{lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;\n    &lt;p&gt;Nationality: &lt;span th:text=\"*{nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;\n    &lt;/div&gt;\n\n    Message Expressions: #{...}：获取国际化内容\n    Link URL Expressions: @{...}：定义URL；\n            @{/order/process(execId=${execId},execType=\'FAST\')}\n    Fragment Expressions: ~{...}：片段引用表达式\n            &lt;div th:insert=\"~{commons :: main}\"&gt;...&lt;/div&gt;\n\nLiterals（字面量）\n      Text literals: \'one text\' , \'Another one!\' ,…\n      Number literals: 0 , 34 , 3.0 , 12.3 ,…\n      Boolean literals: true , false\n      Null literal: null\n      Literal tokens: one , sometext , main ,…\nText operations:（文本操作）\n    String concatenation: +\n    Literal substitutions: |The name is ${name}|\nArithmetic operations:（数学运算）\n    Binary operators: + , - , * , / , %\n    Minus sign (unary operator): -\nBoolean operations:（布尔运算）\n    Binary operators: and , or\n    Boolean negation (unary operator): ! , not\nComparisons and equality:（比较运算）\n    Comparators: &gt; , &lt; , &gt;= , &lt;= ( gt , lt , ge , le )\n    Equality operators: == , != ( eq , ne )\nConditional operators:条件运算（三元运算符）\n    If-then: (if) ? (then)\n    If-then-else: (if) ? (then) : (else)\n    Default: (value) ?: (defaultvalue)\nSpecial tokens:\n    No-Operation: _\n</code></pre>\n<h2 id=\"4-springmvc-\">4、SpringMVC自动配置</h2>\n<p><a href=\"https://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#boot-features-developing-web-applications\">https://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#boot-features-developing-web-applications</a></p>\n<h3 id=\"1-spring-mvc-auto-configuration\">1. Spring MVC auto-configuration</h3>\n<p>Spring Boot 自动配置好了SpringMVC</p>\n<p>以下是SpringBoot对SpringMVC的默认配置:<strong>==（WebMvcAutoConfiguration）==</strong></p>\n<ul>\n<li><p>Inclusion of <code>ContentNegotiatingViewResolver</code> and <code>BeanNameViewResolver</code> beans.</p>\n<ul>\n<li>自动配置了ViewResolver（视图解析器：根据方法的返回值得到视图对象（View），视图对象决定如何渲染（转发？重定向？））</li>\n<li>ContentNegotiatingViewResolver：组合所有的视图解析器的；</li>\n<li>==如何定制：我们可以自己给容器中添加一个视图解析器；自动的将其组合进来；==</li>\n</ul>\n</li>\n<li><p>Support for serving static resources, including support for WebJars (see below).静态资源文件夹路径,webjars</p>\n</li>\n<li><p>Static <code>index.html</code> support. 静态首页访问</p>\n</li>\n<li><p>Custom <code>Favicon</code> support (see below).  favicon.ico</p>\n<p>​</p>\n</li>\n<li><p>自动注册了 of <code>Converter</code>, <code>GenericConverter</code>, <code>Formatter</code> beans.</p>\n<ul>\n<li>Converter：转换器；  public String hello(User user)：类型转换使用Converter</li>\n<li><code>Formatter</code>  格式化器；  2017.12.17===Date；</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"lang-java\">        @Bean\n        @ConditionalOnProperty(prefix = \"spring.mvc\", name = \"date-format\")//在文件中配置日期格式化的规则\n        public Formatter&lt;Date&gt; dateFormatter() {\n            return new DateFormatter(this.mvcProperties.getDateFormat());//日期格式化组件\n        }\n</code></pre>\n<p>​    ==自己添加的格式化器转换器，我们只需要放在容器中即可==</p>\n<ul>\n<li><p>Support for <code>HttpMessageConverters</code> (see below).</p>\n<ul>\n<li><p>HttpMessageConverter：SpringMVC用来转换Http请求和响应的；User---Json；</p>\n</li>\n<li><p><code>HttpMessageConverters</code> 是从容器中确定；获取所有的HttpMessageConverter；</p>\n<p>==自己给容器中添加HttpMessageConverter，只需要将自己的组件注册容器中（@Bean,@Component）==</p>\n<p>​</p>\n</li>\n</ul>\n</li>\n<li><p>Automatic registration of <code>MessageCodesResolver</code> (see below).定义错误代码生成规则</p>\n</li>\n<li><p>Automatic use of a <code>ConfigurableWebBindingInitializer</code> bean (see below).</p>\n<p>==我们可以配置一个ConfigurableWebBindingInitializer来替换默认的；（添加到容器）==</p>\n<pre><code>初始化WebDataBinder；\n请求数据=====JavaBean；\n</code></pre></li>\n</ul>\n<p><strong>org.springframework.boot.autoconfigure.web：web的所有自动场景；</strong></p>\n<p>If you want to keep Spring Boot MVC features, and you just want to add additional <a href=\"https://docs.spring.io/spring/docs/4.3.14.RELEASE/spring-framework-reference/htmlsingle#mvc\">MVC configuration</a> (interceptors, formatters, view controllers etc.) you can add your own <code>@Configuration</code> class of type <code>WebMvcConfigurerAdapter</code>, but <strong>without</strong> <code>@EnableWebMvc</code>. If you wish to provide custom instances of <code>RequestMappingHandlerMapping</code>, <code>RequestMappingHandlerAdapter</code> or <code>ExceptionHandlerExceptionResolver</code> you can declare a <code>WebMvcRegistrationsAdapter</code> instance providing such components.</p>\n<p>If you want to take complete control of Spring MVC, you can add your own <code>@Configuration</code> annotated with <code>@EnableWebMvc</code>.</p>\n<h3 id=\"2-springmvc\">2、扩展SpringMVC</h3>\n<pre><code class=\"lang-xml\">    &lt;mvc:view-controller path=\"/hello\" view-name=\"success\"/&gt;\n    &lt;mvc:interceptors&gt;\n        &lt;mvc:interceptor&gt;\n            &lt;mvc:mapping path=\"/hello\"/&gt;\n            &lt;bean&gt;&lt;/bean&gt;\n        &lt;/mvc:interceptor&gt;\n    &lt;/mvc:interceptors&gt;\n</code></pre>\n<p><strong>==编写一个配置类（@Configuration），是WebMvcConfigurerAdapter类型；不能标注@EnableWebMvc==</strong>;</p>\n<p>既保留了所有的自动配置，也能用我们扩展的配置；</p>\n<pre><code class=\"lang-java\">//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能\n@Configuration\npublic class MyMvcConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n       // super.addViewControllers(registry);\n        //浏览器发送 /atguigu 请求来到 success\n        registry.addViewController(&quot;/atguigu&quot;).setViewName(&quot;success&quot;);\n    }\n}\n</code></pre>\n<p>原理：</p>\n<p>​    1）、WebMvcAutoConfiguration是SpringMVC的自动配置类</p>\n<p>​    2）、在做其他自动配置时会导入；@Import(<strong>EnableWebMvcConfiguration</strong>.class)</p>\n<pre><code class=\"lang-java\">    @Configuration\n    public static class EnableWebMvcConfiguration extends DelegatingWebMvcConfiguration {\n      private final WebMvcConfigurerComposite configurers = new WebMvcConfigurerComposite();\n\n     //从容器中获取所有的WebMvcConfigurer\n      @Autowired(required = false)\n      public void setConfigurers(List&lt;WebMvcConfigurer&gt; configurers) {\n          if (!CollectionUtils.isEmpty(configurers)) {\n              this.configurers.addWebMvcConfigurers(configurers);\n                //一个参考实现；将所有的WebMvcConfigurer相关配置都来一起调用；  \n                @Override\n             // public void addViewControllers(ViewControllerRegistry registry) {\n              //    for (WebMvcConfigurer delegate : this.delegates) {\n               //       delegate.addViewControllers(registry);\n               //   }\n              }\n          }\n    }\n</code></pre>\n<p>​    3）、容器中所有的WebMvcConfigurer都会一起起作用；</p>\n<p>​    4）、我们的配置类也会被调用；</p>\n<p>​    效果：SpringMVC的自动配置和我们的扩展配置都会起作用；</p>\n<h3 id=\"3-springmvc-\">3、全面接管SpringMVC；</h3>\n<p>SpringBoot对SpringMVC的自动配置不需要了，所有都是我们自己配置；所有的SpringMVC的自动配置都失效了</p>\n<p><strong>我们需要在配置类中添加@EnableWebMvc即可；</strong></p>\n<pre><code class=\"lang-java\">//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能\n@EnableWebMvc\n@Configuration\npublic class MyMvcConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n       // super.addViewControllers(registry);\n        //浏览器发送 /atguigu 请求来到 success\n        registry.addViewController(&quot;/atguigu&quot;).setViewName(&quot;success&quot;);\n    }\n}\n</code></pre>\n<p>原理：</p>\n<p>为什么@EnableWebMvc自动配置就失效了；</p>\n<p>1）@EnableWebMvc的核心</p>\n<pre><code class=\"lang-java\">@Import(DelegatingWebMvcConfiguration.class)\npublic @interface EnableWebMvc {\n</code></pre>\n<p>2）、</p>\n<pre><code class=\"lang-java\">@Configuration\npublic class DelegatingWebMvcConfiguration extends WebMvcConfigurationSupport {\n</code></pre>\n<p>3）、</p>\n<pre><code class=\"lang-java\">@Configuration\n@ConditionalOnWebApplication\n@ConditionalOnClass({ Servlet.class, DispatcherServlet.class,\n        WebMvcConfigurerAdapter.class })\n//容器中没有这个组件的时候，这个自动配置类才生效\n@ConditionalOnMissingBean(WebMvcConfigurationSupport.class)\n@AutoConfigureOrder(Ordered.HIGHEST_PRECEDENCE + 10)\n@AutoConfigureAfter({ DispatcherServletAutoConfiguration.class,\n        ValidationAutoConfiguration.class })\npublic class WebMvcAutoConfiguration {\n</code></pre>\n<p>4）、@EnableWebMvc将WebMvcConfigurationSupport组件导入进来；</p>\n<p>5）、导入的WebMvcConfigurationSupport只是SpringMVC最基本的功能；</p>\n<h2 id=\"5-springboot-\">5、如何修改SpringBoot的默认配置</h2>\n<p>模式：</p>\n<p>​    1）、SpringBoot在自动配置很多组件的时候，先看容器中有没有用户自己配置的（@Bean、@Component）如果有就用用户配置的，如果没有，才自动配置；如果有些组件可以有多个（ViewResolver）将用户配置的和自己默认的组合起来；</p>\n<p>​    2）、在SpringBoot中会有非常多的xxxConfigurer帮助我们进行扩展配置</p>\n<p>​    3）、在SpringBoot中会有很多的xxxCustomizer帮助我们进行定制配置</p>\n<h2 id=\"6-restfulcrud\">6、RestfulCRUD</h2>\n<h3 id=\"1-\">1）、默认访问首页</h3>\n<pre><code class=\"lang-java\">\n//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能\n//@EnableWebMvc   不要接管SpringMVC\n@Configuration\npublic class MyMvcConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n       // super.addViewControllers(registry);\n        //浏览器发送 /atguigu 请求来到 success\n        registry.addViewController(&quot;/atguigu&quot;).setViewName(&quot;success&quot;);\n    }\n\n    //所有的WebMvcConfigurerAdapter组件都会一起起作用\n    @Bean //将组件注册在容器\n    public WebMvcConfigurerAdapter webMvcConfigurerAdapter(){\n        WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter() {\n            @Override\n            public void addViewControllers(ViewControllerRegistry registry) {\n                registry.addViewController(&quot;/&quot;).setViewName(&quot;login&quot;);\n                registry.addViewController(&quot;/index.html&quot;).setViewName(&quot;login&quot;);\n            }\n        };\n        return adapter;\n    }\n}\n</code></pre>\n<h3 id=\"2-\">2）、国际化</h3>\n<p><strong>1）、编写国际化配置文件；</strong></p>\n<p>2）、使用ResourceBundleMessageSource管理国际化资源文件</p>\n<p>3）、在页面使用fmt:message取出国际化内容</p>\n<p>步骤：</p>\n<p>1）、编写国际化配置文件，抽取页面需要显示的国际化消息</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180211130721.png\" alt=\"\"></p>\n<p>2）、SpringBoot自动配置好了管理国际化资源文件的组件；</p>\n<pre><code class=\"lang-java\">@ConfigurationProperties(prefix = &quot;spring.messages&quot;)\npublic class MessageSourceAutoConfiguration {\n\n    /**\n     * Comma-separated list of basenames (essentially a fully-qualified classpath\n     * location), each following the ResourceBundle convention with relaxed support for\n     * slash based locations. If it doesn&#39;t contain a package qualifier (such as\n     * &quot;org.mypackage&quot;), it will be resolved from the classpath root.\n     */\n    private String basename = &quot;messages&quot;;  \n    //我们的配置文件可以直接放在类路径下叫messages.properties；\n\n    @Bean\n    public MessageSource messageSource() {\n        ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource();\n        if (StringUtils.hasText(this.basename)) {\n            //设置国际化资源文件的基础名（去掉语言国家代码的）\n            messageSource.setBasenames(StringUtils.commaDelimitedListToStringArray(\n                    StringUtils.trimAllWhitespace(this.basename)));\n        }\n        if (this.encoding != null) {\n            messageSource.setDefaultEncoding(this.encoding.name());\n        }\n        messageSource.setFallbackToSystemLocale(this.fallbackToSystemLocale);\n        messageSource.setCacheSeconds(this.cacheSeconds);\n        messageSource.setAlwaysUseMessageFormat(this.alwaysUseMessageFormat);\n        return messageSource;\n    }\n</code></pre>\n<p>3）、去页面获取国际化的值；</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180211134506.png\" alt=\"\"></p>\n<pre><code class=\"lang-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"  xmlns:th=\"http://www.thymeleaf.org\"&gt;\n    &lt;head&gt;\n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"&gt;\n        &lt;meta name=\"description\" content=\"\"&gt;\n        &lt;meta name=\"author\" content=\"\"&gt;\n        &lt;title&gt;Signin Template for Bootstrap&lt;/title&gt;\n        &lt;!-- Bootstrap core CSS --&gt;\n        &lt;link href=\"asserts/css/bootstrap.min.css\" th:href=\"@{/webjars/bootstrap/4.0.0/css/bootstrap.css}\" rel=\"stylesheet\"&gt;\n        &lt;!-- Custom styles for this template --&gt;\n        &lt;link href=\"asserts/css/signin.css\" th:href=\"@{/asserts/css/signin.css}\" rel=\"stylesheet\"&gt;\n    &lt;/head&gt;\n\n    &lt;body class=\"text-center\"&gt;\n        &lt;form class=\"form-signin\" action=\"dashboard.html\"&gt;\n            &lt;img class=\"mb-4\" th:src=\"@{/asserts/img/bootstrap-solid.svg}\" src=\"asserts/img/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\"&gt;\n            &lt;h1 class=\"h3 mb-3 font-weight-normal\" th:text=\"#{login.tip}\"&gt;Please sign in&lt;/h1&gt;\n            &lt;label class=\"sr-only\" th:text=\"#{login.username}\"&gt;Username&lt;/label&gt;\n            &lt;input type=\"text\" class=\"form-control\" placeholder=\"Username\" th:placeholder=\"#{login.username}\" required=\"\" autofocus=\"\"&gt;\n            &lt;label class=\"sr-only\" th:text=\"#{login.password}\"&gt;Password&lt;/label&gt;\n            &lt;input type=\"password\" class=\"form-control\" placeholder=\"Password\" th:placeholder=\"#{login.password}\" required=\"\"&gt;\n            &lt;div class=\"checkbox mb-3\"&gt;\n                &lt;label&gt;\n                  &lt;input type=\"checkbox\" value=\"remember-me\"/&gt; [[#{login.remember}]]\n        &lt;/label&gt;\n            &lt;/div&gt;\n            &lt;button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" th:text=\"#{login.btn}\"&gt;Sign in&lt;/button&gt;\n            &lt;p class=\"mt-5 mb-3 text-muted\"&gt;© 2017-2018&lt;/p&gt;\n            &lt;a class=\"btn btn-sm\"&gt;中文&lt;/a&gt;\n            &lt;a class=\"btn btn-sm\"&gt;English&lt;/a&gt;\n        &lt;/form&gt;\n\n    &lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n<p>效果：根据浏览器语言设置的信息切换了国际化；</p>\n<p>原理：</p>\n<p>​    国际化Locale（区域信息对象）；LocaleResolver（获取区域信息对象）；</p>\n<pre><code class=\"lang-java\">        @Bean\n        @ConditionalOnMissingBean\n        @ConditionalOnProperty(prefix = &quot;spring.mvc&quot;, name = &quot;locale&quot;)\n        public LocaleResolver localeResolver() {\n            if (this.mvcProperties\n                    .getLocaleResolver() == WebMvcProperties.LocaleResolver.FIXED) {\n                return new FixedLocaleResolver(this.mvcProperties.getLocale());\n            }\n            AcceptHeaderLocaleResolver localeResolver = new AcceptHeaderLocaleResolver();\n            localeResolver.setDefaultLocale(this.mvcProperties.getLocale());\n            return localeResolver;\n        }\n默认的就是根据请求头带来的区域信息获取Locale进行国际化\n</code></pre>\n<p>4）、点击链接切换国际化</p>\n<pre><code class=\"lang-java\">/**\n * 可以在连接上携带区域信息\n */\npublic class MyLocaleResolver implements LocaleResolver {\n\n    @Override\n    public Locale resolveLocale(HttpServletRequest request) {\n        String l = request.getParameter(&quot;l&quot;);\n        Locale locale = Locale.getDefault();\n        if(!StringUtils.isEmpty(l)){\n            String[] split = l.split(&quot;_&quot;);\n            locale = new Locale(split[0],split[1]);\n        }\n        return locale;\n    }\n\n    @Override\n    public void setLocale(HttpServletRequest request, HttpServletResponse response, Locale locale) {\n\n    }\n}\n\n\n @Bean\n    public LocaleResolver localeResolver(){\n        return new MyLocaleResolver();\n    }\n}\n</code></pre>\n<h3 id=\"3-\">3）、登陆</h3>\n<p>开发期间模板引擎页面修改以后，要实时生效</p>\n<p>1）、禁用模板引擎的缓存</p>\n<pre><code># 禁用缓存\nspring.thymeleaf.cache=false\n</code></pre><p>2）、页面修改完成以后ctrl+f9：重新编译；</p>\n<p>登陆错误消息的显示</p>\n<pre><code class=\"lang-html\">&lt;p style=\"color: red\" th:text=\"${msg}\" th:if=\"${not #strings.isEmpty(msg)}\"&gt;&lt;/p&gt;\n</code></pre>\n<h3 id=\"4-\">4）、拦截器进行登陆检查</h3>\n<p>拦截器</p>\n<pre><code class=\"lang-java\">\n/**\n * 登陆检查，\n */\npublic class LoginHandlerInterceptor implements HandlerInterceptor {\n    //目标方法执行之前\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        Object user = request.getSession().getAttribute(&quot;loginUser&quot;);\n        if(user == null){\n            //未登陆，返回登陆页面\n            request.setAttribute(&quot;msg&quot;,&quot;没有权限请先登陆&quot;);\n            request.getRequestDispatcher(&quot;/index.html&quot;).forward(request,response);\n            return false;\n        }else{\n            //已登陆，放行请求\n            return true;\n        }\n\n    }\n\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n\n    }\n}\n</code></pre>\n<p>注册拦截器</p>\n<pre><code class=\"lang-java\">  //所有的WebMvcConfigurerAdapter组件都会一起起作用\n    @Bean //将组件注册在容器\n    public WebMvcConfigurerAdapter webMvcConfigurerAdapter(){\n        WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter() {\n            @Override\n            public void addViewControllers(ViewControllerRegistry registry) {\n                registry.addViewController(&quot;/&quot;).setViewName(&quot;login&quot;);\n                registry.addViewController(&quot;/index.html&quot;).setViewName(&quot;login&quot;);\n                registry.addViewController(&quot;/main.html&quot;).setViewName(&quot;dashboard&quot;);\n            }\n\n            //注册拦截器\n            @Override\n            public void addInterceptors(InterceptorRegistry registry) {\n                //super.addInterceptors(registry);\n                //静态资源；  *.css , *.js\n                //SpringBoot已经做好了静态资源映射\n                registry.addInterceptor(new LoginHandlerInterceptor()).addPathPatterns(&quot;/**&quot;)\n                        .excludePathPatterns(&quot;/index.html&quot;,&quot;/&quot;,&quot;/user/login&quot;);\n            }\n        };\n        return adapter;\n    }\n</code></pre>\n<h3 id=\"5-crud-\">5）、CRUD-员工列表</h3>\n<p>实验要求：</p>\n<p>1）、RestfulCRUD：CRUD满足Rest风格；</p>\n<p>URI：  /资源名称/资源标识       HTTP请求方式区分对资源CRUD操作</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>普通CRUD（uri来区分操作）</th>\n<th>RestfulCRUD</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>查询</td>\n<td>getEmp</td>\n<td>emp---GET</td>\n</tr>\n<tr>\n<td>添加</td>\n<td>addEmp?xxx</td>\n<td>emp---POST</td>\n</tr>\n<tr>\n<td>修改</td>\n<td>updateEmp?id=xxx&amp;xxx=xx</td>\n<td>emp/{id}---PUT</td>\n</tr>\n<tr>\n<td>删除</td>\n<td>deleteEmp?id=1</td>\n<td>emp/{id}---DELETE</td>\n</tr>\n</tbody>\n</table>\n<p>2）、实验的请求架构;</p>\n<table>\n<thead>\n<tr>\n<th>实验功能</th>\n<th>请求URI</th>\n<th>请求方式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>查询所有员工</td>\n<td>emps</td>\n<td>GET</td>\n</tr>\n<tr>\n<td>查询某个员工(来到修改页面)</td>\n<td>emp/1</td>\n<td>GET</td>\n</tr>\n<tr>\n<td>来到添加页面</td>\n<td>emp</td>\n<td>GET</td>\n</tr>\n<tr>\n<td>添加员工</td>\n<td>emp</td>\n<td>POST</td>\n</tr>\n<tr>\n<td>来到修改页面（查出员工进行信息回显）</td>\n<td>emp/1</td>\n<td>GET</td>\n</tr>\n<tr>\n<td>修改员工</td>\n<td>emp</td>\n<td>PUT</td>\n</tr>\n<tr>\n<td>删除员工</td>\n<td>emp/1</td>\n<td>DELETE</td>\n</tr>\n</tbody>\n</table>\n<p>3）、员工列表：</p>\n<h4 id=\"thymeleaf-\">thymeleaf公共页面元素抽取</h4>\n<pre><code class=\"lang-html\">1、抽取公共片段\n&lt;div th:fragment=\"copy\"&gt;\n&amp;copy; 2011 The Good Thymes Virtual Grocery\n&lt;/div&gt;\n\n2、引入公共片段\n&lt;div th:insert=\"~{footer :: copy}\"&gt;&lt;/div&gt;\n~{templatename::selector}：模板名::选择器\n~{templatename::fragmentname}:模板名::片段名\n\n3、默认效果：\ninsert的公共片段在div标签中\n如果使用th:insert等属性进行引入，可以不用写~{}：\n行内写法可以加上：[[~{}]];[(~{})]；\n</code></pre>\n<p>三种引入公共片段的th属性：</p>\n<p><strong>th:insert</strong>：将公共片段整个插入到声明引入的元素中</p>\n<p><strong>th:replace</strong>：将声明引入的元素替换为公共片段</p>\n<p><strong>th:include</strong>：将被引入的片段的内容包含进这个标签中</p>\n<pre><code class=\"lang-html\">&lt;footer th:fragment=\"copy\"&gt;\n&amp;copy; 2011 The Good Thymes Virtual Grocery\n&lt;/footer&gt;\n\n引入方式\n&lt;div th:insert=\"footer :: copy\"&gt;&lt;/div&gt;\n&lt;div th:replace=\"footer :: copy\"&gt;&lt;/div&gt;\n&lt;div th:include=\"footer :: copy\"&gt;&lt;/div&gt;\n\n效果\n&lt;div&gt;\n    &lt;footer&gt;\n    &amp;copy; 2011 The Good Thymes Virtual Grocery\n    &lt;/footer&gt;\n&lt;/div&gt;\n\n&lt;footer&gt;\n&amp;copy; 2011 The Good Thymes Virtual Grocery\n&lt;/footer&gt;\n\n&lt;div&gt;\n&amp;copy; 2011 The Good Thymes Virtual Grocery\n&lt;/div&gt;\n</code></pre>\n<p>引入片段的时候传入参数： </p>\n<pre><code class=\"lang-html\">\n&lt;nav class=\"col-md-2 d-none d-md-block bg-light sidebar\" id=\"sidebar\"&gt;\n    &lt;div class=\"sidebar-sticky\"&gt;\n        &lt;ul class=\"nav flex-column\"&gt;\n            &lt;li class=\"nav-item\"&gt;\n                &lt;a class=\"nav-link active\"\n                   th:class=\"${activeUri==\'main.html\'?\'nav-link active\':\'nav-link\'}\"\n                   href=\"#\" th:href=\"@{/main.html}\"&gt;\n                    &lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-home\"&gt;\n                        &lt;path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"&gt;&lt;/path&gt;\n                        &lt;polyline points=\"9 22 9 12 15 12 15 22\"&gt;&lt;/polyline&gt;\n                    &lt;/svg&gt;\n                    Dashboard &lt;span class=\"sr-only\"&gt;(current)&lt;/span&gt;\n                &lt;/a&gt;\n            &lt;/li&gt;\n\n&lt;!--引入侧边栏;传入参数--&gt;\n&lt;div th:replace=\"commons/bar::#sidebar(activeUri=\'emps\')\"&gt;&lt;/div&gt;\n</code></pre>\n<h3 id=\"6-crud-\">6）、CRUD-员工添加</h3>\n<p>添加页面</p>\n<pre><code class=\"lang-html\">&lt;form&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;LastName&lt;/label&gt;\n        &lt;input type=\"text\" class=\"form-control\" placeholder=\"zhangsan\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Email&lt;/label&gt;\n        &lt;input type=\"email\" class=\"form-control\" placeholder=\"zhangsan@atguigu.com\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Gender&lt;/label&gt;&lt;br/&gt;\n        &lt;div class=\"form-check form-check-inline\"&gt;\n            &lt;input class=\"form-check-input\" type=\"radio\" name=\"gender\"  value=\"1\"&gt;\n            &lt;label class=\"form-check-label\"&gt;男&lt;/label&gt;\n        &lt;/div&gt;\n        &lt;div class=\"form-check form-check-inline\"&gt;\n            &lt;input class=\"form-check-input\" type=\"radio\" name=\"gender\"  value=\"0\"&gt;\n            &lt;label class=\"form-check-label\"&gt;女&lt;/label&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;department&lt;/label&gt;\n        &lt;select class=\"form-control\"&gt;\n            &lt;option&gt;1&lt;/option&gt;\n            &lt;option&gt;2&lt;/option&gt;\n            &lt;option&gt;3&lt;/option&gt;\n            &lt;option&gt;4&lt;/option&gt;\n            &lt;option&gt;5&lt;/option&gt;\n        &lt;/select&gt;\n    &lt;/div&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Birth&lt;/label&gt;\n        &lt;input type=\"text\" class=\"form-control\" placeholder=\"zhangsan\"&gt;\n    &lt;/div&gt;\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;添加&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n<p>提交的数据格式不对：生日：日期；</p>\n<p>2017-12-12；2017/12/12；2017.12.12；</p>\n<p>日期的格式化；SpringMVC将页面提交的值需要转换为指定的类型;</p>\n<p>2017-12-12---Date； 类型转换，格式化;</p>\n<p>默认日期是按照/的方式；</p>\n<h3 id=\"7-crud-\">7）、CRUD-员工修改</h3>\n<p>修改添加二合一表单</p>\n<pre><code class=\"lang-html\">&lt;!--需要区分是员工修改还是添加；--&gt;\n&lt;form th:action=\"@{/emp}\" method=\"post\"&gt;\n    &lt;!--发送put请求修改员工数据--&gt;\n    &lt;!--\n1、SpringMVC中配置HiddenHttpMethodFilter;（SpringBoot自动配置好的）\n2、页面创建一个post表单\n3、创建一个input项，name=\"_method\";值就是我们指定的请求方式\n--&gt;\n    &lt;input type=\"hidden\" name=\"_method\" value=\"put\" th:if=\"${emp!=null}\"/&gt;\n    &lt;input type=\"hidden\" name=\"id\" th:if=\"${emp!=null}\" th:value=\"${emp.id}\"&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;LastName&lt;/label&gt;\n        &lt;input name=\"lastName\" type=\"text\" class=\"form-control\" placeholder=\"zhangsan\" th:value=\"${emp!=null}?${emp.lastName}\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Email&lt;/label&gt;\n        &lt;input name=\"email\" type=\"email\" class=\"form-control\" placeholder=\"zhangsan@atguigu.com\" th:value=\"${emp!=null}?${emp.email}\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Gender&lt;/label&gt;&lt;br/&gt;\n        &lt;div class=\"form-check form-check-inline\"&gt;\n            &lt;input class=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"1\" th:checked=\"${emp!=null}?${emp.gender==1}\"&gt;\n            &lt;label class=\"form-check-label\"&gt;男&lt;/label&gt;\n        &lt;/div&gt;\n        &lt;div class=\"form-check form-check-inline\"&gt;\n            &lt;input class=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"0\" th:checked=\"${emp!=null}?${emp.gender==0}\"&gt;\n            &lt;label class=\"form-check-label\"&gt;女&lt;/label&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;department&lt;/label&gt;\n        &lt;!--提交的是部门的id--&gt;\n        &lt;select class=\"form-control\" name=\"department.id\"&gt;\n            &lt;option th:selected=\"${emp!=null}?${dept.id == emp.department.id}\" th:value=\"${dept.id}\" th:each=\"dept:${depts}\" th:text=\"${dept.departmentName}\"&gt;1&lt;/option&gt;\n        &lt;/select&gt;\n    &lt;/div&gt;\n    &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;Birth&lt;/label&gt;\n        &lt;input name=\"birth\" type=\"text\" class=\"form-control\" placeholder=\"zhangsan\" th:value=\"${emp!=null}?${#dates.format(emp.birth, \'yyyy-MM-dd HH:mm\')}\"&gt;\n    &lt;/div&gt;\n    &lt;button type=\"submit\" class=\"btn btn-primary\" th:text=\"${emp!=null}?\'修改\':\'添加\'\"&gt;添加&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n<h3 id=\"8-crud-\">8）、CRUD-员工删除</h3>\n<pre><code class=\"lang-html\">&lt;tr th:each=\"emp:${emps}\"&gt;\n    &lt;td th:text=\"${emp.id}\"&gt;&lt;/td&gt;\n    &lt;td&gt;[[${emp.lastName}]]&lt;/td&gt;\n    &lt;td th:text=\"${emp.email}\"&gt;&lt;/td&gt;\n    &lt;td th:text=\"${emp.gender}==0?\'女\':\'男\'\"&gt;&lt;/td&gt;\n    &lt;td th:text=\"${emp.department.departmentName}\"&gt;&lt;/td&gt;\n    &lt;td th:text=\"${#dates.format(emp.birth, \'yyyy-MM-dd HH:mm\')}\"&gt;&lt;/td&gt;\n    &lt;td&gt;\n        &lt;a class=\"btn btn-sm btn-primary\" th:href=\"@{/emp/}+${emp.id}\"&gt;编辑&lt;/a&gt;\n        &lt;button th:attr=\"del_uri=@{/emp/}+${emp.id}\" class=\"btn btn-sm btn-danger deleteBtn\"&gt;删除&lt;/button&gt;\n    &lt;/td&gt;\n&lt;/tr&gt;\n\n\n&lt;script&gt;\n    $(\".deleteBtn\").click(function(){\n        //删除当前员工的\n        $(\"#deleteEmpForm\").attr(\"action\",$(this).attr(\"del_uri\")).submit();\n        return false;\n    });\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"7-\">7、错误处理机制</h2>\n<h3 id=\"1-springboot-\">1）、SpringBoot默认的错误处理机制</h3>\n<p>默认效果：</p>\n<p>​        1）、浏览器，返回一个默认的错误页面</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180226173408.png\" alt=\"\"></p>\n<p>  浏览器发送请求的请求头：</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180226180347.png\" alt=\"\"></p>\n<p>​        2）、如果是其他客户端，默认响应一个json数据</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180226173527.png\" alt=\"\"></p>\n<p>​        <img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180226180504.png\" alt=\"\"></p>\n<p>原理：</p>\n<p>​    可以参照ErrorMvcAutoConfiguration；错误处理的自动配置；</p>\n<pre><code>  给容器中添加了以下组件\n</code></pre><p>​    1、DefaultErrorAttributes：</p>\n<pre><code class=\"lang-java\">帮我们在页面共享信息；\n@Override\n    public Map&lt;String, Object&gt; getErrorAttributes(RequestAttributes requestAttributes,\n            boolean includeStackTrace) {\n        Map&lt;String, Object&gt; errorAttributes = new LinkedHashMap&lt;String, Object&gt;();\n        errorAttributes.put(\"timestamp\", new Date());\n        addStatus(errorAttributes, requestAttributes);\n        addErrorDetails(errorAttributes, requestAttributes, includeStackTrace);\n        addPath(errorAttributes, requestAttributes);\n        return errorAttributes;\n    }\n</code></pre>\n<p>​    2、BasicErrorController：处理默认/error请求</p>\n<pre><code class=\"lang-java\">@Controller\n@RequestMapping(\"${server.error.path:${error.path:/error}}\")\npublic class BasicErrorController extends AbstractErrorController {\n\n    @RequestMapping(produces = \"text/html\")//产生html类型的数据；浏览器发送的请求来到这个方法处理\n    public ModelAndView errorHtml(HttpServletRequest request,\n            HttpServletResponse response) {\n        HttpStatus status = getStatus(request);\n        Map&lt;String, Object&gt; model = Collections.unmodifiableMap(getErrorAttributes(\n                request, isIncludeStackTrace(request, MediaType.TEXT_HTML)));\n        response.setStatus(status.value());\n\n        //去哪个页面作为错误页面；包含页面地址和页面内容\n        ModelAndView modelAndView = resolveErrorView(request, response, status, model);\n        return (modelAndView == null ? new ModelAndView(\"error\", model) : modelAndView);\n    }\n\n    @RequestMapping\n    @ResponseBody    //产生json数据，其他客户端来到这个方法处理；\n    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; error(HttpServletRequest request) {\n        Map&lt;String, Object&gt; body = getErrorAttributes(request,\n                isIncludeStackTrace(request, MediaType.ALL));\n        HttpStatus status = getStatus(request);\n        return new ResponseEntity&lt;Map&lt;String, Object&gt;&gt;(body, status);\n    }\n</code></pre>\n<p>​    3、ErrorPageCustomizer：</p>\n<pre><code class=\"lang-java\">    @Value(&quot;${error.path:/error}&quot;)\n    private String path = &quot;/error&quot;;  系统出现错误以后来到error请求进行处理；（web.xml注册的错误页面规则）\n</code></pre>\n<p>​    4、DefaultErrorViewResolver：</p>\n<pre><code class=\"lang-java\">@Override\n    public ModelAndView resolveErrorView(HttpServletRequest request, HttpStatus status,\n            Map&lt;String, Object&gt; model) {\n        ModelAndView modelAndView = resolve(String.valueOf(status), model);\n        if (modelAndView == null &amp;&amp; SERIES_VIEWS.containsKey(status.series())) {\n            modelAndView = resolve(SERIES_VIEWS.get(status.series()), model);\n        }\n        return modelAndView;\n    }\n\n    private ModelAndView resolve(String viewName, Map&lt;String, Object&gt; model) {\n        //默认SpringBoot可以去找到一个页面？  error/404\n        String errorViewName = \"error/\" + viewName;\n\n        //模板引擎可以解析这个页面地址就用模板引擎解析\n        TemplateAvailabilityProvider provider = this.templateAvailabilityProviders\n                .getProvider(errorViewName, this.applicationContext);\n        if (provider != null) {\n            //模板引擎可用的情况下返回到errorViewName指定的视图地址\n            return new ModelAndView(errorViewName, model);\n        }\n        //模板引擎不可用，就在静态资源文件夹下找errorViewName对应的页面   error/404.html\n        return resolveResource(errorViewName, model);\n    }\n</code></pre>\n<p>​    步骤：</p>\n<p>​        一但系统出现4xx或者5xx之类的错误；ErrorPageCustomizer就会生效（定制错误的响应规则）；就会来到/error请求；就会被<strong>BasicErrorController</strong>处理；</p>\n<p>​        1）响应页面；去哪个页面是由<strong>DefaultErrorViewResolver</strong>解析得到的；</p>\n<pre><code class=\"lang-java\">protected ModelAndView resolveErrorView(HttpServletRequest request,\n      HttpServletResponse response, HttpStatus status, Map&lt;String, Object&gt; model) {\n    //所有的ErrorViewResolver得到ModelAndView\n   for (ErrorViewResolver resolver : this.errorViewResolvers) {\n      ModelAndView modelAndView = resolver.resolveErrorView(request, status, model);\n      if (modelAndView != null) {\n         return modelAndView;\n      }\n   }\n   return null;\n}\n</code></pre>\n<h3 id=\"2-\">2）、如果定制错误响应：</h3>\n<h4 id=\"-1-\"><strong>1）、如何定制错误的页面；</strong></h4>\n<p>​            <strong>1）、有模板引擎的情况下；error/状态码;</strong> 【将错误页面命名为  错误状态码.html 放在模板引擎文件夹里面的 error文件夹下】，发生此状态码的错误就会来到  对应的页面；</p>\n<p>​            我们可以使用4xx和5xx作为错误页面的文件名来匹配这种类型的所有错误，精确优先（优先寻找精确的状态码.html）；        </p>\n<p>​            页面能获取的信息；</p>\n<p>​                timestamp：时间戳</p>\n<p>​                status：状态码</p>\n<p>​                error：错误提示</p>\n<p>​                exception：异常对象</p>\n<p>​                message：异常消息</p>\n<p>​                errors：JSR303数据校验的错误都在这里</p>\n<p>​            2）、没有模板引擎（模板引擎找不到这个错误页面），静态资源文件夹下找；</p>\n<p>​            3）、以上都没有错误页面，就是默认来到SpringBoot默认的错误提示页面；</p>\n<h4 id=\"2-json-\">2）、如何定制错误的json数据；</h4>\n<p>​        1）、自定义异常处理&amp;返回定制json数据；</p>\n<pre><code class=\"lang-java\">@ControllerAdvice\npublic class MyExceptionHandler {\n\n    @ResponseBody\n    @ExceptionHandler(UserNotExistException.class)\n    public Map&lt;String,Object&gt; handleException(Exception e){\n        Map&lt;String,Object&gt; map = new HashMap&lt;&gt;();\n        map.put(\"code\",\"user.notexist\");\n        map.put(\"message\",e.getMessage());\n        return map;\n    }\n}\n//没有自适应效果...\n</code></pre>\n<p>​        2）、转发到/error进行自适应响应效果处理</p>\n<pre><code class=\"lang-java\"> @ExceptionHandler(UserNotExistException.class)\n    public String handleException(Exception e, HttpServletRequest request){\n        Map&lt;String,Object&gt; map = new HashMap&lt;&gt;();\n        //传入我们自己的错误状态码  4xx 5xx，否则就不会进入定制错误页面的解析流程\n        /**\n         * Integer statusCode = (Integer) request\n         .getAttribute(\"javax.servlet.error.status_code\");\n         */\n        request.setAttribute(\"javax.servlet.error.status_code\",500);\n        map.put(\"code\",\"user.notexist\");\n        map.put(\"message\",e.getMessage());\n        //转发到/error\n        return \"forward:/error\";\n    }\n</code></pre>\n<h4 id=\"3-\">3）、将我们的定制数据携带出去；</h4>\n<p>出现错误以后，会来到/error请求，会被BasicErrorController处理，响应出去可以获取的数据是由getErrorAttributes得到的（是AbstractErrorController（ErrorController）规定的方法）；</p>\n<p>​    1、完全来编写一个ErrorController的实现类【或者是编写AbstractErrorController的子类】，放在容器中；</p>\n<p>​    2、页面上能用的数据，或者是json返回能用的数据都是通过errorAttributes.getErrorAttributes得到；</p>\n<p>​            容器中DefaultErrorAttributes.getErrorAttributes()；默认进行数据处理的；</p>\n<p>自定义ErrorAttributes</p>\n<pre><code class=\"lang-java\">//给容器中加入我们自己定义的ErrorAttributes\n@Component\npublic class MyErrorAttributes extends DefaultErrorAttributes {\n\n    @Override\n    public Map&lt;String, Object&gt; getErrorAttributes(RequestAttributes requestAttributes, boolean includeStackTrace) {\n        Map&lt;String, Object&gt; map = super.getErrorAttributes(requestAttributes, includeStackTrace);\n        map.put(\"company\",\"atguigu\");\n        return map;\n    }\n}\n</code></pre>\n<p>最终的效果：响应是自适应的，可以通过定制ErrorAttributes改变需要返回的内容，</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180228135513.png\" alt=\"\"></p>\n<h2 id=\"8-servlet-\">8、配置嵌入式Servlet容器</h2>\n<p>SpringBoot默认使用Tomcat作为嵌入式的Servlet容器；</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180301142915.png\" alt=\"\"></p>\n<p>问题？</p>\n<h3 id=\"1-servlet-\">1）、如何定制和修改Servlet容器的相关配置；</h3>\n<p>1、修改和server有关的配置（ServerProperties【也是EmbeddedServletContainerCustomizer】）；</p>\n<pre><code class=\"lang-properties\">server.port=8081\nserver.context-path=/crud\n\nserver.tomcat.uri-encoding=UTF-8\n\n//通用的Servlet容器设置\nserver.xxx\n//Tomcat的设置\nserver.tomcat.xxx\n</code></pre>\n<p>2、编写一个<strong>EmbeddedServletContainerCustomizer</strong>：嵌入式的Servlet容器的定制器；来修改Servlet容器的配置</p>\n<pre><code class=\"lang-java\">@Bean  //一定要将这个定制器加入到容器中\npublic EmbeddedServletContainerCustomizer embeddedServletContainerCustomizer(){\n    return new EmbeddedServletContainerCustomizer() {\n\n        //定制嵌入式的Servlet容器相关的规则\n        @Override\n        public void customize(ConfigurableEmbeddedServletContainer container) {\n            container.setPort(8083);\n        }\n    };\n}\n</code></pre>\n<h3 id=\"2-servlet-servlet-filter-listener-\">2）、注册Servlet三大组件【Servlet、Filter、Listener】</h3>\n<p>由于SpringBoot默认是以jar包的方式启动嵌入式的Servlet容器来启动SpringBoot的web应用，没有web.xml文件。</p>\n<p>注册三大组件用以下方式</p>\n<p>ServletRegistrationBean</p>\n<pre><code class=\"lang-java\">//注册三大组件\n@Bean\npublic ServletRegistrationBean myServlet(){\n    ServletRegistrationBean registrationBean = new ServletRegistrationBean(new MyServlet(),&quot;/myServlet&quot;);\n    return registrationBean;\n}\n</code></pre>\n<p>FilterRegistrationBean</p>\n<pre><code class=\"lang-java\">@Bean\npublic FilterRegistrationBean myFilter(){\n    FilterRegistrationBean registrationBean = new FilterRegistrationBean();\n    registrationBean.setFilter(new MyFilter());\n    registrationBean.setUrlPatterns(Arrays.asList(&quot;/hello&quot;,&quot;/myServlet&quot;));\n    return registrationBean;\n}\n</code></pre>\n<p>ServletListenerRegistrationBean</p>\n<pre><code class=\"lang-java\">@Bean\npublic ServletListenerRegistrationBean myListener(){\n    ServletListenerRegistrationBean&lt;MyListener&gt; registrationBean = new ServletListenerRegistrationBean&lt;&gt;(new MyListener());\n    return registrationBean;\n}\n</code></pre>\n<p>SpringBoot帮我们自动SpringMVC的时候，自动的注册SpringMVC的前端控制器；DIspatcherServlet；</p>\n<p>DispatcherServletAutoConfiguration中：</p>\n<pre><code class=\"lang-java\">@Bean(name = DEFAULT_DISPATCHER_SERVLET_REGISTRATION_BEAN_NAME)\n@ConditionalOnBean(value = DispatcherServlet.class, name = DEFAULT_DISPATCHER_SERVLET_BEAN_NAME)\npublic ServletRegistrationBean dispatcherServletRegistration(\n      DispatcherServlet dispatcherServlet) {\n   ServletRegistrationBean registration = new ServletRegistrationBean(\n         dispatcherServlet, this.serverProperties.getServletMapping());\n    //默认拦截： /  所有请求；包静态资源，但是不拦截jsp请求；   /*会拦截jsp\n    //可以通过server.servletPath来修改SpringMVC前端控制器默认拦截的请求路径\n\n   registration.setName(DEFAULT_DISPATCHER_SERVLET_BEAN_NAME);\n   registration.setLoadOnStartup(\n         this.webMvcProperties.getServlet().getLoadOnStartup());\n   if (this.multipartConfig != null) {\n      registration.setMultipartConfig(this.multipartConfig);\n   }\n   return registration;\n}\n</code></pre>\n<p>2）、SpringBoot能不能支持其他的Servlet容器；</p>\n<h3 id=\"3-servlet-\">3）、替换为其他嵌入式Servlet容器</h3>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180302114401.png\" alt=\"\"></p>\n<p>默认支持：</p>\n<p>Tomcat（默认使用）</p>\n<pre><code class=\"lang-xml\">&lt;dependency&gt;\n   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n   &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n   引入web模块默认就是使用嵌入式的Tomcat作为Servlet容器；\n&lt;/dependency&gt;\n</code></pre>\n<p>Jetty</p>\n<pre><code class=\"lang-xml\">&lt;!-- 引入web模块 --&gt;\n&lt;dependency&gt;\n   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n   &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n   &lt;exclusions&gt;\n      &lt;exclusion&gt;\n         &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;\n         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n      &lt;/exclusion&gt;\n   &lt;/exclusions&gt;\n&lt;/dependency&gt;\n\n&lt;!--引入其他的Servlet容器--&gt;\n&lt;dependency&gt;\n   &lt;artifactId&gt;spring-boot-starter-jetty&lt;/artifactId&gt;\n   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p>Undertow</p>\n<pre><code class=\"lang-xml\">&lt;!-- 引入web模块 --&gt;\n&lt;dependency&gt;\n   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n   &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n   &lt;exclusions&gt;\n      &lt;exclusion&gt;\n         &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;\n         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n      &lt;/exclusion&gt;\n   &lt;/exclusions&gt;\n&lt;/dependency&gt;\n\n&lt;!--引入其他的Servlet容器--&gt;\n&lt;dependency&gt;\n   &lt;artifactId&gt;spring-boot-starter-undertow&lt;/artifactId&gt;\n   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h3 id=\"4-servlet-\">4）、嵌入式Servlet容器自动配置原理；</h3>\n<p>EmbeddedServletContainerAutoConfiguration：嵌入式的Servlet容器自动配置？</p>\n<pre><code class=\"lang-java\">@AutoConfigureOrder(Ordered.HIGHEST_PRECEDENCE)\n@Configuration\n@ConditionalOnWebApplication\n@Import(BeanPostProcessorsRegistrar.class)\n//导入BeanPostProcessorsRegistrar：Spring注解版；给容器中导入一些组件\n//导入了EmbeddedServletContainerCustomizerBeanPostProcessor：\n//后置处理器：bean初始化前后（创建完对象，还没赋值赋值）执行初始化工作\npublic class EmbeddedServletContainerAutoConfiguration {\n\n    @Configuration\n    @ConditionalOnClass({ Servlet.class, Tomcat.class })//判断当前是否引入了Tomcat依赖；\n    @ConditionalOnMissingBean(value = EmbeddedServletContainerFactory.class, search = SearchStrategy.CURRENT)//判断当前容器没有用户自己定义EmbeddedServletContainerFactory：嵌入式的Servlet容器工厂；作用：创建嵌入式的Servlet容器\n    public static class EmbeddedTomcat {\n\n        @Bean\n        public TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory() {\n            return new TomcatEmbeddedServletContainerFactory();\n        }\n\n    }\n\n    /**\n     * Nested configuration if Jetty is being used.\n     */\n    @Configuration\n    @ConditionalOnClass({ Servlet.class, Server.class, Loader.class,\n            WebAppContext.class })\n    @ConditionalOnMissingBean(value = EmbeddedServletContainerFactory.class, search = SearchStrategy.CURRENT)\n    public static class EmbeddedJetty {\n\n        @Bean\n        public JettyEmbeddedServletContainerFactory jettyEmbeddedServletContainerFactory() {\n            return new JettyEmbeddedServletContainerFactory();\n        }\n\n    }\n\n    /**\n     * Nested configuration if Undertow is being used.\n     */\n    @Configuration\n    @ConditionalOnClass({ Servlet.class, Undertow.class, SslClientAuthMode.class })\n    @ConditionalOnMissingBean(value = EmbeddedServletContainerFactory.class, search = SearchStrategy.CURRENT)\n    public static class EmbeddedUndertow {\n\n        @Bean\n        public UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory() {\n            return new UndertowEmbeddedServletContainerFactory();\n        }\n\n    }\n</code></pre>\n<p>1）、EmbeddedServletContainerFactory（嵌入式Servlet容器工厂）</p>\n<pre><code class=\"lang-java\">public interface EmbeddedServletContainerFactory {\n\n   //获取嵌入式的Servlet容器\n   EmbeddedServletContainer getEmbeddedServletContainer(\n         ServletContextInitializer... initializers);\n\n}\n</code></pre>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180302144835.png\" alt=\"\"></p>\n<p>2）、EmbeddedServletContainer：（嵌入式的Servlet容器）</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180302144910.png\" alt=\"\"></p>\n<p>3）、以<strong>TomcatEmbeddedServletContainerFactory</strong>为例</p>\n<pre><code class=\"lang-java\">@Override\npublic EmbeddedServletContainer getEmbeddedServletContainer(\n      ServletContextInitializer... initializers) {\n    //创建一个Tomcat\n   Tomcat tomcat = new Tomcat();\n\n    //配置Tomcat的基本环节\n   File baseDir = (this.baseDirectory != null ? this.baseDirectory\n         : createTempDir(&quot;tomcat&quot;));\n   tomcat.setBaseDir(baseDir.getAbsolutePath());\n   Connector connector = new Connector(this.protocol);\n   tomcat.getService().addConnector(connector);\n   customizeConnector(connector);\n   tomcat.setConnector(connector);\n   tomcat.getHost().setAutoDeploy(false);\n   configureEngine(tomcat.getEngine());\n   for (Connector additionalConnector : this.additionalTomcatConnectors) {\n      tomcat.getService().addConnector(additionalConnector);\n   }\n   prepareContext(tomcat.getHost(), initializers);\n\n    //将配置好的Tomcat传入进去，返回一个EmbeddedServletContainer；并且启动Tomcat服务器\n   return getTomcatEmbeddedServletContainer(tomcat);\n}\n</code></pre>\n<p>4）、我们对嵌入式容器的配置修改是怎么生效？</p>\n<pre><code>ServerProperties、EmbeddedServletContainerCustomizer\n</code></pre><p><strong>EmbeddedServletContainerCustomizer</strong>：定制器帮我们修改了Servlet容器的配置？</p>\n<p>怎么修改的原理？</p>\n<p>5）、容器中导入了<strong>EmbeddedServletContainerCustomizerBeanPostProcessor</strong></p>\n<pre><code class=\"lang-java\">//初始化之前\n@Override\npublic Object postProcessBeforeInitialization(Object bean, String beanName)\n      throws BeansException {\n    //如果当前初始化的是一个ConfigurableEmbeddedServletContainer类型的组件\n   if (bean instanceof ConfigurableEmbeddedServletContainer) {\n       //\n      postProcessBeforeInitialization((ConfigurableEmbeddedServletContainer) bean);\n   }\n   return bean;\n}\n\nprivate void postProcessBeforeInitialization(\n            ConfigurableEmbeddedServletContainer bean) {\n    //获取所有的定制器，调用每一个定制器的customize方法来给Servlet容器进行属性赋值；\n    for (EmbeddedServletContainerCustomizer customizer : getCustomizers()) {\n        customizer.customize(bean);\n    }\n}\n\nprivate Collection&lt;EmbeddedServletContainerCustomizer&gt; getCustomizers() {\n    if (this.customizers == null) {\n        // Look up does not include the parent context\n        this.customizers = new ArrayList&lt;EmbeddedServletContainerCustomizer&gt;(\n            this.beanFactory\n            //从容器中获取所有这葛类型的组件：EmbeddedServletContainerCustomizer\n            //定制Servlet容器，给容器中可以添加一个EmbeddedServletContainerCustomizer类型的组件\n            .getBeansOfType(EmbeddedServletContainerCustomizer.class,\n                            false, false)\n            .values());\n        Collections.sort(this.customizers, AnnotationAwareOrderComparator.INSTANCE);\n        this.customizers = Collections.unmodifiableList(this.customizers);\n    }\n    return this.customizers;\n}\n\nServerProperties也是定制器\n</code></pre>\n<p>步骤：</p>\n<p>1）、SpringBoot根据导入的依赖情况，给容器中添加相应的EmbeddedServletContainerFactory【TomcatEmbeddedServletContainerFactory】</p>\n<p>2）、容器中某个组件要创建对象就会惊动后置处理器；EmbeddedServletContainerCustomizerBeanPostProcessor；</p>\n<p>只要是嵌入式的Servlet容器工厂，后置处理器就工作；</p>\n<p>3）、后置处理器，从容器中获取所有的<strong>EmbeddedServletContainerCustomizer</strong>，调用定制器的定制方法</p>\n<p>###5）、嵌入式Servlet容器启动原理；</p>\n<p>什么时候创建嵌入式的Servlet容器工厂？什么时候获取嵌入式的Servlet容器并启动Tomcat；</p>\n<p>获取嵌入式的Servlet容器工厂：</p>\n<p>1）、SpringBoot应用启动运行run方法</p>\n<p>2）、refreshContext(context);SpringBoot刷新IOC容器【创建IOC容器对象，并初始化容器，创建容器中的每一个组件】；如果是web应用创建<strong>AnnotationConfigEmbeddedWebApplicationContext</strong>，否则：<strong>AnnotationConfigApplicationContext</strong></p>\n<p>3）、refresh(context);<strong>刷新刚才创建好的ioc容器；</strong></p>\n<pre><code class=\"lang-java\">public void refresh() throws BeansException, IllegalStateException {\n   synchronized (this.startupShutdownMonitor) {\n      // Prepare this context for refreshing.\n      prepareRefresh();\n\n      // Tell the subclass to refresh the internal bean factory.\n      ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();\n\n      // Prepare the bean factory for use in this context.\n      prepareBeanFactory(beanFactory);\n\n      try {\n         // Allows post-processing of the bean factory in context subclasses.\n         postProcessBeanFactory(beanFactory);\n\n         // Invoke factory processors registered as beans in the context.\n         invokeBeanFactoryPostProcessors(beanFactory);\n\n         // Register bean processors that intercept bean creation.\n         registerBeanPostProcessors(beanFactory);\n\n         // Initialize message source for this context.\n         initMessageSource();\n\n         // Initialize event multicaster for this context.\n         initApplicationEventMulticaster();\n\n         // Initialize other special beans in specific context subclasses.\n         onRefresh();\n\n         // Check for listener beans and register them.\n         registerListeners();\n\n         // Instantiate all remaining (non-lazy-init) singletons.\n         finishBeanFactoryInitialization(beanFactory);\n\n         // Last step: publish corresponding event.\n         finishRefresh();\n      }\n\n      catch (BeansException ex) {\n         if (logger.isWarnEnabled()) {\n            logger.warn(&quot;Exception encountered during context initialization - &quot; +\n                  &quot;cancelling refresh attempt: &quot; + ex);\n         }\n\n         // Destroy already created singletons to avoid dangling resources.\n         destroyBeans();\n\n         // Reset &#39;active&#39; flag.\n         cancelRefresh(ex);\n\n         // Propagate exception to caller.\n         throw ex;\n      }\n\n      finally {\n         // Reset common introspection caches in Spring&#39;s core, since we\n         // might not ever need metadata for singleton beans anymore...\n         resetCommonCaches();\n      }\n   }\n}\n</code></pre>\n<p>4）、  onRefresh(); web的ioc容器重写了onRefresh方法</p>\n<p>5）、webioc容器会创建嵌入式的Servlet容器；<strong>createEmbeddedServletContainer</strong>();</p>\n<p><strong>6）、获取嵌入式的Servlet容器工厂：</strong></p>\n<p>EmbeddedServletContainerFactory containerFactory = getEmbeddedServletContainerFactory();</p>\n<p>​    从ioc容器中获取EmbeddedServletContainerFactory 组件；<strong>TomcatEmbeddedServletContainerFactory</strong>创建对象，后置处理器一看是这个对象，就获取所有的定制器来先定制Servlet容器的相关配置；</p>\n<p>7）、<strong>使用容器工厂获取嵌入式的Servlet容器</strong>：this.embeddedServletContainer = containerFactory      .getEmbeddedServletContainer(getSelfInitializer());</p>\n<p>8）、嵌入式的Servlet容器创建对象并启动Servlet容器；</p>\n<p><strong>先启动嵌入式的Servlet容器，再将ioc容器中剩下没有创建出的对象获取出来；</strong></p>\n<p><strong>==IOC容器启动创建嵌入式的Servlet容器==</strong></p>\n<h2 id=\"9-servlet-\">9、使用外置的Servlet容器</h2>\n<p>嵌入式Servlet容器：应用打成可执行的jar</p>\n<p>​        优点：简单、便携；</p>\n<p>​        缺点：默认不支持JSP、优化定制比较复杂（使用定制器【ServerProperties、自定义EmbeddedServletContainerCustomizer】，自己编写嵌入式Servlet容器的创建工厂【EmbeddedServletContainerFactory】）；</p>\n<p>外置的Servlet容器：外面安装Tomcat---应用war包的方式打包；</p>\n<h3 id=\"-\">步骤</h3>\n<p>1）、必须创建一个war项目；（利用idea创建好目录结构）</p>\n<p>2）、将嵌入式的Tomcat指定为provided；</p>\n<pre><code class=\"lang-xml\">&lt;dependency&gt;\n   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n   &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;\n   &lt;scope&gt;provided&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p>3）、必须编写一个<strong>SpringBootServletInitializer</strong>的子类，并调用configure方法</p>\n<pre><code class=\"lang-java\">public class ServletInitializer extends SpringBootServletInitializer {\n\n   @Override\n   protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\n       //传入SpringBoot应用的主程序\n      return application.sources(SpringBoot04WebJspApplication.class);\n   }\n\n}\n</code></pre>\n<p>4）、启动服务器就可以使用；</p>\n<h3 id=\"-\">原理</h3>\n<p>jar包：执行SpringBoot主类的main方法，启动ioc容器，创建嵌入式的Servlet容器；</p>\n<p>war包：启动服务器，<strong>服务器启动SpringBoot应用</strong>【SpringBootServletInitializer】，启动ioc容器；</p>\n<p>servlet3.0（Spring注解版）：</p>\n<p>8.2.4 Shared libraries / runtimes pluggability：</p>\n<p>规则：</p>\n<p>​    1）、服务器启动（web应用启动）会创建当前web应用里面每一个jar包里面ServletContainerInitializer实例：</p>\n<p>​    2）、ServletContainerInitializer的实现放在jar包的META-INF/services文件夹下，有一个名为javax.servlet.ServletContainerInitializer的文件，内容就是ServletContainerInitializer的实现类的全类名</p>\n<p>​    3）、还可以使用@HandlesTypes，在应用启动的时候加载我们感兴趣的类；</p>\n<p>流程：</p>\n<p>1）、启动Tomcat</p>\n<p>2）、org\\springframework\\spring-web\\4.3.14.RELEASE\\spring-web-4.3.14.RELEASE.jar!\\META-INF\\services\\javax.servlet.ServletContainerInitializer：</p>\n<p>Spring的web模块里面有这个文件：<strong>org.springframework.web.SpringServletContainerInitializer</strong></p>\n<p>3）、SpringServletContainerInitializer将@HandlesTypes(WebApplicationInitializer.class)标注的所有这个类型的类都传入到onStartup方法的Set<Class<?>&gt;；为这些WebApplicationInitializer类型的类创建实例；</p>\n<p>4）、每一个WebApplicationInitializer都调用自己的onStartup；</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180302221835.png\" alt=\"\"></p>\n<p>5）、相当于我们的SpringBootServletInitializer的类会被创建对象，并执行onStartup方法</p>\n<p>6）、SpringBootServletInitializer实例执行onStartup的时候会createRootApplicationContext；创建容器</p>\n<pre><code class=\"lang-java\">protected WebApplicationContext createRootApplicationContext(\n      ServletContext servletContext) {\n    //1、创建SpringApplicationBuilder\n   SpringApplicationBuilder builder = createSpringApplicationBuilder();\n   StandardServletEnvironment environment = new StandardServletEnvironment();\n   environment.initPropertySources(servletContext, null);\n   builder.environment(environment);\n   builder.main(getClass());\n   ApplicationContext parent = getExistingRootWebApplicationContext(servletContext);\n   if (parent != null) {\n      this.logger.info(\"Root context already created (using as parent).\");\n      servletContext.setAttribute(\n            WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, null);\n      builder.initializers(new ParentContextApplicationContextInitializer(parent));\n   }\n   builder.initializers(\n         new ServletContextApplicationContextInitializer(servletContext));\n   builder.contextClass(AnnotationConfigEmbeddedWebApplicationContext.class);\n\n    //调用configure方法，子类重写了这个方法，将SpringBoot的主程序类传入了进来\n   builder = configure(builder);\n\n    //使用builder创建一个Spring应用\n   SpringApplication application = builder.build();\n   if (application.getSources().isEmpty() &amp;&amp; AnnotationUtils\n         .findAnnotation(getClass(), Configuration.class) != null) {\n      application.getSources().add(getClass());\n   }\n   Assert.state(!application.getSources().isEmpty(),\n         \"No SpringApplication sources have been defined. Either override the \"\n               + \"configure method or add an @Configuration annotation\");\n   // Ensure error pages are registered\n   if (this.registerErrorPageFilter) {\n      application.getSources().add(ErrorPageFilterConfiguration.class);\n   }\n    //启动Spring应用\n   return run(application);\n}\n</code></pre>\n<p>7）、Spring的应用就启动并且创建IOC容器</p>\n<pre><code class=\"lang-java\">public ConfigurableApplicationContext run(String... args) {\n   StopWatch stopWatch = new StopWatch();\n   stopWatch.start();\n   ConfigurableApplicationContext context = null;\n   FailureAnalyzers analyzers = null;\n   configureHeadlessProperty();\n   SpringApplicationRunListeners listeners = getRunListeners(args);\n   listeners.starting();\n   try {\n      ApplicationArguments applicationArguments = new DefaultApplicationArguments(\n            args);\n      ConfigurableEnvironment environment = prepareEnvironment(listeners,\n            applicationArguments);\n      Banner printedBanner = printBanner(environment);\n      context = createApplicationContext();\n      analyzers = new FailureAnalyzers(context);\n      prepareContext(context, environment, listeners, applicationArguments,\n            printedBanner);\n\n       //刷新IOC容器\n      refreshContext(context);\n      afterRefresh(context, applicationArguments);\n      listeners.finished(context, null);\n      stopWatch.stop();\n      if (this.logStartupInfo) {\n         new StartupInfoLogger(this.mainApplicationClass)\n               .logStarted(getApplicationLog(), stopWatch);\n      }\n      return context;\n   }\n   catch (Throwable ex) {\n      handleRunFailure(context, listeners, analyzers, ex);\n      throw new IllegalStateException(ex);\n   }\n}\n</code></pre>\n<p><strong>==启动Servlet容器，再启动SpringBoot应用==</strong></p>\n<h1 id=\"-docker\">五、Docker</h1>\n<h2 id=\"1-\">1、简介</h2>\n<p><strong>Docker</strong>是一个开源的应用容器引擎；是一个轻量级容器技术；</p>\n<p>Docker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜像发布出去，其他使用者可以直接使用这个镜像；</p>\n<p>运行中的这个镜像称为容器，容器启动是非常快速的。</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180303145450.png\" alt=\"\"></p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180303145531.png\" alt=\"\"></p>\n<h2 id=\"2-\">2、核心概念</h2>\n<p>docker主机(Host)：安装了Docker程序的机器（Docker直接安装在操作系统之上）；</p>\n<p>docker客户端(Client)：连接docker主机进行操作；</p>\n<p>docker仓库(Registry)：用来保存各种打包好的软件镜像；</p>\n<p>docker镜像(Images)：软件打包好的镜像；放在docker仓库中；</p>\n<p>docker容器(Container)：镜像启动后的实例称为一个容器；容器是独立运行的一个或一组应用</p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180303165113.png\" alt=\"\"></p>\n<p>使用Docker的步骤：</p>\n<p>1）、安装Docker</p>\n<p>2）、去Docker仓库找到这个软件对应的镜像；</p>\n<p>3）、使用Docker运行这个镜像，这个镜像就会生成一个Docker容器；</p>\n<p>4）、对容器的启动停止就是对软件的启动停止；</p>\n<h2 id=\"3-docker\">3、安装Docker</h2>\n<h4 id=\"1-linux-\">1）、安装linux虚拟机</h4>\n<p>​    1）、VMWare、VirtualBox（安装）；</p>\n<p>​    2）、导入虚拟机文件centos7-atguigu.ova；</p>\n<p>​    3）、双击启动linux虚拟机;使用  root/ 123456登陆</p>\n<p>​    4）、使用客户端连接linux服务器进行命令操作；</p>\n<p>​    5）、设置虚拟机网络；</p>\n<p>​        桥接网络===选好网卡====接入网线；</p>\n<p>​    6）、设置好网络以后使用命令重启虚拟机的网络</p>\n<pre><code class=\"lang-shell\">service network restart\n</code></pre>\n<p>​    7）、查看linux的ip地址</p>\n<pre><code class=\"lang-shell\">ip addr\n</code></pre>\n<p>​    8）、使用客户端连接linux；</p>\n<h4 id=\"2-linux-docker\">2）、在linux虚拟机上安装docker</h4>\n<p>步骤：</p>\n<pre><code class=\"lang-shell\">1、检查内核版本，必须是3.10及以上\nuname -r\n2、安装docker\nyum install docker\n3、输入y确认安装\n4、启动docker\n[root@localhost ~]# systemctl start docker\n[root@localhost ~]# docker -v\nDocker version 1.12.6, build 3e8e77d/1.12.6\n5、开机启动docker\n[root@localhost ~]# systemctl enable docker\nCreated symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.\n6、停止docker\nsystemctl stop docker\n</code></pre>\n<h2 id=\"4-docker-\">4、Docker常用命令&amp;操作</h2>\n<h3 id=\"1-\">1）、镜像操作</h3>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>检索</td>\n<td>docker  search 关键字  eg：docker  search redis</td>\n<td>我们经常去docker  hub上检索镜像的详细信息，如镜像的TAG。</td>\n</tr>\n<tr>\n<td>拉取</td>\n<td>docker pull 镜像名:tag</td>\n<td>:tag是可选的，tag表示标签，多为软件的版本，默认是latest</td>\n</tr>\n<tr>\n<td>列表</td>\n<td>docker images</td>\n<td>查看所有本地镜像</td>\n</tr>\n<tr>\n<td>删除</td>\n<td>docker rmi image-id</td>\n<td>删除指定的本地镜像</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></p>\n<h3 id=\"2-\">2）、容器操作</h3>\n<p>软件镜像（QQ安装程序）----运行镜像----产生一个容器（正在运行的软件，运行的QQ）；</p>\n<p>步骤：</p>\n<pre><code class=\"lang-shell\">1、搜索镜像\n[root@localhost ~]# docker search tomcat\n2、拉取镜像\n[root@localhost ~]# docker pull tomcat\n3、根据镜像启动容器\ndocker run --name mytomcat -d tomcat:latest\n4、docker ps  \n查看运行中的容器\n5、 停止运行中的容器\ndocker stop  容器的id\n6、查看所有的容器\ndocker ps -a\n7、启动容器\ndocker start 容器id\n8、删除一个容器\n docker rm 容器id\n9、启动一个做了端口映射的tomcat\n[root@localhost ~]# docker run -d -p 8888:8080 tomcat\n-d：后台运行\n-p: 将主机的端口映射到容器的一个端口    主机端口:容器内部的端口\n\n10、为了演示简单关闭了linux的防火墙\nservice firewalld status ；查看防火墙状态\nservice firewalld stop：关闭防火墙\n11、查看容器的日志\ndocker logs container-name/container-id\n\n更多命令参看\nhttps://docs.docker.com/engine/reference/commandline/docker/\n可以参考每一个镜像的文档\n</code></pre>\n<h3 id=\"3-mysql-\">3）、安装MySQL示例</h3>\n<pre><code class=\"lang-shell\">docker pull mysql\n</code></pre>\n<p>错误的启动</p>\n<pre><code class=\"lang-shell\">[root@localhost ~]# docker run --name mysql01 -d mysql\n42f09819908bb72dd99ae19e792e0a5d03c48638421fa64cce5f8ba0f40f5846\n\nmysql退出了\n[root@localhost ~]# docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                           PORTS               NAMES\n42f09819908b        mysql               &quot;docker-entrypoint.sh&quot;   34 seconds ago      Exited (1) 33 seconds ago                            mysql01\n538bde63e500        tomcat              &quot;catalina.sh run&quot;        About an hour ago   Exited (143) About an hour ago                       compassionate_\ngoldstine\nc4f1ac60b3fc        tomcat              &quot;catalina.sh run&quot;        About an hour ago   Exited (143) About an hour ago                       lonely_fermi\n81ec743a5271        tomcat              &quot;catalina.sh run&quot;        About an hour ago   Exited (143) About an hour ago                       sick_ramanujan\n\n\n//错误日志\n[root@localhost ~]# docker logs 42f09819908b\nerror: database is uninitialized and password option is not specified \n  You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD；这个三个参数必须指定一个\n</code></pre>\n<p>正确的启动</p>\n<pre><code class=\"lang-shell\">[root@localhost ~]# docker run --name mysql01 -e MYSQL_ROOT_PASSWORD=123456 -d mysql\nb874c56bec49fb43024b3805ab51e9097da779f2f572c22c695305dedd684c5f\n[root@localhost ~]# docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\nb874c56bec49        mysql               &quot;docker-entrypoint.sh&quot;   4 seconds ago       Up 3 seconds        3306/tcp            mysql01\n</code></pre>\n<p>做了端口映射</p>\n<pre><code class=\"lang-shell\">[root@localhost ~]# docker run -p 3306:3306 --name mysql02 -e MYSQL_ROOT_PASSWORD=123456 -d mysql\nad10e4bc5c6a0f61cbad43898de71d366117d120e39db651844c0e73863b9434\n[root@localhost ~]# docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\nad10e4bc5c6a        mysql               \"docker-entrypoint.sh\"   4 seconds ago       Up 2 seconds        0.0.0.0:3306-&gt;3306/tcp   mysql02\n</code></pre>\n<p>几个其他的高级操作</p>\n<pre><code>docker run --name mysql03 -v /conf/mysql:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag\n把主机的/conf/mysql文件夹挂载到 mysqldocker容器的/etc/mysql/conf.d文件夹里面\n改mysql的配置文件就只需要把mysql配置文件放在自定义的文件夹下（/conf/mysql）\n\ndocker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\n指定mysql的一些配置参数\n</code></pre><h1 id=\"-springboot-\">六、SpringBoot与数据访问</h1>\n<h2 id=\"1-jdbc\">1、JDBC</h2>\n<pre><code class=\"lang-xml\">&lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n        &lt;/dependency&gt;\n</code></pre>\n<pre><code class=\"lang-yaml\">spring:\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://192.168.15.22:3306/jdbc\n    driver-class-name: com.mysql.jdbc.Driver\n</code></pre>\n<p>效果：</p>\n<p>​    默认是用org.apache.tomcat.jdbc.pool.DataSource作为数据源；</p>\n<p>​    数据源的相关配置都在DataSourceProperties里面；</p>\n<p>自动配置原理：</p>\n<p>org.springframework.boot.autoconfigure.jdbc：</p>\n<p>1、参考DataSourceConfiguration，根据配置创建数据源，默认使用Tomcat连接池；可以使用spring.datasource.type指定自定义的数据源类型；</p>\n<p>2、SpringBoot默认可以支持；</p>\n<pre><code>org.apache.tomcat.jdbc.pool.DataSource、HikariDataSource、BasicDataSource、\n</code></pre><p>3、自定义数据源类型</p>\n<pre><code class=\"lang-java\">/**\n * Generic DataSource configuration.\n */\n@ConditionalOnMissingBean(DataSource.class)\n@ConditionalOnProperty(name = &quot;spring.datasource.type&quot;)\nstatic class Generic {\n\n   @Bean\n   public DataSource dataSource(DataSourceProperties properties) {\n       //使用DataSourceBuilder创建数据源，利用反射创建响应type的数据源，并且绑定相关属性\n      return properties.initializeDataSourceBuilder().build();\n   }\n\n}\n</code></pre>\n<p>4、<strong>DataSourceInitializer：ApplicationListener</strong>；</p>\n<p>​    作用：</p>\n<p>​        1）、runSchemaScripts();运行建表语句；</p>\n<p>​        2）、runDataScripts();运行插入数据的sql语句；</p>\n<p>默认只需要将文件命名为：</p>\n<pre><code class=\"lang-properties\">schema-*.sql、data-*.sql\n默认规则：schema.sql，schema-all.sql；\n可以使用   \n    schema:\n      - classpath:department.sql\n      指定位置\n</code></pre>\n<p>5、操作数据库：自动配置了JdbcTemplate操作数据库</p>\n<h2 id=\"2-druid-\">2、整合Druid数据源</h2>\n<pre><code class=\"lang-java\">导入druid数据源\n@Configuration\npublic class DruidConfig {\n\n    @ConfigurationProperties(prefix = \"spring.datasource\")\n    @Bean\n    public DataSource druid(){\n       return  new DruidDataSource();\n    }\n\n    //配置Druid的监控\n    //1、配置一个管理后台的Servlet\n    @Bean\n    public ServletRegistrationBean statViewServlet(){\n        ServletRegistrationBean bean = new ServletRegistrationBean(new StatViewServlet(), \"/druid/*\");\n        Map&lt;String,String&gt; initParams = new HashMap&lt;&gt;();\n\n        initParams.put(\"loginUsername\",\"admin\");\n        initParams.put(\"loginPassword\",\"123456\");\n        initParams.put(\"allow\",\"\");//默认就是允许所有访问\n        initParams.put(\"deny\",\"192.168.15.21\");\n\n        bean.setInitParameters(initParams);\n        return bean;\n    }\n\n\n    //2、配置一个web监控的filter\n    @Bean\n    public FilterRegistrationBean webStatFilter(){\n        FilterRegistrationBean bean = new FilterRegistrationBean();\n        bean.setFilter(new WebStatFilter());\n\n        Map&lt;String,String&gt; initParams = new HashMap&lt;&gt;();\n        initParams.put(\"exclusions\",\"*.js,*.css,/druid/*\");\n\n        bean.setInitParameters(initParams);\n\n        bean.setUrlPatterns(Arrays.asList(\"/*\"));\n\n        return  bean;\n    }\n}\n</code></pre>\n<h2 id=\"3-mybatis\">3、整合MyBatis</h2>\n<pre><code class=\"lang-xml\">        &lt;dependency&gt;\n            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;1.3.1&lt;/version&gt;\n        &lt;/dependency&gt;\n</code></pre>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180305194443.png\" alt=\"\"></p>\n<p>步骤：</p>\n<p>​    1）、配置数据源相关属性（见上一节Druid）</p>\n<p>​    2）、给数据库建表</p>\n<p>​    3）、创建JavaBean</p>\n<h3 id=\"4-\">4）、注解版</h3>\n<pre><code class=\"lang-java\">//指定这是一个操作数据库的mapper\n@Mapper\npublic interface DepartmentMapper {\n\n    @Select(&quot;select * from department where id=#{id}&quot;)\n    public Department getDeptById(Integer id);\n\n    @Delete(&quot;delete from department where id=#{id}&quot;)\n    public int deleteDeptById(Integer id);\n\n    @Options(useGeneratedKeys = true,keyProperty = &quot;id&quot;)\n    @Insert(&quot;insert into department(departmentName) values(#{departmentName})&quot;)\n    public int insertDept(Department department);\n\n    @Update(&quot;update department set departmentName=#{departmentName} where id=#{id}&quot;)\n    public int updateDept(Department department);\n}\n</code></pre>\n<p>问题：</p>\n<p>自定义MyBatis的配置规则；给容器中添加一个ConfigurationCustomizer；</p>\n<pre><code class=\"lang-java\">@org.springframework.context.annotation.Configuration\npublic class MyBatisConfig {\n\n    @Bean\n    public ConfigurationCustomizer configurationCustomizer(){\n        return new ConfigurationCustomizer(){\n\n            @Override\n            public void customize(Configuration configuration) {\n                configuration.setMapUnderscoreToCamelCase(true);\n            }\n        };\n    }\n}\n</code></pre>\n<pre><code class=\"lang-java\">使用MapperScan批量扫描所有的Mapper接口；\n@MapperScan(value = &quot;com.atguigu.springboot.mapper&quot;)\n@SpringBootApplication\npublic class SpringBoot06DataMybatisApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringBoot06DataMybatisApplication.class, args);\n    }\n}\n</code></pre>\n<h3 id=\"5-\">5）、配置文件版</h3>\n<pre><code class=\"lang-yaml\">mybatis:\n  config-location: classpath:mybatis/mybatis-config.xml 指定全局配置文件的位置\n  mapper-locations: classpath:mybatis/mapper/*.xml  指定sql映射文件的位置\n</code></pre>\n<p>更多使用参照</p>\n<p><a href=\"http://www.mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/\">http://www.mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/</a></p>\n<h2 id=\"4-springdata-jpa\">4、整合SpringData JPA</h2>\n<h3 id=\"1-springdata-\">1）、SpringData简介</h3>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180306105412.png\" alt=\"\"></p>\n<h3 id=\"2-springdata-jpa\">2）、整合SpringData JPA</h3>\n<p>JPA:ORM（Object Relational Mapping）；</p>\n<p>1）、编写一个实体类（bean）和数据表进行映射，并且配置好映射关系；</p>\n<pre><code class=\"lang-java\">//使用JPA注解配置映射关系\n@Entity //告诉JPA这是一个实体类（和数据表映射的类）\n@Table(name = &quot;tbl_user&quot;) //@Table来指定和哪个数据表对应;如果省略默认表名就是user；\npublic class User {\n\n    @Id //这是一个主键\n    @GeneratedValue(strategy = GenerationType.IDENTITY)//自增主键\n    private Integer id;\n\n    @Column(name = &quot;last_name&quot;,length = 50) //这是和数据表对应的一个列\n    private String lastName;\n    @Column //省略默认列名就是属性名\n    private String email;\n</code></pre>\n<p>2）、编写一个Dao接口来操作实体类对应的数据表（Repository）</p>\n<pre><code class=\"lang-java\">//继承JpaRepository来完成对数据库的操作\npublic interface UserRepository extends JpaRepository&lt;User,Integer&gt; {\n}\n</code></pre>\n<p>3）、基本的配置JpaProperties</p>\n<pre><code class=\"lang-yaml\">spring:  \n jpa:\n    hibernate:\n#     更新或者创建数据表结构\n      ddl-auto: update\n#    控制台显示SQL\n    show-sql: true\n</code></pre>\n<h1 id=\"-\">七、启动配置原理</h1>\n<p>几个重要的事件回调机制</p>\n<p>配置在META-INF/spring.factories</p>\n<p><strong>ApplicationContextInitializer</strong></p>\n<p><strong>SpringApplicationRunListener</strong></p>\n<p>只需要放在ioc容器中</p>\n<p><strong>ApplicationRunner</strong></p>\n<p><strong>CommandLineRunner</strong></p>\n<p>启动流程：</p>\n<h2 id=\"-1-springapplication-\"><strong>1、创建SpringApplication对象</strong></h2>\n<pre><code class=\"lang-java\">initialize(sources);\nprivate void initialize(Object[] sources) {\n    //保存主配置类\n    if (sources != null &amp;&amp; sources.length &gt; 0) {\n        this.sources.addAll(Arrays.asList(sources));\n    }\n    //判断当前是否一个web应用\n    this.webEnvironment = deduceWebEnvironment();\n    //从类路径下找到META-INF/spring.factories配置的所有ApplicationContextInitializer；然后保存起来\n    setInitializers((Collection) getSpringFactoriesInstances(\n        ApplicationContextInitializer.class));\n    //从类路径下找到ETA-INF/spring.factories配置的所有ApplicationListener\n    setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));\n    //从多个配置类中找到有main方法的主配置类\n    this.mainApplicationClass = deduceMainApplicationClass();\n}\n</code></pre>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180306145727.png\" alt=\"\"></p>\n<p><img src=\"https://www.lcools.cn/static/springboot/images/搜狗截图20180306145855.png\" alt=\"\"></p>\n<h2 id=\"2-run-\">2、运行run方法</h2>\n<pre><code class=\"lang-java\">public ConfigurableApplicationContext run(String... args) {\n   StopWatch stopWatch = new StopWatch();\n   stopWatch.start();\n   ConfigurableApplicationContext context = null;\n   FailureAnalyzers analyzers = null;\n   configureHeadlessProperty();\n\n   //获取SpringApplicationRunListeners；从类路径下META-INF/spring.factories\n   SpringApplicationRunListeners listeners = getRunListeners(args);\n    //回调所有的获取SpringApplicationRunListener.starting()方法\n   listeners.starting();\n   try {\n       //封装命令行参数\n      ApplicationArguments applicationArguments = new DefaultApplicationArguments(\n            args);\n      //准备环境\n      ConfigurableEnvironment environment = prepareEnvironment(listeners,\n            applicationArguments);\n               //创建环境完成后回调SpringApplicationRunListener.environmentPrepared()；表示环境准备完成\n\n      Banner printedBanner = printBanner(environment);\n\n       //创建ApplicationContext；决定创建web的ioc还是普通的ioc\n      context = createApplicationContext();\n\n      analyzers = new FailureAnalyzers(context);\n       //准备上下文环境;将environment保存到ioc中；而且applyInitializers()；\n       //applyInitializers()：回调之前保存的所有的ApplicationContextInitializer的initialize方法\n       //回调所有的SpringApplicationRunListener的contextPrepared()；\n       //\n      prepareContext(context, environment, listeners, applicationArguments,\n            printedBanner);\n       //prepareContext运行完成以后回调所有的SpringApplicationRunListener的contextLoaded（）；\n\n       //s刷新容器；ioc容器初始化（如果是web应用还会创建嵌入式的Tomcat）；Spring注解版\n       //扫描，创建，加载所有组件的地方；（配置类，组件，自动配置）\n      refreshContext(context);\n       //从ioc容器中获取所有的ApplicationRunner和CommandLineRunner进行回调\n       //ApplicationRunner先回调，CommandLineRunner再回调\n      afterRefresh(context, applicationArguments);\n       //所有的SpringApplicationRunListener回调finished方法\n      listeners.finished(context, null);\n      stopWatch.stop();\n      if (this.logStartupInfo) {\n         new StartupInfoLogger(this.mainApplicationClass)\n               .logStarted(getApplicationLog(), stopWatch);\n      }\n       //整个SpringBoot应用启动完成以后返回启动的ioc容器；\n      return context;\n   }\n   catch (Throwable ex) {\n      handleRunFailure(context, listeners, analyzers, ex);\n      throw new IllegalStateException(ex);\n   }\n}\n</code></pre>\n<h2 id=\"3-\">3、事件监听机制</h2>\n<p>配置在META-INF/spring.factories</p>\n<p><strong>ApplicationContextInitializer</strong></p>\n<pre><code class=\"lang-java\">public class HelloApplicationContextInitializer implements ApplicationContextInitializer&lt;ConfigurableApplicationContext&gt; {\n    @Override\n    public void initialize(ConfigurableApplicationContext applicationContext) {\n        System.out.println(\"ApplicationContextInitializer...initialize...\"+applicationContext);\n    }\n}\n</code></pre>\n<p><strong>SpringApplicationRunListener</strong></p>\n<pre><code class=\"lang-java\">public class HelloSpringApplicationRunListener implements SpringApplicationRunListener {\n\n    //必须有的构造器\n    public HelloSpringApplicationRunListener(SpringApplication application, String[] args){\n\n    }\n\n    @Override\n    public void starting() {\n        System.out.println(&quot;SpringApplicationRunListener...starting...&quot;);\n    }\n\n    @Override\n    public void environmentPrepared(ConfigurableEnvironment environment) {\n        Object o = environment.getSystemProperties().get(&quot;os.name&quot;);\n        System.out.println(&quot;SpringApplicationRunListener...environmentPrepared..&quot;+o);\n    }\n\n    @Override\n    public void contextPrepared(ConfigurableApplicationContext context) {\n        System.out.println(&quot;SpringApplicationRunListener...contextPrepared...&quot;);\n    }\n\n    @Override\n    public void contextLoaded(ConfigurableApplicationContext context) {\n        System.out.println(&quot;SpringApplicationRunListener...contextLoaded...&quot;);\n    }\n\n    @Override\n    public void finished(ConfigurableApplicationContext context, Throwable exception) {\n        System.out.println(&quot;SpringApplicationRunListener...finished...&quot;);\n    }\n}\n</code></pre>\n<p>配置（META-INF/spring.factories）</p>\n<pre><code class=\"lang-properties\">org.springframework.context.ApplicationContextInitializer=\\\ncom.atguigu.springboot.listener.HelloApplicationContextInitializer\n\norg.springframework.boot.SpringApplicationRunListener=\\\ncom.atguigu.springboot.listener.HelloSpringApplicationRunListener\n</code></pre>\n<p>只需要放在ioc容器中</p>\n<p><strong>ApplicationRunner</strong></p>\n<pre><code class=\"lang-java\">@Component\npublic class HelloApplicationRunner implements ApplicationRunner {\n    @Override\n    public void run(ApplicationArguments args) throws Exception {\n        System.out.println(&quot;ApplicationRunner...run....&quot;);\n    }\n}\n</code></pre>\n<p><strong>CommandLineRunner</strong></p>\n<pre><code class=\"lang-java\">@Component\npublic class HelloCommandLineRunner implements CommandLineRunner {\n    @Override\n    public void run(String... args) throws Exception {\n        System.out.println(&quot;CommandLineRunner...run...&quot;+ Arrays.asList(args));\n    }\n}\n</code></pre>\n<h1 id=\"-starter\">八、自定义starter</h1>\n<p>starter：</p>\n<p>​    1、这个场景需要使用到的依赖是什么？</p>\n<p>​    2、如何编写自动配置</p>\n<pre><code class=\"lang-java\">@Configuration  //指定这个类是一个配置类\n@ConditionalOnXXX  //在指定条件成立的情况下自动配置类生效\n@AutoConfigureAfter  //指定自动配置类的顺序\n@Bean  //给容器中添加组件\n\n@ConfigurationPropertie结合相关xxxProperties类来绑定相关的配置\n@EnableConfigurationProperties //让xxxProperties生效加入到容器中\n\n自动配置类要能加载\n将需要启动就加载的自动配置类，配置在META-INF/spring.factories\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\norg.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\\n</code></pre>\n<p>​    3、模式：</p>\n<p>启动器只用来做依赖导入；</p>\n<p>专门来写一个自动配置模块；</p>\n<p>启动器依赖自动配置；别人只需要引入启动器（starter）</p>\n<p>mybatis-spring-boot-starter；自定义启动器名-spring-boot-starter</p>\n<p>步骤：</p>\n<p>1）、启动器模块</p>\n<pre><code class=\"lang-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.atguigu.starter&lt;/groupId&gt;\n    &lt;artifactId&gt;atguigu-spring-boot-starter&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n    &lt;!--启动器--&gt;\n    &lt;dependencies&gt;\n\n        &lt;!--引入自动配置模块--&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.atguigu.starter&lt;/groupId&gt;\n            &lt;artifactId&gt;atguigu-spring-boot-starter-autoconfigurer&lt;/artifactId&gt;\n            &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n&lt;/project&gt;\n</code></pre>\n<p>2）、自动配置模块</p>\n<pre><code class=\"lang-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n   &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n   &lt;groupId&gt;com.atguigu.starter&lt;/groupId&gt;\n   &lt;artifactId&gt;atguigu-spring-boot-starter-autoconfigurer&lt;/artifactId&gt;\n   &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n   &lt;packaging&gt;jar&lt;/packaging&gt;\n\n   &lt;name&gt;atguigu-spring-boot-starter-autoconfigurer&lt;/name&gt;\n   &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;\n\n   &lt;parent&gt;\n      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n      &lt;version&gt;1.5.10.RELEASE&lt;/version&gt;\n      &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n   &lt;/parent&gt;\n\n   &lt;properties&gt;\n      &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n      &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n      &lt;java.version&gt;1.8&lt;/java.version&gt;\n   &lt;/properties&gt;\n\n   &lt;dependencies&gt;\n\n      &lt;!--引入spring-boot-starter；所有starter的基本配置--&gt;\n      &lt;dependency&gt;\n         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n         &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;\n      &lt;/dependency&gt;\n\n   &lt;/dependencies&gt;\n\n\n\n&lt;/project&gt;\n</code></pre>\n<pre><code class=\"lang-java\">package com.atguigu.starter;\n\nimport org.springframework.boot.context.properties.ConfigurationProperties;\n\n@ConfigurationProperties(prefix = &quot;atguigu.hello&quot;)\npublic class HelloProperties {\n\n    private String prefix;\n    private String suffix;\n\n    public String getPrefix() {\n        return prefix;\n    }\n\n    public void setPrefix(String prefix) {\n        this.prefix = prefix;\n    }\n\n    public String getSuffix() {\n        return suffix;\n    }\n\n    public void setSuffix(String suffix) {\n        this.suffix = suffix;\n    }\n}\n</code></pre>\n<pre><code class=\"lang-java\">package com.atguigu.starter;\n\npublic class HelloService {\n\n    HelloProperties helloProperties;\n\n    public HelloProperties getHelloProperties() {\n        return helloProperties;\n    }\n\n    public void setHelloProperties(HelloProperties helloProperties) {\n        this.helloProperties = helloProperties;\n    }\n\n    public String sayHellAtguigu(String name){\n        return helloProperties.getPrefix()+&quot;-&quot; +name + helloProperties.getSuffix();\n    }\n}\n</code></pre>\n<pre><code class=\"lang-java\">package com.atguigu.starter;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@ConditionalOnWebApplication //web应用才生效\n@EnableConfigurationProperties(HelloProperties.class)\npublic class HelloServiceAutoConfiguration {\n\n    @Autowired\n    HelloProperties helloProperties;\n    @Bean\n    public HelloService helloService(){\n        HelloService service = new HelloService();\n        service.setHelloProperties(helloProperties);\n        return service;\n    }\n}\n</code></pre>\n<h1 id=\"-springboot-\">更多SpringBoot整合示例</h1>\n<p><a href=\"https://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples\">https://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples</a></p>\n','# **一、**Spring Boot 入门\n\n## 1、Spring Boot 简介\n\n> 简化Spring应用开发的一个框架；\n>\n> 整个Spring技术栈的一个大整合；\n>\n> J2EE开发的一站式解决方案；\n\n## 2、微服务\n\n2014，martin fowler\n\n微服务：架构风格（服务微化）\n\n一个应用应该是一组小型服务；可以通过HTTP的方式进行互通；\n\n单体应用：ALL IN ONE\n\n微服务：每一个功能元素最终都是一个可独立替换和独立升级的软件单元；\n\n[详细参照微服务文档](https://martinfowler.com/articles/microservices.html#MicroservicesAndSoa)\n\n\n\n## 3、环境准备\n\nhttp://www.gulixueyuan.com/ 谷粒学院\n\n环境约束\n\n–jdk1.8：Spring Boot 推荐jdk1.7及以上；java version \"1.8.0_112\"\n\n–maven3.x：maven 3.3以上版本；Apache Maven 3.3.9\n\n–IntelliJIDEA2017：IntelliJ IDEA 2017.2.2 x64、STS\n\n–SpringBoot 1.5.9.RELEASE：1.5.9；\n\n统一环境；\n\n\n\n### 1、MAVEN设置；\n\n给maven 的settings.xml配置文件的profiles标签添加\n\n```xml\n<profile>\n  <id>jdk-1.8</id>\n  <activation>\n    <activeByDefault>true</activeByDefault>\n    <jdk>1.8</jdk>\n  </activation>\n  <properties>\n    <maven.compiler.source>1.8</maven.compiler.source>\n    <maven.compiler.target>1.8</maven.compiler.target>\n    <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>\n  </properties>\n</profile>\n```\n\n### 2、IDEA设置\n\n整合maven进来；\n\n![idea设置](https://www.lcools.cn/static/springboot/images/搜狗截图20180129151045.png)\n\n\n\n![images/](https://www.lcools.cn/static/springboot/images/搜狗截图20180129151112.png)\n\n## 4、Spring Boot HelloWorld\n\n一个功能：\n\n浏览器发送hello请求，服务器接受请求并处理，响应Hello World字符串；\n\n\n\n### 1、创建一个maven工程；（jar）\n\n### 2、导入spring boot相关的依赖\n\n```xml\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>1.5.9.RELEASE</version>\n    </parent>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n    </dependencies>\n```\n\n### 3、编写一个主程序；启动Spring Boot应用\n\n```java\n\n/**\n *  @SpringBootApplication 来标注一个主程序类，说明这是一个Spring Boot应用\n */\n@SpringBootApplication\npublic class HelloWorldMainApplication {\n\n    public static void main(String[] args) {\n\n        // Spring应用启动起来\n        SpringApplication.run(HelloWorldMainApplication.class,args);\n    }\n}\n```\n\n### 4、编写相关的Controller、Service\n\n```java\n@Controller\npublic class HelloController {\n\n    @ResponseBody\n    @RequestMapping(\"/hello\")\n    public String hello(){\n        return \"Hello World!\";\n    }\n}\n\n```\n\n\n\n### 5、运行主程序测试\n\n### 6、简化部署\n\n```xml\n <!-- 这个插件，可以将应用打包成一个可执行的jar包；-->\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n```\n\n将这个应用打成jar包，直接使用java -jar的命令进行执行；\n\n## 5、Hello World探究\n\n### 1、POM文件\n\n#### 1、父项目\n\n```xml\n<parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.5.9.RELEASE</version>\n</parent>\n\n他的父项目是\n<parent>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-dependencies</artifactId>\n  <version>1.5.9.RELEASE</version>\n  <relativePath>../../spring-boot-dependencies</relativePath>\n</parent>\n他来真正管理Spring Boot应用里面的所有依赖版本；\n\n```\n\nSpring Boot的版本仲裁中心；\n\n以后我们导入依赖默认是不需要写版本；（没有在dependencies里面管理的依赖自然需要声明版本号）\n\n#### 2、启动器\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n</dependency>\n```\n\n**spring-boot-starter**-==web==：\n\n​	spring-boot-starter：spring-boot场景启动器；帮我们导入了web模块正常运行所依赖的组件；\n\n\n\nSpring Boot将所有的功能场景都抽取出来，做成一个个的starters（启动器），只需要在项目里面引入这些starter相关场景的所有依赖都会导入进来。要用什么功能就导入什么场景的启动器\n\n\n\n### 2、主程序类，主入口类\n\n```java\n/**\n *  @SpringBootApplication 来标注一个主程序类，说明这是一个Spring Boot应用\n */\n@SpringBootApplication\npublic class HelloWorldMainApplication {\n\n    public static void main(String[] args) {\n\n        // Spring应用启动起来\n        SpringApplication.run(HelloWorldMainApplication.class,args);\n    }\n}\n\n```\n\n@**SpringBootApplication**:    Spring Boot应用标注在某个类上说明这个类是SpringBoot的主配置类，SpringBoot就应该运行这个类的main方法来启动SpringBoot应用；\n\n\n\n```java\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@SpringBootConfiguration\n@EnableAutoConfiguration\n@ComponentScan(excludeFilters = {\n      @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),\n      @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) })\npublic @interface SpringBootApplication {\n```\n\n@**SpringBootConfiguration**:Spring Boot的配置类；\n\n​		标注在某个类上，表示这是一个Spring Boot的配置类；\n\n​		@**Configuration**:配置类上来标注这个注解；\n\n​			配置类 -----  配置文件；配置类也是容器中的一个组件；@Component\n\n\n\n@**EnableAutoConfiguration**：开启自动配置功能；\n\n​		以前我们需要配置的东西，Spring Boot帮我们自动配置；@**EnableAutoConfiguration**告诉SpringBoot开启自动配置功能；这样自动配置才能生效；\n\n```java\n@AutoConfigurationPackage\n@Import(EnableAutoConfigurationImportSelector.class)\npublic @interface EnableAutoConfiguration {\n```\n\n​      	@**AutoConfigurationPackage**：自动配置包\n\n​		@**Import**(AutoConfigurationPackages.Registrar.class)：\n\n​		Spring的底层注解@Import，给容器中导入一个组件；导入的组件由AutoConfigurationPackages.Registrar.class；\n\n==将主配置类（@SpringBootApplication标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器；==\n\n​	@**Import**(EnableAutoConfigurationImportSelector.class)；\n\n​		给容器中导入组件？\n\n​		**EnableAutoConfigurationImportSelector**：导入哪些组件的选择器；\n\n​		将所有需要导入的组件以全类名的方式返回；这些组件就会被添加到容器中；\n\n​		会给容器中导入非常多的自动配置类（xxxAutoConfiguration）；就是给容器中导入这个场景需要的所有组件，并配置好这些组件；		![自动配置类](https://www.lcools.cn/static/springboot/images/搜狗截图20180129224104.png)\n\n有了自动配置类，免去了我们手动编写配置注入功能组件等的工作；\n\n​		SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,classLoader)；\n\n\n\n==Spring Boot在启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值，将这些值作为自动配置类导入到容器中，自动配置类就生效，帮我们进行自动配置工作；==以前我们需要自己配置的东西，自动配置类都帮我们；\n\nJ2EE的整体整合解决方案和自动配置都在spring-boot-autoconfigure-1.5.9.RELEASE.jar；\n\n\n\n​		\n\n==Spring注解版（谷粒学院）==\n\n\n\n## 6、使用Spring Initializer快速创建Spring Boot项目\n\n### 1、IDEA：使用 Spring Initializer快速创建项目\n\nIDE都支持使用Spring的项目创建向导快速创建一个Spring Boot项目；\n\n选择我们需要的模块；向导会联网创建Spring Boot项目；\n\n默认生成的Spring Boot项目；\n\n- 主程序已经生成好了，我们只需要我们自己的逻辑\n- resources文件夹中目录结构\n  - static：保存所有的静态资源； js css  images；\n  - templates：保存所有的模板页面；（Spring Boot默认jar包使用嵌入式的Tomcat，默认不支持JSP页面）；可以使用模板引擎（freemarker、thymeleaf）；\n  - application.properties：Spring Boot应用的配置文件；可以修改一些默认设置；\n\n### 2、STS使用 Spring Starter Project快速创建项目\n\n\n\n-------------\n\n\n\n# 二、配置文件\n\n## 1、配置文件\n\nSpringBoot使用一个全局的配置文件，配置文件名是固定的；\n\n•application.properties\n\n•application.yml\n\n\n\n配置文件的作用：修改SpringBoot自动配置的默认值；SpringBoot在底层都给我们自动配置好；\n\n\n\nYAML（YAML Ain\'t Markup Language）\n\n​	YAML  A Markup Language：是一个标记语言\n\n​	YAML   isn\'t Markup Language：不是一个标记语言；\n\n标记语言：\n\n​	以前的配置文件；大多都使用的是  **xxxx.xml**文件；\n\n​	YAML：**以数据为中心**，比json、xml等更适合做配置文件；\n\n​	YAML：配置例子\n\n```yaml\nserver:\n  port: 8081\n```\n\n​	XML：\n\n```xml\n<server>\n	<port>8081</port>\n</server>\n```\n\n\n\n## 2、YAML语法：\n\n### 1、基本语法\n\nk:(空格)v：表示一对键值对（空格必须有）；\n\n以**空格**的缩进来控制层级关系；只要是左对齐的一列数据，都是同一个层级的\n\n```yaml\nserver:\n    port: 8081\n    path: /hello\n```\n\n属性和值也是大小写敏感；\n\n\n\n### 2、值的写法\n\n#### 字面量：普通的值（数字，字符串，布尔）\n\n​	k: v：字面直接来写；\n\n​		字符串默认不用加上单引号或者双引号；\n\n​		\"\"：双引号；不会转义字符串里面的特殊字符；特殊字符会作为本身想表示的意思\n\n​				name:   \"zhangsan \\n lisi\"：输出；zhangsan 换行  lisi\n\n​		\'\'：单引号；会转义特殊字符，特殊字符最终只是一个普通的字符串数据\n\n​				name:   ‘zhangsan \\n lisi’：输出；zhangsan \\n  lisi\n\n\n\n#### 对象、Map（属性和值）（键值对）：\n\n​	k: v：在下一行来写对象的属性和值的关系；注意缩进\n\n​		对象还是k: v的方式\n\n```yaml\nfriends:\n		lastName: zhangsan\n		age: 20\n```\n\n行内写法：\n\n```yaml\nfriends: {lastName: zhangsan,age: 18}\n```\n\n\n\n#### 数组（List、Set）：\n\n用- 值表示数组中的一个元素\n\n```yaml\npets:\n - cat\n - dog\n - pig\n```\n\n行内写法\n\n```yaml\npets: [cat,dog,pig]\n```\n\n\n\n## 3、配置文件值注入\n\n配置文件\n\n```yaml\nperson:\n    lastName: hello\n    age: 18\n    boss: false\n    birth: 2017/12/12\n    maps: {k1: v1,k2: 12}\n    lists:\n      - lisi\n      - zhaoliu\n    dog:\n      name: 小狗\n      age: 12\n```\n\njavaBean：\n\n```java\n/**\n * 将配置文件中配置的每一个属性的值，映射到这个组件中\n * @ConfigurationProperties：告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定；\n *      prefix = \"person\"：配置文件中哪个下面的所有属性进行一一映射\n *\n * 只有这个组件是容器中的组件，才能容器提供的@ConfigurationProperties功能；\n *\n */\n@Component\n@ConfigurationProperties(prefix = \"person\")\npublic class Person {\n\n    private String lastName;\n    private Integer age;\n    private Boolean boss;\n    private Date birth;\n\n    private Map<String,Object> maps;\n    private List<Object> lists;\n    private Dog dog;\n\n```\n\n\n\n我们可以导入配置文件处理器，以后编写配置就有提示了\n\n```xml\n<!--导入配置文件处理器，配置文件进行绑定就会有提示-->\n		<dependency>\n			<groupId>org.springframework.boot</groupId>\n			<artifactId>spring-boot-configuration-processor</artifactId>\n			<optional>true</optional>\n		</dependency>\n```\n\n#### 1、properties配置文件在idea中默认utf-8可能会乱码\n\n调整\n\n![idea配置乱码](https://www.lcools.cn/static/springboot/images/搜狗截图20180130161620.png)\n\n#### 2、@Value获取值和@ConfigurationProperties获取值比较\n\n|            | @ConfigurationProperties | @Value |\n| ---------- | ------------------------ | ------ |\n| 功能         | 批量注入配置文件中的属性             | 一个个指定  |\n| 松散绑定（松散语法） | 支持                       | 不支持    |\n| SpEL       | 不支持                      | 支持     |\n| JSR303数据校验 | 支持                       | 不支持    |\n| 复杂类型封装     | 支持                       | 不支持    |\n\n配置文件yml还是properties他们都能获取到值；\n\n如果说，我们只是在某个业务逻辑中需要获取一下配置文件中的某项值，使用@Value；\n\n如果说，我们专门编写了一个javaBean来和配置文件进行映射，我们就直接使用@ConfigurationProperties；\n\n\n\n#### 3、配置文件注入值数据校验\n\n```java\n@Component\n@ConfigurationProperties(prefix = \"person\")\n@Validated\npublic class Person {\n\n    /**\n     * <bean class=\"Person\">\n     *      <property name=\"lastName\" value=\"字面量/${key}从环境变量、配置文件中获取值/#{SpEL}\"></property>\n     * <bean/>\n     */\n\n   //lastName必须是邮箱格式\n    @Email\n    //@Value(\"${person.last-name}\")\n    private String lastName;\n    //@Value(\"#{11*2}\")\n    private Integer age;\n    //@Value(\"true\")\n    private Boolean boss;\n\n    private Date birth;\n    private Map<String,Object> maps;\n    private List<Object> lists;\n    private Dog dog;\n```\n\n\n\n#### 4、@PropertySource&@ImportResource&@Bean\n\n@**PropertySource**：加载指定的配置文件；\n\n```java\n/**\n * 将配置文件中配置的每一个属性的值，映射到这个组件中\n * @ConfigurationProperties：告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定；\n *      prefix = \"person\"：配置文件中哪个下面的所有属性进行一一映射\n *\n * 只有这个组件是容器中的组件，才能容器提供的@ConfigurationProperties功能；\n *  @ConfigurationProperties(prefix = \"person\")默认从全局配置文件中获取值；\n *\n */\n@PropertySource(value = {\"classpath:person.properties\"})\n@Component\n@ConfigurationProperties(prefix = \"person\")\n//@Validated\npublic class Person {\n\n    /**\n     * <bean class=\"Person\">\n     *      <property name=\"lastName\" value=\"字面量/${key}从环境变量、配置文件中获取值/#{SpEL}\"></property>\n     * <bean/>\n     */\n\n   //lastName必须是邮箱格式\n   // @Email\n    //@Value(\"${person.last-name}\")\n    private String lastName;\n    //@Value(\"#{11*2}\")\n    private Integer age;\n    //@Value(\"true\")\n    private Boolean boss;\n\n```\n\n\n\n@**ImportResource**：导入Spring的配置文件，让配置文件里面的内容生效；\n\nSpring Boot里面没有Spring的配置文件，我们自己编写的配置文件，也不能自动识别；\n\n想让Spring的配置文件生效，加载进来；@**ImportResource**标注在一个配置类上\n\n```java\n@ImportResource(locations = {\"classpath:beans.xml\"})\n导入Spring的配置文件让其生效\n```\n\n\n\n不来编写Spring的配置文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n\n    <bean id=\"helloService\" class=\"com.atguigu.springboot.service.HelloService\"></bean>\n</beans>\n```\n\nSpringBoot推荐给容器中添加组件的方式；推荐使用全注解的方式\n\n1、配置类**@Configuration**------>Spring配置文件\n\n2、使用**@Bean**给容器中添加组件\n\n```java\n/**\n * @Configuration：指明当前类是一个配置类；就是来替代之前的Spring配置文件\n *\n * 在配置文件中用<bean><bean/>标签添加组件\n *\n */\n@Configuration\npublic class MyAppConfig {\n\n    //将方法的返回值添加到容器中；容器中这个组件默认的id就是方法名\n    @Bean\n    public HelloService helloService02(){\n        System.out.println(\"配置类@Bean给容器中添加组件了...\");\n        return new HelloService();\n    }\n}\n```\n\n##4、配置文件占位符\n\n### 1、随机数\n\n```java\n${random.value}、${random.int}、${random.long}\n${random.int(10)}、${random.int[1024,65536]}\n\n```\n\n\n\n### 2、占位符获取之前配置的值，如果没有可以是用:指定默认值\n\n```properties\nperson.last-name=张三${random.uuid}\nperson.age=${random.int}\nperson.birth=2017/12/15\nperson.boss=false\nperson.maps.k1=v1\nperson.maps.k2=14\nperson.lists=a,b,c\nperson.dog.name=${person.hello:hello}_dog\nperson.dog.age=15\n```\n\n\n\n## 5、Profile\n\n### 1、多Profile文件\n\n我们在主配置文件编写的时候，文件名可以是   application-{profile}.properties/yml\n\n默认使用application.properties的配置；\n\n\n\n### 2、yml支持多文档块方式\n\n```yml\n\nserver:\n  port: 8081\nspring:\n  profiles:\n    active: prod\n\n---\nserver:\n  port: 8083\nspring:\n  profiles: dev\n\n\n---\n\nserver:\n  port: 8084\nspring:\n  profiles: prod  #指定属于哪个环境\n```\n\n\n\n\n\n### 3、激活指定profile\n\n​	1、在配置文件中指定  spring.profiles.active=dev\n\n​	2、命令行：\n\n​		java -jar spring-boot-02-config-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev；\n\n​		可以直接在测试的时候，配置传入命令行参数\n\n​	3、虚拟机参数；\n\n​		-Dspring.profiles.active=dev\n\n\n\n## 6、配置文件加载位置\n\nspringboot 启动会扫描以下位置的application.properties或者application.yml文件作为Spring boot的默认配置文件\n\n–file:./config/\n\n–file:./\n\n–classpath:/config/\n\n–classpath:/\n\n优先级由高到底，高优先级的配置会覆盖低优先级的配置；\n\nSpringBoot会从这四个位置全部加载主配置文件；**互补配置**；\n\n\n\n==我们还可以通过spring.config.location来改变默认的配置文件位置==\n\n**项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；指定配置文件和默认加载的这些配置文件共同起作用形成互补配置；**\n\njava -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --spring.config.location=G:/application.properties\n\n## 7、外部配置加载顺序\n\n**==SpringBoot也可以从以下位置加载配置； 优先级从高到低；高优先级的配置覆盖低优先级的配置，所有的配置会形成互补配置==**\n\n**1.命令行参数**\n\n所有的配置都可以在命令行上进行指定\n\njava -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --server.port=8087  --server.context-path=/abc\n\n多个配置用空格分开； --配置项=值\n\n\n\n2.来自java:comp/env的JNDI属性\n\n3.Java系统属性（System.getProperties()）\n\n4.操作系统环境变量\n\n5.RandomValuePropertySource配置的random.*属性值\n\n\n\n==**由jar包外向jar包内进行寻找；**==\n\n==**优先加载带profile**==\n\n**6.jar包外部的application-{profile}.properties或application.yml(带spring.profile)配置文件**\n\n**7.jar包内部的application-{profile}.properties或application.yml(带spring.profile)配置文件**\n\n\n\n==**再来加载不带profile**==\n\n**8.jar包外部的application.properties或application.yml(不带spring.profile)配置文件**\n\n**9.jar包内部的application.properties或application.yml(不带spring.profile)配置文件**\n\n\n\n10.@Configuration注解类上的@PropertySource\n\n11.通过SpringApplication.setDefaultProperties指定的默认属性\n\n所有支持的配置加载来源；\n\n[参考官方文档](https://docs.spring.io/spring-boot/docs/1.5.9.RELEASE/reference/htmlsingle/#boot-features-external-config)\n\n## 8、自动配置原理\n\n配置文件到底能写什么？怎么写？自动配置原理；\n\n[配置文件能配置的属性参照](https://docs.spring.io/spring-boot/docs/1.5.9.RELEASE/reference/htmlsingle/#common-application-properties)\n\n\n\n### 1、**自动配置原理：**\n\n1）、SpringBoot启动的时候加载主配置类，开启了自动配置功能 ==@EnableAutoConfiguration==\n\n**2）、@EnableAutoConfiguration 作用：**\n\n -  利用EnableAutoConfigurationImportSelector给容器中导入一些组件？\n\n- 可以查看selectImports()方法的内容；\n\n- List<String> configurations = getCandidateConfigurations(annotationMetadata,      attributes);获取候选的配置\n\n  - ```java\n    SpringFactoriesLoader.loadFactoryNames()\n    扫描所有jar包类路径下  META-INF/spring.factories\n    把扫描到的这些文件的内容包装成properties对象\n    从properties中获取到EnableAutoConfiguration.class类（类名）对应的值，然后把他们添加在容器中\n\n    ```\n\n    ​\n\n**==将 类路径下  META-INF/spring.factories 里面配置的所有EnableAutoConfiguration的值加入到了容器中；==**\n\n```properties\n# Auto Configure\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\norg.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\\norg.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\\norg.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\\\norg.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\\\norg.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\\norg.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration,\\\norg.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\\\norg.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\\\norg.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.ldap.LdapDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\\\norg.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\\\norg.springframework.boot.autoconfigure.elasticsearch.jest.JestAutoConfiguration,\\\norg.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\\\norg.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\\\norg.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\\\norg.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\\\norg.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\\\norg.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\\\norg.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\\\norg.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\\\norg.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\\\norg.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\\\norg.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\\\norg.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mobile.DeviceResolverAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mobile.SitePreferenceAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\\\norg.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\\\norg.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.SecurityAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.SecurityFilterAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration,\\\norg.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration,\\\norg.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\\\norg.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\\\norg.springframework.boot.autoconfigure.social.SocialWebAutoConfiguration,\\\norg.springframework.boot.autoconfigure.social.FacebookAutoConfiguration,\\\norg.springframework.boot.autoconfigure.social.LinkedInAutoConfiguration,\\\norg.springframework.boot.autoconfigure.social.TwitterAutoConfiguration,\\\norg.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\\\norg.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\\\norg.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\\\norg.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\\\norg.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.MultipartAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.WebClientAutoConfiguration,\\\norg.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration,\\\norg.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration,\\\norg.springframework.boot.autoconfigure.websocket.WebSocketMessagingAutoConfiguration,\\\norg.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration\n```\n\n每一个这样的  xxxAutoConfiguration类都是容器中的一个组件，都加入到容器中；用他们来做自动配置；\n\n3）、每一个自动配置类进行自动配置功能；\n\n4）、以**HttpEncodingAutoConfiguration（Http编码自动配置）**为例解释自动配置原理；\n\n```java\n@Configuration   //表示这是一个配置类，以前编写的配置文件一样，也可以给容器中添加组件\n@EnableConfigurationProperties(HttpEncodingProperties.class)  //启动指定类的ConfigurationProperties功能；将配置文件中对应的值和HttpEncodingProperties绑定起来；并把HttpEncodingProperties加入到ioc容器中\n\n@ConditionalOnWebApplication //Spring底层@Conditional注解（Spring注解版），根据不同的条件，如果满足指定的条件，整个配置类里面的配置就会生效；    判断当前应用是否是web应用，如果是，当前配置类生效\n\n@ConditionalOnClass(CharacterEncodingFilter.class)  //判断当前项目有没有这个类CharacterEncodingFilter；SpringMVC中进行乱码解决的过滤器；\n\n@ConditionalOnProperty(prefix = \"spring.http.encoding\", value = \"enabled\", matchIfMissing = true)  //判断配置文件中是否存在某个配置  spring.http.encoding.enabled；如果不存在，判断也是成立的\n//即使我们配置文件中不配置pring.http.encoding.enabled=true，也是默认生效的；\npublic class HttpEncodingAutoConfiguration {\n  \n  	//他已经和SpringBoot的配置文件映射了\n  	private final HttpEncodingProperties properties;\n  \n   //只有一个有参构造器的情况下，参数的值就会从容器中拿\n  	public HttpEncodingAutoConfiguration(HttpEncodingProperties properties) {\n		this.properties = properties;\n	}\n  \n    @Bean   //给容器中添加一个组件，这个组件的某些值需要从properties中获取\n	@ConditionalOnMissingBean(CharacterEncodingFilter.class) //判断容器没有这个组件？\n	public CharacterEncodingFilter characterEncodingFilter() {\n		CharacterEncodingFilter filter = new OrderedCharacterEncodingFilter();\n		filter.setEncoding(this.properties.getCharset().name());\n		filter.setForceRequestEncoding(this.properties.shouldForce(Type.REQUEST));\n		filter.setForceResponseEncoding(this.properties.shouldForce(Type.RESPONSE));\n		return filter;\n	}\n```\n\n根据当前不同的条件判断，决定这个配置类是否生效？\n\n一但这个配置类生效；这个配置类就会给容器中添加各种组件；这些组件的属性是从对应的properties类中获取的，这些类里面的每一个属性又是和配置文件绑定的；\n\n\n\n\n\n\n\n5）、所有在配置文件中能配置的属性都是在xxxxProperties类中封装者‘；配置文件能配置什么就可以参照某个功能对应的这个属性类\n\n```java\n@ConfigurationProperties(prefix = \"spring.http.encoding\")  //从配置文件中获取指定的值和bean的属性进行绑定\npublic class HttpEncodingProperties {\n\n   public static final Charset DEFAULT_CHARSET = Charset.forName(\"UTF-8\");\n```\n\n\n\n\n\n**精髓：**\n\n​	**1）、SpringBoot启动会加载大量的自动配置类**\n\n​	**2）、我们看我们需要的功能有没有SpringBoot默认写好的自动配置类；**\n\n​	**3）、我们再来看这个自动配置类中到底配置了哪些组件；（只要我们要用的组件有，我们就不需要再来配置了）**\n\n​	**4）、给容器中自动配置类添加组件的时候，会从properties类中获取某些属性。我们就可以在配置文件中指定这些属性的值；**\n\n\n\nxxxxAutoConfigurartion：自动配置类；\n\n给容器中添加组件\n\nxxxxProperties:封装配置文件中相关属性；\n\n\n\n### 2、细节\n\n\n\n#### 1、@Conditional派生注解（Spring注解版原生的@Conditional作用）\n\n作用：必须是@Conditional指定的条件成立，才给容器中添加组件，配置配里面的所有内容才生效；\n\n| @Conditional扩展注解                | 作用（判断是否满足当前指定条件）               |\n| ------------------------------- | ------------------------------ |\n| @ConditionalOnJava              | 系统的java版本是否符合要求                |\n| @ConditionalOnBean              | 容器中存在指定Bean；                   |\n| @ConditionalOnMissingBean       | 容器中不存在指定Bean；                  |\n| @ConditionalOnExpression        | 满足SpEL表达式指定                    |\n| @ConditionalOnClass             | 系统中有指定的类                       |\n| @ConditionalOnMissingClass      | 系统中没有指定的类                      |\n| @ConditionalOnSingleCandidate   | 容器中只有一个指定的Bean，或者这个Bean是首选Bean |\n| @ConditionalOnProperty          | 系统中指定的属性是否有指定的值                |\n| @ConditionalOnResource          | 类路径下是否存在指定资源文件                 |\n| @ConditionalOnWebApplication    | 当前是web环境                       |\n| @ConditionalOnNotWebApplication | 当前不是web环境                      |\n| @ConditionalOnJndi              | JNDI存在指定项                      |\n\n**自动配置类必须在一定的条件下才能生效；**\n\n我们怎么知道哪些自动配置类生效；\n\n**==我们可以通过启用  debug=true属性；来让控制台打印自动配置报告==**，这样我们就可以很方便的知道哪些自动配置类生效；\n\n```java\n=========================\nAUTO-CONFIGURATION REPORT\n=========================\n\n\nPositive matches:（自动配置类启用的）\n-----------------\n\n   DispatcherServletAutoConfiguration matched:\n      - @ConditionalOnClass found required class \'org.springframework.web.servlet.DispatcherServlet\'; @ConditionalOnMissingClass did not find unwanted class (OnClassCondition)\n      - @ConditionalOnWebApplication (required) found StandardServletEnvironment (OnWebApplicationCondition)\n        \n    \nNegative matches:（没有启动，没有匹配成功的自动配置类）\n-----------------\n\n   ActiveMQAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes \'javax.jms.ConnectionFactory\', \'org.apache.activemq.ActiveMQConnectionFactory\' (OnClassCondition)\n\n   AopAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes \'org.aspectj.lang.annotation.Aspect\', \'org.aspectj.lang.reflect.Advice\' (OnClassCondition)\n        \n```\n\n\n\n\n\n# 三、日志\n\n## 1、日志框架\n\n 小张；开发一个大型系统；\n\n​		1、System.out.println(\"\")；将关键数据打印在控制台；去掉？写在一个文件？\n\n​		2、框架来记录系统的一些运行时信息；日志框架 ；  zhanglogging.jar；\n\n​		3、高大上的几个功能？异步模式？自动归档？xxxx？  zhanglogging-good.jar？\n\n​		4、将以前框架卸下来？换上新的框架，重新修改之前相关的API；zhanglogging-prefect.jar；\n\n​		5、JDBC---数据库驱动；\n\n​			写了一个统一的接口层；日志门面（日志的一个抽象层）；logging-abstract.jar；\n\n​			给项目中导入具体的日志实现就行了；我们之前的日志框架都是实现的抽象层；\n\n\n\n**市面上的日志框架；**\n\nJUL、JCL、Jboss-logging、logback、log4j、log4j2、slf4j....\n\n| 日志门面  （日志的抽象层）                           | 日志实现                                     |\n| ---------------------------------------- | ---------------------------------------- |\n| ~~JCL（Jakarta  Commons Logging）~~    SLF4j（Simple  Logging Facade for Java）    **~~jboss-logging~~** | Log4j  JUL（java.util.logging）  Log4j2  **Logback** |\n\n左边选一个门面（抽象层）、右边来选一个实现；\n\n日志门面：  SLF4J；\n\n日志实现：Logback；\n\n\n\nSpringBoot：底层是Spring框架，Spring框架默认是用JCL；‘\n\n​	**==SpringBoot选用 SLF4j和logback；==**\n\n\n\n## 2、SLF4j使用\n\n### 1、如何在系统中使用SLF4j   https://www.slf4j.org\n\n以后开发的时候，日志记录方法的调用，不应该来直接调用日志的实现类，而是调用日志抽象层里面的方法；\n\n给系统里面导入slf4j的jar和  logback的实现jar\n\n```java\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class HelloWorld {\n  public static void main(String[] args) {\n    Logger logger = LoggerFactory.getLogger(HelloWorld.class);\n    logger.info(\"Hello World\");\n  }\n}\n```\n\n图示；\n\n![images/concrete-bindings.png](https://www.lcools.cn/static/springboot/images/concrete-bindings.png)\n\n每一个日志的实现框架都有自己的配置文件。使用slf4j以后，**配置文件还是做成日志实现框架自己本身的配置文件；**\n\n### 2、遗留问题\n\na（slf4j+logback）: Spring（commons-logging）、Hibernate（jboss-logging）、MyBatis、xxxx\n\n统一日志记录，即使是别的框架和我一起统一使用slf4j进行输出？\n\n![](https://www.lcools.cn/static/springboot/images/legacy.png)\n\n**如何让系统中所有的日志都统一到slf4j；**\n\n==1、将系统中其他日志框架先排除出去；==\n\n==2、用中间包来替换原有的日志框架；==\n\n==3、我们导入slf4j其他的实现==\n\n\n\n## 3、SpringBoot日志关系\n\n```xml\n		<dependency>\n			<groupId>org.springframework.boot</groupId>\n			<artifactId>spring-boot-starter</artifactId>\n		</dependency>\n```\n\n\n\nSpringBoot使用它来做日志功能；\n\n```xml\n	<dependency>\n			<groupId>org.springframework.boot</groupId>\n			<artifactId>spring-boot-starter-logging</artifactId>\n		</dependency>\n```\n\n底层依赖关系\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180131220946.png)\n\n总结：\n\n​	1）、SpringBoot底层也是使用slf4j+logback的方式进行日志记录\n\n​	2）、SpringBoot也把其他的日志都替换成了slf4j；\n\n​	3）、中间替换包？\n\n```java\n@SuppressWarnings(\"rawtypes\")\npublic abstract class LogFactory {\n\n    static String UNSUPPORTED_OPERATION_IN_JCL_OVER_SLF4J = \"http://www.slf4j.org/codes.html#unsupported_operation_in_jcl_over_slf4j\";\n\n    static LogFactory logFactory = new SLF4JLogFactory();\n```\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180131221411.png)\n\n\n\n​	4）、如果我们要引入其他框架？一定要把这个框架的默认日志依赖移除掉？\n\n​			Spring框架用的是commons-logging；\n\n```xml\n		<dependency>\n			<groupId>org.springframework</groupId>\n			<artifactId>spring-core</artifactId>\n			<exclusions>\n				<exclusion>\n					<groupId>commons-logging</groupId>\n					<artifactId>commons-logging</artifactId>\n				</exclusion>\n			</exclusions>\n		</dependency>\n```\n\n**==SpringBoot能自动适配所有的日志，而且底层使用slf4j+logback的方式记录日志，引入其他框架的时候，只需要把这个框架依赖的日志框架排除掉即可；==**\n\n## 4、日志使用；\n\n### 1、默认配置\n\nSpringBoot默认帮我们配置好了日志；\n\n```java\n	//记录器\n	Logger logger = LoggerFactory.getLogger(getClass());\n	@Test\n	public void contextLoads() {\n		//System.out.println();\n\n		//日志的级别；\n		//由低到高   trace<debug<info<warn<error\n		//可以调整输出的日志级别；日志就只会在这个级别以以后的高级别生效\n		logger.trace(\"这是trace日志...\");\n		logger.debug(\"这是debug日志...\");\n		//SpringBoot默认给我们使用的是info级别的，没有指定级别的就用SpringBoot默认规定的级别；root级别\n		logger.info(\"这是info日志...\");\n		logger.warn(\"这是warn日志...\");\n		logger.error(\"这是error日志...\");\n\n\n	}\n```\n\n\n\n        日志输出格式：\n    		%d表示日期时间，\n    		%thread表示线程名，\n    		%-5level：级别从左显示5个字符宽度\n    		%logger{50} 表示logger名字最长50个字符，否则按照句点分割。 \n    		%msg：日志消息，\n    		%n是换行符\n        -->\n        %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n\nSpringBoot修改日志的默认配置\n\n```properties\nlogging.level.com.atguigu=trace\n\n\n#logging.path=\n# 不指定路径在当前项目下生成springboot.log日志\n# 可以指定完整的路径；\n#logging.file=G:/springboot.log\n\n# 在当前磁盘的根路径下创建spring文件夹和里面的log文件夹；使用 spring.log 作为默认文件\nlogging.path=/spring/log\n\n#  在控制台输出的日志的格式\nlogging.pattern.console=%d{yyyy-MM-dd} [%thread] %-5level %logger{50} - %msg%n\n# 指定文件中日志输出的格式\nlogging.pattern.file=%d{yyyy-MM-dd} === [%thread] === %-5level === %logger{50} ==== %msg%n\n```\n\n| logging.file | logging.path | Example  | Description             |\n| ------------ | ------------ | -------- | ----------------------- |\n| (none)       | (none)       |          | 只在控制台输出                 |\n| 指定文件名        | (none)       | my.log   | 输出日志到my.log文件           |\n| (none)       | 指定目录         | /var/log | 输出到指定目录的 spring.log 文件中 |\n\n### 2、指定配置\n\n给类路径下放上每个日志框架自己的配置文件即可；SpringBoot就不使用他默认配置的了\n\n| Logging System          | Customization                            |\n| ----------------------- | ---------------------------------------- |\n| Logback                 | `logback-spring.xml`, `logback-spring.groovy`, `logback.xml` or `logback.groovy` |\n| Log4j2                  | `log4j2-spring.xml` or `log4j2.xml`      |\n| JDK (Java Util Logging) | `logging.properties`                     |\n\nlogback.xml：直接就被日志框架识别了；\n\n**logback-spring.xml**：日志框架就不直接加载日志的配置项，由SpringBoot解析日志配置，可以使用SpringBoot的高级Profile功能\n\n```xml\n<springProfile name=\"staging\">\n    <!-- configuration to be enabled when the \"staging\" profile is active -->\n  	可以指定某段配置只在某个环境下生效\n</springProfile>\n\n```\n\n如：\n\n```xml\n<appender name=\"stdout\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <!--\n        日志输出格式：\n			%d表示日期时间，\n			%thread表示线程名，\n			%-5level：级别从左显示5个字符宽度\n			%logger{50} 表示logger名字最长50个字符，否则按照句点分割。 \n			%msg：日志消息，\n			%n是换行符\n        -->\n        <layout class=\"ch.qos.logback.classic.PatternLayout\">\n            <springProfile name=\"dev\">\n                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} ----> [%thread] ---> %-5level %logger{50} - %msg%n</pattern>\n            </springProfile>\n            <springProfile name=\"!dev\">\n                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} ==== [%thread] ==== %-5level %logger{50} - %msg%n</pattern>\n            </springProfile>\n        </layout>\n    </appender>\n```\n\n\n\n如果使用logback.xml作为日志配置文件，还要使用profile功能，会有以下错误\n\n `no applicable action for [springProfile]`\n\n## 5、切换日志框架\n\n可以按照slf4j的日志适配图，进行相关的切换；\n\nslf4j+log4j的方式；\n\n```xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-web</artifactId>\n  <exclusions>\n    <exclusion>\n      <artifactId>logback-classic</artifactId>\n      <groupId>ch.qos.logback</groupId>\n    </exclusion>\n    <exclusion>\n      <artifactId>log4j-over-slf4j</artifactId>\n      <groupId>org.slf4j</groupId>\n    </exclusion>\n  </exclusions>\n</dependency>\n\n<dependency>\n  <groupId>org.slf4j</groupId>\n  <artifactId>slf4j-log4j12</artifactId>\n</dependency>\n\n```\n\n\n\n\n\n切换为log4j2\n\n```xml\n   <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n            <exclusions>\n                <exclusion>\n                    <artifactId>spring-boot-starter-logging</artifactId>\n                    <groupId>org.springframework.boot</groupId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-log4j2</artifactId>\n</dependency>\n```\n\n-----------------\n\n# 四、Web开发\n\n## 1、简介\n\n\n\n使用SpringBoot；\n\n**1）、创建SpringBoot应用，选中我们需要的模块；**\n\n**2）、SpringBoot已经默认将这些场景配置好了，只需要在配置文件中指定少量配置就可以运行起来**\n\n**3）、自己编写业务代码；**\n\n\n\n**自动配置原理？**\n\n这个场景SpringBoot帮我们配置了什么？能不能修改？能修改哪些配置？能不能扩展？xxx\n\n```\nxxxxAutoConfiguration：帮我们给容器中自动配置组件；\nxxxxProperties:配置类来封装配置文件的内容；\n\n```\n\n\n\n## 2、SpringBoot对静态资源的映射规则；\n\n```java\n@ConfigurationProperties(prefix = \"spring.resources\", ignoreUnknownFields = false)\npublic class ResourceProperties implements ResourceLoaderAware {\n  //可以设置和静态资源有关的参数，缓存时间等\n```\n\n\n\n```java\n	WebMvcAuotConfiguration：\n		@Override\n		public void addResourceHandlers(ResourceHandlerRegistry registry) {\n			if (!this.resourceProperties.isAddMappings()) {\n				logger.debug(\"Default resource handling disabled\");\n				return;\n			}\n			Integer cachePeriod = this.resourceProperties.getCachePeriod();\n			if (!registry.hasMappingForPattern(\"/webjars/**\")) {\n				customizeResourceHandlerRegistration(\n						registry.addResourceHandler(\"/webjars/**\")\n								.addResourceLocations(\n										\"classpath:/META-INF/resources/webjars/\")\n						.setCachePeriod(cachePeriod));\n			}\n			String staticPathPattern = this.mvcProperties.getStaticPathPattern();\n          	//静态资源文件夹映射\n			if (!registry.hasMappingForPattern(staticPathPattern)) {\n				customizeResourceHandlerRegistration(\n						registry.addResourceHandler(staticPathPattern)\n								.addResourceLocations(\n										this.resourceProperties.getStaticLocations())\n						.setCachePeriod(cachePeriod));\n			}\n		}\n\n        //配置欢迎页映射\n		@Bean\n		public WelcomePageHandlerMapping welcomePageHandlerMapping(\n				ResourceProperties resourceProperties) {\n			return new WelcomePageHandlerMapping(resourceProperties.getWelcomePage(),\n					this.mvcProperties.getStaticPathPattern());\n		}\n\n       //配置喜欢的图标\n		@Configuration\n		@ConditionalOnProperty(value = \"spring.mvc.favicon.enabled\", matchIfMissing = true)\n		public static class FaviconConfiguration {\n\n			private final ResourceProperties resourceProperties;\n\n			public FaviconConfiguration(ResourceProperties resourceProperties) {\n				this.resourceProperties = resourceProperties;\n			}\n\n			@Bean\n			public SimpleUrlHandlerMapping faviconHandlerMapping() {\n				SimpleUrlHandlerMapping mapping = new SimpleUrlHandlerMapping();\n				mapping.setOrder(Ordered.HIGHEST_PRECEDENCE + 1);\n              	//所有  **/favicon.ico \n				mapping.setUrlMap(Collections.singletonMap(\"**/favicon.ico\",\n						faviconRequestHandler()));\n				return mapping;\n			}\n\n			@Bean\n			public ResourceHttpRequestHandler faviconRequestHandler() {\n				ResourceHttpRequestHandler requestHandler = new ResourceHttpRequestHandler();\n				requestHandler\n						.setLocations(this.resourceProperties.getFaviconLocations());\n				return requestHandler;\n			}\n\n		}\n\n```\n\n\n\n==1）、所有 /webjars/** ，都去 classpath:/META-INF/resources/webjars/ 找资源；==\n\n​	webjars：以jar包的方式引入静态资源；\n\nhttp://www.webjars.org/\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180203181751.png)\n\nlocalhost:8080/webjars/jquery/3.3.1/jquery.js\n\n```xml\n<!--引入jquery-webjar-->在访问的时候只需要写webjars下面资源的名称即可\n		<dependency>\n			<groupId>org.webjars</groupId>\n			<artifactId>jquery</artifactId>\n			<version>3.3.1</version>\n		</dependency>\n```\n\n\n\n==2）、\"/**\" 访问当前项目的任何资源，都去（静态资源的文件夹）找映射==\n\n```\n\"classpath:/META-INF/resources/\", \n\"classpath:/resources/\",\n\"classpath:/static/\", \n\"classpath:/public/\" \n\"/\"：当前项目的根路径\n```\n\nlocalhost:8080/abc ===  去静态资源文件夹里面找abc\n\n==3）、欢迎页； 静态资源文件夹下的所有index.html页面；被\"/**\"映射；==\n\n​	localhost:8080/   找index页面\n\n==4）、所有的 **/favicon.ico  都是在静态资源文件下找；==\n\n\n\n## 3、模板引擎\n\nJSP、Velocity、Freemarker、Thymeleaf\n\n![](https://www.lcools.cn/static/springboot/images/template-engine.png)\n\n\n\nSpringBoot推荐的Thymeleaf；\n\n语法更简单，功能更强大；\n\n\n\n### 1、引入thymeleaf；\n\n```xml\n		<dependency>\n			<groupId>org.springframework.boot</groupId>\n			<artifactId>spring-boot-starter-thymeleaf</artifactId>\n          	2.1.6\n		</dependency>\n切换thymeleaf版本\n<properties>\n		<thymeleaf.version>3.0.9.RELEASE</thymeleaf.version>\n		<!-- 布局功能的支持程序  thymeleaf3主程序  layout2以上版本 -->\n		<!-- thymeleaf2   layout1-->\n		<thymeleaf-layout-dialect.version>2.2.2</thymeleaf-layout-dialect.version>\n  </properties>\n```\n\n\n\n### 2、Thymeleaf使用\n\n```java\n@ConfigurationProperties(prefix = \"spring.thymeleaf\")\npublic class ThymeleafProperties {\n\n	private static final Charset DEFAULT_ENCODING = Charset.forName(\"UTF-8\");\n\n	private static final MimeType DEFAULT_CONTENT_TYPE = MimeType.valueOf(\"text/html\");\n\n	public static final String DEFAULT_PREFIX = \"classpath:/templates/\";\n\n	public static final String DEFAULT_SUFFIX = \".html\";\n  	//\n```\n\n只要我们把HTML页面放在classpath:/templates/，thymeleaf就能自动渲染；\n\n使用：\n\n1、导入thymeleaf的名称空间\n\n```xml\n<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n```\n\n2、使用thymeleaf语法；\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n    <h1>成功！</h1>\n    <!--th:text 将div里面的文本内容设置为 -->\n    <div th:text=\"${hello}\">这是显示欢迎信息</div>\n</body>\n</html>\n```\n\n### 3、语法规则\n\n1）、th:text；改变当前元素里面的文本内容；\n\n​	th：任意html属性；来替换原生属性的值\n\n![](https://www.lcools.cn/static/springboot/images/2018-02-04_123955.png)\n\n\n\n2）、表达式？\n\n```properties\nSimple expressions:（表达式语法）\n    Variable Expressions: ${...}：获取变量值；OGNL；\n    		1）、获取对象的属性、调用方法\n    		2）、使用内置的基本对象：\n    			#ctx : the context object.\n    			#vars: the context variables.\n                #locale : the context locale.\n                #request : (only in Web Contexts) the HttpServletRequest object.\n                #response : (only in Web Contexts) the HttpServletResponse object.\n                #session : (only in Web Contexts) the HttpSession object.\n                #servletContext : (only in Web Contexts) the ServletContext object.\n                \n                ${session.foo}\n            3）、内置的一些工具对象：\n#execInfo : information about the template being processed.\n#messages : methods for obtaining externalized messages inside variables expressions, in the same way as they would be obtained using #{…} syntax.\n#uris : methods for escaping parts of URLs/URIs\n#conversions : methods for executing the configured conversion service (if any).\n#dates : methods for java.util.Date objects: formatting, component extraction, etc.\n#calendars : analogous to #dates , but for java.util.Calendar objects.\n#numbers : methods for formatting numeric objects.\n#strings : methods for String objects: contains, startsWith, prepending/appending, etc.\n#objects : methods for objects in general.\n#bools : methods for boolean evaluation.\n#arrays : methods for arrays.\n#lists : methods for lists.\n#sets : methods for sets.\n#maps : methods for maps.\n#aggregates : methods for creating aggregates on arrays or collections.\n#ids : methods for dealing with id attributes that might be repeated (for example, as a result of an iteration).\n\n    Selection Variable Expressions: *{...}：选择表达式：和${}在功能上是一样；\n    	补充：配合 th:object=\"${session.user}：\n   <div th:object=\"${session.user}\">\n    <p>Name: <span th:text=\"*{firstName}\">Sebastian</span>.</p>\n    <p>Surname: <span th:text=\"*{lastName}\">Pepper</span>.</p>\n    <p>Nationality: <span th:text=\"*{nationality}\">Saturn</span>.</p>\n    </div>\n    \n    Message Expressions: #{...}：获取国际化内容\n    Link URL Expressions: @{...}：定义URL；\n    		@{/order/process(execId=${execId},execType=\'FAST\')}\n    Fragment Expressions: ~{...}：片段引用表达式\n    		<div th:insert=\"~{commons :: main}\">...</div>\n    		\nLiterals（字面量）\n      Text literals: \'one text\' , \'Another one!\' ,…\n      Number literals: 0 , 34 , 3.0 , 12.3 ,…\n      Boolean literals: true , false\n      Null literal: null\n      Literal tokens: one , sometext , main ,…\nText operations:（文本操作）\n    String concatenation: +\n    Literal substitutions: |The name is ${name}|\nArithmetic operations:（数学运算）\n    Binary operators: + , - , * , / , %\n    Minus sign (unary operator): -\nBoolean operations:（布尔运算）\n    Binary operators: and , or\n    Boolean negation (unary operator): ! , not\nComparisons and equality:（比较运算）\n    Comparators: > , < , >= , <= ( gt , lt , ge , le )\n    Equality operators: == , != ( eq , ne )\nConditional operators:条件运算（三元运算符）\n    If-then: (if) ? (then)\n    If-then-else: (if) ? (then) : (else)\n    Default: (value) ?: (defaultvalue)\nSpecial tokens:\n    No-Operation: _ \n```\n\n## 4、SpringMVC自动配置\n\nhttps://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#boot-features-developing-web-applications\n\n### 1. Spring MVC auto-configuration\n\nSpring Boot 自动配置好了SpringMVC\n\n以下是SpringBoot对SpringMVC的默认配置:**==（WebMvcAutoConfiguration）==**\n\n- Inclusion of `ContentNegotiatingViewResolver` and `BeanNameViewResolver` beans.\n  - 自动配置了ViewResolver（视图解析器：根据方法的返回值得到视图对象（View），视图对象决定如何渲染（转发？重定向？））\n  - ContentNegotiatingViewResolver：组合所有的视图解析器的；\n  - ==如何定制：我们可以自己给容器中添加一个视图解析器；自动的将其组合进来；==\n\n- Support for serving static resources, including support for WebJars (see below).静态资源文件夹路径,webjars\n\n- Static `index.html` support. 静态首页访问\n\n- Custom `Favicon` support (see below).  favicon.ico\n\n  ​\n\n- 自动注册了 of `Converter`, `GenericConverter`, `Formatter` beans.\n\n  - Converter：转换器；  public String hello(User user)：类型转换使用Converter\n  - `Formatter`  格式化器；  2017.12.17===Date；\n\n```java\n		@Bean\n		@ConditionalOnProperty(prefix = \"spring.mvc\", name = \"date-format\")//在文件中配置日期格式化的规则\n		public Formatter<Date> dateFormatter() {\n			return new DateFormatter(this.mvcProperties.getDateFormat());//日期格式化组件\n		}\n```\n\n​	==自己添加的格式化器转换器，我们只需要放在容器中即可==\n\n- Support for `HttpMessageConverters` (see below).\n\n  - HttpMessageConverter：SpringMVC用来转换Http请求和响应的；User---Json；\n\n  - `HttpMessageConverters` 是从容器中确定；获取所有的HttpMessageConverter；\n\n    ==自己给容器中添加HttpMessageConverter，只需要将自己的组件注册容器中（@Bean,@Component）==\n\n    ​\n\n- Automatic registration of `MessageCodesResolver` (see below).定义错误代码生成规则\n\n- Automatic use of a `ConfigurableWebBindingInitializer` bean (see below).\n\n  ==我们可以配置一个ConfigurableWebBindingInitializer来替换默认的；（添加到容器）==\n\n  ```\n  初始化WebDataBinder；\n  请求数据=====JavaBean；\n  ```\n\n**org.springframework.boot.autoconfigure.web：web的所有自动场景；**\n\nIf you want to keep Spring Boot MVC features, and you just want to add additional [MVC configuration](https://docs.spring.io/spring/docs/4.3.14.RELEASE/spring-framework-reference/htmlsingle#mvc) (interceptors, formatters, view controllers etc.) you can add your own `@Configuration` class of type `WebMvcConfigurerAdapter`, but **without** `@EnableWebMvc`. If you wish to provide custom instances of `RequestMappingHandlerMapping`, `RequestMappingHandlerAdapter` or `ExceptionHandlerExceptionResolver` you can declare a `WebMvcRegistrationsAdapter` instance providing such components.\n\nIf you want to take complete control of Spring MVC, you can add your own `@Configuration` annotated with `@EnableWebMvc`.\n\n### 2、扩展SpringMVC\n\n```xml\n    <mvc:view-controller path=\"/hello\" view-name=\"success\"/>\n    <mvc:interceptors>\n        <mvc:interceptor>\n            <mvc:mapping path=\"/hello\"/>\n            <bean></bean>\n        </mvc:interceptor>\n    </mvc:interceptors>\n```\n\n**==编写一个配置类（@Configuration），是WebMvcConfigurerAdapter类型；不能标注@EnableWebMvc==**;\n\n既保留了所有的自动配置，也能用我们扩展的配置；\n\n```java\n//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能\n@Configuration\npublic class MyMvcConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n       // super.addViewControllers(registry);\n        //浏览器发送 /atguigu 请求来到 success\n        registry.addViewController(\"/atguigu\").setViewName(\"success\");\n    }\n}\n```\n\n原理：\n\n​	1）、WebMvcAutoConfiguration是SpringMVC的自动配置类\n\n​	2）、在做其他自动配置时会导入；@Import(**EnableWebMvcConfiguration**.class)\n\n```java\n    @Configuration\n	public static class EnableWebMvcConfiguration extends DelegatingWebMvcConfiguration {\n      private final WebMvcConfigurerComposite configurers = new WebMvcConfigurerComposite();\n\n	 //从容器中获取所有的WebMvcConfigurer\n      @Autowired(required = false)\n      public void setConfigurers(List<WebMvcConfigurer> configurers) {\n          if (!CollectionUtils.isEmpty(configurers)) {\n              this.configurers.addWebMvcConfigurers(configurers);\n            	//一个参考实现；将所有的WebMvcConfigurer相关配置都来一起调用；  \n            	@Override\n             // public void addViewControllers(ViewControllerRegistry registry) {\n              //    for (WebMvcConfigurer delegate : this.delegates) {\n               //       delegate.addViewControllers(registry);\n               //   }\n              }\n          }\n	}\n```\n\n​	3）、容器中所有的WebMvcConfigurer都会一起起作用；\n\n​	4）、我们的配置类也会被调用；\n\n​	效果：SpringMVC的自动配置和我们的扩展配置都会起作用；\n\n### 3、全面接管SpringMVC；\n\nSpringBoot对SpringMVC的自动配置不需要了，所有都是我们自己配置；所有的SpringMVC的自动配置都失效了\n\n**我们需要在配置类中添加@EnableWebMvc即可；**\n\n```java\n//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能\n@EnableWebMvc\n@Configuration\npublic class MyMvcConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n       // super.addViewControllers(registry);\n        //浏览器发送 /atguigu 请求来到 success\n        registry.addViewController(\"/atguigu\").setViewName(\"success\");\n    }\n}\n```\n\n原理：\n\n为什么@EnableWebMvc自动配置就失效了；\n\n1）@EnableWebMvc的核心\n\n```java\n@Import(DelegatingWebMvcConfiguration.class)\npublic @interface EnableWebMvc {\n```\n\n2）、\n\n```java\n@Configuration\npublic class DelegatingWebMvcConfiguration extends WebMvcConfigurationSupport {\n```\n\n3）、\n\n```java\n@Configuration\n@ConditionalOnWebApplication\n@ConditionalOnClass({ Servlet.class, DispatcherServlet.class,\n		WebMvcConfigurerAdapter.class })\n//容器中没有这个组件的时候，这个自动配置类才生效\n@ConditionalOnMissingBean(WebMvcConfigurationSupport.class)\n@AutoConfigureOrder(Ordered.HIGHEST_PRECEDENCE + 10)\n@AutoConfigureAfter({ DispatcherServletAutoConfiguration.class,\n		ValidationAutoConfiguration.class })\npublic class WebMvcAutoConfiguration {\n```\n\n4）、@EnableWebMvc将WebMvcConfigurationSupport组件导入进来；\n\n5）、导入的WebMvcConfigurationSupport只是SpringMVC最基本的功能；\n\n\n\n## 5、如何修改SpringBoot的默认配置\n\n模式：\n\n​	1）、SpringBoot在自动配置很多组件的时候，先看容器中有没有用户自己配置的（@Bean、@Component）如果有就用用户配置的，如果没有，才自动配置；如果有些组件可以有多个（ViewResolver）将用户配置的和自己默认的组合起来；\n\n​	2）、在SpringBoot中会有非常多的xxxConfigurer帮助我们进行扩展配置\n\n​	3）、在SpringBoot中会有很多的xxxCustomizer帮助我们进行定制配置\n\n## 6、RestfulCRUD\n\n### 1）、默认访问首页\n\n```java\n\n//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能\n//@EnableWebMvc   不要接管SpringMVC\n@Configuration\npublic class MyMvcConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n       // super.addViewControllers(registry);\n        //浏览器发送 /atguigu 请求来到 success\n        registry.addViewController(\"/atguigu\").setViewName(\"success\");\n    }\n\n    //所有的WebMvcConfigurerAdapter组件都会一起起作用\n    @Bean //将组件注册在容器\n    public WebMvcConfigurerAdapter webMvcConfigurerAdapter(){\n        WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter() {\n            @Override\n            public void addViewControllers(ViewControllerRegistry registry) {\n                registry.addViewController(\"/\").setViewName(\"login\");\n                registry.addViewController(\"/index.html\").setViewName(\"login\");\n            }\n        };\n        return adapter;\n    }\n}\n\n```\n\n### 2）、国际化\n\n**1）、编写国际化配置文件；**\n\n2）、使用ResourceBundleMessageSource管理国际化资源文件\n\n3）、在页面使用fmt:message取出国际化内容\n\n\n\n步骤：\n\n1）、编写国际化配置文件，抽取页面需要显示的国际化消息\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180211130721.png)\n\n\n\n2）、SpringBoot自动配置好了管理国际化资源文件的组件；\n\n```java\n@ConfigurationProperties(prefix = \"spring.messages\")\npublic class MessageSourceAutoConfiguration {\n    \n    /**\n	 * Comma-separated list of basenames (essentially a fully-qualified classpath\n	 * location), each following the ResourceBundle convention with relaxed support for\n	 * slash based locations. If it doesn\'t contain a package qualifier (such as\n	 * \"org.mypackage\"), it will be resolved from the classpath root.\n	 */\n	private String basename = \"messages\";  \n    //我们的配置文件可以直接放在类路径下叫messages.properties；\n    \n    @Bean\n	public MessageSource messageSource() {\n		ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource();\n		if (StringUtils.hasText(this.basename)) {\n            //设置国际化资源文件的基础名（去掉语言国家代码的）\n			messageSource.setBasenames(StringUtils.commaDelimitedListToStringArray(\n					StringUtils.trimAllWhitespace(this.basename)));\n		}\n		if (this.encoding != null) {\n			messageSource.setDefaultEncoding(this.encoding.name());\n		}\n		messageSource.setFallbackToSystemLocale(this.fallbackToSystemLocale);\n		messageSource.setCacheSeconds(this.cacheSeconds);\n		messageSource.setAlwaysUseMessageFormat(this.alwaysUseMessageFormat);\n		return messageSource;\n	}\n```\n\n\n\n3）、去页面获取国际化的值；\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180211134506.png)\n\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\"  xmlns:th=\"http://www.thymeleaf.org\">\n	<head>\n		<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n		<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n		<meta name=\"description\" content=\"\">\n		<meta name=\"author\" content=\"\">\n		<title>Signin Template for Bootstrap</title>\n		<!-- Bootstrap core CSS -->\n		<link href=\"asserts/css/bootstrap.min.css\" th:href=\"@{/webjars/bootstrap/4.0.0/css/bootstrap.css}\" rel=\"stylesheet\">\n		<!-- Custom styles for this template -->\n		<link href=\"asserts/css/signin.css\" th:href=\"@{/asserts/css/signin.css}\" rel=\"stylesheet\">\n	</head>\n\n	<body class=\"text-center\">\n		<form class=\"form-signin\" action=\"dashboard.html\">\n			<img class=\"mb-4\" th:src=\"@{/asserts/img/bootstrap-solid.svg}\" src=\"asserts/img/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">\n			<h1 class=\"h3 mb-3 font-weight-normal\" th:text=\"#{login.tip}\">Please sign in</h1>\n			<label class=\"sr-only\" th:text=\"#{login.username}\">Username</label>\n			<input type=\"text\" class=\"form-control\" placeholder=\"Username\" th:placeholder=\"#{login.username}\" required=\"\" autofocus=\"\">\n			<label class=\"sr-only\" th:text=\"#{login.password}\">Password</label>\n			<input type=\"password\" class=\"form-control\" placeholder=\"Password\" th:placeholder=\"#{login.password}\" required=\"\">\n			<div class=\"checkbox mb-3\">\n				<label>\n          		<input type=\"checkbox\" value=\"remember-me\"/> [[#{login.remember}]]\n        </label>\n			</div>\n			<button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" th:text=\"#{login.btn}\">Sign in</button>\n			<p class=\"mt-5 mb-3 text-muted\">© 2017-2018</p>\n			<a class=\"btn btn-sm\">中文</a>\n			<a class=\"btn btn-sm\">English</a>\n		</form>\n\n	</body>\n\n</html>\n```\n\n效果：根据浏览器语言设置的信息切换了国际化；\n\n\n\n原理：\n\n​	国际化Locale（区域信息对象）；LocaleResolver（获取区域信息对象）；\n\n```java\n		@Bean\n		@ConditionalOnMissingBean\n		@ConditionalOnProperty(prefix = \"spring.mvc\", name = \"locale\")\n		public LocaleResolver localeResolver() {\n			if (this.mvcProperties\n					.getLocaleResolver() == WebMvcProperties.LocaleResolver.FIXED) {\n				return new FixedLocaleResolver(this.mvcProperties.getLocale());\n			}\n			AcceptHeaderLocaleResolver localeResolver = new AcceptHeaderLocaleResolver();\n			localeResolver.setDefaultLocale(this.mvcProperties.getLocale());\n			return localeResolver;\n		}\n默认的就是根据请求头带来的区域信息获取Locale进行国际化\n```\n\n4）、点击链接切换国际化\n\n```java\n/**\n * 可以在连接上携带区域信息\n */\npublic class MyLocaleResolver implements LocaleResolver {\n    \n    @Override\n    public Locale resolveLocale(HttpServletRequest request) {\n        String l = request.getParameter(\"l\");\n        Locale locale = Locale.getDefault();\n        if(!StringUtils.isEmpty(l)){\n            String[] split = l.split(\"_\");\n            locale = new Locale(split[0],split[1]);\n        }\n        return locale;\n    }\n\n    @Override\n    public void setLocale(HttpServletRequest request, HttpServletResponse response, Locale locale) {\n\n    }\n}\n\n\n @Bean\n    public LocaleResolver localeResolver(){\n        return new MyLocaleResolver();\n    }\n}\n\n\n```\n\n### 3）、登陆\n\n开发期间模板引擎页面修改以后，要实时生效\n\n1）、禁用模板引擎的缓存\n\n```\n# 禁用缓存\nspring.thymeleaf.cache=false \n```\n\n2）、页面修改完成以后ctrl+f9：重新编译；\n\n\n\n登陆错误消息的显示\n\n```html\n<p style=\"color: red\" th:text=\"${msg}\" th:if=\"${not #strings.isEmpty(msg)}\"></p>\n```\n\n\n\n### 4）、拦截器进行登陆检查\n\n拦截器\n\n```java\n\n/**\n * 登陆检查，\n */\npublic class LoginHandlerInterceptor implements HandlerInterceptor {\n    //目标方法执行之前\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        Object user = request.getSession().getAttribute(\"loginUser\");\n        if(user == null){\n            //未登陆，返回登陆页面\n            request.setAttribute(\"msg\",\"没有权限请先登陆\");\n            request.getRequestDispatcher(\"/index.html\").forward(request,response);\n            return false;\n        }else{\n            //已登陆，放行请求\n            return true;\n        }\n\n    }\n\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n\n    }\n}\n\n```\n\n\n\n注册拦截器\n\n```java\n  //所有的WebMvcConfigurerAdapter组件都会一起起作用\n    @Bean //将组件注册在容器\n    public WebMvcConfigurerAdapter webMvcConfigurerAdapter(){\n        WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter() {\n            @Override\n            public void addViewControllers(ViewControllerRegistry registry) {\n                registry.addViewController(\"/\").setViewName(\"login\");\n                registry.addViewController(\"/index.html\").setViewName(\"login\");\n                registry.addViewController(\"/main.html\").setViewName(\"dashboard\");\n            }\n\n            //注册拦截器\n            @Override\n            public void addInterceptors(InterceptorRegistry registry) {\n                //super.addInterceptors(registry);\n                //静态资源；  *.css , *.js\n                //SpringBoot已经做好了静态资源映射\n                registry.addInterceptor(new LoginHandlerInterceptor()).addPathPatterns(\"/**\")\n                        .excludePathPatterns(\"/index.html\",\"/\",\"/user/login\");\n            }\n        };\n        return adapter;\n    }\n```\n\n### 5）、CRUD-员工列表\n\n实验要求：\n\n1）、RestfulCRUD：CRUD满足Rest风格；\n\nURI：  /资源名称/资源标识       HTTP请求方式区分对资源CRUD操作\n\n|      | 普通CRUD（uri来区分操作） | RestfulCRUD       |\n| ---- | ------------------------- | ----------------- |\n| 查询 | getEmp                    | emp---GET         |\n| 添加 | addEmp?xxx                | emp---POST        |\n| 修改 | updateEmp?id=xxx&xxx=xx   | emp/{id}---PUT    |\n| 删除 | deleteEmp?id=1            | emp/{id}---DELETE |\n\n2）、实验的请求架构;\n\n| 实验功能                             | 请求URI | 请求方式 |\n| ------------------------------------ | ------- | -------- |\n| 查询所有员工                         | emps    | GET      |\n| 查询某个员工(来到修改页面)           | emp/1   | GET      |\n| 来到添加页面                         | emp     | GET      |\n| 添加员工                             | emp     | POST     |\n| 来到修改页面（查出员工进行信息回显） | emp/1   | GET      |\n| 修改员工                             | emp     | PUT      |\n| 删除员工                             | emp/1   | DELETE   |\n\n3）、员工列表：\n\n#### thymeleaf公共页面元素抽取\n\n```html\n1、抽取公共片段\n<div th:fragment=\"copy\">\n&copy; 2011 The Good Thymes Virtual Grocery\n</div>\n\n2、引入公共片段\n<div th:insert=\"~{footer :: copy}\"></div>\n~{templatename::selector}：模板名::选择器\n~{templatename::fragmentname}:模板名::片段名\n\n3、默认效果：\ninsert的公共片段在div标签中\n如果使用th:insert等属性进行引入，可以不用写~{}：\n行内写法可以加上：[[~{}]];[(~{})]；\n```\n\n\n\n三种引入公共片段的th属性：\n\n**th:insert**：将公共片段整个插入到声明引入的元素中\n\n**th:replace**：将声明引入的元素替换为公共片段\n\n**th:include**：将被引入的片段的内容包含进这个标签中\n\n\n\n```html\n<footer th:fragment=\"copy\">\n&copy; 2011 The Good Thymes Virtual Grocery\n</footer>\n\n引入方式\n<div th:insert=\"footer :: copy\"></div>\n<div th:replace=\"footer :: copy\"></div>\n<div th:include=\"footer :: copy\"></div>\n\n效果\n<div>\n    <footer>\n    &copy; 2011 The Good Thymes Virtual Grocery\n    </footer>\n</div>\n\n<footer>\n&copy; 2011 The Good Thymes Virtual Grocery\n</footer>\n\n<div>\n&copy; 2011 The Good Thymes Virtual Grocery\n</div>\n```\n\n\n\n引入片段的时候传入参数： \n\n```html\n\n<nav class=\"col-md-2 d-none d-md-block bg-light sidebar\" id=\"sidebar\">\n    <div class=\"sidebar-sticky\">\n        <ul class=\"nav flex-column\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link active\"\n                   th:class=\"${activeUri==\'main.html\'?\'nav-link active\':\'nav-link\'}\"\n                   href=\"#\" th:href=\"@{/main.html}\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-home\">\n                        <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n                        <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n                    </svg>\n                    Dashboard <span class=\"sr-only\">(current)</span>\n                </a>\n            </li>\n\n<!--引入侧边栏;传入参数-->\n<div th:replace=\"commons/bar::#sidebar(activeUri=\'emps\')\"></div>\n```\n\n### 6）、CRUD-员工添加\n\n添加页面\n\n```html\n<form>\n    <div class=\"form-group\">\n        <label>LastName</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"zhangsan\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"email\" class=\"form-control\" placeholder=\"zhangsan@atguigu.com\">\n    </div>\n    <div class=\"form-group\">\n        <label>Gender</label><br/>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"radio\" name=\"gender\"  value=\"1\">\n            <label class=\"form-check-label\">男</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"radio\" name=\"gender\"  value=\"0\">\n            <label class=\"form-check-label\">女</label>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label>department</label>\n        <select class=\"form-control\">\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n        </select>\n    </div>\n    <div class=\"form-group\">\n        <label>Birth</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"zhangsan\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">添加</button>\n</form>\n```\n\n提交的数据格式不对：生日：日期；\n\n2017-12-12；2017/12/12；2017.12.12；\n\n日期的格式化；SpringMVC将页面提交的值需要转换为指定的类型;\n\n2017-12-12---Date； 类型转换，格式化;\n\n默认日期是按照/的方式；\n\n### 7）、CRUD-员工修改\n\n修改添加二合一表单\n\n```html\n<!--需要区分是员工修改还是添加；-->\n<form th:action=\"@{/emp}\" method=\"post\">\n    <!--发送put请求修改员工数据-->\n    <!--\n1、SpringMVC中配置HiddenHttpMethodFilter;（SpringBoot自动配置好的）\n2、页面创建一个post表单\n3、创建一个input项，name=\"_method\";值就是我们指定的请求方式\n-->\n    <input type=\"hidden\" name=\"_method\" value=\"put\" th:if=\"${emp!=null}\"/>\n    <input type=\"hidden\" name=\"id\" th:if=\"${emp!=null}\" th:value=\"${emp.id}\">\n    <div class=\"form-group\">\n        <label>LastName</label>\n        <input name=\"lastName\" type=\"text\" class=\"form-control\" placeholder=\"zhangsan\" th:value=\"${emp!=null}?${emp.lastName}\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input name=\"email\" type=\"email\" class=\"form-control\" placeholder=\"zhangsan@atguigu.com\" th:value=\"${emp!=null}?${emp.email}\">\n    </div>\n    <div class=\"form-group\">\n        <label>Gender</label><br/>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"1\" th:checked=\"${emp!=null}?${emp.gender==1}\">\n            <label class=\"form-check-label\">男</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"0\" th:checked=\"${emp!=null}?${emp.gender==0}\">\n            <label class=\"form-check-label\">女</label>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label>department</label>\n        <!--提交的是部门的id-->\n        <select class=\"form-control\" name=\"department.id\">\n            <option th:selected=\"${emp!=null}?${dept.id == emp.department.id}\" th:value=\"${dept.id}\" th:each=\"dept:${depts}\" th:text=\"${dept.departmentName}\">1</option>\n        </select>\n    </div>\n    <div class=\"form-group\">\n        <label>Birth</label>\n        <input name=\"birth\" type=\"text\" class=\"form-control\" placeholder=\"zhangsan\" th:value=\"${emp!=null}?${#dates.format(emp.birth, \'yyyy-MM-dd HH:mm\')}\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" th:text=\"${emp!=null}?\'修改\':\'添加\'\">添加</button>\n</form>\n```\n\n### 8）、CRUD-员工删除\n\n```html\n<tr th:each=\"emp:${emps}\">\n    <td th:text=\"${emp.id}\"></td>\n    <td>[[${emp.lastName}]]</td>\n    <td th:text=\"${emp.email}\"></td>\n    <td th:text=\"${emp.gender}==0?\'女\':\'男\'\"></td>\n    <td th:text=\"${emp.department.departmentName}\"></td>\n    <td th:text=\"${#dates.format(emp.birth, \'yyyy-MM-dd HH:mm\')}\"></td>\n    <td>\n        <a class=\"btn btn-sm btn-primary\" th:href=\"@{/emp/}+${emp.id}\">编辑</a>\n        <button th:attr=\"del_uri=@{/emp/}+${emp.id}\" class=\"btn btn-sm btn-danger deleteBtn\">删除</button>\n    </td>\n</tr>\n\n\n<script>\n    $(\".deleteBtn\").click(function(){\n        //删除当前员工的\n        $(\"#deleteEmpForm\").attr(\"action\",$(this).attr(\"del_uri\")).submit();\n        return false;\n    });\n</script>\n```\n\n\n\n## 7、错误处理机制\n\n### 1）、SpringBoot默认的错误处理机制\n\n默认效果：\n\n​		1）、浏览器，返回一个默认的错误页面\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180226173408.png)\n\n  浏览器发送请求的请求头：\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180226180347.png)\n\n​		2）、如果是其他客户端，默认响应一个json数据\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180226173527.png)\n\n​		![](https://www.lcools.cn/static/springboot/images/搜狗截图20180226180504.png)\n\n原理：\n\n​	可以参照ErrorMvcAutoConfiguration；错误处理的自动配置；\n\n  	给容器中添加了以下组件\n\n​	1、DefaultErrorAttributes：\n\n```java\n帮我们在页面共享信息；\n@Override\n	public Map<String, Object> getErrorAttributes(RequestAttributes requestAttributes,\n			boolean includeStackTrace) {\n		Map<String, Object> errorAttributes = new LinkedHashMap<String, Object>();\n		errorAttributes.put(\"timestamp\", new Date());\n		addStatus(errorAttributes, requestAttributes);\n		addErrorDetails(errorAttributes, requestAttributes, includeStackTrace);\n		addPath(errorAttributes, requestAttributes);\n		return errorAttributes;\n	}\n```\n\n\n\n​	2、BasicErrorController：处理默认/error请求\n\n```java\n@Controller\n@RequestMapping(\"${server.error.path:${error.path:/error}}\")\npublic class BasicErrorController extends AbstractErrorController {\n    \n    @RequestMapping(produces = \"text/html\")//产生html类型的数据；浏览器发送的请求来到这个方法处理\n	public ModelAndView errorHtml(HttpServletRequest request,\n			HttpServletResponse response) {\n		HttpStatus status = getStatus(request);\n		Map<String, Object> model = Collections.unmodifiableMap(getErrorAttributes(\n				request, isIncludeStackTrace(request, MediaType.TEXT_HTML)));\n		response.setStatus(status.value());\n        \n        //去哪个页面作为错误页面；包含页面地址和页面内容\n		ModelAndView modelAndView = resolveErrorView(request, response, status, model);\n		return (modelAndView == null ? new ModelAndView(\"error\", model) : modelAndView);\n	}\n\n	@RequestMapping\n	@ResponseBody    //产生json数据，其他客户端来到这个方法处理；\n	public ResponseEntity<Map<String, Object>> error(HttpServletRequest request) {\n		Map<String, Object> body = getErrorAttributes(request,\n				isIncludeStackTrace(request, MediaType.ALL));\n		HttpStatus status = getStatus(request);\n		return new ResponseEntity<Map<String, Object>>(body, status);\n	}\n```\n\n\n\n​	3、ErrorPageCustomizer：\n\n```java\n	@Value(\"${error.path:/error}\")\n	private String path = \"/error\";  系统出现错误以后来到error请求进行处理；（web.xml注册的错误页面规则）\n```\n\n\n\n​	4、DefaultErrorViewResolver：\n\n```java\n@Override\n	public ModelAndView resolveErrorView(HttpServletRequest request, HttpStatus status,\n			Map<String, Object> model) {\n		ModelAndView modelAndView = resolve(String.valueOf(status), model);\n		if (modelAndView == null && SERIES_VIEWS.containsKey(status.series())) {\n			modelAndView = resolve(SERIES_VIEWS.get(status.series()), model);\n		}\n		return modelAndView;\n	}\n\n	private ModelAndView resolve(String viewName, Map<String, Object> model) {\n        //默认SpringBoot可以去找到一个页面？  error/404\n		String errorViewName = \"error/\" + viewName;\n        \n        //模板引擎可以解析这个页面地址就用模板引擎解析\n		TemplateAvailabilityProvider provider = this.templateAvailabilityProviders\n				.getProvider(errorViewName, this.applicationContext);\n		if (provider != null) {\n            //模板引擎可用的情况下返回到errorViewName指定的视图地址\n			return new ModelAndView(errorViewName, model);\n		}\n        //模板引擎不可用，就在静态资源文件夹下找errorViewName对应的页面   error/404.html\n		return resolveResource(errorViewName, model);\n	}\n```\n\n\n\n​	步骤：\n\n​		一但系统出现4xx或者5xx之类的错误；ErrorPageCustomizer就会生效（定制错误的响应规则）；就会来到/error请求；就会被**BasicErrorController**处理；\n\n​		1）响应页面；去哪个页面是由**DefaultErrorViewResolver**解析得到的；\n\n```java\nprotected ModelAndView resolveErrorView(HttpServletRequest request,\n      HttpServletResponse response, HttpStatus status, Map<String, Object> model) {\n    //所有的ErrorViewResolver得到ModelAndView\n   for (ErrorViewResolver resolver : this.errorViewResolvers) {\n      ModelAndView modelAndView = resolver.resolveErrorView(request, status, model);\n      if (modelAndView != null) {\n         return modelAndView;\n      }\n   }\n   return null;\n}\n```\n\n### 2）、如果定制错误响应：\n\n#### 	**1）、如何定制错误的页面；**\n\n​			**1）、有模板引擎的情况下；error/状态码;** 【将错误页面命名为  错误状态码.html 放在模板引擎文件夹里面的 error文件夹下】，发生此状态码的错误就会来到  对应的页面；\n\n​			我们可以使用4xx和5xx作为错误页面的文件名来匹配这种类型的所有错误，精确优先（优先寻找精确的状态码.html）；		\n\n​			页面能获取的信息；\n\n​				timestamp：时间戳\n\n​				status：状态码\n\n​				error：错误提示\n\n​				exception：异常对象\n\n​				message：异常消息\n\n​				errors：JSR303数据校验的错误都在这里\n\n​			2）、没有模板引擎（模板引擎找不到这个错误页面），静态资源文件夹下找；\n\n​			3）、以上都没有错误页面，就是默认来到SpringBoot默认的错误提示页面；\n\n\n\n#### 	2）、如何定制错误的json数据；\n\n​		1）、自定义异常处理&返回定制json数据；\n\n```java\n@ControllerAdvice\npublic class MyExceptionHandler {\n\n    @ResponseBody\n    @ExceptionHandler(UserNotExistException.class)\n    public Map<String,Object> handleException(Exception e){\n        Map<String,Object> map = new HashMap<>();\n        map.put(\"code\",\"user.notexist\");\n        map.put(\"message\",e.getMessage());\n        return map;\n    }\n}\n//没有自适应效果...\n```\n\n\n\n​		2）、转发到/error进行自适应响应效果处理\n\n```java\n @ExceptionHandler(UserNotExistException.class)\n    public String handleException(Exception e, HttpServletRequest request){\n        Map<String,Object> map = new HashMap<>();\n        //传入我们自己的错误状态码  4xx 5xx，否则就不会进入定制错误页面的解析流程\n        /**\n         * Integer statusCode = (Integer) request\n         .getAttribute(\"javax.servlet.error.status_code\");\n         */\n        request.setAttribute(\"javax.servlet.error.status_code\",500);\n        map.put(\"code\",\"user.notexist\");\n        map.put(\"message\",e.getMessage());\n        //转发到/error\n        return \"forward:/error\";\n    }\n```\n\n#### 	3）、将我们的定制数据携带出去；\n\n出现错误以后，会来到/error请求，会被BasicErrorController处理，响应出去可以获取的数据是由getErrorAttributes得到的（是AbstractErrorController（ErrorController）规定的方法）；\n\n​	1、完全来编写一个ErrorController的实现类【或者是编写AbstractErrorController的子类】，放在容器中；\n\n​	2、页面上能用的数据，或者是json返回能用的数据都是通过errorAttributes.getErrorAttributes得到；\n\n​			容器中DefaultErrorAttributes.getErrorAttributes()；默认进行数据处理的；\n\n自定义ErrorAttributes\n\n```java\n//给容器中加入我们自己定义的ErrorAttributes\n@Component\npublic class MyErrorAttributes extends DefaultErrorAttributes {\n\n    @Override\n    public Map<String, Object> getErrorAttributes(RequestAttributes requestAttributes, boolean includeStackTrace) {\n        Map<String, Object> map = super.getErrorAttributes(requestAttributes, includeStackTrace);\n        map.put(\"company\",\"atguigu\");\n        return map;\n    }\n}\n```\n\n最终的效果：响应是自适应的，可以通过定制ErrorAttributes改变需要返回的内容，\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180228135513.png)\n\n\n\n## 8、配置嵌入式Servlet容器\n\nSpringBoot默认使用Tomcat作为嵌入式的Servlet容器；\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180301142915.png)\n\n\n\n问题？\n\n### 1）、如何定制和修改Servlet容器的相关配置；\n\n1、修改和server有关的配置（ServerProperties【也是EmbeddedServletContainerCustomizer】）；\n\n```properties\nserver.port=8081\nserver.context-path=/crud\n\nserver.tomcat.uri-encoding=UTF-8\n\n//通用的Servlet容器设置\nserver.xxx\n//Tomcat的设置\nserver.tomcat.xxx\n```\n\n2、编写一个**EmbeddedServletContainerCustomizer**：嵌入式的Servlet容器的定制器；来修改Servlet容器的配置\n\n```java\n@Bean  //一定要将这个定制器加入到容器中\npublic EmbeddedServletContainerCustomizer embeddedServletContainerCustomizer(){\n    return new EmbeddedServletContainerCustomizer() {\n\n        //定制嵌入式的Servlet容器相关的规则\n        @Override\n        public void customize(ConfigurableEmbeddedServletContainer container) {\n            container.setPort(8083);\n        }\n    };\n}\n```\n\n### 2）、注册Servlet三大组件【Servlet、Filter、Listener】\n\n由于SpringBoot默认是以jar包的方式启动嵌入式的Servlet容器来启动SpringBoot的web应用，没有web.xml文件。\n\n注册三大组件用以下方式\n\nServletRegistrationBean\n\n```java\n//注册三大组件\n@Bean\npublic ServletRegistrationBean myServlet(){\n    ServletRegistrationBean registrationBean = new ServletRegistrationBean(new MyServlet(),\"/myServlet\");\n    return registrationBean;\n}\n\n```\n\nFilterRegistrationBean\n\n```java\n@Bean\npublic FilterRegistrationBean myFilter(){\n    FilterRegistrationBean registrationBean = new FilterRegistrationBean();\n    registrationBean.setFilter(new MyFilter());\n    registrationBean.setUrlPatterns(Arrays.asList(\"/hello\",\"/myServlet\"));\n    return registrationBean;\n}\n```\n\nServletListenerRegistrationBean\n\n```java\n@Bean\npublic ServletListenerRegistrationBean myListener(){\n    ServletListenerRegistrationBean<MyListener> registrationBean = new ServletListenerRegistrationBean<>(new MyListener());\n    return registrationBean;\n}\n```\n\n\n\nSpringBoot帮我们自动SpringMVC的时候，自动的注册SpringMVC的前端控制器；DIspatcherServlet；\n\nDispatcherServletAutoConfiguration中：\n\n```java\n@Bean(name = DEFAULT_DISPATCHER_SERVLET_REGISTRATION_BEAN_NAME)\n@ConditionalOnBean(value = DispatcherServlet.class, name = DEFAULT_DISPATCHER_SERVLET_BEAN_NAME)\npublic ServletRegistrationBean dispatcherServletRegistration(\n      DispatcherServlet dispatcherServlet) {\n   ServletRegistrationBean registration = new ServletRegistrationBean(\n         dispatcherServlet, this.serverProperties.getServletMapping());\n    //默认拦截： /  所有请求；包静态资源，但是不拦截jsp请求；   /*会拦截jsp\n    //可以通过server.servletPath来修改SpringMVC前端控制器默认拦截的请求路径\n    \n   registration.setName(DEFAULT_DISPATCHER_SERVLET_BEAN_NAME);\n   registration.setLoadOnStartup(\n         this.webMvcProperties.getServlet().getLoadOnStartup());\n   if (this.multipartConfig != null) {\n      registration.setMultipartConfig(this.multipartConfig);\n   }\n   return registration;\n}\n\n```\n\n2）、SpringBoot能不能支持其他的Servlet容器；\n\n### 3）、替换为其他嵌入式Servlet容器\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180302114401.png)\n\n默认支持：\n\nTomcat（默认使用）\n\n```xml\n<dependency>\n   <groupId>org.springframework.boot</groupId>\n   <artifactId>spring-boot-starter-web</artifactId>\n   引入web模块默认就是使用嵌入式的Tomcat作为Servlet容器；\n</dependency>\n```\n\nJetty\n\n```xml\n<!-- 引入web模块 -->\n<dependency>\n   <groupId>org.springframework.boot</groupId>\n   <artifactId>spring-boot-starter-web</artifactId>\n   <exclusions>\n      <exclusion>\n         <artifactId>spring-boot-starter-tomcat</artifactId>\n         <groupId>org.springframework.boot</groupId>\n      </exclusion>\n   </exclusions>\n</dependency>\n\n<!--引入其他的Servlet容器-->\n<dependency>\n   <artifactId>spring-boot-starter-jetty</artifactId>\n   <groupId>org.springframework.boot</groupId>\n</dependency>\n```\n\nUndertow\n\n```xml\n<!-- 引入web模块 -->\n<dependency>\n   <groupId>org.springframework.boot</groupId>\n   <artifactId>spring-boot-starter-web</artifactId>\n   <exclusions>\n      <exclusion>\n         <artifactId>spring-boot-starter-tomcat</artifactId>\n         <groupId>org.springframework.boot</groupId>\n      </exclusion>\n   </exclusions>\n</dependency>\n\n<!--引入其他的Servlet容器-->\n<dependency>\n   <artifactId>spring-boot-starter-undertow</artifactId>\n   <groupId>org.springframework.boot</groupId>\n</dependency>\n```\n\n### 4）、嵌入式Servlet容器自动配置原理；\n\n\n\nEmbeddedServletContainerAutoConfiguration：嵌入式的Servlet容器自动配置？\n\n```java\n@AutoConfigureOrder(Ordered.HIGHEST_PRECEDENCE)\n@Configuration\n@ConditionalOnWebApplication\n@Import(BeanPostProcessorsRegistrar.class)\n//导入BeanPostProcessorsRegistrar：Spring注解版；给容器中导入一些组件\n//导入了EmbeddedServletContainerCustomizerBeanPostProcessor：\n//后置处理器：bean初始化前后（创建完对象，还没赋值赋值）执行初始化工作\npublic class EmbeddedServletContainerAutoConfiguration {\n    \n    @Configuration\n	@ConditionalOnClass({ Servlet.class, Tomcat.class })//判断当前是否引入了Tomcat依赖；\n	@ConditionalOnMissingBean(value = EmbeddedServletContainerFactory.class, search = SearchStrategy.CURRENT)//判断当前容器没有用户自己定义EmbeddedServletContainerFactory：嵌入式的Servlet容器工厂；作用：创建嵌入式的Servlet容器\n	public static class EmbeddedTomcat {\n\n		@Bean\n		public TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory() {\n			return new TomcatEmbeddedServletContainerFactory();\n		}\n\n	}\n    \n    /**\n	 * Nested configuration if Jetty is being used.\n	 */\n	@Configuration\n	@ConditionalOnClass({ Servlet.class, Server.class, Loader.class,\n			WebAppContext.class })\n	@ConditionalOnMissingBean(value = EmbeddedServletContainerFactory.class, search = SearchStrategy.CURRENT)\n	public static class EmbeddedJetty {\n\n		@Bean\n		public JettyEmbeddedServletContainerFactory jettyEmbeddedServletContainerFactory() {\n			return new JettyEmbeddedServletContainerFactory();\n		}\n\n	}\n\n	/**\n	 * Nested configuration if Undertow is being used.\n	 */\n	@Configuration\n	@ConditionalOnClass({ Servlet.class, Undertow.class, SslClientAuthMode.class })\n	@ConditionalOnMissingBean(value = EmbeddedServletContainerFactory.class, search = SearchStrategy.CURRENT)\n	public static class EmbeddedUndertow {\n\n		@Bean\n		public UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory() {\n			return new UndertowEmbeddedServletContainerFactory();\n		}\n\n	}\n```\n\n1）、EmbeddedServletContainerFactory（嵌入式Servlet容器工厂）\n\n```java\npublic interface EmbeddedServletContainerFactory {\n\n   //获取嵌入式的Servlet容器\n   EmbeddedServletContainer getEmbeddedServletContainer(\n         ServletContextInitializer... initializers);\n\n}\n```\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180302144835.png)\n\n2）、EmbeddedServletContainer：（嵌入式的Servlet容器）\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180302144910.png)\n\n\n\n3）、以**TomcatEmbeddedServletContainerFactory**为例\n\n```java\n@Override\npublic EmbeddedServletContainer getEmbeddedServletContainer(\n      ServletContextInitializer... initializers) {\n    //创建一个Tomcat\n   Tomcat tomcat = new Tomcat();\n    \n    //配置Tomcat的基本环节\n   File baseDir = (this.baseDirectory != null ? this.baseDirectory\n         : createTempDir(\"tomcat\"));\n   tomcat.setBaseDir(baseDir.getAbsolutePath());\n   Connector connector = new Connector(this.protocol);\n   tomcat.getService().addConnector(connector);\n   customizeConnector(connector);\n   tomcat.setConnector(connector);\n   tomcat.getHost().setAutoDeploy(false);\n   configureEngine(tomcat.getEngine());\n   for (Connector additionalConnector : this.additionalTomcatConnectors) {\n      tomcat.getService().addConnector(additionalConnector);\n   }\n   prepareContext(tomcat.getHost(), initializers);\n    \n    //将配置好的Tomcat传入进去，返回一个EmbeddedServletContainer；并且启动Tomcat服务器\n   return getTomcatEmbeddedServletContainer(tomcat);\n}\n```\n\n4）、我们对嵌入式容器的配置修改是怎么生效？\n\n```\nServerProperties、EmbeddedServletContainerCustomizer\n```\n\n\n\n**EmbeddedServletContainerCustomizer**：定制器帮我们修改了Servlet容器的配置？\n\n怎么修改的原理？\n\n5）、容器中导入了**EmbeddedServletContainerCustomizerBeanPostProcessor**\n\n```java\n//初始化之前\n@Override\npublic Object postProcessBeforeInitialization(Object bean, String beanName)\n      throws BeansException {\n    //如果当前初始化的是一个ConfigurableEmbeddedServletContainer类型的组件\n   if (bean instanceof ConfigurableEmbeddedServletContainer) {\n       //\n      postProcessBeforeInitialization((ConfigurableEmbeddedServletContainer) bean);\n   }\n   return bean;\n}\n\nprivate void postProcessBeforeInitialization(\n			ConfigurableEmbeddedServletContainer bean) {\n    //获取所有的定制器，调用每一个定制器的customize方法来给Servlet容器进行属性赋值；\n    for (EmbeddedServletContainerCustomizer customizer : getCustomizers()) {\n        customizer.customize(bean);\n    }\n}\n\nprivate Collection<EmbeddedServletContainerCustomizer> getCustomizers() {\n    if (this.customizers == null) {\n        // Look up does not include the parent context\n        this.customizers = new ArrayList<EmbeddedServletContainerCustomizer>(\n            this.beanFactory\n            //从容器中获取所有这葛类型的组件：EmbeddedServletContainerCustomizer\n            //定制Servlet容器，给容器中可以添加一个EmbeddedServletContainerCustomizer类型的组件\n            .getBeansOfType(EmbeddedServletContainerCustomizer.class,\n                            false, false)\n            .values());\n        Collections.sort(this.customizers, AnnotationAwareOrderComparator.INSTANCE);\n        this.customizers = Collections.unmodifiableList(this.customizers);\n    }\n    return this.customizers;\n}\n\nServerProperties也是定制器\n```\n\n步骤：\n\n1）、SpringBoot根据导入的依赖情况，给容器中添加相应的EmbeddedServletContainerFactory【TomcatEmbeddedServletContainerFactory】\n\n2）、容器中某个组件要创建对象就会惊动后置处理器；EmbeddedServletContainerCustomizerBeanPostProcessor；\n\n只要是嵌入式的Servlet容器工厂，后置处理器就工作；\n\n3）、后置处理器，从容器中获取所有的**EmbeddedServletContainerCustomizer**，调用定制器的定制方法\n\n\n\n###5）、嵌入式Servlet容器启动原理；\n\n什么时候创建嵌入式的Servlet容器工厂？什么时候获取嵌入式的Servlet容器并启动Tomcat；\n\n获取嵌入式的Servlet容器工厂：\n\n1）、SpringBoot应用启动运行run方法\n\n2）、refreshContext(context);SpringBoot刷新IOC容器【创建IOC容器对象，并初始化容器，创建容器中的每一个组件】；如果是web应用创建**AnnotationConfigEmbeddedWebApplicationContext**，否则：**AnnotationConfigApplicationContext**\n\n3）、refresh(context);**刷新刚才创建好的ioc容器；**\n\n```java\npublic void refresh() throws BeansException, IllegalStateException {\n   synchronized (this.startupShutdownMonitor) {\n      // Prepare this context for refreshing.\n      prepareRefresh();\n\n      // Tell the subclass to refresh the internal bean factory.\n      ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();\n\n      // Prepare the bean factory for use in this context.\n      prepareBeanFactory(beanFactory);\n\n      try {\n         // Allows post-processing of the bean factory in context subclasses.\n         postProcessBeanFactory(beanFactory);\n\n         // Invoke factory processors registered as beans in the context.\n         invokeBeanFactoryPostProcessors(beanFactory);\n\n         // Register bean processors that intercept bean creation.\n         registerBeanPostProcessors(beanFactory);\n\n         // Initialize message source for this context.\n         initMessageSource();\n\n         // Initialize event multicaster for this context.\n         initApplicationEventMulticaster();\n\n         // Initialize other special beans in specific context subclasses.\n         onRefresh();\n\n         // Check for listener beans and register them.\n         registerListeners();\n\n         // Instantiate all remaining (non-lazy-init) singletons.\n         finishBeanFactoryInitialization(beanFactory);\n\n         // Last step: publish corresponding event.\n         finishRefresh();\n      }\n\n      catch (BeansException ex) {\n         if (logger.isWarnEnabled()) {\n            logger.warn(\"Exception encountered during context initialization - \" +\n                  \"cancelling refresh attempt: \" + ex);\n         }\n\n         // Destroy already created singletons to avoid dangling resources.\n         destroyBeans();\n\n         // Reset \'active\' flag.\n         cancelRefresh(ex);\n\n         // Propagate exception to caller.\n         throw ex;\n      }\n\n      finally {\n         // Reset common introspection caches in Spring\'s core, since we\n         // might not ever need metadata for singleton beans anymore...\n         resetCommonCaches();\n      }\n   }\n}\n```\n\n4）、  onRefresh(); web的ioc容器重写了onRefresh方法\n\n5）、webioc容器会创建嵌入式的Servlet容器；**createEmbeddedServletContainer**();\n\n**6）、获取嵌入式的Servlet容器工厂：**\n\nEmbeddedServletContainerFactory containerFactory = getEmbeddedServletContainerFactory();\n\n​	从ioc容器中获取EmbeddedServletContainerFactory 组件；**TomcatEmbeddedServletContainerFactory**创建对象，后置处理器一看是这个对象，就获取所有的定制器来先定制Servlet容器的相关配置；\n\n7）、**使用容器工厂获取嵌入式的Servlet容器**：this.embeddedServletContainer = containerFactory      .getEmbeddedServletContainer(getSelfInitializer());\n\n8）、嵌入式的Servlet容器创建对象并启动Servlet容器；\n\n**先启动嵌入式的Servlet容器，再将ioc容器中剩下没有创建出的对象获取出来；**\n\n**==IOC容器启动创建嵌入式的Servlet容器==**\n\n\n\n## 9、使用外置的Servlet容器\n\n嵌入式Servlet容器：应用打成可执行的jar\n\n​		优点：简单、便携；\n\n​		缺点：默认不支持JSP、优化定制比较复杂（使用定制器【ServerProperties、自定义EmbeddedServletContainerCustomizer】，自己编写嵌入式Servlet容器的创建工厂【EmbeddedServletContainerFactory】）；\n\n\n\n外置的Servlet容器：外面安装Tomcat---应用war包的方式打包；\n\n### 步骤\n\n1）、必须创建一个war项目；（利用idea创建好目录结构）\n\n2）、将嵌入式的Tomcat指定为provided；\n\n```xml\n<dependency>\n   <groupId>org.springframework.boot</groupId>\n   <artifactId>spring-boot-starter-tomcat</artifactId>\n   <scope>provided</scope>\n</dependency>\n```\n\n3）、必须编写一个**SpringBootServletInitializer**的子类，并调用configure方法\n\n```java\npublic class ServletInitializer extends SpringBootServletInitializer {\n\n   @Override\n   protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\n       //传入SpringBoot应用的主程序\n      return application.sources(SpringBoot04WebJspApplication.class);\n   }\n\n}\n```\n\n4）、启动服务器就可以使用；\n\n### 原理\n\njar包：执行SpringBoot主类的main方法，启动ioc容器，创建嵌入式的Servlet容器；\n\nwar包：启动服务器，**服务器启动SpringBoot应用**【SpringBootServletInitializer】，启动ioc容器；\n\n\n\nservlet3.0（Spring注解版）：\n\n8.2.4 Shared libraries / runtimes pluggability：\n\n规则：\n\n​	1）、服务器启动（web应用启动）会创建当前web应用里面每一个jar包里面ServletContainerInitializer实例：\n\n​	2）、ServletContainerInitializer的实现放在jar包的META-INF/services文件夹下，有一个名为javax.servlet.ServletContainerInitializer的文件，内容就是ServletContainerInitializer的实现类的全类名\n\n​	3）、还可以使用@HandlesTypes，在应用启动的时候加载我们感兴趣的类；\n\n\n\n流程：\n\n1）、启动Tomcat\n\n2）、org\\springframework\\spring-web\\4.3.14.RELEASE\\spring-web-4.3.14.RELEASE.jar!\\META-INF\\services\\javax.servlet.ServletContainerInitializer：\n\nSpring的web模块里面有这个文件：**org.springframework.web.SpringServletContainerInitializer**\n\n3）、SpringServletContainerInitializer将@HandlesTypes(WebApplicationInitializer.class)标注的所有这个类型的类都传入到onStartup方法的Set<Class<?>>；为这些WebApplicationInitializer类型的类创建实例；\n\n4）、每一个WebApplicationInitializer都调用自己的onStartup；\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180302221835.png)\n\n5）、相当于我们的SpringBootServletInitializer的类会被创建对象，并执行onStartup方法\n\n6）、SpringBootServletInitializer实例执行onStartup的时候会createRootApplicationContext；创建容器\n\n```java\nprotected WebApplicationContext createRootApplicationContext(\n      ServletContext servletContext) {\n    //1、创建SpringApplicationBuilder\n   SpringApplicationBuilder builder = createSpringApplicationBuilder();\n   StandardServletEnvironment environment = new StandardServletEnvironment();\n   environment.initPropertySources(servletContext, null);\n   builder.environment(environment);\n   builder.main(getClass());\n   ApplicationContext parent = getExistingRootWebApplicationContext(servletContext);\n   if (parent != null) {\n      this.logger.info(\"Root context already created (using as parent).\");\n      servletContext.setAttribute(\n            WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, null);\n      builder.initializers(new ParentContextApplicationContextInitializer(parent));\n   }\n   builder.initializers(\n         new ServletContextApplicationContextInitializer(servletContext));\n   builder.contextClass(AnnotationConfigEmbeddedWebApplicationContext.class);\n    \n    //调用configure方法，子类重写了这个方法，将SpringBoot的主程序类传入了进来\n   builder = configure(builder);\n    \n    //使用builder创建一个Spring应用\n   SpringApplication application = builder.build();\n   if (application.getSources().isEmpty() && AnnotationUtils\n         .findAnnotation(getClass(), Configuration.class) != null) {\n      application.getSources().add(getClass());\n   }\n   Assert.state(!application.getSources().isEmpty(),\n         \"No SpringApplication sources have been defined. Either override the \"\n               + \"configure method or add an @Configuration annotation\");\n   // Ensure error pages are registered\n   if (this.registerErrorPageFilter) {\n      application.getSources().add(ErrorPageFilterConfiguration.class);\n   }\n    //启动Spring应用\n   return run(application);\n}\n```\n\n7）、Spring的应用就启动并且创建IOC容器\n\n```java\npublic ConfigurableApplicationContext run(String... args) {\n   StopWatch stopWatch = new StopWatch();\n   stopWatch.start();\n   ConfigurableApplicationContext context = null;\n   FailureAnalyzers analyzers = null;\n   configureHeadlessProperty();\n   SpringApplicationRunListeners listeners = getRunListeners(args);\n   listeners.starting();\n   try {\n      ApplicationArguments applicationArguments = new DefaultApplicationArguments(\n            args);\n      ConfigurableEnvironment environment = prepareEnvironment(listeners,\n            applicationArguments);\n      Banner printedBanner = printBanner(environment);\n      context = createApplicationContext();\n      analyzers = new FailureAnalyzers(context);\n      prepareContext(context, environment, listeners, applicationArguments,\n            printedBanner);\n       \n       //刷新IOC容器\n      refreshContext(context);\n      afterRefresh(context, applicationArguments);\n      listeners.finished(context, null);\n      stopWatch.stop();\n      if (this.logStartupInfo) {\n         new StartupInfoLogger(this.mainApplicationClass)\n               .logStarted(getApplicationLog(), stopWatch);\n      }\n      return context;\n   }\n   catch (Throwable ex) {\n      handleRunFailure(context, listeners, analyzers, ex);\n      throw new IllegalStateException(ex);\n   }\n}\n```\n\n**==启动Servlet容器，再启动SpringBoot应用==**\n\n\n\n# 五、Docker\n\n## 1、简介\n\n**Docker**是一个开源的应用容器引擎；是一个轻量级容器技术；\n\nDocker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜像发布出去，其他使用者可以直接使用这个镜像；\n\n运行中的这个镜像称为容器，容器启动是非常快速的。\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180303145450.png)\n\n\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180303145531.png)\n\n## 2、核心概念\n\ndocker主机(Host)：安装了Docker程序的机器（Docker直接安装在操作系统之上）；\n\ndocker客户端(Client)：连接docker主机进行操作；\n\ndocker仓库(Registry)：用来保存各种打包好的软件镜像；\n\ndocker镜像(Images)：软件打包好的镜像；放在docker仓库中；\n\ndocker容器(Container)：镜像启动后的实例称为一个容器；容器是独立运行的一个或一组应用\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180303165113.png)\n\n使用Docker的步骤：\n\n1）、安装Docker\n\n2）、去Docker仓库找到这个软件对应的镜像；\n\n3）、使用Docker运行这个镜像，这个镜像就会生成一个Docker容器；\n\n4）、对容器的启动停止就是对软件的启动停止；\n\n## 3、安装Docker\n\n#### 1）、安装linux虚拟机\n\n​	1）、VMWare、VirtualBox（安装）；\n\n​	2）、导入虚拟机文件centos7-atguigu.ova；\n\n​	3）、双击启动linux虚拟机;使用  root/ 123456登陆\n\n​	4）、使用客户端连接linux服务器进行命令操作；\n\n​	5）、设置虚拟机网络；\n\n​		桥接网络===选好网卡====接入网线；\n\n​	6）、设置好网络以后使用命令重启虚拟机的网络\n\n```shell\nservice network restart\n```\n\n​	7）、查看linux的ip地址\n\n```shell\nip addr\n```\n\n​	8）、使用客户端连接linux；\n\n#### 2）、在linux虚拟机上安装docker\n\n步骤：\n\n```shell\n1、检查内核版本，必须是3.10及以上\nuname -r\n2、安装docker\nyum install docker\n3、输入y确认安装\n4、启动docker\n[root@localhost ~]# systemctl start docker\n[root@localhost ~]# docker -v\nDocker version 1.12.6, build 3e8e77d/1.12.6\n5、开机启动docker\n[root@localhost ~]# systemctl enable docker\nCreated symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.\n6、停止docker\nsystemctl stop docker\n```\n\n## 4、Docker常用命令&操作\n\n### 1）、镜像操作\n\n| 操作 | 命令                                            | 说明                                                     |\n| ---- | ----------------------------------------------- | -------------------------------------------------------- |\n| 检索 | docker  search 关键字  eg：docker  search redis | 我们经常去docker  hub上检索镜像的详细信息，如镜像的TAG。 |\n| 拉取 | docker pull 镜像名:tag                          | :tag是可选的，tag表示标签，多为软件的版本，默认是latest  |\n| 列表 | docker images                                   | 查看所有本地镜像                                         |\n| 删除 | docker rmi image-id                             | 删除指定的本地镜像                                       |\n\nhttps://hub.docker.com/\n\n### 2）、容器操作\n\n软件镜像（QQ安装程序）----运行镜像----产生一个容器（正在运行的软件，运行的QQ）；\n\n步骤：\n\n````shell\n1、搜索镜像\n[root@localhost ~]# docker search tomcat\n2、拉取镜像\n[root@localhost ~]# docker pull tomcat\n3、根据镜像启动容器\ndocker run --name mytomcat -d tomcat:latest\n4、docker ps  \n查看运行中的容器\n5、 停止运行中的容器\ndocker stop  容器的id\n6、查看所有的容器\ndocker ps -a\n7、启动容器\ndocker start 容器id\n8、删除一个容器\n docker rm 容器id\n9、启动一个做了端口映射的tomcat\n[root@localhost ~]# docker run -d -p 8888:8080 tomcat\n-d：后台运行\n-p: 将主机的端口映射到容器的一个端口    主机端口:容器内部的端口\n\n10、为了演示简单关闭了linux的防火墙\nservice firewalld status ；查看防火墙状态\nservice firewalld stop：关闭防火墙\n11、查看容器的日志\ndocker logs container-name/container-id\n\n更多命令参看\nhttps://docs.docker.com/engine/reference/commandline/docker/\n可以参考每一个镜像的文档\n\n````\n\n\n\n### 3）、安装MySQL示例\n\n```shell\ndocker pull mysql\n```\n\n\n\n错误的启动\n\n```shell\n[root@localhost ~]# docker run --name mysql01 -d mysql\n42f09819908bb72dd99ae19e792e0a5d03c48638421fa64cce5f8ba0f40f5846\n\nmysql退出了\n[root@localhost ~]# docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                           PORTS               NAMES\n42f09819908b        mysql               \"docker-entrypoint.sh\"   34 seconds ago      Exited (1) 33 seconds ago                            mysql01\n538bde63e500        tomcat              \"catalina.sh run\"        About an hour ago   Exited (143) About an hour ago                       compassionate_\ngoldstine\nc4f1ac60b3fc        tomcat              \"catalina.sh run\"        About an hour ago   Exited (143) About an hour ago                       lonely_fermi\n81ec743a5271        tomcat              \"catalina.sh run\"        About an hour ago   Exited (143) About an hour ago                       sick_ramanujan\n\n\n//错误日志\n[root@localhost ~]# docker logs 42f09819908b\nerror: database is uninitialized and password option is not specified \n  You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD；这个三个参数必须指定一个\n```\n\n正确的启动\n\n```shell\n[root@localhost ~]# docker run --name mysql01 -e MYSQL_ROOT_PASSWORD=123456 -d mysql\nb874c56bec49fb43024b3805ab51e9097da779f2f572c22c695305dedd684c5f\n[root@localhost ~]# docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\nb874c56bec49        mysql               \"docker-entrypoint.sh\"   4 seconds ago       Up 3 seconds        3306/tcp            mysql01\n```\n\n做了端口映射\n\n```shell\n[root@localhost ~]# docker run -p 3306:3306 --name mysql02 -e MYSQL_ROOT_PASSWORD=123456 -d mysql\nad10e4bc5c6a0f61cbad43898de71d366117d120e39db651844c0e73863b9434\n[root@localhost ~]# docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\nad10e4bc5c6a        mysql               \"docker-entrypoint.sh\"   4 seconds ago       Up 2 seconds        0.0.0.0:3306->3306/tcp   mysql02\n```\n\n\n\n几个其他的高级操作\n\n```\ndocker run --name mysql03 -v /conf/mysql:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag\n把主机的/conf/mysql文件夹挂载到 mysqldocker容器的/etc/mysql/conf.d文件夹里面\n改mysql的配置文件就只需要把mysql配置文件放在自定义的文件夹下（/conf/mysql）\n\ndocker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\n指定mysql的一些配置参数\n```\n\n\n\n# 六、SpringBoot与数据访问\n\n## 1、JDBC\n\n```xml\n<dependency>\n			<groupId>org.springframework.boot</groupId>\n			<artifactId>spring-boot-starter-jdbc</artifactId>\n		</dependency>\n		<dependency>\n			<groupId>mysql</groupId>\n			<artifactId>mysql-connector-java</artifactId>\n			<scope>runtime</scope>\n		</dependency>\n```\n\n\n\n```yaml\nspring:\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://192.168.15.22:3306/jdbc\n    driver-class-name: com.mysql.jdbc.Driver\n```\n\n效果：\n\n​	默认是用org.apache.tomcat.jdbc.pool.DataSource作为数据源；\n\n​	数据源的相关配置都在DataSourceProperties里面；\n\n自动配置原理：\n\norg.springframework.boot.autoconfigure.jdbc：\n\n1、参考DataSourceConfiguration，根据配置创建数据源，默认使用Tomcat连接池；可以使用spring.datasource.type指定自定义的数据源类型；\n\n2、SpringBoot默认可以支持；\n\n```\norg.apache.tomcat.jdbc.pool.DataSource、HikariDataSource、BasicDataSource、\n```\n\n3、自定义数据源类型\n\n```java\n/**\n * Generic DataSource configuration.\n */\n@ConditionalOnMissingBean(DataSource.class)\n@ConditionalOnProperty(name = \"spring.datasource.type\")\nstatic class Generic {\n\n   @Bean\n   public DataSource dataSource(DataSourceProperties properties) {\n       //使用DataSourceBuilder创建数据源，利用反射创建响应type的数据源，并且绑定相关属性\n      return properties.initializeDataSourceBuilder().build();\n   }\n\n}\n```\n\n4、**DataSourceInitializer：ApplicationListener**；\n\n​	作用：\n\n​		1）、runSchemaScripts();运行建表语句；\n\n​		2）、runDataScripts();运行插入数据的sql语句；\n\n默认只需要将文件命名为：\n\n```properties\nschema-*.sql、data-*.sql\n默认规则：schema.sql，schema-all.sql；\n可以使用   \n	schema:\n      - classpath:department.sql\n      指定位置\n```\n\n5、操作数据库：自动配置了JdbcTemplate操作数据库\n\n## 2、整合Druid数据源\n\n```java\n导入druid数据源\n@Configuration\npublic class DruidConfig {\n\n    @ConfigurationProperties(prefix = \"spring.datasource\")\n    @Bean\n    public DataSource druid(){\n       return  new DruidDataSource();\n    }\n\n    //配置Druid的监控\n    //1、配置一个管理后台的Servlet\n    @Bean\n    public ServletRegistrationBean statViewServlet(){\n        ServletRegistrationBean bean = new ServletRegistrationBean(new StatViewServlet(), \"/druid/*\");\n        Map<String,String> initParams = new HashMap<>();\n\n        initParams.put(\"loginUsername\",\"admin\");\n        initParams.put(\"loginPassword\",\"123456\");\n        initParams.put(\"allow\",\"\");//默认就是允许所有访问\n        initParams.put(\"deny\",\"192.168.15.21\");\n\n        bean.setInitParameters(initParams);\n        return bean;\n    }\n\n\n    //2、配置一个web监控的filter\n    @Bean\n    public FilterRegistrationBean webStatFilter(){\n        FilterRegistrationBean bean = new FilterRegistrationBean();\n        bean.setFilter(new WebStatFilter());\n\n        Map<String,String> initParams = new HashMap<>();\n        initParams.put(\"exclusions\",\"*.js,*.css,/druid/*\");\n\n        bean.setInitParameters(initParams);\n\n        bean.setUrlPatterns(Arrays.asList(\"/*\"));\n\n        return  bean;\n    }\n}\n\n```\n\n## 3、整合MyBatis\n\n```xml\n		<dependency>\n			<groupId>org.mybatis.spring.boot</groupId>\n			<artifactId>mybatis-spring-boot-starter</artifactId>\n			<version>1.3.1</version>\n		</dependency>\n```\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180305194443.png)\n\n步骤：\n\n​	1）、配置数据源相关属性（见上一节Druid）\n\n​	2）、给数据库建表\n\n​	3）、创建JavaBean\n\n### 	4）、注解版\n\n```java\n//指定这是一个操作数据库的mapper\n@Mapper\npublic interface DepartmentMapper {\n\n    @Select(\"select * from department where id=#{id}\")\n    public Department getDeptById(Integer id);\n\n    @Delete(\"delete from department where id=#{id}\")\n    public int deleteDeptById(Integer id);\n\n    @Options(useGeneratedKeys = true,keyProperty = \"id\")\n    @Insert(\"insert into department(departmentName) values(#{departmentName})\")\n    public int insertDept(Department department);\n\n    @Update(\"update department set departmentName=#{departmentName} where id=#{id}\")\n    public int updateDept(Department department);\n}\n```\n\n问题：\n\n自定义MyBatis的配置规则；给容器中添加一个ConfigurationCustomizer；\n\n```java\n@org.springframework.context.annotation.Configuration\npublic class MyBatisConfig {\n\n    @Bean\n    public ConfigurationCustomizer configurationCustomizer(){\n        return new ConfigurationCustomizer(){\n\n            @Override\n            public void customize(Configuration configuration) {\n                configuration.setMapUnderscoreToCamelCase(true);\n            }\n        };\n    }\n}\n```\n\n\n\n```java\n使用MapperScan批量扫描所有的Mapper接口；\n@MapperScan(value = \"com.atguigu.springboot.mapper\")\n@SpringBootApplication\npublic class SpringBoot06DataMybatisApplication {\n\n	public static void main(String[] args) {\n		SpringApplication.run(SpringBoot06DataMybatisApplication.class, args);\n	}\n}\n```\n\n### 5）、配置文件版\n\n```yaml\nmybatis:\n  config-location: classpath:mybatis/mybatis-config.xml 指定全局配置文件的位置\n  mapper-locations: classpath:mybatis/mapper/*.xml  指定sql映射文件的位置\n```\n\n更多使用参照\n\nhttp://www.mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/\n\n\n\n## 4、整合SpringData JPA\n\n### 1）、SpringData简介\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180306105412.png)\n\n### 2）、整合SpringData JPA\n\nJPA:ORM（Object Relational Mapping）；\n\n1）、编写一个实体类（bean）和数据表进行映射，并且配置好映射关系；\n\n```java\n//使用JPA注解配置映射关系\n@Entity //告诉JPA这是一个实体类（和数据表映射的类）\n@Table(name = \"tbl_user\") //@Table来指定和哪个数据表对应;如果省略默认表名就是user；\npublic class User {\n\n    @Id //这是一个主键\n    @GeneratedValue(strategy = GenerationType.IDENTITY)//自增主键\n    private Integer id;\n\n    @Column(name = \"last_name\",length = 50) //这是和数据表对应的一个列\n    private String lastName;\n    @Column //省略默认列名就是属性名\n    private String email;\n```\n\n2）、编写一个Dao接口来操作实体类对应的数据表（Repository）\n\n```java\n//继承JpaRepository来完成对数据库的操作\npublic interface UserRepository extends JpaRepository<User,Integer> {\n}\n\n```\n\n3）、基本的配置JpaProperties\n\n```yaml\nspring:  \n jpa:\n    hibernate:\n#     更新或者创建数据表结构\n      ddl-auto: update\n#    控制台显示SQL\n    show-sql: true\n```\n\n\n\n# 七、启动配置原理\n\n几个重要的事件回调机制\n\n配置在META-INF/spring.factories\n\n**ApplicationContextInitializer**\n\n**SpringApplicationRunListener**\n\n\n\n只需要放在ioc容器中\n\n**ApplicationRunner**\n\n**CommandLineRunner**\n\n\n\n启动流程：\n\n## **1、创建SpringApplication对象**\n\n```java\ninitialize(sources);\nprivate void initialize(Object[] sources) {\n    //保存主配置类\n    if (sources != null && sources.length > 0) {\n        this.sources.addAll(Arrays.asList(sources));\n    }\n    //判断当前是否一个web应用\n    this.webEnvironment = deduceWebEnvironment();\n    //从类路径下找到META-INF/spring.factories配置的所有ApplicationContextInitializer；然后保存起来\n    setInitializers((Collection) getSpringFactoriesInstances(\n        ApplicationContextInitializer.class));\n    //从类路径下找到ETA-INF/spring.factories配置的所有ApplicationListener\n    setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));\n    //从多个配置类中找到有main方法的主配置类\n    this.mainApplicationClass = deduceMainApplicationClass();\n}\n```\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180306145727.png)\n\n![](https://www.lcools.cn/static/springboot/images/搜狗截图20180306145855.png)\n\n## 2、运行run方法\n\n```java\npublic ConfigurableApplicationContext run(String... args) {\n   StopWatch stopWatch = new StopWatch();\n   stopWatch.start();\n   ConfigurableApplicationContext context = null;\n   FailureAnalyzers analyzers = null;\n   configureHeadlessProperty();\n    \n   //获取SpringApplicationRunListeners；从类路径下META-INF/spring.factories\n   SpringApplicationRunListeners listeners = getRunListeners(args);\n    //回调所有的获取SpringApplicationRunListener.starting()方法\n   listeners.starting();\n   try {\n       //封装命令行参数\n      ApplicationArguments applicationArguments = new DefaultApplicationArguments(\n            args);\n      //准备环境\n      ConfigurableEnvironment environment = prepareEnvironment(listeners,\n            applicationArguments);\n       		//创建环境完成后回调SpringApplicationRunListener.environmentPrepared()；表示环境准备完成\n       \n      Banner printedBanner = printBanner(environment);\n       \n       //创建ApplicationContext；决定创建web的ioc还是普通的ioc\n      context = createApplicationContext();\n       \n      analyzers = new FailureAnalyzers(context);\n       //准备上下文环境;将environment保存到ioc中；而且applyInitializers()；\n       //applyInitializers()：回调之前保存的所有的ApplicationContextInitializer的initialize方法\n       //回调所有的SpringApplicationRunListener的contextPrepared()；\n       //\n      prepareContext(context, environment, listeners, applicationArguments,\n            printedBanner);\n       //prepareContext运行完成以后回调所有的SpringApplicationRunListener的contextLoaded（）；\n       \n       //s刷新容器；ioc容器初始化（如果是web应用还会创建嵌入式的Tomcat）；Spring注解版\n       //扫描，创建，加载所有组件的地方；（配置类，组件，自动配置）\n      refreshContext(context);\n       //从ioc容器中获取所有的ApplicationRunner和CommandLineRunner进行回调\n       //ApplicationRunner先回调，CommandLineRunner再回调\n      afterRefresh(context, applicationArguments);\n       //所有的SpringApplicationRunListener回调finished方法\n      listeners.finished(context, null);\n      stopWatch.stop();\n      if (this.logStartupInfo) {\n         new StartupInfoLogger(this.mainApplicationClass)\n               .logStarted(getApplicationLog(), stopWatch);\n      }\n       //整个SpringBoot应用启动完成以后返回启动的ioc容器；\n      return context;\n   }\n   catch (Throwable ex) {\n      handleRunFailure(context, listeners, analyzers, ex);\n      throw new IllegalStateException(ex);\n   }\n}\n```\n\n## 3、事件监听机制\n\n配置在META-INF/spring.factories\n\n**ApplicationContextInitializer**\n\n```java\npublic class HelloApplicationContextInitializer implements ApplicationContextInitializer<ConfigurableApplicationContext> {\n    @Override\n    public void initialize(ConfigurableApplicationContext applicationContext) {\n        System.out.println(\"ApplicationContextInitializer...initialize...\"+applicationContext);\n    }\n}\n\n```\n\n**SpringApplicationRunListener**\n\n```java\npublic class HelloSpringApplicationRunListener implements SpringApplicationRunListener {\n\n    //必须有的构造器\n    public HelloSpringApplicationRunListener(SpringApplication application, String[] args){\n\n    }\n\n    @Override\n    public void starting() {\n        System.out.println(\"SpringApplicationRunListener...starting...\");\n    }\n\n    @Override\n    public void environmentPrepared(ConfigurableEnvironment environment) {\n        Object o = environment.getSystemProperties().get(\"os.name\");\n        System.out.println(\"SpringApplicationRunListener...environmentPrepared..\"+o);\n    }\n\n    @Override\n    public void contextPrepared(ConfigurableApplicationContext context) {\n        System.out.println(\"SpringApplicationRunListener...contextPrepared...\");\n    }\n\n    @Override\n    public void contextLoaded(ConfigurableApplicationContext context) {\n        System.out.println(\"SpringApplicationRunListener...contextLoaded...\");\n    }\n\n    @Override\n    public void finished(ConfigurableApplicationContext context, Throwable exception) {\n        System.out.println(\"SpringApplicationRunListener...finished...\");\n    }\n}\n\n```\n\n配置（META-INF/spring.factories）\n\n```properties\norg.springframework.context.ApplicationContextInitializer=\\\ncom.atguigu.springboot.listener.HelloApplicationContextInitializer\n\norg.springframework.boot.SpringApplicationRunListener=\\\ncom.atguigu.springboot.listener.HelloSpringApplicationRunListener\n```\n\n\n\n\n\n只需要放在ioc容器中\n\n**ApplicationRunner**\n\n```java\n@Component\npublic class HelloApplicationRunner implements ApplicationRunner {\n    @Override\n    public void run(ApplicationArguments args) throws Exception {\n        System.out.println(\"ApplicationRunner...run....\");\n    }\n}\n```\n\n\n\n**CommandLineRunner**\n\n```java\n@Component\npublic class HelloCommandLineRunner implements CommandLineRunner {\n    @Override\n    public void run(String... args) throws Exception {\n        System.out.println(\"CommandLineRunner...run...\"+ Arrays.asList(args));\n    }\n}\n```\n\n\n\n# 八、自定义starter\n\nstarter：\n\n​	1、这个场景需要使用到的依赖是什么？\n\n​	2、如何编写自动配置\n\n```java\n@Configuration  //指定这个类是一个配置类\n@ConditionalOnXXX  //在指定条件成立的情况下自动配置类生效\n@AutoConfigureAfter  //指定自动配置类的顺序\n@Bean  //给容器中添加组件\n\n@ConfigurationPropertie结合相关xxxProperties类来绑定相关的配置\n@EnableConfigurationProperties //让xxxProperties生效加入到容器中\n\n自动配置类要能加载\n将需要启动就加载的自动配置类，配置在META-INF/spring.factories\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\norg.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\\norg.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\\n```\n\n​	3、模式：\n\n启动器只用来做依赖导入；\n\n专门来写一个自动配置模块；\n\n启动器依赖自动配置；别人只需要引入启动器（starter）\n\nmybatis-spring-boot-starter；自定义启动器名-spring-boot-starter\n\n\n\n步骤：\n\n1）、启动器模块\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.atguigu.starter</groupId>\n    <artifactId>atguigu-spring-boot-starter</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <!--启动器-->\n    <dependencies>\n\n        <!--引入自动配置模块-->\n        <dependency>\n            <groupId>com.atguigu.starter</groupId>\n            <artifactId>atguigu-spring-boot-starter-autoconfigurer</artifactId>\n            <version>0.0.1-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n\n</project>\n```\n\n2）、自动配置模块\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n\n   <groupId>com.atguigu.starter</groupId>\n   <artifactId>atguigu-spring-boot-starter-autoconfigurer</artifactId>\n   <version>0.0.1-SNAPSHOT</version>\n   <packaging>jar</packaging>\n\n   <name>atguigu-spring-boot-starter-autoconfigurer</name>\n   <description>Demo project for Spring Boot</description>\n\n   <parent>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-parent</artifactId>\n      <version>1.5.10.RELEASE</version>\n      <relativePath/> <!-- lookup parent from repository -->\n   </parent>\n\n   <properties>\n      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n      <java.version>1.8</java.version>\n   </properties>\n\n   <dependencies>\n\n      <!--引入spring-boot-starter；所有starter的基本配置-->\n      <dependency>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter</artifactId>\n      </dependency>\n\n   </dependencies>\n\n\n\n</project>\n\n```\n\n\n\n```java\npackage com.atguigu.starter;\n\nimport org.springframework.boot.context.properties.ConfigurationProperties;\n\n@ConfigurationProperties(prefix = \"atguigu.hello\")\npublic class HelloProperties {\n\n    private String prefix;\n    private String suffix;\n\n    public String getPrefix() {\n        return prefix;\n    }\n\n    public void setPrefix(String prefix) {\n        this.prefix = prefix;\n    }\n\n    public String getSuffix() {\n        return suffix;\n    }\n\n    public void setSuffix(String suffix) {\n        this.suffix = suffix;\n    }\n}\n\n```\n\n```java\npackage com.atguigu.starter;\n\npublic class HelloService {\n\n    HelloProperties helloProperties;\n\n    public HelloProperties getHelloProperties() {\n        return helloProperties;\n    }\n\n    public void setHelloProperties(HelloProperties helloProperties) {\n        this.helloProperties = helloProperties;\n    }\n\n    public String sayHellAtguigu(String name){\n        return helloProperties.getPrefix()+\"-\" +name + helloProperties.getSuffix();\n    }\n}\n\n```\n\n```java\npackage com.atguigu.starter;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@ConditionalOnWebApplication //web应用才生效\n@EnableConfigurationProperties(HelloProperties.class)\npublic class HelloServiceAutoConfiguration {\n\n    @Autowired\n    HelloProperties helloProperties;\n    @Bean\n    public HelloService helloService(){\n        HelloService service = new HelloService();\n        service.setHelloProperties(helloProperties);\n        return service;\n    }\n}\n\n```\n\n# 更多SpringBoot整合示例\n\nhttps://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples\n\n\n\n\n\n\n\n\n\n\n\n\n\n',0,2,1,0,0,'Spring Boot','Spring Boot',1,'2020-05-30 10:26:16','2020-05-30 10:26:16'),(124,'微服务架构 vs. SOA架构',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>&nbsp;</p> \n<p>面向服务架构（SOA）已经存在有些年头了，这是一种用于设计软件的伟大原则。在SOA中，所有组件都是独立自主的，并能为其他组件提供服务。要替换掉系统中的某些部分而不对整个系统造成较大的影响本是个难题，然而只要维护好系统各模块之间的低耦合，该难题便能迎刃而解，这也是我们之前谈及微服务时所认可的。大体上，SOA与微服务架构是非常相像的。那么它们之间的区别到底是什么呢？微服务是细粒度的SOA组件。换句话说，某单个SOA组件可以被拆成多个微服务，而这些微服务通过分工协作，可以提供与原SOA组件相同级别的功能，如下图所。</p> \n<div class=\"img-container\">\n <img src=\"http://t12.baidu.com/it/u=3137281718,3972181173&fm=173&s=FE283063193A440B4A55A0CA0000E0B1&w=640&h=332&img.JPEG\" title=\"\" alt=\"\">\n</div> \n<p>微服务是细粒度的SOA组件，它们是关注点更窄的轻量级服务。微服务与SOA之间的另一个不同之处是服务互联和编写服务时所使用的技术。J2EE是一个遵守企业级标准的用于编写SOA架构的技术栈。Java命名与目录接口（JNDI）、企业级JavaBean（EJB）以及企业服务总线（ESB）都是SOA应用赖以构建和维护的生态土壤。即便ESB是标准，在2005年之后毕业的工程师却鲜有听说过ESB的，至于用过ESB的那就更少了。而当代的，例如Rubyon Rails这样的框架甚至不会去考虑如此复杂的软件部件。</p> \n<p>而另一方面，微服务推崇执行的标准（例如HTTP）却是人们广泛了解并共同使用的。我们可以通过选择合适的语言或工具来构建某个组件（微服务），进而获得本章“技术多样性”小节所提到的关键好处。除了技术栈与服务规模之外，在SOA与微服务之间还有一个更大的区别：领域模型。在本章前面的内容中，我们曾讨论过去中心化。有管理的去中心化，也有数据的去中心化。在一个基于微服务的软件中，每个微服务应该在本地存储自身管理的数据，并将领域模型分别隔离到单个服务中。而在面向SOA的软件中，数据往往存储在单个大型的数据库中，服务之间会共享领域模型。</p> \n<p><img src=\"https://img-blog.csdn.net/20171112211102248\" title=\"\" alt=\"SOA与Microservices\"></p> \n<h2 id=\"一面向服务的架构soa\"><a name=\"t1\"></a>一、面向服务的架构SOA</h2> \n<p>面向服务的架构是一种软件体系结构，应用程序的不同组件通过网络上的通信协议向其他组件提供服务。通信可以是简单的数据传递，也可以是两个或多个服务彼此协调连接。这些独特的服务执行一些小功能，例如验证付款、创建用户帐户或提供社交登录等。</p> \n<p>面向服务的架构不太关于如何对应用程序进行模块化构建，更多的是关于如何通过分布式、单独维护和部署的软件组件的集成来组成应用程序。这些通过技术和标准来实现，通过技术和标准使得组件能够更容易地通过网络（尤其是IP网络）进行通信和协作。</p> \n<p>SOA架构中有两个主要角色：服务提供者（Provider）和服务使用者（Consumer）。而软件代理则可以扮演这两个角色。该Consumer层是用户（人、应用程序或第三方的其它组件）与SOA交互的点，和Provider层则由SOA架构内的所有服务所构成。</p> \n<p>SOA首先在90年代中期得名，当时一家名为Gartner Group的公司认识到了这个软件架构的新趋势，并在全球推广。通过这样做，他们设法大大加快了这种架构模式的采用和进一步发展。然而，使用分布式服务作为软件体系结构的最早记录可追溯到二十世纪80年代初。</p> \n<h2 id=\"二微服务架构\"><a name=\"t2\"></a>二、微服务架构</h2> \n<p>微服务架构在某种程度上是面向服务的架构SOA继续发展的下一步。基本上，这种架构类型是开发软件，网络或移动应用程序作为独立服务套件（又称微服务）的一种特殊方式。这些服务的创建仅限于一个特定的业务功能，如用户管理、用户角色、电子商务车、搜索引擎、社交媒体登录等。此外，它们是完全独立的，也就是说它们可以写入不同的编程语言并使用不同的数据库。集中式服务管理几乎不存在，微服务使用轻量级HTTP、REST或Thrift API进行通信。</p> \n<p>这个词本身起源于2011年5月在威尼斯附近举行的软件架构师研讨会。他们第一次使用“微服务”这个术语来描述参与者看到的一个共同的架构风格，其中许多参会者都在探索相似的内容。2012年5月，同一个团队决定将“微服务”作为最合适的名称。然而实际上，微软、亚马逊、Netflix和Facebook等主要的科技公司已经在微服务架构方面工作了十多年。</p> \n<p>乍一看，微服务架构似乎谈论的是与SOA相同的事情。不过，如果引用微软服务领域的先驱Martin Flower的话，他曾经说过，“我们应该把SOA看作微服务的超集”。</p> \n<p>那么，差异在哪里呢？可以说，两种架构比起不同的架构有更多的相似之处，然而，它们是两种不同类型的架构。下面会详细分析这一点。</p> \n<h2 id=\"三soa-vs-microservices\"><a name=\"t3\"></a>三、SOA vs. MicroServices</h2> \n<p><img src=\"https://img-blog.csdn.net/20171112211133030\" title=\"\" alt=\"SOA vs. MicroServices架构对比\"></p> \n<table> \n <thead> \n  <tr>\n   <th><code>SOA</code></th>\n   <th><code>微服务架构</code></th>\n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>应用程序服务的可重用性的最大化</td> \n   <td>专注于解耦</td> \n  </tr> \n  <tr> \n   <td>系统性的改变需要修改整体</td> \n   <td>系统性的改变是创建一个新的服务</td> \n  </tr> \n  <tr> \n   <td>DevOps和持续交付正在变得流行，但还不是主流</td> \n   <td>强烈关注DevOps和持续交付</td> \n  </tr> \n  <tr> \n   <td>专注于业务功能重用</td> \n   <td>更重视“上下文边界”的概念</td> \n  </tr> \n  <tr> \n   <td>通信使用企业服务总线ESB</td> \n   <td>对于通信而言，使用较少精细和简单的消息系统</td> \n  </tr> \n  <tr> \n   <td>支持多种消息协议</td> \n   <td>使用轻量级协议，例如HTTP，REST或Thrift API</td> \n  </tr> \n  <tr> \n   <td>对部署到它的所有服务使用通用平台</td> \n   <td>应用程序服务器不是真的被使用，通常使用云平台</td> \n  </tr> \n  <tr> \n   <td>容器（如Docker）的使用不太受欢迎</td> \n   <td>容器在微服务方面效果很好</td> \n  </tr> \n  <tr> \n   <td>SOA服务共享数据存储</td> \n   <td>每个微服务可以有一个独立的数据存储</td> \n  </tr> \n  <tr> \n   <td>共同的治理和标准</td> \n   <td>轻松的治理，更加关注团队协作和选择自由</td> \n  </tr> \n </tbody> \n</table> \n<p>下面进一步解释上表所述的不同之处：</p> \n<ul> \n <li> <p>开发方面 - 在这两种体系结构中，可以使用不同的编程语言和工具开发服务，从而将技术多样性带入开发团队。开发可以在多个团队中组织，但是在SOA中，每个团队都需要了解常见的通信机制。另一方面，使用微服务，服务可以独立于其他服务运行和部署。因此，频繁部署新版本的微服务或独立扩展服务会更容易。您可以在这里进一步阅读有关微服务的这些好处。</p> </li> \n <li> <p>“上下文边界” - SOA鼓励组件的共享，而微服务尝试通过“上下文边界”来最小化共享。上下文边界是指以最小的依赖关系将组件及其数据耦合为单个单元。由于SOA依靠多个服务来完成业务请求，构建在SOA上的系统可能比微服务要慢。</p> </li> \n <li> <p>通信 - 在SOA中，ESB可能成为影响整个系统的单一故障点。由于每个服务都通过ESB进行通信，如果其中一个服务变慢，可能会阻塞ESB并请求该服务。另一方面，微服务在容错方面要好得多。例如，如果一个微服务存在内存错误，那么只有该微服务会受到影响。所有其他微服务将继续定期处理请求。</p> </li> \n <li> <p>互操作性 - SOA通过消息中间件组件促进了多种异构协议的使用。微服务试图通过减少集成选择的数量来简化架构模式。因此，如果您想要在异构环境中使用不同协议来集成多个系统，则需要考虑SOA。如果您的所有服务都可以通过相同的远程访问协议访问，那么微服务对您来说是一个更好的选择。</p> </li> \n <li> <p>大小Size - 最后一点但并非最不重要的一点，SOA和微服务的主要区别在于规模和范围。微服务架构中的前缀“微”是指内部组件的粒度，意味着它们必须比SOA架构的服务往往要小得多。微服务中的服务组件通常有一个单一的目的，他们做得很好。另一方面，在SOA服务中通​​常包含更多的业务功能，并且通常将它们实现为完整的子系统。</p> </li> \n</ul> \n<h2 id=\"四结论\"><a name=\"t4\"></a>四、结论</h2> \n<p>我们不能简单地说一种架构比另一种架构更好。这主要取决于您正在构建的应用程序的目的。SOA更适合需要与许多其他应用程序集成的大型复杂企业应用程序环境。这就是说，小型应用程序不适合SOA架构，因为它们不需要消息中间件组件。而微服务架构，在另一方面，是更适合于较小和良好的分割，基于Web的系统。另外，如果您正在开发移动或Web应用程序，那么微服务作为开发人员可以为您提供更大的控制权。最后，我们可以得出结论，因为它们服务于不同的目的，微服务和SOA确实是不同类型的体系结构。</p>',NULL,0,2,1,0,0,'面向服务架构（SOA）已经存在有些年头了，这是一种用于设计软件的伟大原则。在SOA中，所有组件都是独立自主的，并能为其他组件提供服务。要替换掉系统中的某些部分而不对整个系统造成较大的影响本是个难题，然','SOA，微服务',1,'2020-05-31 10:29:48','2020-05-31 10:50:38'),(125,'缓存穿透、缓存击穿、缓存雪崩区别和解决方案',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p><strong>一、缓存处理流程</strong></p> \n<p style=\"margin-left:0cm;\">&nbsp; &nbsp; &nbsp; 前台请求，后台先从缓存中取数据，取到直接返回结果，取不到时从数据库中取，数据库取到更新缓存，并返回结果，数据库也没取到，那直接返回空结果。</p> \n<p style=\"margin-left:0cm;\">&nbsp; &nbsp; &nbsp;&nbsp;<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200602153745888.png\" title=\"\" alt=\"\"></p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\"><strong>二、缓存穿透</strong></p> \n<p style=\"margin-left:0cm;\"><strong>&nbsp; &nbsp; &nbsp; &nbsp;描述：</strong></p> \n<p style=\"margin-left:0cm;\">&nbsp; &nbsp; &nbsp; &nbsp;缓存穿透是指缓存和数据库中都没有的数据，而用户不断发起请求，如发起为id为“-1”的数据或id为特别大不存在的数据。这时的用户很可能是攻击者，攻击会导致数据库压力过大。</p> \n<p style=\"margin-left:0cm;\"><strong>&nbsp; &nbsp; &nbsp; 解决方案：</strong></p> \n<ol>\n <li>接口层增加校验，如用户鉴权校验，id做基础校验，id&lt;=0的直接拦截；</li> \n <li>从缓存取不到的数据，在数据库中也没有取到，这时也可以将key-value对写为key-null，缓存有效时间可以设置短点，如30秒（设置太长会导致正常情况也没法使用）。这样可以防止攻击用户反复用同一个id暴力攻击</li> \n</ol>\n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p><strong>三、缓存击穿</strong></p> \n<p style=\"margin-left:0cm;\"><strong>&nbsp; &nbsp; &nbsp; 描述：</strong></p> \n<p style=\"margin-left:0cm;\">&nbsp; &nbsp; &nbsp; 缓存击穿是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力</p> \n<p style=\"margin-left:0cm;\"><strong>&nbsp; &nbsp; &nbsp; 解决方案：</strong></p> \n<ol>\n <li>设置热点数据永远不过期。</li> \n <li>加互斥锁，互斥锁参考代码如下：</li> \n</ol>\n<p style=\"margin-left:0cm;\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200602153746171.png\" title=\"\" alt=\"\"></p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 说明：</p> \n<p style=\"margin-left:0cm;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1）缓存中有数据，直接走上述代码13行后就返回结果了</p> \n<p style=\"margin-left:0cm;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2）缓存中没有数据，第1个进入的线程，获取锁并从数据库去取数据，没释放锁之前，其他并行进入的线程会等待100ms，再重新去缓存取数据。这样就防止都去数据库重复取数据，重复往缓存中更新数据情况出现。</p> \n<p style=\"margin-left:0cm;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3）当然这是简化处理，理论上如果能根据key值加锁就更好了，就是线程A从数据库取key1的数据并不妨碍线程B取key2的数据，上面代码明显做不到这点。</p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p><strong>四、缓存雪崩</strong></p> \n<p style=\"margin-left:0cm;\"><strong>&nbsp; &nbsp; &nbsp; 描述：</strong></p> \n<p style=\"margin-left:0cm;\">&nbsp; &nbsp; &nbsp; 缓存雪崩是指缓存中数据大批量到过期时间，而查询数据量巨大，引起数据库压力过大甚至down机。和缓存击穿不同的是，&nbsp; &nbsp; &nbsp; &nbsp; 缓存击穿指并发查同一条数据，缓存雪崩是不同数据都过期了，很多数据都查不到从而查数据库。</p> \n<p style=\"margin-left:0cm;\"><strong>&nbsp; &nbsp; &nbsp;解决方案</strong>：</p> \n<ol>\n <li>缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。</li> \n <li>如果缓存数据库是分布式部署，将热点数据均匀分布在不同搞得缓存数据库中。</li> \n <li>设置热点数据永远不过期。</li> \n</ol>',NULL,0,2,1,0,0,'一、缓存处理流程   前台请求，后台先从缓存中取数据，取到直接返回结果，取不到时从数据库中取，数据库取到更新缓存，并返回结果，数据库也没取到，那直接返回空结果。     二、缓存穿透    描述：    缓存穿透是指缓存和数据库中都没有的数据，而用户不断发起请求，如发起为id为“-1”的数据或id为特别大不存在的数据。这时的用户很可能是攻击者，攻击会导...数据库','缓存',1,'2020-06-02 15:37:46','2020-06-02 15:38:38'),(126,'分布式之redis复习精讲',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h2 id=\"section\">引言</h2> \n<h3 id=\"section-1\">为什么写这篇文章?</h3> \n<p>博主的<a href=\"http://www.cnblogs.com/rjzheng/p/8994962.html\">《分布式之消息队列复习精讲》</a>得到了大家的好评，内心诚惶诚恐，想着再出一篇关于复习精讲的文章。但是还是要说明一下，复习精讲的文章偏面试准备，真正在开发过程中，还是脚踏实地，一步一个脚印，不要投机取巧。 考虑到绝大部分写业务的程序员，在实际开发中使用redis的时候，只会setvalue和getvalue两个操作，对redis整体缺乏一个认知。又恰逢博主某个同事下周要去培训redis，所以博主斗胆以redis为题材，对redis常见问题做一个总结，希望能够弥补大家的知识盲点。</p> \n<h3 id=\"section-2\">复习要点?</h3> \n<p>本文围绕以下几点进行阐述 1、为什么使用redis 2、使用redis有什么缺点 3、单线程的redis为什么这么快 4、redis的数据类型，以及每种数据类型的使用场景 5、redis的过期策略以及内存淘汰机制 6、redis和数据库双写一致性问题 7、如何应对缓存穿透和缓存雪崩问题 8、如何解决redis的并发竞争问题</p> \n<h2 id=\"section-3\">正文</h2> \n<h3 id=\"redis\">1、为什么使用redis</h3> \n<p><strong>分析</strong>:博主觉得在项目中使用redis，主要是从两个角度去考虑:<strong>性能</strong>和<strong>并发</strong>。当然，redis还具备可以做分布式锁等其他功能，但是如果只是为了分布式锁这些其他功能，完全还有其他中间件(如zookpeer等)代替，并不是非要使用redis。因此，这个问题主要从性能和并发两个角度去答。 <strong>回答</strong>:如下所示，分为两点 <strong>（一）性能</strong> 如下图所示，我们在碰到需要执行耗时特别久，且结果不频繁变动的SQL，就特别适合将运行结果放入缓存。这样，后面的请求就去缓存中读取，使得请求能够<strong>迅速响应</strong>。 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200602163142440.png\" title=\"\" alt=\"image\"> <strong><font color=\"red\">题外话</font>：<strong>忽然想聊一下这个</strong>迅速响应</strong>的标准。其实根据交互效果的不同，这个响应时间没有固定标准。不过曾经有人这么告诉我:\"在理想状态下，我们的页面跳转需要在<strong>瞬间</strong>解决，对于页内操作则需要在<strong>刹那</strong>间解决。另外，超过<strong>一弹指</strong>的耗时操作要有进度提示，并且可以随时中止或取消，这样才能给用户最好的体验。\" 那么<strong>瞬间、刹那、一弹指</strong>具体是多少时间呢？ 根据《摩诃僧祗律》记载</p> \n<pre><code>一刹那者为一念，二十念为一瞬，二十瞬为一弹指，二十弹指为一罗预，二十罗预为一须臾，一日一夜有三十须臾。\n</code></pre> \n<p>那么，经过周密的计算，一<strong>瞬间</strong>为0.36 秒,一<strong>刹那</strong>有 0.018 秒.一<strong>弹指</strong>长达 7.2 秒。 <strong>（二）并发</strong> 如下图所示，在大并发的情况下，所有的请求直接访问数据库，数据库会出现连接异常。这个时候，就需要使用redis做一个缓冲操作，让请求先访问到redis，而不是直接访问数据库。 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200602163159740.png\" title=\"\" alt=\"image\"></p> \n<h3 id=\"redis-1\">2、使用redis有什么缺点</h3> \n<p><strong>分析</strong>:大家用redis这么久，这个问题是必须要了解的，基本上使用redis都会碰到一些问题，常见的也就几个。 <strong>回答</strong>:主要是四个问题 (一)缓存和数据库双写一致性问题 (二)缓存雪崩问题 (三)缓存击穿问题 (四)缓存的并发竞争问题 这四个问题，我个人是觉得在项目中，比较常遇见的，具体解决方案，后文给出。</p> \n<h3 id=\"redis-2\">3、单线程的redis为什么这么快</h3> \n<p><strong>分析</strong>:这个问题其实是对redis内部机制的一个考察。其实根据博主的面试经验，很多人其实都不知道redis是单线程工作模型。所以，这个问题还是应该要复习一下的。 <strong>回答</strong>:主要是以下三点 (一)纯内存操作 (二)单线程操作，避免了频繁的上下文切换 (三)采用了非阻塞<strong>I/O多路复用机制</strong></p> \n<p><strong><font color=\"red\">题外话</font>：<strong>我们现在要仔细的说一说I/O多路复用机制，因为这个说法实在是太通俗了，通俗到一般人都不懂是什么意思。博主打一个比方：小曲在S城开了一家快递店，负责同城快送服务。小曲因为资金限制，雇佣了</strong>一批</strong>快递员，然后小曲发现资金不够了，只够买<strong>一辆</strong>车送快递。 <strong>经营方式一</strong> 客户每送来一份快递，小曲就让一个快递员盯着，然后快递员开车去送快递。慢慢的小曲就发现了这种经营方式存在下述问题</p> \n<ul> \n <li>几十个快递员基本上时间都花在了抢车上了，大部分快递员都处在闲置状态，谁抢到了车，谁就能去送快递</li> \n <li>随着快递的增多，快递员也越来越多，小曲发现快递店里越来越挤，没办法雇佣新的快递员了</li> \n <li>快递员之间的协调很花时间</li> \n</ul> \n<p>综合上述缺点，小曲痛定思痛，提出了下面的经营方式 <strong>经营方式二</strong> 小曲只雇佣一个快递员。然后呢，客户送来的快递，小曲按<strong>送达地点</strong>标注好，然后<strong>依次</strong>放在一个地方。最后，那个快递员<strong>依次</strong>的去取快递，一次拿一个，然后开着车去送快递，送好了就回来拿下一个快递。</p> \n<p><strong>对比</strong> 上述两种经营方式对比，是不是明显觉得第二种，效率更高，更好呢。在上述比喻中:</p> \n<ul> \n <li>每个快递员------------------&gt;每个线程</li> \n <li>每个快递--------------------&gt;每个socket(I/O流)</li> \n <li>快递的送达地点--------------&gt;socket的不同状态</li> \n <li>客户送快递请求--------------&gt;来自客户端的请求</li> \n <li>小曲的经营方式--------------&gt;服务端运行的代码</li> \n <li>一辆车----------------------&gt;CPU的核数</li> \n</ul> \n<p>于是我们有如下结论 1、经营方式一就是传统的并发模型，每个I/O流(快递)都有一个新的线程(快递员)管理。 2、经营方式二就是I/O多路复用。只有单个线程(一个快递员)，通过跟踪每个I/O流的状态(每个快递的送达地点)，来管理多个I/O流。</p> \n<p>下面类比到真实的redis线程模型，如图所示 <img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200602163158369.png\" title=\"\" alt=\"image\"> 参照上图，简单来说，就是。我们的redis-client在操作的时候，会产生具有不同事件类型的socket。在服务端，有一段I/0多路复用程序，将其置入队列之中。然后，文件事件分派器，依次去队列中取，转发到不同的事件处理器中。 需要说明的是，这个I/O多路复用机制，redis还提供了select、epoll、evport、kqueue等多路复用函数库，大家可以自行去了解。</p> \n<h3 id=\"redis-3\">4、redis的数据类型，以及每种数据类型的使用场景</h3> \n<p><strong>分析</strong>：是不是觉得这个问题很基础，其实我也这么觉得。然而根据面试经验发现，至少百分八十的人答不上这个问题。建议，在项目中用到后，再类比记忆，体会更深，不要硬记。基本上，一个合格的程序员，五种类型都会用到。 <strong>回答</strong>：一共五种 (一)String 这个其实没啥好说的，最常规的set/get操作，value可以是String也可以是数字。一般做**<font color=\"red\">一些复杂的计数功能的缓存。</font>** (二)hash 这里value存放的是结构化的对象，比较方便的就是操作其中的某个字段。博主在做**<font color=\"red\">单点登录</font><strong>的时候，就是用这种数据结构存储用户信息，以cookieId作为key，设置30分钟为缓存过期时间，能很好的模拟出类似session的效果。 (三)list 使用List的数据结构，可以</strong><font color=\"red\">做简单的消息队列的功能</font><strong>。另外还有一个就是，可以利用lrange命令，</strong><font color=\"red\">做基于redis的分页功能</font><strong>，性能极佳，用户体验好。 (四)set 因为set堆放的是一堆不重复值的集合。所以可以做</strong><font color=\"red\">全局去重的功能</font><strong>。为什么不用JVM自带的Set进行去重？因为我们的系统一般都是集群部署，使用JVM自带的Set，比较麻烦，难道为了一个做一个全局去重，再起一个公共服务，太麻烦了。 另外，就是利用交集、并集、差集等操作，可以</strong><font color=\"red\">计算共同喜好，全部的喜好，自己独有的喜好等功能</font><strong>。 (五)sorted set sorted set多了一个权重参数score,集合中的元素能够按score进行排列。可以做</strong><font color=\"red\">排行榜应用，取TOP N操作</font><strong>。另外，参照另一篇<a href=\"https://www.cnblogs.com/rjzheng/p/8972725.html\">《分布式之延时任务方案解析》</a>，该文指出了sorted set可以用来做</strong><font color=\"red\">延时任务</font><strong>。最后一个应用就是可以做</strong><font color=\"red\">范围查找</font>**。</p> \n<h3 id=\"redis-4\">5、redis的过期策略以及内存淘汰机制</h3> \n<p><strong>分析</strong>:这个问题其实相当重要，到底redis有没用到家，这个问题就可以看出来。比如你redis只能存5G数据，可是你写了10G，那会删5G的数据。怎么删的，这个问题思考过么？还有，你的数据已经设置了过期时间，但是时间到了，内存占用率还是比较高，有思考过原因么? <strong>回答</strong>: redis采用的是定期删除+惰性删除策略。 <strong>为什么不用定时删除策略?</strong> 定时删除,用一个定时器来负责监视key,过期则自动删除。虽然内存及时释放，但是十分消耗CPU资源。在大并发请求下，CPU要将时间应用在处理请求，而不是删除key,因此没有采用这一策略. <strong>定期删除+惰性删除是如何工作的呢?</strong> 定期删除，redis默认每个100ms检查，是否有过期的key,有过期key则删除。需要说明的是，redis不是每个100ms将所有的key检查一次，而是随机抽取进行检查(如果每隔100ms,全部key进行检查，redis岂不是卡死)。因此，如果只采用定期删除策略，会导致很多key到时间没有删除。 于是，惰性删除派上用场。也就是说在你获取某个key的时候，redis会检查一下，这个key如果设置了过期时间那么是否过期了？如果过期了此时就会删除。 <strong>采用定期删除+惰性删除就没其他问题了么?</strong> 不是的，如果定期删除没删除key。然后你也没即时去请求key，也就是说惰性删除也没生效。这样，redis的内存会越来越高。那么就应该采用<strong>内存淘汰机制</strong>。 在redis.conf中有一行配置</p> \n<pre><code># maxmemory-policy volatile-lru\n</code></pre> \n<p>该配置就是配内存淘汰策略的(什么，你没配过？好好反省一下自己) 1）noeviction：当内存不足以容纳新写入数据时，新写入操作会报错。<strong><font color=\"red\">应该没人用吧。</font></strong> 2）allkeys-lru：当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的key。<strong><font color=\"red\">推荐使用，目前项目在用这种。</font></strong> 3）allkeys-random：当内存不足以容纳新写入数据时，在键空间中，随机移除某个key。<strong><font color=\"red\">应该也没人用吧，你不删最少使用Key,去随机删。</font></strong> 4）volatile-lru：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的key。<strong><font color=\"red\">这种情况一般是把redis既当缓存，又做持久化存储的时候才用。不推荐</font></strong> 5）volatile-random：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个key。<strong><font color=\"red\">依然不推荐</font></strong> 6）volatile-ttl：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，有更早过期时间的key优先移除。<strong><font color=\"red\">不推荐</font></strong> ps：如果没有设置 expire 的key, 不满足先决条件(prerequisites); 那么 volatile-lru, volatile-random 和 volatile-ttl 策略的行为, 和 noeviction(不删除) 基本上一致。</p> \n<h3 id=\"redis-5\">6、redis和数据库双写一致性问题</h3> \n<p><strong>分析</strong>:一致性问题是分布式常见问题，还可以再分为最终一致性和强一致性。数据库和缓存双写，就必然会存在不一致的问题。答这个问题，先明白一个前提。就是<strong>如果对数据有强一致性要求，不能放缓存。<strong>我们所做的一切，只能保证最终一致性。另外，我们所做的方案其实从根本上来说，只能说</strong>降低不一致发生的概率</strong>，无法完全避免。因此，有强一致性要求的数据，不能放缓存。 <strong>回答</strong>:<a href=\"https://www.cnblogs.com/rjzheng/p/9041659.html\">《分布式之数据库和缓存双写一致性方案解析》</a>给出了详细的分析，在这里简单的说一说。首先，采取正确更新策略，先更新数据库，再删缓存。其次，因为可能存在删除缓存失败的问题，提供一个补偿措施即可，例如利用消息队列。</p> \n<h3 id=\"section-4\">7、如何应对缓存穿透和缓存雪崩问题</h3> \n<p><strong>分析</strong>:这两个问题，说句实在话，一般中小型传统软件企业，很难碰到这个问题。如果有大并发的项目，流量有几百万左右。这两个问题一定要深刻考虑。 <strong>回答</strong>:如下所示 <strong>缓存穿透</strong>，即黑客故意去请求缓存中不存在的数据，导致所有的请求都怼到数据库上，从而数据库连接异常。 <strong><font color=\"red\">解决方案</font></strong>: (一)利用互斥锁，缓存失效的时候，先去获得锁，得到锁了，再去请求数据库。没得到锁，则休眠一段时间重试 (二)采用异步更新策略，无论key是否取到值，都直接返回。value值中维护一个缓存失效时间，缓存如果过期，异步起一个线程去读数据库，更新缓存。需要做<strong>缓存预热</strong>(项目启动前，先加载缓存)操作。 (三)提供一个能迅速判断请求是否有效的拦截机制，比如，利用布隆过滤器，内部维护一系列合法有效的key。迅速判断出，请求所携带的Key是否合法有效。如果不合法，则直接返回。 <strong>缓存雪崩</strong>，即缓存同一时间大面积的失效，这个时候又来了一波请求，结果请求都怼到数据库上，从而导致数据库连接异常。 <strong><font color=\"red\">解决方案</font></strong>: (一)给缓存的失效时间，加上一个随机值，避免集体失效。 (二)使用互斥锁，但是该方案吞吐量明显下降了。 (三)双缓存。我们有两个缓存，缓存A和缓存B。缓存A的失效时间为20分钟，缓存B不设失效时间。自己做缓存预热操作。然后细分以下几个小点</p> \n<ul> \n <li>I 从缓存A读数据库，有则直接返回</li> \n <li>II A没有数据，直接从B读数据，直接返回，并且异步启动一个更新线程。</li> \n <li>III 更新线程同时更新缓存A和缓存B。</li> \n</ul> \n<h3 id=\"rediskey\">8、如何解决redis的并发竞争key问题</h3> \n<p><strong>分析</strong>:这个问题大致就是，同时有多个子系统去set一个key。这个时候要注意什么呢？大家思考过么。需要说明一下，博主提前百度了一下，发现答案基本都是推荐用redis事务机制。博主**不推荐使用redis的事务机制。**因为我们的生产环境，基本都是redis集群环境，做了数据分片操作。你一个事务中有涉及到多个key操作的时候，这多个key不一定都存储在同一个redis-server上。因此，<strong>redis的事务机制，十分鸡肋。</strong> **回答:**如下所示 (1)如果对这个key操作，<strong>不要求顺序</strong> 这种情况下，准备一个分布式锁，大家去抢锁，抢到锁就做set操作即可，比较简单。 (2)如果对这个key操作，<strong>要求顺序</strong> 假设有一个key1,系统A需要将key1设置为valueA,系统B需要将key1设置为valueB,系统C需要将key1设置为valueC. 期望按照key1的value值按照 valueA--&gt;valueB--&gt;valueC的顺序变化。这种时候我们在数据写入数据库的时候，需要保存一个时间戳。假设时间戳如下</p> \n<pre><code>系统A key 1 {valueA  3:00}\n系统B key 1 {valueB  3:05}\n系统C key 1 {valueC  3:10}\n</code></pre> \n<p>那么，假设这会系统B先抢到锁，将key1设置为{valueB 3:05}。接下来系统A抢到锁，发现自己的valueA的时间戳早于缓存中的时间戳，那就不做set操作了。以此类推。</p> \n<p>其他方法，比如利用队列，将set方法变成串行访问也可以。总之，灵活变通。</p> \n<h2 id=\"section-5\">总结</h2> \n<p>本文对redis的常见问题做了一个总结。大部分是博主自己在工作中遇到，以及以前面试别人的时候，爱问的一些问题。另外，<strong>不推荐大家临时抱佛脚</strong>，真正碰到一些有经验的工程师，其实几下就能把你问懵。最后，希望大家有所收获吧。</p>',NULL,0,2,1,0,0,'引言为什么写这篇文章?博主的&quot;《分布式之消息队列复习精讲》&quot;得到了大家的好评，内心诚惶诚恐，想着再出一篇关于复习精讲的文章。但是还是要说明一下，复习精讲的文章偏面试准备，真','redis',1,'2020-06-02 16:32:01','2020-06-02 16:34:09'),(127,'ZooKeeper用途',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>ZooKeeper还可以用作其他用途，例如：</p> \n<ul> \n <li>数据发布与订阅（配置中心）</li> \n <li>负载均衡</li> \n <li>命名服务(Naming Service)</li> \n <li>分布式通知/协调</li> \n <li>集群管理与Master选举</li> \n <li>分布式锁</li> \n <li>分布式队列</li> \n</ul> \n<p>一些在线系统在运行中，需要在不停止程序的情况下能够动态调整某一个变量的值并且能够及时生效。特别是当部署了多台应用服务器的时候，需要能够做到在一台机器上修改配置文件，然后在同步到所有应用服务器。这时候使用ZooKeeper来实现就很合适了。</p> \n<p align=\"left\">ZooKeeper是一个高可用的分布式数据管理与系统协调框架。基于对Paxos算法的实现，使该框架保证了分布式环境中数据的强一致性，也正是基于这样的特性，使得ZooKeeper解决很多分布式问题。网上对ZK的应用场景也有不少介绍，本文将结合作者身边的项目例子，系统地对ZK的应用场景进行一个分门归类的介绍。</p> \n<p align=\"left\">值得注意的是，ZK并非天生就是为这些应用场景设计的，都是后来众多开发者根据其框架的特性，利用其提供的一系列API接口（或者称为原语集），摸索出来的典型使用方法。因此，也非常欢迎读者分享你在ZK使用上的奇技淫巧。</p> \n<p><strong>ZooKeeper典型应用场景一览数据发布与订阅（配置中心）</strong></p> \n<p align=\"left\">发布与订阅模型，即所谓的配置中心，顾名思义就是发布者将数据发布到ZK节点上，供订阅者动态获取数据，实现配置信息的集中式管理和动态更新。例如全局的配置信息，服务式服务框架的服务地址列表等就非常适合使用。</p> \n<ul> \n <li>应用中用到的一些配置信息放到ZK上进行集中管理。这类场景通常是这样：应用在启动的时候会主动来获取一次配置，同时，在节点上注册一个Watcher，这样一来，以后每次配置有更新的时候，都会实时通知到订阅的客户端，从来达到获取最新配置信息的目的。</li> \n <li>分布式搜索服务中，索引的元信息和服务器集群机器的节点状态存放在ZK的一些指定节点，供各个客户端订阅使用。</li> \n <li>分布式日志收集系统。这个系统的核心工作是收集分布在不同机器的日志。收集器通常是按照应用来分配收集任务单元，因此需要在ZK上创建一个以应用名作为path的节点P，并将这个应用的所有机器ip，以子节点的形式注册到节点P上，这样一来就能够实现机器变动的时候，能够实时通知到收集器调整任务分配。</li> \n <li>系统中有些信息需要动态获取，并且还会存在人工手动去修改这个信息的发问。通常是暴露出接口，例如JMX接口，来获取一些运行时的信息。引入ZK之后，就不用自己实现一套方案了，只要将这些信息存放到指定的ZK节点上即可。<br><br></li> \n</ul> \n<p align=\"left\">注意：在上面提到的应用场景中，有个默认前提是：数据量很小，但是数据更新可能会比较快的场景。</p> \n<p><strong>负载均衡</strong></p> \n<p align=\"left\">这里说的负载均衡是指软负载均衡。在分布式环境中，为了保证高可用性，通常同一个应用或同一个服务的提供方都会部署多份，达到对等服务。而消费者就须要在这些对等的服务器中选择一个来执行相关的业务逻辑，其中比较典型的是消息中间件中的生产者，消费者负载均衡。</p> \n<p align=\"left\">消息中间件中发布者和订阅者的负载均衡<strong>，linkedin开源的KafkaMQ和阿里开源的metaq都是通过zookeeper来做到生产者、消费者的负载均衡。这里以metaq为例如讲下</strong>：</p> \n<ul> \n <li>生产者负载均衡：metaq发送消息的时候，生产者在发送消息的时候必须选择一台broker上的一个分区来发送消息，因此metaq在运行过程中，会把所有broker和对应的分区信息全部注册到ZK指定节点上，默认的策略是一个依次轮询的过程，生产者在通过ZK获取分区列表之后，会按照brokerId和partition的顺序排列组织成一个有序的分区列表，发送的时候按照从头到尾循环往复的方式选择一个分区来发送消息。</li> \n <li> <p align=\"left\">消费负载均衡：</p> <p align=\"left\">在消费过程中，一个消费者会消费一个或多个分区中的消息，但是一个分区只会由一个消费者来消费。MetaQ的消费策略是：</p> \n  <ul class=\"litype_1\" type=\"1\"> \n   <li>每个分区针对同一个group只挂载一个消费者。</li> \n   <li>如果同一个group的消费者数目大于分区数目，则多出来的消费者将不参与消费。</li> \n   <li>如果同一个group的消费者数目小于分区数目，则有部分消费者需要额外承担消费任务。</li> \n  </ul> 在某个消费者故障或者重启等情况下，其他消费者会感知到这一变化（通过 zookeeper watch消费者列表），然后重新进行负载均衡，保证所有的分区都有消费者进行消费。<br><br></li> \n</ul> \n<p><strong>命名服务(Naming Service)</strong></p> \n<p align=\"left\">命名服务也是分布式系统中比较常见的一类场景。在分布式系统中，通过使用命名服务，客户端应用能够根据指定名字来获取资源或服务的地址，提供者等信息。被命名的实体通常可以是集群中的机器，提供的服务地址，远程对象等等——这些我们都可以统称他们为名字（Name）。其中较为常见的就是一些分布式服务框架中的服务地址列表。通过调用ZK提供的创建节点的API，能够很容易创建一个全局唯一的path，这个path就可以作为一个名称。</p> \n<p align=\"left\">阿里巴巴集团开源的分布<strong>式服务框架Dubbo中使用ZooKeeper来作为</strong>其命名服务，维护全局的服务地址列表，点击这里查看Dubbo开源项目。在Dubbo实现中：</p> \n<p align=\"left\">服务提供者在启动的时候，向ZK上的指定节点/dubbo/${serviceName}/providers目录下写入自己的URL地址，这个操作就完成了服务的发布。</p> \n<p align=\"left\">服务消费者启动的时候，订阅/dubbo/${serviceName}/providers目录下的提供者URL地址， 并向/dubbo/${serviceName} /consumers目录下写入自己的URL地址。</p> \n<p align=\"left\">注意，所有向ZK上注册的地址都是临时节点，这样就能够保证服务提供者和消费者能够自动感应资源的变化。</p> \n<p align=\"left\">另外，Dubbo还有针对服务粒度的监控，方法是订阅/dubbo/${serviceName}目录下所有提供者和消费者的信息。</p> \n<p><strong>分布式通知/协调</strong></p> \n<p align=\"left\">ZooKeeper中特有watcher注册与异步通知机制，能够很好的实现分布式环境下不同系统之间的通知与协调，实现对数据变更的实时处理。使用方法通常是不同系统都对ZK上同一个znode进行注册，监听znode的变化（包括znode本身内容及子节点的），其中一个系统update了znode，那么另一个系统能够收到通知，并作出相应处理</p> \n<ul> \n <li>另一种心跳检测机制：检测系统和被检测系统之间并不直接关联起来，而是通过zk上某个节点关联，大大减少系统耦合。</li> \n <li>另一种系统调度模式：某系统有控制台和推送系统两部分组成，控制台的职责是控制推送系统进行相应的推送工作。管理人员在控制台作的一些操作，实际上是修改了ZK上某些节点的状态，而ZK就把这些变化通知给他们注册Watcher的客户端，即推送系统，于是，作出相应的推送任务。</li> \n <li>另一种工作汇报模式：一些类似于任务分发系统，子任务启动后，到zk来注册一个临时节点，并且定时将自己的进度进行汇报（将进度写回这个临时节点），这样任务管理者就能够实时知道任务进度。 总之，使用zookeeper来进行分布式通知和协调能够大大降低系统之间的耦合<br><br></li> \n</ul> \n<p><strong>集群管理与Master选举</strong></p> \n<ul> \n <li> <p align=\"left\">集群机器监控：这通常用于那种对集群中机器状态，机器在线率有较高要求的场景，能够快速对集群中机器变化作出响应。这样的场景中，往往有一个监控系统，实时检测集群机器是否存活。过去的做法通常是：监控系统通过某种手段（比如ping）定时检测每个机器，或者每个机器自己定时向监控系统汇报“我还活着”。 这种做法可行，但是存在两个比较明显的问题：</p> \n  <ul class=\"litype_1\" type=\"1\"> \n   <li>集群中机器有变动的时候，牵连修改的东西比较多。</li> \n   <li>有一定的延时。</li> \n  </ul> <p align=\"left\">利用ZooKeeper有两个特性，就可以实时另一种集群机器存活性监控系统：</p> \n  <ul class=\"litype_1\" type=\"1\"> \n   <li>客户端在节点 x 上注册一个Watcher，那么如果 x?的子节点变化了，会通知该客户端。</li> \n   <li>创建EPHEMERAL类型的节点，一旦客户端和服务器的会话结束或过期，那么该节点就会消失。</li> \n  </ul> 例如，监控系统在 /clusterServers 节点上注册一个Watcher，以后每动态加机器，那么就往 /clusterServers 下创建一个 EPHEMERAL类型的节点：/clusterServers/{hostname}. 这样，监控系统就能够实时知道机器的增减情况，至于后续处理就是监控系统的业务了。</li> \n <li> <p align=\"left\">Master选举则是zookeeper中最为经典的应用场景了。 在分布式环境中，相同的业务应用分布在不同的机器上，有些业务逻辑（例如一些耗时的计算，网络I/O处理），往往只需要让整个集群中的某一台机器进行执行，其余机器可以共享这个结果，这样可以大大减少重复劳动，提高性能，于是这个master选举便是这种场景下的碰到的主要问题。</p> <p align=\"left\">利用ZooKeeper的强一致性，能够保证在分布式高并发情况下节点创建的全局唯一性，即：同时有多个客户端请求创建 /currentMaster 节点，最终一定只有一个客户端请求能够创建成功。利用这个特性，就能很轻易的在分布式环境中进行集群选取了。</p> <p align=\"left\">另外，这种场景演化一下，就是动态Master选举。这就要用到?EPHEMERAL_SEQUENTIAL类型节点的特性了。</p> <p align=\"left\">上文中提到，所有客户端创建请求，最终只有一个能够创建成功。在这里稍微变化下，就是允许所有请求都能够创建成功，但是得有个创建顺序，于是所有的请求最终在ZK上创建结果的一种可能情况是这样： /currentMaster/{sessionId}-1 ,?/currentMaster/{sessionId}-2 ,?/currentMaster/{sessionId}-3 ….. 每次选取序列号最小的那个机器作为Master，如果这个机器挂了，由于他创建的节点会马上小时，那么之后最小的那个机器就是Master了。</p> <p align=\"left\">在搜索系统中，如果集群中每个机器都生成一份全量索引，不仅耗时，而且不能保证彼此之间索引数据一致。因此让集群中的Master来进行全量索引的生成，然后同步到集群中其它机器。另外，Master选举的容灾措施是，可以随时进行手动指定master，就是说应用在zk在无法获取master信息时，可以通过比如http方式，向一个地方获取master。</p> 在Hbase中，也是使用ZooKeeper来实现动态HMaster的选举。在Hbase实现中，会在ZK上存储一些ROOT表的地址和HMaster的地址，HRegionServer也会把自己以临时节点（Ephemeral）的方式注册到Zookeeper中，使得HMaster可以随时感知到各个HRegionServer的存活状态，同时，一旦HMaster出现问题，会重新选举出一个HMaster来运行，从而避免了HMaster的单点问题<br><br></li> \n</ul> \n<p><strong>分布式锁</strong></p> \n<p align=\"left\">分布式锁，这个主要得益于ZooKeeper为我们保证了数据的强一致性。锁服务可以分为两类，一个是保持独占，另一个是控制时序。</p> \n<ul> \n <li>所谓保持独占，就是所有试图来获取这个锁的客户端，最终只有一个可以成功获得这把锁。通常的做法是把zk上的一个znode看作是一把锁，通过create znode的方式来实现。所有客户端都去创建 /distribute_lock 节点，最终成功创建的那个客户端也即拥有了这把锁。</li> \n <li>控制时序，就是所有视图来获取这个锁的客户端，最终都是会被安排执行，只是有个全局时序了。做法和上面基本类似，只是这里/distribute_lock 已经预先存在，客户端在它下面创建临时有序节点（这个可以通过节点的属性控制：CreateMode.EPHEMERAL_SEQUENTIAL来指定）。Zk的父节点（/distribute_lock）维持一份sequence,保证子节点创建的时序性，从而也形成了每个客户端的全局时序。<br><br></li> \n</ul> \n<p><strong>分布式队列</strong></p> \n<p align=\"left\">队列方面，简单地讲有两种，一种是常规的先进先出队列，另一种是要等到队列成员聚齐之后的才统一按序执行。对于第一种先进先出队列，和分布式锁服务中的控制时序场景基本原理一致，这里不再赘述。</p> \n<p align=\"left\">第二种队列其实是在FIFO队列的基础上作了一个增强。通常可以在 /queue 这个znode下预先建立一个/queue/num 节点，并且赋值为n（或者直接给/queue赋值n），表示队列大小，之后每次有队列成员加入后，就判断下是否已经到达队列大小，决定是否可以开始执行了。这种用法的典型场景是，分布式环境中，一个大任务Task A，需要在很多子任务完成（或条件就绪）情况下才能进行。这个时候，凡是其中一个子任务完成（就绪），那么就去 /taskList 下建立自己的临时时序节点 （CreateMode.EPHEMERAL_SEQUENTIAL），当 /taskList 发现自己下面的子节点满足指定个数，就可以进行下一步按序进行处理了。</p> \n<p align=\"left\">转载至：<a href=\"http://rdc.taobao.com/team/jm/archives/1232\" target=\"_blank\">http://rdc.taobao.com/team/jm/archives/1232</a></p> \n<p align=\"left\">&nbsp;</p> \n<p align=\"left\">&nbsp;</p> \n<p align=\"left\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p> \n<div id=\"main\"> \n <div id=\"mainContent\"> \n  <div class=\"forFlow\"> \n   <div id=\"topics\"> \n    <div class=\"post\"> \n     <h1 class=\"postTitle\"><a id=\"cb_post_title_url\" class=\"postTitle2\" href=\"http://www.cnblogs.com/sharpxiajun/archive/2013/06/02/3113923.html\" target=\"_blank\">分布式网站架构后续：zookeeper技术浅析</a></h1> \n     <div class=\"clear\">\n      &nbsp;\n     </div> \n     <div class=\"postBody\"> \n      <div id=\"cnblogs_post_body\"> \n       <p>　　Zookeeper是hadoop的一个子项目，虽然源自hadoop，但是我发现zookeeper脱离hadoop的范畴开发分布式框架的运用越来越多。今天我想谈谈zookeeper，本文不谈如何使用zookeeper，而是zookeeper到底有哪些实际的运用，哪些类型的应用能发挥zookeeper的优势，最后谈谈zookeeper对分布式网站架构能产生怎样的作用。</p> \n       <p>　　Zookeeper是针对大型分布式系统的高可靠的协调系统。由这个定义我们知道zookeeper是个协调系统，作用的对象是分布式系统。为什么分布式系统需要一个协调系统了？理由如下：</p> \n       <p>　　开发分布式系统是件很困难的事情，其中的困难主要体现在分布式系统的“部分失败”。“部分失败”是指信息在网络的两个节点之间传送时候，如果网络出了故障，发送者无法知道接收者是否收到了这个信息，而且这种故障的原因很复杂，接收者可能在出现网络错误之前已经收到了信息，也可能没有收到，又或接收者的进程死掉了。发送者能够获得真实情况的唯一办法就是重新连接到接收者，询问接收者错误的原因，这就是分布式系统开发里的“部分失败”问题。</p> \n       <p>　　Zookeeper就是解决分布式系统“部分失败”的框架。Zookeeper不是让分布式系统避免“部分失败”问题，而是让分布式系统当碰到部分失败时候，可以正确的处理此类的问题，让分布式系统能正常的运行。</p> \n       <p>　　下面我要讲讲zookeeper的实际运用场景：</p> \n       <p>　　<strong>场景一</strong>：有一组服务器向客户端提供某种服务（例如：我前面做的分布式网站的服务端，就是由四台服务器组成的集群，向前端集群提供服务），我们希望客户端每次请求服务端都可以找到服务端集群中某一台服务器，这样服务端就可以向客户端提供客户端所需的服务。对于这种场景，我们的程序中一定有一份这组服务器的列表，每次客户端请求时候，都是从这份列表里读取这份服务器列表。那么这分列表显然不能存储在一台单节点的服务器上，否则这个节点挂掉了，整个集群都会发生故障，我们希望这份列表时高可用的<strong>。高可用的解决方案是：这份列表是分布式存储的，它是由存储这份列表的服务器共同管理的，如果存储列表里的某台服务器坏掉了，其他服务器马上可以替代坏掉的服务器，并且可以把坏掉的服务器从列表里删除掉，</strong>让故障服务器退出整个集群的运行，而这一切的操作又不会由故障的服务器来操作，而是集群里正常的服务器来完成。这是一种主动的分布式数据结构，能够在外部情况发生变化时候主动修改数据项状态的数据机构。Zookeeper框架提供了这种服务。<strong>这种服务名字就是：统一命名服务，它和javaEE里的JNDI服务很像。</strong></p> \n       <p>　　<strong>场景二</strong>：分布式锁服务。当分布式系统操作数据，例如：读取数据、分析数据、最后修改数据。在分布式系统里这些操作可能会分散到集群里不同的节点上，那么这时候就存在数据操作过程中一致性的问题，如果不一致，我们将会得到一个错误的运算结果，在单一进程的程序里，一致性的问题很好解决，但是到了分布式系统就比较困难，因为分布式系统里不同服务器的运算都是在独立的进程里，运算的中间结果和过程还要通过网络进行传递，那么想做到数据操作一致性要困难的多。Zookeeper提供了一个锁服务解决了这样的问题，能让我们在做分布式数据运算时候，保证数据操作的一致性。</p> \n       <p>　　<strong>场景三</strong>：配置管理。在分布式系统里，我们会把一个服务应用分别部署到n台服务器上，这些服务器的配置文件是相同的（例如：我设计的分布式网站框架里，服务端就有4台服务器，4台服务器上的程序都是一样，配置文件都是一样），如果配置文件的配置选项发生变化，那么我们就得一个个去改这些配置文件，如果我们需要改的服务器比较少，这些操作还不是太麻烦，如果我们分布式的服务器特别多，比如某些大型互联网公司的hadoop集群有数千台服务器，那么更改配置选项就是一件麻烦而且危险的事情。这时候zookeeper就可以派上用场了，我们可以把zookeeper当成一个高可用的配置存储器，<strong>把这样的事情交给zookeeper进行管理，我们将集群的配置文件拷贝到zookeeper的文件系统的某个节点上，然后用zookeeper监控所有分布式系统里配置文件的状态，一旦发现有配置文件发生了变化，每台服务器都会收到zookeeper的通知，让每台服务器同步zookeeper里的配置文件，</strong>zookeeper服务也会保证同步操作原子性，确保每个服务器的配置文件都能被正确的更新。</p> \n       <p>　　<strong>场景四</strong>：为分布式系统提供故障修复的功能。集群管理是很困难的，在分布式系统里加入了zookeeper服务，能让我们很容易的对集群进行管理。集群管理最麻烦的事情就是节点故障管理，zookeeper可以让集群选出一个健康的节点作为master，master节点会知道当前集群的每台服务器的运行状况，一旦某个节点发生故障，master会把这个情况通知给集群其他服务器，从而重新分配不同节点的计算任务。Zookeeper不仅可以发现故障，也会对有故障的服务器进行甄别，看故障服务器是什么样的故障，如果该故障可以修复，zookeeper可以自动修复或者告诉系统管理员错误的原因让管理员迅速定位问题，修复节点的故障。大家也许还会有个疑问，master故障了，那怎么办了？zookeeper也考虑到了这点，zookeeper内部有一个“选举领导者的算法”，master可以动态选择，当master故障时候，zookeeper能马上选出新的master对集群进行管理。</p> \n       <p>　　下面我要讲讲zookeeper的特点：</p> \n       <ol> \n        <li>zookeeper是一个精简的文件系统。这点它和hadoop有点像，但是zookeeper这个文件系统是管理小文件的，而hadoop是管理超大文件的。</li> \n        <li>zookeeper提供了丰富的“构件”，这些构件可以实现很多协调数据结构和协议的操作。例如：分布式队列、分布式锁以及一组同级节点的“领导者选举”算法。</li> \n        <li>zookeeper是高可用的，它本身的稳定性是相当之好，分布式集群完全可以依赖zookeeper集群的管理，利用zookeeper避免分布式系统的单点故障的问题。</li> \n        <li>zookeeper采用了松耦合的交互模式。这点在zookeeper提供分布式锁上表现最为明显，zookeeper可以被用作一个约会机制，让参入的进程不在了解其他进程的（或网络）的情况下能够彼此发现并进行交互，参入的各方甚至不必同时存在，只要在zookeeper留下一条消息，在该进程结束后，另外一个进程还可以读取这条信息，从而解耦了各个节点之间的关系。</li> \n        <li>zookeeper为集群提供了一个共享存储库，集群可以从这里集中读写共享的信息，避免了每个节点的共享操作编程，减轻了分布式系统的开发难度。</li> \n        <li>zookeeper的设计采用的是观察者的设计模式，zookeeper主要是负责存储和管理大家关心的数据，然后接受观察者的注册，一旦这些数据的状态发生变化，Zookeeper 就将负责通知已经在 Zookeeper 上注册的那些观察者做出相应的反应，从而实现集群中类似 Master/Slave 管理模式。</li> \n       </ol> \n       <p>　　由此可见zookeeper很利于分布式系统开发，它能让分布式系统更加健壮和高效。</p> \n       <p>　　前不久我参加了部门的hadoop兴趣小组，测试环境的hadoop、mapreduce、hive及hbase都是我来安装的，安装hbase时候安装要预先安装zookeeper，最早我是在四台服务器上都安装了zookeeper，但是同事说安装四台和安装三台是一回事，这是因为zookeeper要求半数以上的机器可用，zookeeper才能提供服务，所以3台的半数以上就是2台了，4台的半数以上也是两台，因此装了三台服务器完全可以达到4台服务器的效果，这个问题说明zookeeper进行安装的时候通常选择奇数台服务器。在学习hadoop的过程中，我感觉zookeeper是最难理解的一个子项目，原因倒不是它技术负责，而是它的应用方向很让我困惑，所以我有关hadoop技术第一篇文章就从zookeeper开始，也不讲具体技术实现，而从zookeeper的应用场景讲起，理解了zookeeper应用的领域，我想再学习zookeeper就会更加事半功倍。</p> \n       <p>　　之所以今天要谈谈zookeeper，也是为我上一篇文章分布式网站框架的补充。虽然我设计网站架构是分布式结构，也做了简单的故障处理机制，比如：心跳机制，但是对集群的单点故障还是没有办法的，如果某一台服务器坏掉了，客户端任然会尝试连接这个服务器，导致部分请求的阻塞，也会导致服务器资源的浪费。不过我目前也不想去修改自己的框架，因为我总觉得在现有的服务上添加zookeeper服务会影响网站的效率，如果有独立的服务器集群部署zookeeper还是值得考虑的，但是服务器资源太宝贵了，这个可能性不大。幸好我们部门也发现了这样的问题，我们部门将开发一个强大的远程调用框架，将集群管理和通讯管理这块剥离出来，集中式提供高效可用的服务，等部门的远程框架开发完毕，我们的网站加入新的服务，我想我们的网站将会更加稳定和高效。</p> \n      </div> \n     </div> \n    </div> \n   </div> \n  </div> \n </div> \n</div> \n<p align=\"left\">&nbsp;哈哈，讲了这么久估计有童鞋可能有点烦了，不是说应用zookeeper的实例吗？怎么还没见到zookeeper的影子。别着急，zookeeper马上就要上场了。</p> \n<p>　　还是以我前面博客里写分布式网站讲起，服务端系统我们可以当做服务提供者，前端系统当做服务调用者，提供者可以类比商户，调用者可以类比客户，商户和客户可以直接进行交易，这种直接交易方式非常原始甚至还会有风险，现代社会商户和客户直接的交易十分高效，高效的原因是因为有一个规范的大市场，商户和客户的交易在市场里进行的，这样交易会变得更加安全和高效，我设计的分布式框架最大的特点就是提供了一个类似市场的角色，它来管理服务提供者和服务调用者，我把这个功能模块称为远程调用管理组件。</p> \n<p>　　远程调用管理组件是本框架的核心，它的主要作用是接收服务端提供者的注册的通知，该通知一般是接口以及该接口的实现类还有服务器的ip地址，管理组件会将这些通知记录下来，并且根据配置对这些服务程序进行分组和标记，注册好的信息管理组件会将这些信息推送到服务调用者。远程调用管理组件还包含心跳机制，这个心跳机制是针对服务提供者，通过心跳机制检测服务提供者的健康状况，管理组件不会检测服务调用者的健康状态，因为这个没必要，因为本框架的使用还是调用者直接去请求提供者，逻辑上是没必要关心调用者的状态，这和bs架构里浏览器一样，我们不会去关心浏览器用户是不是存在。服务提供者、服务调用者和远程调用管理组件的关系如下图所示：</p> \n<p><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200603172244653.png\" title=\"\" alt=\"\"></p> \n<p>　　远程调用框架运行的过程是：当服务提供者启动时候，它会将自己的ip地址和注册的方法传输到远程调用管理组件，管理组件接收到注册信息会将这些信息存储下来，存储技术就是使用zookeeper，存储成功后，管理组件会将成功通知传回给服务提供者，同时管理组件还会通过心跳检测服务提供者是否健康；当服务调用者启动时候，它会向管理组件请求服务提供者信息，管理组件接收到请求后会将相关信息推送给服务调用者。在实际系统运行时候，服务调用者直接和服务提供者进行通信交互了，通信方式是netty，如果调用者和提供者有相关变化，都会先通知服务管理组件，服务管理组件会将相关变更信息推送给相应的系统。</p> \n<p>&nbsp;</p> \n<p>　　远程调用管理组件主要是通过zookeeper实现，zookeeper拥有一个层次的命名空间，它的模型是一个树状结构，树状结构是一个强大的数据类型，它几乎能存储所有不同的数据类型，我们通过zookeeper将这些信息保存起来，便于我们管理整个远程调用框架，同时zookeeper还是高可靠的，这个我在前面zookeeper文章里讲到了，这样就保证了整个远程调用框架的稳定性，实际应用中我们会将组件编译成一个jar包，不同的项目直接引用这个jar包，这样管理组件服务端和服务的提供者和调用者就联系起来。至于提供者和调用者的通信机制是直接进行，因为我们将通信程序集成在jar包里，只不过相应的管理机制抽取到外部服务端进行统一管理。</p> \n<p>&nbsp;</p> \n<p>　　这就是我设计的远程调用框架，可惜的是，这个构思我还没有真正实现过，今天拿出来是想体现zookeeper的实际应用，为我后面讲解zookeeper做铺垫，至于是否可行，看以后有没有机会开发个类似的系统，到时估计还有很多意想不到的问题要解决。</p>',NULL,0,2,1,0,0,'ZooKeeper还可以用作其他用途，例如：数据发布与订阅（配置中心）负载均衡命名服务(NamingService)分布式通知/协调集群管理与Master选举分布式锁分布式队列一些在','ZooKeeper',1,'2020-06-03 17:22:45','2020-06-03 17:50:42'),(128,'Zookeeper 3、Zookeeper工作原理（详细）',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p><span style=\"font-size: 14pt;\"><strong>1、Zookeeper的角色</strong></span></p> \n<p>　　» 领导者（leader），负责进行投票的发起和决议，更新系统状态<br>　　» 学习者（learner），包括跟随者（follower）和观察者（observer），follower用于接受客户端请求并想客户端返回结果，在选主过程中参与投票<br>　　» Observer可以接受客户端连接，将写请求转发给leader，但observer不参加投票过程，只同步leader的状态，observer的目的是为了扩展系统，提高读取速度<br>　　» 客户端（client），请求发起方</p> \n<p>　　　　<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200603173908858.png\" title=\"\" alt=\"\"></p> \n<p>　　　　<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200603173908483.jpg\" title=\"\" alt=\"\">　</p> \n<p>　　• Zookeeper的核心是原子广播，这个机制保证了各个Server之间的同步。实现这个机制的协议叫做Zab协<br>　　 &nbsp;&nbsp;议。Zab协议有两种模式，它们分别是恢复模式（选主）和广播模式（同步）。当服务启动或者在领导者<br>　　　崩溃后，Zab就进入了恢复模式，当领导者被选举出来，且大多数Server完成了和leader的状态同步以后<br>　　 &nbsp;，恢复模式就结束了。状态同步保证了leader和Server具有相同的系统状态。</p> \n<p>　　• 为了保证事务的顺序一致性，zookeeper采用了递增的事务id号（zxid）来标识事务。所有的提议（<br>　　　proposal）都在被提出的时候加上了zxid。实现中zxid是一个64位的数字，它高32位是epoch用来标识<br>　　 &nbsp;&nbsp;leader关系是否改变，每次一个leader被选出来，它都会有一个新的epoch，标识当前属于那个leader的<br>　　　统治时期。低32位用于递增计数。<br>　　• 每个Server在工作过程中有三种状态：<br>　　　　LOOKING：当前Server不知道leader是谁，正在搜寻<br>　　　　LEADING：当前Server即为选举出来的leader<br>　　　　FOLLOWING：leader已经选举出来，当前Server与之同步</p> \n<p>　　其他文档：http://www.cnblogs.com/lpshou/archive/2013/06/14/3136738.html</p> \n<p><span style=\"font-size: 14pt;\"><strong>2、Zookeeper 的读写机制</strong></span></p> \n<p>　　» Zookeeper是一个由多个server组成的集群<br>　　» 一个leader，多个follower<br>　　» 每个server保存一份数据副本<br>　　» 全局数据一致<br>　　» 分布式读写<br>　　» 更新请求转发，由leader实施</p> \n<p><span style=\"font-size: 14pt;\"><strong>3、Zookeeper 的保证　</strong></span></p> \n<p>　　» 更新请求顺序进行，来自同一个client的更新请求按其发送顺序依次执行<br>　　»&nbsp;数据更新原子性，一次数据更新要么成功，要么失败<br>　　» 全局唯一数据视图，client无论连接到哪个server，数据视图都是一致的<br>　　» 实时性，在一定事件范围内，client能读到最新数据</p> \n<p><span style=\"font-size: 14pt;\"><strong>4、Zookeeper节点数据操作流程</strong></span></p> \n<p>　　　　<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200603173910421.png\" title=\"\" alt=\"\">　　　</p> \n<p> 　　　　注：1.在Client向Follwer发出一个写的请求</p> \n<p>　　　　　　2.Follwer把请求发送给Leader</p> \n<p>　　　　　　3.Leader接收到以后开始发起投票并通知Follwer进行投票</p> \n<p>　　　　　　4.Follwer把投票结果发送给Leader</p> \n<p>　　　　　　5.Leader将结果汇总后如果需要写入，则开始写入同时把写入操作通知给Leader，然后commit;</p> \n<p>　　　　　　6.Follwer把请求结果返回给Client</p> \n<p>　　　　　　</p> \n<p>　　　　• Follower主要有四个功能：<br> 　　　　• 1. 向Leader发送请求（PING消息、REQUEST消息、ACK消息、REVALIDATE消息）；<br> 　　　　• 2 .接收Leader消息并进行处理；<br> 　　　　• 3 .接收Client的请求，如果为写请求，发送给Leader进行投票；<br> 　　　　• 4 .返回Client结果。<br> 　　　　• Follower的消息循环处理如下几种来自Leader的消息：<br> 　　　　• 1 .PING消息： 心跳消息；<br> 　　　　• 2 .PROPOSAL消息：Leader发起的提案，要求Follower投票；<br> 　　　　• 3 .COMMIT消息：服务器端最新一次提案的信息；<br> 　　　　• 4 .UPTODATE消息：表明同步完成；<br> 　　　　• 5 .REVALIDATE消息：根据Leader的REVALIDATE结果，关闭待revalidate的session还是允许其接受消息；<br> 　　　　• 6 .SYNC消息：返回SYNC结果到客户端，这个消息最初由客户端发起，用来强制得到最新的更新。</p> \n<p><span style=\"font-size: 14pt;\"><strong>5、Zookeeper leader 选举　</strong></span>　</p> \n<p>　　• 半数通过<br>　　　　– 3台机器 挂一台 2&gt;3/2<br>　　　　– 4台机器 挂2台 2！&gt;4/2</p> \n<p>　　</p> \n<p>　　• A提案说，我要选自己，B你同意吗？C你同意吗？B说，我同意选A；C说，我同意选A。(注意，这里超过半数了，其实在现实世界选举已经成功了。</p> \n<p>　　　但是计算机世界是很严格，另外要理解算法，要继续模拟下去。)<br>　　• 接着B提案说，我要选自己，A你同意吗；A说，我已经超半数同意当选，你的提案无效；C说，A已经超半数同意当选，B提案无效。<br>　　• 接着C提案说，我要选自己，A你同意吗；A说，我已经超半数同意当选，你的提案无效；B说，A已经超半数同意当选，C的提案无效。<br>　　• 选举已经产生了Leader，后面的都是follower，只能服从Leader的命令。而且这里还有个小细节，就是其实谁先启动谁当头。</p> \n<p>　　<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200603173909268.png\" title=\"\" alt=\"\"></p> \n<p>　　<img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200603173907644.png\" title=\"\" alt=\"\"></p> \n<p><span style=\"font-size: 14pt;\"><strong>6、zxid</strong></span></p> \n<p>　　• znode节点的状态信息中包含czxid, 那么什么是zxid呢?<br>　　• ZooKeeper状态的每一次改变, 都对应着一个递增的Transaction id, 该id称为zxid. 由于zxid的递增性质, 如果zxid1小于zxid2, 那么zxid1肯定先于zxid2发生. </p> \n<p>　　　创建任意节点, 或者更新任意节点的数据, 或者删除任意节点, 都会导致Zookeeper状态发生改变, 从而导致zxid的值增加.</p> \n<p><span style=\"font-size: 14pt;\"><strong>7、Zookeeper工作原理</strong></span></p> \n<p>　　» Zookeeper的核心是原子广播，这个机制保证了各个server之间的同步。实现这个机制的协议叫做Zab协议。Zab协议有两种模式，它们分别是恢复模式和广播模式。</p> \n<p>　　　当服务启动或者在领导者崩溃后，Zab就进入了恢复模式，当领导者被选举出来，且大多数server的完成了和leader的状态同步以后，恢复模式就结束了。</p> \n<p>　　　状态同步保证了leader和server具有相同的系统状态</p> \n<p>　　» 一旦leader已经和多数的follower进行了状态同步后，他就可以开始广播消息了，即进入广播状态。这时候当一个server加入zookeeper服务中，它会在恢复模式下启动，</p> \n<p>　　　发现leader，并和leader进行状态同步。待到同步结束，它也参与消息广播。Zookeeper服务一直维持在Broadcast状态，直到leader崩溃了或者leader失去了大部分</p> \n<p>　　　的followers支持。</p> \n<p>　　» 广播模式需要保证proposal被按顺序处理，因此zk采用了递增的事务id号(zxid)来保证。所有的提议(proposal)都在被提出的时候加上了zxid。</p> \n<p>　　　实现中zxid是一个64为的数字，它高32位是epoch用来标识leader关系是否改变，每次一个leader被选出来，它都会有一个新的epoch。低32位是个递增计数。</p> \n<p>　　» 当leader崩溃或者leader失去大多数的follower，这时候zk进入恢复模式，恢复模式需要重新选举出一个新的leader，让所有的server都恢复到一个正确的状态。　</p> \n<p>　　» 每个Server启动以后都询问其它的Server它要投票给谁。<br>　　» 对于其他server的询问，server每次根据自己的状态都回复自己推荐的leader的id和上一次处理事务的zxid（系统启动时每个server都会推荐自己）<br>　　» 收到所有Server回复以后，就计算出zxid最大的哪个Server，并将这个Server相关信息设置成下一次要投票的Server。<br>　　» 计算这过程中获得票数最多的的sever为获胜者，如果获胜者的票数超过半数，则改server被选为leader。否则，继续这个过程，直到leader被选举出来　　</p> \n<p>　　» leader就会开始等待server连接<br>　　» Follower连接leader，将最大的zxid发送给leader<br>　　» Leader根据follower的zxid确定同步点<br>　　» 完成同步后通知follower 已经成为uptodate状态<br>　　» Follower收到uptodate消息后，又可以重新接受client的请求进行服务了</p> \n<p><span style=\"font-size: 14pt;\"><strong>8、数据一致性与paxos 算法</strong></span>　　</p> \n<p>　　• 据说Paxos算法的难理解与算法的知名度一样令人敬仰，所以我们先看如何保持数据的一致性，这里有个原则就是：<br>　　• 在一个分布式数据库系统中，如果各节点的初始状态一致，每个节点都执行相同的操作序列，那么他们最后能得到一个一致的状态。<br>　　• Paxos算法解决的什么问题呢，解决的就是保证每个节点执行相同的操作序列。好吧，这还不简单，master维护一个<br>　　 &nbsp; 全局写队列，所有写操作都必须 放入这个队列编号，那么无论我们写多少个节点，只要写操作是按编号来的，就能保证一<br>　　　致性。没错，就是这样，可是如果master挂了呢。<br>　　• Paxos算法通过投票来对写操作进行全局编号，同一时刻，只有一个写操作被批准，同时并发的写操作要去争取选票，<br>　　　只有获得过半数选票的写操作才会被 批准（所以永远只会有一个写操作得到批准），其他的写操作竞争失败只好再发起一<br>　　　轮投票，就这样，在日复一日年复一年的投票中，所有写操作都被严格编号排 序。编号严格递增，当一个节点接受了一个<br>　　　编号为100的写操作，之后又接受到编号为99的写操作（因为网络延迟等很多不可预见原因），它马上能意识到自己 数据<br>　　　不一致了，自动停止对外服务并重启同步过程。任何一个节点挂掉都不会影响整个集群的数据一致性（总2n+1台，除非挂掉大于n台）。<br>　&nbsp;总结<br>　　• Zookeeper 作为 Hadoop 项目中的一个子项目，是 Hadoop 集群管理的一个必不可少的模块，它主要用来控制集群中的数据，</p> \n<p>　　　如它管理 Hadoop 集群中的 NameNode，还有 Hbase 中 Master Election、Server 之间状态同步等。\\</p> \n<p>　　　<span style=\"color: #ff0000;\">关于Paxos算法可以查看文章&nbsp;<a href=\"https://www.douban.com/note/208430424/\" target=\"_blank\"><span style=\"color: #ff0000;\">Zookeeper全解析——Paxos作为灵魂</span></a></span></p> \n<p><span style=\"color: #ff0000;\"><span style=\"color: #ff0000;\">　　　推荐书籍：《从Paxos到Zookeeper分布式一致性原理与实践</span></span><span style=\"color: #ff0000; line-height: 1.5;\">》</span></p> \n<p><br><span style=\"font-size: 14pt;\"><strong>9、Observer　</strong></span>　</p> \n<p>　　• Zookeeper需保证高可用和强一致性；<br>　　• 为了支持更多的客户端，需要增加更多Server；<br>　　• Server增多，投票阶段延迟增大，影响性能；<br>　　• 权衡伸缩性和高吞吐率，引入Observer<br>　　• Observer不参与投票；<br>　　• Observers接受客户端的连接，并将写请求转发给leader节点；<br>　　• 加入更多Observer节点，提高伸缩性，同时不影响吞吐率</p> \n<p><strong><span style=\"font-size: 14pt;\">10、&nbsp;为什么zookeeper集群的数目，一般为奇数个？</span></strong></p> \n<p>　　•Leader选举算法采用了Paxos协议；<br>　　•Paxos核心思想：当多数Server写成功，则任务数据写成功如果有3个Server，则两个写成功即可；如果有4或5个Server，则三个写成功即可。<br>　　•Server数目一般为奇数（3、5、7）如果有3个Server，则最多允许1个Server挂掉；如果有4个Server，则同样最多允许1个Server挂掉由此，</p> \n<p>　　 &nbsp;我们看出3台服务器和4台服务器的的容灾能力是一样的，所以为了节省服务器资源，一般我们采用奇数个数，作为服务器部署个数。</p> \n<p><strong><span style=\"font-size: 14pt;\">11、Zookeeper 的数据模型　</span></strong></p> \n<p>　　» 层次化的目录结构，命名符合常规文件系统规范<br>　　» 每个节点在zookeeper中叫做znode,并且其有一个唯一的路径标识<br>　　» 节点Znode可以包含数据和子节点，但是EPHEMERAL类型的节点不能有子节点<br>　　» Znode中的数据可以有多个版本，比如某一个路径下存有多个数据版本，那么查询这个路径下的数据就需要带上版本<br>　　» 客户端应用可以在节点上设置监视器<br>　　» 节点不支持部分读写，而是一次性完整读写</p> \n<p><span style=\"font-size: 14pt;\"><strong>12、Zookeeper 的节点</strong></span></p> \n<p>　　» Znode有两种类型，短暂的（ephemeral）和持久的（persistent）<br>　　» Znode的类型在创建时确定并且之后不能再修改<br>　　» 短暂znode的客户端会话结束时，zookeeper会将该短暂znode删除，短暂znode不可以有子节点<br>　　» 持久znode不依赖于客户端会话，只有当客户端明确要删除该持久znode时才会被删除<br>　　» Znode有四种形式的目录节点<br>　　» PERSISTENT（持久的）<br>　　» EPHEMERAL(暂时的)<br>　　» PERSISTENT_SEQUENTIAL（持久化顺序编号目录节点）<br>　　» EPHEMERAL_SEQUENTIAL（暂时化顺序编号目录节点）</p> \n<p>&nbsp;</p>',NULL,0,2,1,0,0,'1、Zookeeper的角色&#187;领导者（leader），负责进行投票的发起和决议，更新系统状态&#187;学习者（learner），包括跟随者（follower）和观察者（observ','ZooKeeper',1,'2020-06-03 17:39:11','2020-06-05 09:48:32'),(129,'Linux常用基本命令：三剑客命令之-awk基础用法',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>awk是一个超级强大的文本格式化处理工具，他与grep, sed命令被成为linux 三剑客命令</p> \n<h3>三剑客命令的特点：</h3> \n<p>grep：只要用来匹配和查找文本</p> \n<p>sed: 编辑匹配到文本</p> \n<p>awk: 格式化文本，可以对复杂文本进行处理</p> \n<p>&nbsp;</p> \n<p>awk语法格式：awk [options] \'program\' file1 file2 ...&nbsp;</p> \n<p>其中，program包含两部分：\'pattern{action}\'，最常用的两个action就是print和printf，如果学过c语言，你就知道，他们专门由于格式化字符串，　awk把处理过的格式文本，用他们输出</p> \n<p>&nbsp;</p> \n<p>１，不使用任何选项，模式和action，　awk就相当于输出整个文件，awk的工作方式是：逐行扫描.　默认情况下　扫描行的时候，用空格分割列，输出的时候也是空格</p> \n<p>使用print这个动作，打印文件所有的内容.</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nbye bye\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nbye bye</span></pre> \n</div> \n<p>２，把ls -l 的结果通过管道交给awk逐行扫描处理，$1打印每一行的第一列，$3:每一行的第三列，$9就是第９列了...</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">ls</span> -<span style=\"color: #000000;\">l\ntotal </span><span style=\"color: #800080;\">4</span>\n-rw-rw-r-- <span style=\"color: #800080;\">1</span> ghostwu ghostwu <span style=\"color: #800080;\">51</span> 5月  <span style=\"color: #800080;\">21</span> <span style=\"color: #800080;\">23</span>:<span style=\"color: #800080;\">23</span><span style=\"color: #000000;\"> ghostwu.txt\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">ls</span> -l | <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print $1}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">\ntotal\n</span>-rw-rw-r--<span style=\"color: #000000;\">\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">ls</span> -l | <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print $3}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">\n\nghostwu\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">ls</span> -l | <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print $9}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">\n\nghostwu.txt</span></pre> \n</div> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nbye bye\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print $3}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu\nyou\nyou</span></pre> \n</div> \n<p>３，$0表示整行，$NF表示当前行分割后的最后一列，他们都是内置变量</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print $0}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nbye bye\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print $NF}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu\nyou\nyou\nbye</span></pre> \n</div> \n<p>４，一次列出多列，使用逗号隔开要输出的列</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nbye bye\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print $1, $3}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nthis ghostwu\nhow you\nfine you\nbye </span></pre> \n</div> \n<p>文件最后一行，没有第三列，所以没有输出任何东西</p> \n<p>５，也可以加上自定义的列</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">ls</span><span style=\"color: #000000;\">\nghostwu.txt\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print \"name:\" $1, \"age:\" $2, \"sex:\" $3}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nname:ghostwu age:</span><span style=\"color: #800080;\">20</span> sex:<span style=\"color: #0000ff;\">man</span><span style=\"color: #000000;\">\nname:zhangsan age:</span><span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> sex:woman\nname:lisi age:</span><span style=\"color: #800080;\">23</span><span style=\"color: #000000;\"> sex:woman\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span><span style=\"color: #000000;\">\nzhangsan </span><span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> woman\nlisi </span><span style=\"color: #800080;\">23</span> woman</pre> \n</div> \n<p>６，数字前面有美元符号的，是awk的内置变量，不能加引号，否则会把他们当做字符串原样输出</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print \"$1\"}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \n$</span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\n$</span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\n$</span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print $1}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu\nzhangsan\nlisi</span></pre> \n</div> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print \"first-cloumn:\"$1}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nfirst</span>-<span style=\"color: #000000;\">cloumn:ghostwu\nfirst</span>-<span style=\"color: #000000;\">cloumn:zhangsan\nfirst</span>-cloumn:lisi</pre> \n</div> \n<p>７，以下两种写法，都表示输出整行</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print $0}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span><span style=\"color: #000000;\">\nzhangsan </span><span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> woman\nlisi </span><span style=\"color: #800080;\">23</span><span style=\"color: #000000;\"> woman\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">{print}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span><span style=\"color: #000000;\">\nzhangsan </span><span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> woman\nlisi </span><span style=\"color: #800080;\">23</span> woman</pre> \n</div> \n<p>８，BEGIN模式，在AWK扫描行之前，执行</p> \n<p>在扫描行之前，打印aa,bb</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">BEGIN{print \"aa\", \"bb\"}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \naa bb</span></pre> \n</div> \n<p>如果胜省略文件，BEGIN模式依然会执行</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">BEGIN{print \"aa\", \"bb\"}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">\naa bb</span></pre> \n</div> \n<p>BEGIN有什么用？我们可以在扫描文件的行之前，为每个列都加上表头信息</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span><span style=\"color: #000000;\">\nzhangsan </span><span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> woman\nlisi </span><span style=\"color: #800080;\">23</span><span style=\"color: #000000;\"> woman\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">BEGIN{print \"name\", \"age\", \"sex\"} {print $1, $2, $3}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nname age sex\nghostwu </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span><span style=\"color: #000000;\">\nzhangsan </span><span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> woman\nlisi </span><span style=\"color: #800080;\">23</span> woman</pre> \n</div> \n<p>９，扫描每一行，在每一行的后面加上自定义的列</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">BEGIN{print \"name\", \"age\", \"sex\"} {print $1, $2, $3} {print \"展昭\", 20, \"man\"}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nname age sex\nghostwu </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span><span style=\"color: #000000;\">\n展昭 </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span><span style=\"color: #000000;\">\nzhangsan </span><span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> woman\n展昭 </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span><span style=\"color: #000000;\">\nlisi </span><span style=\"color: #800080;\">23</span><span style=\"color: #000000;\"> woman\n展昭 </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span></pre> \n</div> \n<p>10, 扫描完所有的行，在加上自己自定义的列信息，可以用END模式</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">awk</span>$ <span style=\"color: #0000ff;\">awk</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">BEGIN{print \"name\", \"age\", \"sex\"} {print $1, $2, $3} END{print \"展昭\", 20, \"man\"}</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nname age sex\nghostwu </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span><span style=\"color: #000000;\">\nzhangsan </span><span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> woman\nlisi </span><span style=\"color: #800080;\">23</span><span style=\"color: #000000;\"> woman\n展昭 </span><span style=\"color: #800080;\">20</span> <span style=\"color: #0000ff;\">man</span></pre> \n</div> \n<p>&nbsp;</p>',NULL,0,2,1,0,0,'awk是一个超级强大的文本格式化处理工具，他与grep,sed命令被成为linux三剑客命令三剑客命令的特点：grep：只要用来匹配和查找文本sed:编辑匹配到文本awk:格式化文本，','awk',1,'2020-06-05 16:50:27','2020-06-05 16:51:59'),(130,'Linux常用基本命令:grep-从文件或者管道中筛选匹配的行',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<h3>grep命令</h3> \n<p>作用：从文本文件或管道数据流中筛选匹配的行及数据，配合正则表达式一起使用，功能更加强大。</p> \n<p>格式:</p> \n<p>grep [options] [pattern] [file]</p> \n<p>&nbsp;</p> \n<p>１，匹配包含\"ghostwu\"的行</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">cat</span> -<span style=\"color: #000000;\">n ghostwu.txt \n     </span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">    my name is ghostwu\n     </span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">    how are you\n     </span><span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">    fine think you\n     </span><span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">    My name is Ghostwu\n     </span><span style=\"color: #800080;\">5</span>    what<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s your name?</span>\n     <span style=\"color: #800080;\">6</span><span style=\"color: #000000;\">    my name is ghostwu2\n     </span><span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">    \nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nmy name is ghostwu\nmy name is ghostwu2</span></pre> \n</div> \n<p>&nbsp;</p> \n<p>２，-v: 不包含，相当于取反</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -v <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nhow are you\nfine think you\nMy name is Ghostwu\nwhat</span><span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s your name?</span>\n<span style=\"color: #000000;\">\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ </pre> \n</div> \n<p>&nbsp;</p> \n<p>３，-n　添加行号</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -n <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \n</span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">:my name is ghostwu\n</span><span style=\"color: #800080;\">6</span><span style=\"color: #000000;\">:my name is ghostwu2\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -vn <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \n</span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">:how are you\n</span><span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">:fine think you\n</span><span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">:My name is Ghostwu\n</span><span style=\"color: #800080;\">5</span>:what<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s your name?</span>\n<span style=\"color: #800080;\">7</span>:</pre> \n</div> \n<p>&nbsp;</p> \n<p>４，-E，使用扩展的egrep命令，模式中可以用正则表达式</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nmy name is ghostwu\nhow are you\nfine think you\nMy name is Ghostwu\nwhat</span><span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s your name?</span>\n<span style=\"color: #000000;\">my name is ghostwu2\n\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -E <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">my|your</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nmy name is ghostwu\nwhat</span><span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s your name?</span>\n<span style=\"color: #000000;\">my name is ghostwu2\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -Ev <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">my|your</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nhow are you\nfine think you\nMy name is Ghostwu\n\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -En <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">my|your</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \n</span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">:my name is ghostwu\n</span><span style=\"color: #800080;\">5</span>:what<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s your name?</span>\n<span style=\"color: #800080;\">6</span>:my name is ghostwu2</pre> \n</div> \n<p>&nbsp;</p> \n<p>５，-i选项，不区分大小写</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nmy name is ghostwu\nmy name is ghostwu2\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -i <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nmy name is ghostwu\nMy name is Ghostwu\nmy name is ghostwu2</span></pre> \n</div> \n<p>&nbsp;</p> \n<p>６，-c :统计匹配的行数，不是匹配字符串的次数</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -c <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \n</span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -ci <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \n</span><span style=\"color: #800080;\">3</span></pre> \n</div> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -c <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \n</span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nmy name is ghostwu, </span><span style=\"color: #0000ff;\">nice</span><span style=\"color: #000000;\"> to meet you,ghostwu\nmy name is ghostwu2\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">cat</span> -<span style=\"color: #000000;\">n ghostwu.txt \n     </span><span style=\"color: #800080;\">1</span>    my name is ghostwu, <span style=\"color: #0000ff;\">nice</span><span style=\"color: #000000;\"> to meet you,ghostwu\n     </span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">    how are you\n     </span><span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">    fine think you\n     </span><span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">    My name is Ghostwu\n     </span><span style=\"color: #800080;\">5</span>    what<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s your name?</span>\n     <span style=\"color: #800080;\">6</span><span style=\"color: #000000;\">    my name is ghostwu2\n     </span><span style=\"color: #800080;\">7</span>    </pre> \n</div> \n<p>&nbsp;</p> \n<p>７，-o: 只输出匹配到的字符串</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -o <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu\nghostwu\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -oi <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu\nGhostwu\nghostwu</span></pre> \n</div> \n<p>&nbsp;</p> \n<p>８，-w: 只匹配过滤的单词，类似于精确匹配</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -<span style=\"color: #0000ff;\">w</span> <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nmy name is ghostwu, </span><span style=\"color: #0000ff;\">nice</span><span style=\"color: #000000;\"> to meet you,ghostwu\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -wi <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.txt \nmy name is ghostwu, </span><span style=\"color: #0000ff;\">nice</span><span style=\"color: #000000;\"> to meet you,ghostwu\nMy name is Ghostwu\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">cat</span> -<span style=\"color: #000000;\">n ghostwu.txt \n     </span><span style=\"color: #800080;\">1</span>    my name is ghostwu, <span style=\"color: #0000ff;\">nice</span><span style=\"color: #000000;\"> to meet you,ghostwu\n     </span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">    how are you\n     </span><span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">    fine think you\n     </span><span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">    My name is Ghostwu\n     </span><span style=\"color: #800080;\">5</span>    what<span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s your name?</span>\n     <span style=\"color: #800080;\">6</span><span style=\"color: #000000;\">    my name is ghostwu2\n     </span><span style=\"color: #800080;\">7</span>    </pre> \n</div> \n<p>&nbsp;</p> \n<p>９，常用的一招小技巧，去除文件的注释和空行，在运维中，可以用这条命令把配置文件的空行和注释去掉，然后用管道生成。这样配置文件比较容易查看和配置</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">grep</span> -Ev <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">^$|#</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> ghostwu.php\n</span>&lt;?<span style=\"color: #000000;\">php\n    class Person {\n        public $name </span>= <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">;\n        public $age </span>= <span style=\"color: #800080;\">20</span><span style=\"color: #000000;\">;\n        public </span><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> showinfo(){\n            </span><span style=\"color: #0000ff;\">echo</span> $this-&gt;<span style=\"color: #000000;\">name . PHP_EOL;\n            </span><span style=\"color: #0000ff;\">echo</span> $this-&gt;<span style=\"color: #000000;\">age. PHP_EOL;\n        }\n    }\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">grep</span>$ <span style=\"color: #0000ff;\">cat</span> -<span style=\"color: #000000;\">n ghostwu.php \n     </span><span style=\"color: #800080;\">1</span>    &lt;?<span style=\"color: #000000;\">php\n     </span><span style=\"color: #800080;\">2</span>    \n     <span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">        class Person {\n     </span><span style=\"color: #800080;\">4</span>    \n     <span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">            #人名\n     </span><span style=\"color: #800080;\">6</span>            public $name = <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">ghostwu</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\">;\n     </span><span style=\"color: #800080;\">7</span>    \n     <span style=\"color: #800080;\">8</span><span style=\"color: #000000;\">            #年龄\n     </span><span style=\"color: #800080;\">9</span>            public $age = <span style=\"color: #800080;\">20</span><span style=\"color: #000000;\">;\n    </span><span style=\"color: #800080;\">10</span>    \n    <span style=\"color: #800080;\">11</span><span style=\"color: #000000;\">            #显示信息　\n    </span><span style=\"color: #800080;\">12</span>            public <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> showinfo(){\n    </span><span style=\"color: #800080;\">13</span>                <span style=\"color: #0000ff;\">echo</span> $this-&gt;<span style=\"color: #000000;\">name . PHP_EOL;\n    </span><span style=\"color: #800080;\">14</span>                <span style=\"color: #0000ff;\">echo</span> $this-&gt;<span style=\"color: #000000;\">age. PHP_EOL;\n    </span><span style=\"color: #800080;\">15</span><span style=\"color: #000000;\">            }\n    </span><span style=\"color: #800080;\">16</span>        }</pre> \n</div> \n<p>&nbsp;</p>',NULL,0,2,1,0,0,'grep命令作用：从文本文件或管道数据流中筛选匹配的行及数据，配合正则表达式一起使用，功能更加强大。格式:grep[options][pattern][file]１，匹配包含&quot;','grep',1,'2020-06-05 16:50:45','2020-06-05 16:53:07'),(131,'Linux常用基本命令:三剑客命令之-sed',1,'https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png',NULL,0,'<p>sed是一个很强大的文件处理工具，主要是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作</p> \n<p>格式：sed [option] [command] [file]</p> \n<p>常用命令：</p> \n<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;a&nbsp;&nbsp; ∶新增<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c&nbsp;&nbsp; ∶取代<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d&nbsp;&nbsp; ∶删除<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i&nbsp;&nbsp; ∶插入<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p&nbsp;&nbsp;∶列印<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s&nbsp;&nbsp;∶取代</p> \n<p>选项：</p> \n<p>&nbsp; &nbsp;　　-i∶直接修改读取的档案内容，而不是由萤幕输出。&nbsp; &nbsp; &nbsp; &nbsp;</p> \n<p>　　&nbsp; -n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN的资料一般都会被列出到萤幕上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。</p> \n<p>&nbsp;</p> \n<p>１，sed \'1d\' ghostwu.com&nbsp; &nbsp;d代表删除 d前面的数字代表删除第一行，该命令不会修改文件本身</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span> -<span style=\"color: #000000;\">n ghostwu.txt \n     </span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">    this is ghostwu\n     </span><span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">    how are you\n     </span><span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">    hod old are you\n     </span><span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">    and you\n     </span><span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">    fine thank you\n     </span><span style=\"color: #800080;\">6</span>    come with me!!!<span style=\"color: #000000;\">\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">1d</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nhow are you\nhod old are you\nand you\nfine thank you\ncome with me</span>!!!<span style=\"color: #000000;\">\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nhod old are you\nand you\nfine thank you\ncome with me</span>!!!</pre> \n</div> \n<p>２，删除最后一行，$代表最后一行</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nhod old are you\nand you\nfine thank you\ncome with me</span>!!!<span style=\"color: #000000;\">\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">$d</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nhod old are you\nand you\nfine thank you</span></pre> \n</div> \n<p>３，删除第一行到第二行</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nhod old are you\nand you\nfine thank you\ncome with me</span>!!!<span style=\"color: #000000;\">\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">1,2d</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nhod old are you\nand you\nfine thank you\ncome with me</span>!!!</pre> \n</div> \n<p>４，删除第二行到最后一行</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">2,$d</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu</span></pre> \n</div> \n<p>５，查找包含\'you\'的行，　　/you/ 这是正则表达式， p是打印，要跟n结合起来用</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nhod old are you\nand you\nfine thank you\ncome with me</span>!!!<span style=\"color: #000000;\">\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> -n <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">/you/p</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nhow are you\nhod old are you\nand you\nfine thank you</span></pre> \n</div> \n<p>６，匹配$符号结尾的行</p> \n<p>$符号在正则表达式表示行尾，所以要用\\　转义</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> -n <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">/\\$/p</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \n</span><span style=\"color: #800080;\">50</span>$</pre> \n</div> \n<p>７，在第一行后面，增加一行“你好啊\"</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nhod old are you\nand you\nfine thank you\ncome with me</span>!!!<span style=\"color: #000000;\">\nhow much </span><span style=\"color: #0000ff;\">do</span><span style=\"color: #000000;\"> you have\n</span><span style=\"color: #800080;\">50</span><span style=\"color: #000000;\">$\noh, is it</span>?<span style=\"color: #000000;\">\nyes\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">1a 你好啊</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\n你好啊\nhow are you\nhod old are you\nand you\nfine thank you\ncome with me</span>!!!<span style=\"color: #000000;\">\nhow much </span><span style=\"color: #0000ff;\">do</span><span style=\"color: #000000;\"> you have\n</span><span style=\"color: #800080;\">50</span><span style=\"color: #000000;\">$\noh, is it</span>?<span style=\"color: #000000;\">\nyes</span></pre> \n</div> \n<p>８，在第一行和第二行的后面，增加一行</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">1,2a learning how to use sed command</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt this is ghostwu\nlearning how to use </span><span style=\"color: #0000ff;\">sed</span><span style=\"color: #000000;\"> command\nhow are you\nlearning how to use </span><span style=\"color: #0000ff;\">sed</span><span style=\"color: #000000;\"> command\nfine thank you</span></pre> \n</div> \n<p>９，也可以增加多行</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">1a 你好啊\\n很高兴认识你</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\n你好啊\n很高兴认识你\nhow are you\nfine thank you</span></pre> \n</div> \n<p>10, c为替换操作，数字的意思，跟上面的a一样，代表行</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">1,2c hey guy</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nhey guy\nfine thank you\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">1c hey guy</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nhey guy\nhow are you\nfine thank you</span></pre> \n</div> \n<p>11, s:替换匹配到的内容， s:替换开始 /is/ 匹配包含is的行&nbsp; &nbsp;g:全部替换</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s/is/IS/</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nthIS is ghostwu\nhow are you\nfine thank you\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">s/is/IS/g</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nthIS IS ghostwu\nhow are you\nfine thank you\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you</span></pre> \n</div> \n<p>12、-i :修改，插入文件，会影响文件的内容，在最后一行，插入bye bye</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> -i <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">$a bye bye</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nbye bye</span></pre> \n</div> \n<p>13，在1-3行，每一行的后面都插入一行数字</p> \n<div class=\"cnblogs_code\"> \n <pre>ghostwu@dev:~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\nhow are you\nfine thank you\nbye bye\nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">sed</span> -i <span style=\"color: #800000;\">\'</span><span style=\"color: #800000;\">1,3a 123457</span><span style=\"color: #800000;\">\'</span><span style=\"color: #000000;\"> ghostwu.txt \nghostwu@dev:</span>~/linux/<span style=\"color: #0000ff;\">sed</span>$ <span style=\"color: #0000ff;\">cat</span><span style=\"color: #000000;\"> ghostwu.txt \nthis is ghostwu\n</span><span style=\"color: #800080;\">123457</span><span style=\"color: #000000;\">\nhow are you\n</span><span style=\"color: #800080;\">123457</span><span style=\"color: #000000;\">\nfine thank you\n</span><span style=\"color: #800080;\">123457</span><span style=\"color: #000000;\">\nbye bye</span></pre> \n</div> \n<p>&nbsp;</p>',NULL,0,2,1,0,0,'sed是一个很强大的文件处理工具，主要是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作格式：sed[option][command][file]常用命令：a∶新增','sed',1,'2020-06-05 16:50:58','2020-06-05 16:52:29'),(132,'ORACLE存储过程',1,'https://img-blog.csdnimg.cn/20181102180829603.png',NULL,0,'<h2>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; oracle存储过程</h2> \n<p id=\"main-toc\"><strong>目录</strong></p> \n<p id=\"%E4%B8%80.%E4%BB%80%E4%B9%88%E6%98%AF%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B-toc\" style=\"margin-left:0px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<a href=\"#%E4%B8%80.%E4%BB%80%E4%B9%88%E6%98%AF%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\" rel=\"nofollow\">一.什么是存储过程</a></p> \n<p id=\"%E4%BA%8C.%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%86%99%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BA%8C.%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%86%99%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\" rel=\"nofollow\">二.为什么要写存储过程</a></p> \n<p id=\"%E4%B8%89.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%9F%BA%E7%A1%80-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%89.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%9F%BA%E7%A1%80\" rel=\"nofollow\">三.存储过程基础</a></p> \n<p id=\"1.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E7%BB%93%E6%9E%84-toc\" style=\"margin-left:80px;\"><a href=\"#1.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E7%BB%93%E6%9E%84\" rel=\"nofollow\">1.存储过程结构</a></p> \n<p id=\"2.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E8%AF%AD%E6%B3%95-toc\" style=\"margin-left:80px;\"><a href=\"#2.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E8%AF%AD%E6%B3%95\" rel=\"nofollow\">2.存储过程语法</a></p> \n<p id=\"3.pl%2Fsql%E5%A4%84%E7%90%86%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B-toc\" style=\"margin-left:80px;\"><a href=\"#3.pl%2Fsql%E5%A4%84%E7%90%86%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\" rel=\"nofollow\">3.pl/sql处理存储过程</a></p> \n<p id=\"%E5%9B%9B.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E8%BF%9B%E9%98%B6-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%9B%9B.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E8%BF%9B%E9%98%B6\" rel=\"nofollow\">四.存储过程进阶</a></p> \n<p id=\"1.BUIK%20COLLECT-toc\" style=\"margin-left:80px;\"><a href=\"#1.BUIK%20COLLECT\" rel=\"nofollow\">1.BUIK COLLECT</a></p> \n<p id=\"2.FORALL-toc\" style=\"margin-left:80px;\"><a href=\"#2.FORALL\" rel=\"nofollow\">2.FORALL</a></p> \n<p id=\"3.pl%2Fsql%E8%B0%83%E8%AF%95%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B-toc\" style=\"margin-left:80px;\"><a href=\"#3.pl%2Fsql%E8%B0%83%E8%AF%95%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\" rel=\"nofollow\">3.pl/sql调试存储过程</a></p> \n<p id=\"4.%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%88%98-toc\" style=\"margin-left:80px;\"><a href=\"#4.%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%88%98\" rel=\"nofollow\">4.案例实战</a></p> \n<p id=\"%E9%99%84.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99-toc\" style=\"margin-left:40px;\"><a href=\"#%E9%99%84.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\" rel=\"nofollow\">附.参考资料</a></p> \n<hr id=\"hr-toc\">\n<h2 id=\"%E4%B8%80.%E4%BB%80%E4%B9%88%E6%98%AF%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\" style=\"margin-left:0cm;\">一.什么是存储过程</h2> \n<p style=\"margin-left:0cm;\"><strong>存储过程</strong>，百度百科上是这样解释的，<span style=\"color:#333333;\">存储过程（</span><span style=\"color:#333333;\">Stored Procedure</span><span style=\"color:#333333;\">）是在大型</span><span style=\"color:#0000ff;\"><u><span style=\"color:#136ec2;\"><a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F\" rel=\"nofollow\"><span style=\"color:#136ec2;\">数据库系统</span></a></span></u></span><span style=\"color:#333333;\">中，一组为了完成特定功能的</span><span style=\"color:#333333;\">SQL </span><span style=\"color:#333333;\">语句集，存储在数据库中，经过第一次编译后再次调用不需要再次编译，用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来</span>调用存储过程。</p> \n<p style=\"margin-left:0cm;\">简单的说就是专门干一件事一段sql语句。</p> \n<p style=\"margin-left:0cm;\">可以由数据库自己去调用，也可以由java程序去调用。</p> \n<p style=\"margin-left:0cm;\">在oracle数据库中存储过程是procedure。</p> \n<h2 id=\"%E4%BA%8C.%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%86%99%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\" style=\"margin-left:0cm;\">二.为什么要写存储过程</h2> \n<p style=\"margin-left:0cm;\">1.效率高</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;存储过程编译一次后，就会存到数据库，每次调用时都直接执行。而普通的sql语句我们要保存到其他地方（例如：记事本&nbsp; 上），都要先分析编译才会执行。所以想对而言存储过程效率更高。</p> \n<p style=\"margin-left:0cm;\">2.降低网络流量</p> \n<p style=\"margin-left:0cm;\">存储过程编译好会放在数据库，我们在远程调用时，不会传输大量的字符串类型的sql语句。</p> \n<p style=\"margin-left:0cm;\">3.复用性高</p> \n<p style=\"margin-left:0cm;\">存储过程往往是针对一个特定的功能编写的，当再需要完成这个特定的功能时，可以再次调用该存储过程。</p> \n<p style=\"margin-left:0cm;\">4.可维护性高</p> \n<p style=\"margin-left:0cm;\">当功能要求发生小的变化时，修改之前的存储过程比较容易，花费精力少。</p> \n<p style=\"margin-left:0cm;\">5.安全性高</p> \n<p style=\"margin-left:0cm;\">完成某个特定功能的存储过程一般只有特定的用户可以使用，具有使用身份限制，更安全。</p> \n<h2 id=\"%E4%B8%89.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%9F%BA%E7%A1%80\" style=\"margin-left:0cm;\">三.存储过程基础</h2> \n<h3 id=\"1.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E7%BB%93%E6%9E%84\" style=\"margin-left:0cm;\">1.存储过程结构</h3> \n<p style=\"margin-left:0cm;\"><strong>(1).基本结构</strong></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">Oracle</span><span style=\"color:#000000;\">存储过程包含三部分：过程声明，执行过程部分，存储过程异常（可写可不写，要增强脚本的容错性和调试的方便性那就写上异常处理）</span></p> \n<p style=\"margin-left:0cm;\"><strong>(2).无参存储过程</strong></p> \n<pre class=\"has\">\n<code class=\"language-sql\">CREATE OR REPLACE PROCEDURE demo AS/IS\n	变量2 DATE;\n	变量3 NUMBER;\nBEGIN\n	--要处理的业务逻辑\n	EXCEPTION    --存储过程异常\nEND \n</code></pre> \n<p style=\"margin-left:0cm;\">这里的as和is一样任选一个，在这里没有区别，其中demo是存储过程名称。</p> \n<p style=\"margin-left:0cm;\"><strong>(3).有参存储过程</strong></p> \n<p style=\"margin-left:0cm;\">a.带参数的存储过程</p> \n<pre class=\"has\">\n<code class=\"language-sql\">CREATE OR REPLACE PROCEDURE 存储过程名称(param1 student.id%TYPE)\nAS/IS\nname student.name%TYPE;\nage number :=20;\nBEGIN\n&nbsp; --业务处理.....\nEND</code></pre> \n<p style=\"margin-left:0cm;\">上面脚本中，</p> \n<p style=\"margin-left:0cm;\">第1行：param1 是参数，类型和student表id字段的类型一样。</p> \n<p style=\"margin-left:0cm;\">第3行：声明变量name，类型是student表name字段的类型（同上）。</p> \n<p style=\"margin-left:0cm;\">第4行：声明变量age，类型数数字，初始化为20</p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\">b.带参数的存储过程并且进行赋值</p> \n<pre class=\"has\">\n<code class=\"language-sql\">CREATE OR REPLACE PROCEDURE 存储过程名称(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s_no in varchar,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s_name out varchar,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s_age number) AS\ntotal NUMBER := 0;\nBEGIN\n&nbsp; SELECT COUNT(1) INTO total FROM student s WHERE s.age=s_age;\n&nbsp; dbms_output.put_line(\'符合该年龄的学生有\'||total||\'人\');\n&nbsp; EXCEPTION\n&nbsp;&nbsp;&nbsp; WHEN too_many_rows THEN&nbsp;\n&nbsp;&nbsp;&nbsp; DBMS_OUTPUT.PUT_LINE(\'返回值多于1行\');&nbsp;\nEND</code></pre> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">上面脚本中：</span></p> \n<p style=\"margin-left:0cm;\">其中参数IN表示输入参数，是参数的默认模式。<br> OUT表示返回值参数，类型可以使用任意Oracle中的合法类型。<br> OUT模式定义的参数只能在过程体内部赋值，表示该参数可以将某个值传递回调用他的过程<br> IN OUT表示该参数可以向该过程中传递值，也可以将某个值传出去</p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">第7行：查询语句，把参数s_age作为过滤条件，INTO关键字，把查到的结果赋给total变量。</span></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">第8行：输出查询结果，在数据库中“||”用来连接字符串</span></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">第9—11行：做异常处理</span></p> \n<h3 id=\"2.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E8%AF%AD%E6%B3%95\" style=\"margin-left:0cm;\">2.存储过程语法</h3> \n<p style=\"margin-left:0cm;\"><strong>(1).运算符</strong></p> \n<p style=\"margin-left:0cm;\">这里s，m，n是变量，类型是number；</p> \n<table border=\"1\" cellspacing=\"0\">\n <tbody>\n  <tr>\n   <td style=\"vertical-align:top;width:70.65pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">分类</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">运算符</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">含义</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">示例表达式</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td rowspan=\"6\" style=\"vertical-align:top;width:70.65pt;\"> <p style=\"margin-left:0cm;\">&nbsp;</p> <p style=\"margin-left:0cm;\">&nbsp;</p> <p style=\"margin-left:0cm;\">&nbsp;</p> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">算术运算符</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">+</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">加</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s := 2 + 2;</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">-</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">减</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s := 3 – 1;</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">*</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">乘</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s := 2 * 3;</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">/</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">除</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s := 6 / 2;</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">mod(,)</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">取模，取余</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">m : = mod(3,2)</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">**</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">乘方</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">10**2 =100</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td rowspan=\"6\" style=\"vertical-align:top;width:70.65pt;\"> <p style=\"margin-left:0cm;\">&nbsp;</p> <p style=\"margin-left:0cm;\">&nbsp;</p> <p style=\"margin-left:0cm;\">&nbsp;</p> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">关系运算符</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">=</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">等于 </span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s = 2</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">&lt;&gt;</span><span style=\"color:#7030a0;\">或!=或~=</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">不等于</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s != 2</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">&lt;</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">小于</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s &lt; 3</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">&gt;</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">大于</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s &gt; 0</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">&lt;=</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">小于等于</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s &lt;= 9</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">&gt;=</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">大于等于</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s &gt;= 1</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td rowspan=\"4\" style=\"vertical-align:top;width:70.65pt;\"> <p style=\"margin-left:0cm;\">&nbsp;</p> <p style=\"margin-left:0cm;\">&nbsp;</p> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">比较运算符</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">LIKE</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">满足匹配为true</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">‘li’ like ‘%i’</span><span style=\"color:#7030a0;\">返回true</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">BETWEEN</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">是否处于一个范围中</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">2 between 1 and 3 </span><span style=\"color:#7030a0;\">返回true</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">IN</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">是否处于一个集合中</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">‘x’ in (‘x’,’y’) </span><span style=\"color:#7030a0;\">返回true</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">IS NULL</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">判断变量是否为空</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">若：n:=3,n is null,返回false</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td rowspan=\"3\" style=\"vertical-align:top;width:70.65pt;\"> <p style=\"margin-left:0cm;\">&nbsp;</p> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">逻辑运算符</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">AND</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">逻辑与</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s=3 and c is null</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">OR</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">逻辑或</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s=3 or c is null</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">NOT</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">逻辑非</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">not c is null</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td rowspan=\"3\" style=\"vertical-align:top;width:70.65pt;\"> <p style=\"margin-left:0cm;\">&nbsp;</p> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">其他</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">:=</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">赋值</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">s := 0;</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">..</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">范围</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">1..9</span><span style=\"color:#7030a0;\">，即1至9范围</span></strong></p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:3cm;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">||</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:106.3pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">字符串连接</span></strong></p> </td> \n   <td style=\"vertical-align:top;width:152.8pt;\"> <p style=\"margin-left:0cm;\"><strong><span style=\"color:#7030a0;\">‘hello’||’world’</span></strong></p> </td> \n  </tr>\n </tbody>\n</table>\n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\"><strong>(2).SELECT INTO STATEMENT语句</strong></p> \n<p style=\"margin-left:0cm;\">该语句将select到的结果赋值给一个或多个变量，例如：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">CREATE OR REPLACE PROCEDURE DEMO_CDD1 IS\ns_name VARCHAR2;&nbsp;&nbsp; --学生名称\ns_age NUMBER;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --学生年龄\ns_address VARCHAR2; --学生籍贯\nBEGIN\n&nbsp; --给单个变量赋值\n&nbsp; SELECT student_address INTO s_address\n&nbsp; FROM student where student_grade=100;\n&nbsp;&nbsp; --给多个变量赋值\n&nbsp; SELECT student_name,student_age INTO s_name,s_age\n&nbsp; FROM student where student_grade=100;\n&nbsp; --输出成绩为100分的那个学生信息\n&nbsp; dbms_output.put_line(\'姓名：\'||s_name||\',年龄：\'||s_age||\',籍贯：\'||s_address);\nEND</code></pre> \n<p style=\"margin-left:0cm;\">上面脚本中：</p> \n<p style=\"margin-left:0cm;\">存储过程名称：DEMO_CDD1, student是学生表，要求查出成绩为100分的那个学生的姓名，年龄，籍贯</p> \n<p style=\"margin-left:0cm;\"><strong>(3).选择语句</strong></p> \n<p style=\"margin-left:0cm;\">a.IF..END IF</p> \n<p style=\"margin-left:0cm;\">学生表的sex字段：1-男生；0-女生</p> \n<pre class=\"has\">\n<code class=\"language-sql\">IF s_sex=1 THEN\n&nbsp; dbms_output.put_line(\'这个学生是男生\');\nEND IF</code></pre> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">b.IF..ELSE..END IF</span></p> \n<pre class=\"has\">\n<code class=\"language-sql\">IF s_sex=1 THEN\n&nbsp; dbms_output.put_line(\'这个学生是男生\');\nELSE\n&nbsp; dbms_output.put_line(\'这个学生是女生\');\nEND IF</code></pre> \n<p style=\"margin-left:0cm;\"><strong>(4).循环语句</strong></p> \n<p style=\"margin-left:0cm;\">a.基本循环</p> \n<pre class=\"has\">\n<code class=\"language-sql\">LOOP\n&nbsp; IF 表达式 THEN\n&nbsp;&nbsp;&nbsp; EXIT;\n&nbsp; END IF\nEND LOOP;</code></pre> \n<p style=\"margin-left:0cm;\">b.while循环</p> \n<pre class=\"has\">\n<code class=\"language-sql\">WHILE 表达式 LOOP\n&nbsp; dbms_output.put_line(\'haha\');\nEND LOOP;</code></pre> \n<p style=\"margin-left:0cm;\">c.for循环</p> \n<pre class=\"has\">\n<code class=\"language-sql\">FOR a in 10 .. 20 LOOP\n&nbsp; dbms_output.put_line(\'value of a: \' || a);\nEND LOOP;</code></pre> \n<p style=\"margin-left:0cm;\">(5).游标<a name=\"article-start\"></a></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#333344;\">&nbsp;&nbsp;&nbsp; Oracle</span><span style=\"color:#333344;\">会创建一个存储区域，被称为上下文区域，用于处理SQL语句，其中包含需要处理的语句，例如所有的信息，行数处理，等等。</span></p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp; <span style=\"color:#333344;\">游标是指向这一上下文的区域。</span><span style=\"color:#333344;\"> PL/SQL</span><span style=\"color:#333344;\">通过控制光标在上下文区域。游标持有的行</span><span style=\"color:#333344;\">(</span><span style=\"color:#333344;\">一个或多个</span><span style=\"color:#333344;\">)</span><span style=\"color:#333344;\">由</span><span style=\"color:#333344;\">SQL</span><span style=\"color:#333344;\">语句返回。行集合光标保持的被称为活动集合。</span></p> \n<p style=\"margin-left:0cm;\"><strong>a.下表是常用的游标属性</strong>：</p> \n<table border=\"1\" cellspacing=\"0\">\n <tbody>\n  <tr>\n   <td style=\"vertical-align:top;width:63.55pt;\"> <p style=\"margin-left:0cm;\">属性</p> </td> \n   <td style=\"vertical-align:top;width:351.25pt;\"> <p style=\"margin-left:0cm;\">描述</p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:63.55pt;\"> <p style=\"margin-left:0cm;\">%FOUND</p> </td> \n   <td style=\"vertical-align:top;width:351.25pt;\"> <p style=\"margin-left:0cm;\">如果DML语句执行后影响有数据被更新或DQL查到了结果，返回true。否则，返回false。</p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:63.55pt;\"> <p style=\"margin-left:0cm;\">%NOTFOUND</p> </td> \n   <td style=\"vertical-align:top;width:351.25pt;\"> <p style=\"margin-left:0cm;\">如果DML语句执行后影响有数据被更新或DQL查到了结果，返回false。否则，返回true。</p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:63.55pt;\"> <p style=\"margin-left:0cm;\">%ISOPEN</p> </td> \n   <td style=\"vertical-align:top;width:351.25pt;\"> <p style=\"margin-left:0cm;\">游标打开时返回true，反之，返回false。</p> </td> \n  </tr>\n  <tr>\n   <td style=\"vertical-align:top;width:63.55pt;\"> <p style=\"margin-left:0cm;\">%ROWCOUNT</p> </td> \n   <td style=\"vertical-align:top;width:351.25pt;\"> <p style=\"margin-left:0cm;\">返回DML执行后影响的行数。</p> </td> \n  </tr>\n </tbody>\n</table>\n<p style=\"margin-left:0cm;\"><strong>b.使用游标</strong></p> \n<p style=\"margin-left:0cm;\">声明游标定义游标的名称和相关的SELECT语句：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">CURSOR cur_cdd IS SELECT s_id, s_name FROM student;</code></pre> \n<p style=\"margin-left:0cm;\">打开游标游标分配内存，使得它准备取的SQL语句转换成它返回的行：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">OPEN cur_cdd;</code></pre> \n<p style=\"margin-left:0cm;\">抓取游标中的数据，可用LIMIT关键字来限制条数，如果没有默认每次抓取一条：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">FETCH cur_cdd INTO id, name ;</code></pre> \n<p style=\"margin-left:0cm;\">关闭游标来释放分配的内存:</p> \n<pre class=\"has\">\n<code class=\"language-sql\">CLOSE cur_cdd;</code></pre> \n<h3 id=\"3.pl%2Fsql%E5%A4%84%E7%90%86%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\" style=\"margin-left:0cm;\">3.pl/sql处理存储过程</h3> \n<p style=\"margin-left:0cm;\">(1).新建存储过程：右键procedures，点击new，弹出PROCEDURE框，再点击OK，如下图：</p> \n<p style=\"margin-left:0cm;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200715100506625.png\" title=\"\" alt=\"\"></p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\">(2).在下面的编辑区，编写存储过程脚本</p> \n<p style=\"margin-left:0cm;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200715100510986.png\" title=\"\" alt=\"\"></p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\">(3).在这里我们编写一个demo_cdd存储过程，要求输出“hello world”，如下图：</p> \n<p style=\"margin-left:0cm;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200715100511467.png\" title=\"\" alt=\"\"></p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\">(4).右键刚才新建的存储过程名称，点击“Test”，在点击执行按钮</p> \n<p style=\"margin-left:0cm;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200715100513778.png\" title=\"\" alt=\"\"></p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\">4.案例实战</p> \n<p style=\"margin-left:0cm;\">场景：</p> \n<p style=\"margin-left:0cm;\">有表student(s_no, s_name, s_age, s_grade)，其中s_no-学号，也是主键，是从1开始向上排的（例如：第一个学生学号是1，第二个是2，一次类推）；s_name-学生姓名；s_age-学生年龄；s_grade-年级；这张表的数据量有几千万甚至上亿。一个学年结束了，我要让这些学生全部升一年级，即，让s_grade字段加1。</p> \n<p style=\"margin-left:0cm;\">这条sql，写出来如下：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">update student set s_grade=s_grade+1</code></pre> \n<p style=\"margin-left:0cm;\">分析：</p> \n<p style=\"margin-left:0cm;\">如果我们直接运行运行这条sql，因数据量太大会把数据库undo表空间撑爆，从而发生异常。那我们来写个存储过程，进行批量更新，我们每10万条提交一次。</p> \n<pre class=\"has\">\n<code class=\"language-sql\">CREATE OR REPLACE PROCEDURE process_student is\ntotal NUMBER := 0;\ni NUMBER := 0;\nBEGIN\n  SELECT COUNT(1) INTO total FROM student;\n  WHILE i&lt;=total LOOP\n    UPDATE student SET grade=grade+1 WHERE s_no=i;\n    i := i + 1;\n    IF i &gt;= 100000 THEN\n      COMMIT;\n    END IF;\n  END LOOP;\n  dbms_output.put_line(\'finished!\');\nEND;\n</code></pre> \n<h2 id=\"%E5%9B%9B.%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E8%BF%9B%E9%98%B6\" style=\"margin-left:0cm;\">四.存储过程进阶</h2> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在上面的案例中，我们的存储过程处理完所有数据要多长时间呢？事实我没有等到它执行完，在我可接受的时间范围内它没有完成。那么对于处理这种千万级数据量的情况，存储过程是不是束手无策呢？答案是否定的，接下来我们看看其他绝招。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 我们先来分析下执行过程的执行过程：一个存储过程编译后，在一条语句一条语句的执行时，如果遇到pl/sql语句就拿去给pl/sql引擎执行，如果遇到sql语句就送到sql引擎执行，然后把执行结果再返回给pl/sql引擎。遇到一个大数据量的更新，则执行焦点（正在执行的，状态处于ACTIVE）会不断的来回切换。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333;\">Pl/SQL</span><span style=\"color:#333333;\">与SQL引擎之间的通信则称之为上下文切换，过多的上下文切换将带来过量的性能负载。最终导致效率降低，处理速度缓慢。</span></p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 从<span style=\"color:#4f4f4f;\">Oracle8i</span><span style=\"color:#4f4f4f;\">开始</span><span style=\"color:#4f4f4f;\">PL/SQL</span><span style=\"color:#4f4f4f;\">引入了两个新的数据操纵语句：</span><span style=\"color:#4f4f4f;\">FORALL</span><span style=\"color:#4f4f4f;\">、</span><span style=\"color:#4f4f4f;\">BUIK COLLECT</span><span style=\"color:#4f4f4f;\">，这些语句大大滴减少了上下文切换次数（一次切换多次执行），同时提高</span><span style=\"color:#4f4f4f;\">DML</span><span style=\"color:#4f4f4f;\">性能，因此运用了这些语句的存储过程在处理大量数据时速度简直和飞一样。</span></p> \n<h3 id=\"1.BUIK%20COLLECT\" style=\"margin-left:0cm;\">1.BUIK COLLECT</h3> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp; Oracle8i中首次引入了Bulk Collect特性，Bulk Collect会能进行批量检索，会将检索结果结果一次性绑定到一个集合变量中，而不是通过游标cursor一条一条的检索处理。可以在SELECT INTO、FETCH INTO、RETURNING INTO语句中使用BULK COLLECT，接下来我们一起看看这些语句中是如何使用BULK COLLECT的。</p> \n<p style=\"margin-left:0cm;\"><strong>(1).SELECT INTO</strong></p> \n<p style=\"margin-left:0cm;\">查出来一个结果集合赋值给一个集合变量。</p> \n<p style=\"margin-left:0cm;\">语法结构是：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">SELECT field BULK COLLECT INTO var_conllect FROM table where colStatement;</code></pre> \n<p style=\"margin-left:0cm;\">说明：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; field：要查询的字段，可以是一个或多个（要保证和后面的集合变量要向对应）。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var_collect：集合变量（联合数组等），用来存放查到的结果。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; table：表名，要查询的表。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; colStatement：后面过滤条件语句。比如s_age &lt; 10;</p> \n<p style=\"margin-left:0cm;\">例子：查出年龄小于10岁的学生姓名赋值给数组arr_name变量</p> \n<pre class=\"has\">\n<code class=\"language-sql\">SELECT s_name BULK COLLECT INTO arr_name FROM s_age &lt; 10;</code></pre> \n<p style=\"margin-left:0cm;\">(2).FETCH INTO</p> \n<p style=\"margin-left:0cm;\">从一个集合中抓取一部分数据赋值给一个集合变量。</p> \n<p style=\"margin-left:0cm;\">语法结构如下：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">FETCH cur1 BULK COLLECT INTO var_collect [LIMIT rows]</code></pre> \n<p style=\"margin-left:0cm;\">说明：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cur1：是个数据集合，例如是个游标。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var_collect：含义同上。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [LIMIT rows]：可有可无，限制每次抓取的数据量。不写的话，默认每次一条数据。</p> \n<p style=\"margin-left:0cm;\">例子：给年龄小于10岁的学生的年级降一级。</p> \n<pre class=\"has\">\n<code class=\"language-sql\">--查询年龄小于10岁的学生的学号放在游标cur_no里\nCURSOR cur_no IS \n		SELECT s_no FROM student WHERE s_age &lt; 10;\n\n--声明了一个联合数组类型，元素类型和游标cur_no每个元素的类型一致\nTYPE ARR_NO IS VARRAY(10) OF cur_no%ROWTYPE;\n\n--声明一个该数组类型的变量no\nno ARR_NO;\nBEGIN\n  FETCH cur_no BULK COLLECT INTO no LIMIT 100;\n  FORALL i IN 1..no.count SAVE EXCEPTONS\n	UPDATE student SET s_grade=s_grade-1 WHERE no(i);\nEND;\n</code></pre> \n<p style=\"margin-left:0cm;\">说明：先查出年龄小于10岁的学生的学号放在游标里，再每次从游标里拿出100个学号，进行更新，给他们的年级降一级。</p> \n<p style=\"margin-left:0cm;\"><strong>(3).RETURNING</strong></p> \n<p style=\"margin-left:0cm;\">BULK COLLECT除了与SELECT，FETCH进行批量绑定之外，还可以与INSERT，DELETE，UPDATE语句结合使用，可以返回这些DML语句执行后所影响的记录内容（某些字段）。</p> \n<p style=\"margin-left:0cm;\">再看一眼学生表的字段情况：student(s_no, s_name, s_age, s_grade)</p> \n<p style=\"margin-left:0cm;\">语法结构如下：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">DMLStatement\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RETURNING field BULK COLLECT INTO var_field;</code></pre> \n<p style=\"margin-left:0cm;\">说明：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DMLStatement：是一个DML语句。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; field：是这个表的某个字段，当然也可以写多个逗号隔开（field1，field2, field3）。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var_field：一个类型为该字段类型的集合，多个的话用逗号隔开，如下：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （var_field1, var_field2, var_field3）</p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\">例子：获取那些因为年龄小于10岁而年级被将一级的学生的姓名集合。</p> \n<pre class=\"has\">\n<code class=\"language-sql\">TYPE NAME_COLLECT IS TABLE OF student.s_name%TYPE;\nnames NAME_COLLECT;\nBEGIN\n&nbsp;&nbsp;UPDATE student SET s_grade=s_grade-1 WHERE s_age &lt; 10\n&nbsp;&nbsp;RETURNING s_name BULK COLLECT INTO names;\nEND;</code></pre> \n<p style=\"margin-left:0cm;\">说明：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NAME_COLLECT：是一个集合类型，类型是student表的name字段的类型。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; names：定义了一个NAME_COLLECT类型的变量。</p> \n<p style=\"margin-left:0cm;\"><strong>(4).注意事项</strong></p> \n<p style=\"margin-left:0cm;\">a.不能对使用字符串类型作键的关联数组使用BULK COLLECT 子句。</p> \n<p style=\"margin-left:0cm;\">b.只能在服务器端的程序中使用BULK COLLECT，如果在客户端使用，就会产生一个不支持这个特性的错误。</p> \n<p style=\"margin-left:0cm;\">c.BULK COLLECT INTO 的目标对象必须是集合类型。</p> \n<p style=\"margin-left:0cm;\">d.复合目标(如对象类型)不能在RETURNING INTO 子句中使用。</p> \n<p style=\"margin-left:0cm;\">e.如果有多个隐式的数据类型转换的情况存在，多重复合目标就不能在BULK COLLECT INTO 子句中使用。</p> \n<p style=\"margin-left:0cm;\">f.如果有一个隐式的数据类型转换，复合目标的集合(如对象类型集合)就不能用于BULK COLLECTINTO 子句中。</p> \n<h3 id=\"2.FORALL\" style=\"margin-left:0cm;\">2.FORALL</h3> \n<p style=\"margin-left:0cm;\">(1).语法</p> \n<pre class=\"has\">\n<code class=\"language-sql\">FORALL index IN bounds [SAVE EXCEPTIONS]&nbsp; &nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp; sqlStatement；</code></pre> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">说明：</span></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; index</span><span style=\"color:#000000;\">是指下标；</span></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bounds</span><span style=\"color:#000000;\">是一个边界，形式是start..end</span></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [SAVE EXCEPTIONS] </span><span style=\"color:#000000;\">可写可不写，这个下面介绍；</span></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlStatement</span><span style=\"color:#000000;\">是一个DML语句，这里有且仅有一个sql语句；</span></p> \n<p style=\"margin-left:0cm;\">例子：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">--例子1：移除年级是5到10之间的学生\nFORALL i IN 5..10\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DELETE FROM student where s_grade=i;</code></pre> \n<pre class=\"has\">\n<code class=\"language-sql\">--例子：2，arr是一个数组,存着要升高一年级的学生名称\nFORALL s IN 1..arr.count SAVE EXCEPTIONS\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UPDATE student SET s_grade=s_grade+1 WHERE s_name=arr(i);</code></pre> \n<p style=\"margin-left:0cm;\"><strong>(2).SAVE EXCEPTIONS</strong></p> \n<p style=\"margin-left:0cm;\">通常情况写我们在执行DML语句时，可能会遇到异常，可能致使某个语句或整个事务回滚。如果我们写FORALL语句时没有用SAVE EXCEPTIONS语句，那么DML语句会在执行到一半的时候停下来。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果我们的FORALL语句后使用了SAVE EXCEPTIONS语句，当在执行过程中如果遇到异常，数据处理会继续向下进行，发生的异常信息会保存到SQL%BULK_EXCEPTONS的游标属性中，该游标属性是个记录集合，每条记录有两个字段，例如：（1, 02300）;</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ERROR_INDEX：该字段会存储发生异常的FORALL语句的迭代编号；</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ERROR_CODE：存储对应异常的，oracle错误代码；</p> \n<p style=\"margin-left:0cm;\">SQL%BULK_EXCEPTONS这个异常信息总是存储着最近一次执行的FORALL语句可能发生的异常。而这个异常记录集合异常的个数则由它的COUNT属性表示，即:</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SQL%BULK_EXCEPTONS.COUNT，SQL%BULK_EXCEPTIONS有效的下标索引范围在1到%BULK_EXCEPTIONS.COUNT之间。</p> \n<p style=\"margin-left:0cm;\"><strong>(3). INDICES OF</strong></p> \n<p style=\"margin-left:0cm;\">在Oracle数据库10g之前有一个重要的限制，该数据库从IN范围子句中的第一行到最后一行，依次读取集合的内容，如果在该范围内遇到一个未定义的行，Oracle数据库将引发ORA-22160异常事件：ORA-22160: element at index [N] does not exist。针对这一问题，Oracle后续又提供了两个新语句：INDICES OF 和 VALUES OF。</p> \n<p style=\"margin-left:0cm;\">接下来我们来看看这个INDICES OF<span style=\"color:#4f4f4f;\">语句，用于处理稀疏数组或包含有间隙的数组（例如：一个集合的某些元素被删除了）。</span></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#4f4f4f;\">该语句语法结构是：</span></p> \n<pre class=\"has\">\n<code class=\"language-sql\">FORALL i INDICES OF collection [SAVE EXCEPTIONS]\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlStatement;</code></pre> \n<p style=\"margin-left:0cm;\">说明：</p> \n<p style=\"margin-left:0cm;\">i：集合（嵌套表或联合数组）下标。</p> \n<p style=\"margin-left:0cm;\">collection：是这个集合。</p> \n<p style=\"margin-left:0cm;\">[SAVE EXCEPTIONS]和sqlStatement上面已经解释过。</p> \n<p style=\"margin-left:0cm;\">例子：arr_std是一个联合数组，每个元素包含（name,age,grade）,现在要向student表插入数据。</p> \n<pre class=\"has\">\n<code class=\"language-sql\">FORALL i IN INDICES OF arr_stu\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INSERT INTO student VALUES(\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arr_stu(i).name,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arr_stu(i).age,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arr_stu(i).grade\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</code></pre> \n<p style=\"margin-left:0cm;\"><strong>(4). VALUES OF</strong></p> \n<p style=\"margin-left:0cm;\">VALUES OF适用情况：绑定数组可以是稀疏数组，也可以不是，但我只想使用该数组中元素的一个子集。VALUES OF选项可以指定FORALL语句中循环计数器的值来自于指定集合中元素的值。但是，VALUES OF在使用时有一些限制：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果VALUES OF子句中所使用的集合是联合数组，则必须使用PLS_INTEGER和BINARY_INTEGER进行索引，VALUES OF 子句中所使用的元素必须是PLS_INTEGER或BINARY_INTEGER；</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 当VALUES OF 子句所引用的集合为空，则FORALL语句会导致异常；</p> \n<p style=\"margin-left:0cm;\">该语句的语法结构是：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">FORALL i IN VALUES OF collection [SAVE EXCEPTIONS]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlStatement;</code></pre> \n<p style=\"margin-left:0cm;\">说明：i和collection含义如上</p> \n<p style=\"margin-left:0cm;\">联合数组请看文章（或自行百度）：<a href=\"https://blog.csdn.net/leshami/article/details/7372061\">https://blog.csdn.net/leshami/article/details/7372061</a></p> \n<h3 id=\"3.pl%2Fsql%E8%B0%83%E8%AF%95%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B\" style=\"margin-left:0cm;\">3.pl/sql调试存储过程</h3> \n<p style=\"margin-left:0cm;\">首先，当前这个用户得有能调试存储过程的权限，如果没有的话，以数据库管理员身份给你这个用户授权：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">--userName是你要拿到调试存储过程权限的用户名\nGRANT DEBUG ANY PROCEDURE,DEBUG CONNECT SESSION TO username;</code></pre> \n<p style=\"margin-left:0cm;\">(1).右键一个存储过程名称，点击测试，如下图：</p> \n<p style=\"margin-left:0cm;\">这里我用的pl/sql是12.0.4版本的，下面截图中与低版本的pl/sql按钮位置都相同，只是图标不一样。</p> \n<p style=\"margin-left:0cm;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200715100507982.png\" title=\"\" alt=\"\"></p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\">(2).点击两次step into按钮，进入语句调试，如下图：</p> \n<p style=\"margin-left:0cm;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200715100506103.png\" title=\"\" alt=\"\"></p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\">(3).每点击一次step into按钮，会想下执行一条语句，也可以查看变量和表达式的值，如下图：</p> \n<p style=\"margin-left:0cm;\"><img src=\"https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200715100510043.png\" title=\"\" alt=\"\"></p> \n<p style=\"margin-left:0cm;\">&nbsp;</p> \n<p style=\"margin-left:0cm;\">查看变量值：在查看变量区域，在Variable列输入变量i，在Value列点击下，该变量的值就显示出来了。</p> \n<h3 id=\"4.%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%88%98\" style=\"margin-left:0cm;\">4.案例实战</h3> \n<p id=\"%E5%9C%BA%E6%99%AF%E5%92%8C%E4%B8%8A%E9%9D%A2%E7%9A%84%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%88%98%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA%EF%BC%8C%E5%A6%82%E4%B8%8B%EF%BC%9A\" style=\"margin-left:0cm;\">场景和上面的案例实战是同一个，如下：</p> \n<p style=\"margin-left:0cm;\">有表student(s_no, s_name, s_age, s_grade)，其中s_no-学号，也是主键，是从1开始向上排的（例如：第一个学生学号是1，第二个是2，一次类推）；s_name-学生姓名；s_age-学生年龄；s_grade-年级；这张表的数据量有几千万甚至上亿。一个学年结束了，我要让这些学生全部升一年级，即，让s_grade字段加1。</p> \n<p style=\"margin-left:0cm;\">这条sql，写出来如下：</p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#4472c4;\">update student set s_grade=s_grade+1 </span></p> \n<p style=\"margin-left:0cm;\">编写存储过程：</p> \n<p style=\"margin-left:0cm;\"><strong>(1).存储过程1</strong></p> \n<p style=\"margin-left:0cm;\">名称为：process_student1，student表的s_no字段类型为varchar2(16)。</p> \n<pre class=\"has\">\n<code class=\"language-sql\">CREATE OR REPLACE PROCEDURE process_student1 AS\n&nbsp;&nbsp;&nbsp; CURSOR CUR_STUDENT IS SELECT s_no FROM student;\n&nbsp;&nbsp;&nbsp; TYPE REC_STUDENT IS VARRAY(100000) OF VARCHAR2(16);\n&nbsp;&nbsp;&nbsp; students REC_STUDENT;\nBEGIN\n&nbsp; OPEN CUR_STUDENT;\n&nbsp; WHILE (TRUE) LOOP\n&nbsp;&nbsp;&nbsp; FETCH CUR_STUDENT BULK COLLECT INTO students LIMIT 100000;\n&nbsp;&nbsp;&nbsp; FORALL i IN 1..students.count SAVE EXCEPTIONS\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UPDATE student SET s_grade=s_grade+1 WHERE s_no=students(i);\n&nbsp;&nbsp;&nbsp; COMMIT;\n&nbsp;&nbsp;&nbsp; EXIT WHEN CUR_STUDENT%NOTFOUND OR CUR_STUDENT%NOTFOUND IS NULL;\n&nbsp; END LOO;\n&nbsp; dbms_output.put_line(\'finished\');\nEND;</code></pre> \n<p style=\"margin-left:0cm;\">说明：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 把student表中要更新的记录的学号拿出来放在游标CUR_STUDENT，每次从这个游标里抓取10万条数据赋值给数组students，每次更新这10万条记录。循环进行直到游标里的数据全部抓取完。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FETCH .. BULK COLLECT INTO .. LIMIT rows语句中：这个rows我测试目前最大可以为10万条。</p> \n<p style=\"margin-left:0cm;\"><strong>(2).存储过程2（ROWID）</strong></p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果我们这个student表没有主键，也没有索引呢，该怎么来做呢？</p> \n<p style=\"margin-left:0cm;\">分析下：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ROWNUM是伪列，每次获取结果后，然后在结果集里会产生一列，从1开始排，每次都是从1开始排。</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;ROWID在每个表中，每条记录的ROWID都是唯一的。在这种情况下，我们可以用ROWID。但要注意的是，ROWID是一个类型，注意它和VARCHAR2之间的转换。有两个方法：ROWIDTOCHAR（）是把ROWID类型转换为CHAR类型；CHARTOROWID()是把CAHR类型转换为ROWID类型。</p> \n<p style=\"margin-left:0cm;\">接下来我们编写存储过程process_student2，脚本如下：</p> \n<pre class=\"has\">\n<code class=\"language-sql\">CREATE OR REPLACE PROCEDURE process_student1 AS\n&nbsp;&nbsp;&nbsp; CURSOR CUR_STUDENT IS SELECT ROWIDTOCHAR(ROWID) FROM student;\n&nbsp;&nbsp;&nbsp; TYPE REC_STUDENT IS VARRAY(100000) OF VARCHAR2(16);\n&nbsp;&nbsp;&nbsp; students REC_STUDENT;\nBEGIN\n&nbsp; OPEN CUR_STUDENT;\n&nbsp; WHILE (TRUE) LOOP\n&nbsp;&nbsp;&nbsp; FETCH CUR_STUDENT BULK COLLECT INTO students LIMIT 100000;\n&nbsp;&nbsp;&nbsp; FORALL i IN 1..students.count SAVE EXCEPTIONS\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UPDATE student SET s_grade=s_grade+1 WHERE ROWID=CHARTOROWID(students(i));\n&nbsp;&nbsp;&nbsp; COMMIT;\n&nbsp;&nbsp;&nbsp; EXIT WHEN CUR_STUDENT%NOTFOUND OR CUR_STUDENT%NOTFOUND IS NULL;\n&nbsp; END LOO;\n&nbsp; dbms_output.put_line(\'finished\');\nEND;</code></pre> \n<p style=\"margin-left:0cm;\">说明：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 我们首先查到记录的ROWID并把它转换为CHAR类型，存放到游标CUR_STUDENT里，</p> \n<p style=\"margin-left:0cm;\">再每次抓取10万条数据赋值给数组进行更新，更新语句的WHERE条件时，又把数组元素是CAHR类型的rowid串转换为ROWID类型。</p> \n<h2 id=\"%E9%99%84.%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\" style=\"margin-left:0cm;\">附.参考资料</h2> \n<p style=\"margin-left:0cm;\">存储过程基础：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff;\"><u><span style=\"color:#7030a0;\"><a href=\"https://www.yiibai.com/plsql/plsql_basic_syntax.html\" rel=\"nofollow\">https://www.yiibai.com/plsql/plsql_basic_syntax.html</a></span></u></span></p> \n<p style=\"margin-left:0cm;\">存储过程进阶之FORALL：</p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff;\"><u><a href=\"https://blog.csdn.net/leshami/article/details/7536926\">https://blog.csdn.net/leshami/article/details/7536926</a></u></span></p> \n<p style=\"margin-left:0cm;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff;\"><u><a href=\"https://blog.csdn.net/jie1336950707/article/details/49966753\">https://blog.csdn.net/jie1336950707/article/details/49966753</a></u></span></p> \n<p style=\"margin-left:0cm;\">存储过程进阶之BUIL COLLECT：</p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#0000ff;\"><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"https://blog.csdn.net/leeboy_wang/article/details/7991021\">https://blog.csdn.net/leeboy_wang/article/details/7991021</a></u></span></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#0000ff;\"><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"https://blog.csdn.net/leshami/article/details/7545597\">https://blog.csdn.net/leshami/article/details/7545597</a></u></span></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#0000ff;\"><u><span style=\"color:#000000;\">联合数组：</span></u></span></p> \n<p style=\"margin-left:0cm;\"><span style=\"color:#0000ff;\"><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"https://blog.csdn.net/leshami/article/details/7372061\">https://blog.csdn.net/leshami/article/details/7372061</a></u></span></p>',NULL,0,2,1,0,0,'oracle存储过程目录一.什么是存储过程二.为什么要写存储过程三.存储过程基础1.存储过程结构2.存储过程语法3.pl/sql处理存储过程四.存储过程进阶1.BUIKCOLLECT2.FORALL3.pl/sql调试存储过程4.案例实战..._oracle存储过程','oracle存储过程',1,'2020-07-15 10:05:15','2020-07-15 10:06:06');
/*!40000 ALTER TABLE `biz_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `biz_article_look`
--

DROP TABLE IF EXISTS `biz_article_look`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `biz_article_look` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `article_id` bigint(20) unsigned NOT NULL COMMENT '文章ID',
  `user_id` bigint(20) unsigned DEFAULT NULL COMMENT '已登录用户ID',
  `user_ip` varchar(50) DEFAULT NULL COMMENT '用户IP',
  `look_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '浏览时间',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5327 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `biz_article_look`
--

LOCK TABLES `biz_article_look` WRITE;
/*!40000 ALTER TABLE `biz_article_look` DISABLE KEYS */;
INSERT INTO `biz_article_look` VALUES (2,1,NULL,'117.157.99.114','2019-09-09 09:16:42','2019-09-09 09:16:42','2019-09-09 09:16:42'),(10,1,NULL,'117.157.99.114','2019-09-10 15:01:09','2019-09-10 15:01:09','2019-09-10 15:01:09'),(12,1,NULL,'117.157.99.114','2019-09-11 11:13:25','2019-09-11 11:13:25','2019-09-11 11:13:25'),(14,1,NULL,'117.157.99.114','2019-09-11 11:14:42','2019-09-11 11:14:42','2019-09-11 11:14:42'),(35,14,NULL,'117.157.99.114','2019-09-18 08:58:24','2019-09-18 08:58:25','2019-09-18 08:58:25'),(36,14,NULL,'117.157.99.114','2019-09-18 08:58:41','2019-09-18 08:58:41','2019-09-18 08:58:41'),(37,14,NULL,'117.157.99.114','2019-09-18 09:01:20','2019-09-18 09:01:20','2019-09-18 09:01:20'),(38,14,NULL,'117.157.99.114','2019-09-18 09:01:26','2019-09-18 09:01:26','2019-09-18 09:01:26'),(39,14,NULL,'117.157.99.114','2019-09-18 09:02:27','2019-09-18 09:02:27','2019-09-18 09:02:27'),(40,1,NULL,'117.157.99.114','2019-09-18 09:03:25','2019-09-18 09:03:25','2019-09-18 09:03:25'),(41,15,NULL,'117.157.99.114','2019-09-18 10:32:24','2019-09-18 10:32:24','2019-09-18 10:32:24'),(42,15,NULL,'117.157.99.114','2019-09-18 10:32:30','2019-09-18 10:32:30','2019-09-18 10:32:30'),(43,15,NULL,'117.157.99.114','2019-09-18 10:34:00','2019-09-18 10:34:00','2019-09-18 10:34:00'),(44,15,NULL,'117.157.99.114','2019-09-18 10:34:26','2019-09-18 10:34:26','2019-09-18 10:34:26'),(45,14,NULL,'117.157.99.114','2019-09-18 17:41:05','2019-09-18 17:41:05','2019-09-18 17:41:05'),(46,14,NULL,'117.157.99.114','2019-09-18 17:48:43','2019-09-18 17:48:43','2019-09-18 17:48:43'),(47,15,NULL,'117.157.99.114','2019-09-18 17:57:37','2019-09-18 17:57:37','2019-09-18 17:57:37'),(48,14,NULL,'117.157.99.114','2019-09-18 18:04:38','2019-09-18 18:04:38','2019-09-18 18:04:38'),(49,15,NULL,'117.157.99.114','2019-09-19 09:24:51','2019-09-19 09:24:51','2019-09-19 09:24:51'),(50,15,NULL,'117.157.99.114','2019-09-19 09:40:56','2019-09-19 09:40:56','2019-09-19 09:40:56'),(51,15,NULL,'117.157.99.114','2019-09-19 09:43:31','2019-09-19 09:43:31','2019-09-19 09:43:31'),(52,15,NULL,'223.104.56.161','2019-09-19 11:19:27','2019-09-19 11:19:27','2019-09-19 11:19:27'),(53,14,NULL,'223.104.56.161','2019-09-19 11:21:14','2019-09-19 11:21:14','2019-09-19 11:21:14'),(54,1,NULL,'223.104.56.161','2019-09-19 11:21:48','2019-09-19 11:21:48','2019-09-19 11:21:48'),(62,23,NULL,'117.157.99.114','2019-09-19 15:34:51','2019-09-19 15:34:51','2019-09-19 15:34:51'),(63,23,NULL,'117.157.99.114','2019-09-19 15:45:21','2019-09-19 15:45:21','2019-09-19 15:45:21'),(64,23,NULL,'117.157.99.114','2019-09-19 15:59:17','2019-09-19 15:59:17','2019-09-19 15:59:17'),(65,27,NULL,'117.157.99.114','2019-09-19 19:41:55','2019-09-19 19:41:55','2019-09-19 19:41:55'),(66,27,NULL,'117.157.99.114','2019-09-19 19:42:23','2019-09-19 19:42:23','2019-09-19 19:42:23'),(67,15,NULL,'117.157.99.114','2019-09-20 17:55:44','2019-09-20 17:55:44','2019-09-20 17:55:44'),(69,32,NULL,'117.157.99.114','2019-09-23 17:02:34','2019-09-23 17:02:35','2019-09-23 17:02:35'),(70,31,NULL,'117.157.99.114','2019-09-23 17:02:52','2019-09-23 17:02:52','2019-09-23 17:02:52'),(71,28,NULL,'117.157.99.114','2019-09-23 17:03:11','2019-09-23 17:03:11','2019-09-23 17:03:11'),(72,15,NULL,'117.157.99.114','2019-09-24 15:28:31','2019-09-24 15:28:31','2019-09-24 15:28:31'),(73,15,NULL,'117.157.99.114','2019-09-24 15:29:12','2019-09-24 15:29:12','2019-09-24 15:29:12'),(74,33,NULL,'117.157.99.114','2019-09-24 21:11:44','2019-09-24 21:11:44','2019-09-24 21:11:44'),(75,33,NULL,'117.157.99.114','2019-09-24 21:51:23','2019-09-24 21:51:23','2019-09-24 21:51:23'),(76,33,NULL,'117.157.99.114','2019-09-24 21:51:44','2019-09-24 21:51:44','2019-09-24 21:51:44'),(77,33,NULL,'117.157.99.114','2019-09-24 21:55:26','2019-09-24 21:55:26','2019-09-24 21:55:26'),(78,33,NULL,'117.157.99.114','2019-09-26 11:52:46','2019-09-26 11:52:47','2019-09-26 11:52:47'),(79,33,NULL,'117.157.99.114','2019-09-26 11:58:42','2019-09-26 11:58:42','2019-09-26 11:58:42'),(80,33,NULL,'117.157.99.114','2019-09-26 12:02:12','2019-09-26 12:02:12','2019-09-26 12:02:12'),(81,28,NULL,'117.157.99.114','2019-09-26 20:25:23','2019-09-26 20:25:23','2019-09-26 20:25:23'),(82,28,NULL,'117.157.99.114','2019-09-26 20:55:20','2019-09-26 20:55:20','2019-09-26 20:55:20'),(83,33,NULL,'117.157.99.114','2019-09-26 21:12:16','2019-09-26 21:12:16','2019-09-26 21:12:16'),(84,28,NULL,'117.157.99.114','2019-09-26 21:12:21','2019-09-26 21:12:22','2019-09-26 21:12:22'),(85,33,NULL,'117.157.99.114','2019-09-29 09:14:44','2019-09-29 09:14:44','2019-09-29 09:14:44'),(86,33,NULL,'171.221.254.148','2019-10-02 12:51:35','2019-10-02 12:51:35','2019-10-02 12:51:35'),(87,33,NULL,'171.221.254.148','2019-10-02 12:51:36','2019-10-02 12:51:36','2019-10-02 12:51:36'),(88,33,NULL,'171.221.254.148','2019-10-02 12:51:37','2019-10-02 12:51:37','2019-10-02 12:51:37'),(89,32,NULL,'171.221.254.148','2019-10-02 12:51:50','2019-10-02 12:51:50','2019-10-02 12:51:50'),(90,32,NULL,'171.221.254.148','2019-10-02 12:51:50','2019-10-02 12:51:50','2019-10-02 12:51:50'),(91,32,NULL,'171.221.254.148','2019-10-02 12:51:52','2019-10-02 12:51:52','2019-10-02 12:51:52'),(92,32,NULL,'171.221.254.148','2019-10-02 12:52:31','2019-10-02 12:52:31','2019-10-02 12:52:31'),(93,32,NULL,'171.221.254.148','2019-10-02 12:52:31','2019-10-02 12:52:31','2019-10-02 12:52:31'),(94,32,NULL,'171.221.254.148','2019-10-02 12:52:37','2019-10-02 12:52:37','2019-10-02 12:52:37'),(95,32,NULL,'171.221.254.148','2019-10-02 12:52:37','2019-10-02 12:52:37','2019-10-02 12:52:37'),(96,32,NULL,'171.221.254.148','2019-10-02 12:53:00','2019-10-02 12:53:00','2019-10-02 12:53:00'),(97,32,NULL,'183.136.238.204','2019-10-02 16:10:12','2019-10-02 16:10:12','2019-10-02 16:10:12'),(98,33,NULL,'183.136.238.221','2019-10-02 16:10:29','2019-10-02 16:10:29','2019-10-02 16:10:29'),(99,32,NULL,'183.136.238.194','2019-10-02 16:24:56','2019-10-02 16:24:56','2019-10-02 16:24:56'),(100,33,NULL,'223.87.231.10','2019-10-04 11:04:52','2019-10-04 11:04:52','2019-10-04 11:04:52'),(101,31,NULL,'223.87.231.10','2019-10-04 11:04:59','2019-10-04 11:04:59','2019-10-04 11:04:59'),(102,33,NULL,'223.87.231.10','2019-10-04 11:06:17','2019-10-04 11:06:17','2019-10-04 11:06:17'),(103,32,NULL,'223.87.231.10','2019-10-04 11:07:57','2019-10-04 11:07:57','2019-10-04 11:07:57'),(104,21,NULL,'223.87.231.10','2019-10-04 11:08:06','2019-10-04 11:08:06','2019-10-04 11:08:06'),(105,27,NULL,'223.87.231.10','2019-10-04 11:08:49','2019-10-04 11:08:49','2019-10-04 11:08:49'),(106,33,NULL,'117.157.99.114','2019-10-08 16:14:38','2019-10-08 16:14:38','2019-10-08 16:14:38'),(107,33,NULL,'180.163.220.66','2019-10-08 16:14:49','2019-10-08 16:14:49','2019-10-08 16:14:49'),(108,1,NULL,'117.157.99.114','2019-10-08 16:18:49','2019-10-08 16:18:49','2019-10-08 16:18:49'),(109,1,NULL,'203.208.60.15','2019-10-09 04:19:08','2019-10-09 04:19:08','2019-10-09 04:19:08'),(110,32,NULL,'203.208.60.56','2019-10-09 04:26:21','2019-10-09 04:26:21','2019-10-09 04:26:21'),(111,14,NULL,'203.208.60.108','2019-10-09 04:33:33','2019-10-09 04:33:33','2019-10-09 04:33:33'),(112,31,NULL,'203.208.60.36','2019-10-09 04:40:45','2019-10-09 04:40:45','2019-10-09 04:40:45'),(113,27,NULL,'203.208.60.65','2019-10-09 04:47:57','2019-10-09 04:47:57','2019-10-09 04:47:57'),(114,15,NULL,'203.208.60.107','2019-10-09 04:55:09','2019-10-09 04:55:09','2019-10-09 04:55:09'),(115,33,NULL,'203.208.60.46','2019-10-09 05:02:21','2019-10-09 05:02:21','2019-10-09 05:02:21'),(116,28,NULL,'203.208.60.31','2019-10-09 05:09:33','2019-10-09 05:09:33','2019-10-09 05:09:33'),(117,23,NULL,'203.208.60.58','2019-10-09 05:16:44','2019-10-09 05:16:44','2019-10-09 05:16:44'),(118,21,NULL,'203.208.60.123','2019-10-09 05:31:09','2019-10-09 05:31:09','2019-10-09 05:31:09'),(119,33,NULL,'117.157.99.114','2019-10-09 17:59:22','2019-10-09 17:59:22','2019-10-09 17:59:22'),(120,33,NULL,'117.157.99.114','2019-10-11 09:37:02','2019-10-11 09:37:02','2019-10-11 09:37:02'),(121,1,NULL,'203.208.60.12','2019-10-11 17:02:04','2019-10-11 17:02:04','2019-10-11 17:02:04'),(122,28,NULL,'203.208.60.102','2019-10-11 22:01:03','2019-10-11 22:01:03','2019-10-11 22:01:03'),(123,21,NULL,'203.208.60.82','2019-10-12 02:49:35','2019-10-12 02:49:35','2019-10-12 02:49:35'),(124,31,NULL,'203.208.60.65','2019-10-12 04:19:25','2019-10-12 04:19:25','2019-10-12 04:19:25'),(125,32,NULL,'182.150.55.8','2019-10-14 10:39:46','2019-10-14 10:39:47','2019-10-14 10:39:47'),(126,33,NULL,'117.157.99.114','2019-10-14 10:42:04','2019-10-14 10:42:04','2019-10-14 10:42:04'),(127,33,NULL,'117.157.99.114','2019-10-14 10:50:23','2019-10-14 10:50:23','2019-10-14 10:50:23'),(128,1,NULL,'203.208.60.116','2019-10-21 03:21:48','2019-10-21 03:21:48','2019-10-21 03:21:48'),(129,32,NULL,'203.208.60.48','2019-10-21 07:03:16','2019-10-21 07:03:16','2019-10-21 07:03:16'),(130,31,NULL,'203.208.60.8','2019-10-21 08:03:17','2019-10-21 08:03:17','2019-10-21 08:03:17'),(131,14,NULL,'203.208.60.33','2019-10-21 08:11:01','2019-10-21 08:11:01','2019-10-21 08:11:01'),(132,28,NULL,'203.208.60.55','2019-10-21 08:16:42','2019-10-21 08:16:42','2019-10-21 08:16:42'),(133,27,NULL,'203.208.60.113','2019-10-21 08:24:56','2019-10-21 08:24:56','2019-10-21 08:24:56'),(134,15,NULL,'203.208.60.46','2019-10-21 08:34:13','2019-10-21 08:34:13','2019-10-21 08:34:13'),(135,23,NULL,'66.249.79.34','2019-10-21 09:20:56','2019-10-21 09:20:56','2019-10-21 09:20:56'),(136,21,NULL,'66.249.65.186','2019-10-21 18:01:46','2019-10-21 18:01:46','2019-10-21 18:01:46'),(137,33,NULL,'66.249.65.184','2019-10-21 18:05:00','2019-10-21 18:05:00','2019-10-21 18:05:00'),(138,1,NULL,'117.157.99.114','2019-10-24 20:52:17','2019-10-24 20:52:17','2019-10-24 20:52:17'),(139,1,NULL,'117.157.99.114','2019-10-24 20:53:26','2019-10-24 20:53:26','2019-10-24 20:53:26'),(140,1,NULL,'117.157.99.114','2019-10-24 20:53:49','2019-10-24 20:53:49','2019-10-24 20:53:49'),(141,1,NULL,'180.163.220.66','2019-10-25 02:22:10','2019-10-25 02:22:10','2019-10-25 02:22:10'),(142,1,NULL,'180.163.220.3','2019-10-25 02:22:52','2019-10-25 02:22:52','2019-10-25 02:22:52'),(143,35,NULL,'117.157.99.114','2019-10-30 16:46:50','2019-10-30 16:46:50','2019-10-30 16:46:50'),(144,36,NULL,'117.157.99.114','2019-10-30 17:23:05','2019-10-30 17:23:05','2019-10-30 17:23:05'),(145,36,NULL,'42.236.10.93','2019-10-30 17:23:40','2019-10-30 17:23:40','2019-10-30 17:23:40'),(146,37,NULL,'117.157.99.114','2019-10-31 17:33:15','2019-10-31 17:33:15','2019-10-31 17:33:15'),(147,37,NULL,'42.236.10.78','2019-10-31 17:33:56','2019-10-31 17:33:56','2019-10-31 17:33:56'),(148,37,NULL,'117.157.99.114','2019-10-31 17:34:38','2019-10-31 17:34:38','2019-10-31 17:34:38'),(149,37,NULL,'117.157.99.114','2019-10-31 18:01:54','2019-10-31 18:01:54','2019-10-31 18:01:54'),(150,41,NULL,'117.157.99.114','2019-11-01 15:56:47','2019-11-01 15:56:47','2019-11-01 15:56:47'),(151,42,NULL,'117.157.99.114','2019-11-01 16:04:13','2019-11-01 16:04:13','2019-11-01 16:04:13'),(152,43,NULL,'117.157.99.114','2019-11-01 16:32:51','2019-11-01 16:32:51','2019-11-01 16:32:51'),(153,42,NULL,'117.157.99.114','2019-11-01 16:55:10','2019-11-01 16:55:10','2019-11-01 16:55:10'),(154,42,NULL,'117.157.99.114','2019-11-01 16:55:29','2019-11-01 16:55:29','2019-11-01 16:55:29'),(155,42,NULL,'117.157.99.114','2019-11-01 17:00:37','2019-11-01 17:00:37','2019-11-01 17:00:37'),(156,33,NULL,'117.157.99.114','2019-11-01 17:01:43','2019-11-01 17:01:43','2019-11-01 17:01:43'),(157,43,NULL,'0:0:0:0:0:0:0:1','2019-11-01 17:09:05','2019-11-01 17:09:05','2019-11-01 17:09:05'),(158,42,NULL,'117.157.99.114','2019-11-01 17:09:42','2019-11-01 17:09:42','2019-11-01 17:09:42'),(159,43,NULL,'117.157.99.114','2019-11-01 17:17:02','2019-11-01 17:17:02','2019-11-01 17:17:02'),(160,43,NULL,'180.163.220.66','2019-11-01 17:17:09','2019-11-01 17:17:09','2019-11-01 17:17:09'),(161,42,NULL,'117.157.99.114','2019-11-01 17:17:17','2019-11-01 17:17:17','2019-11-01 17:17:17'),(162,42,NULL,'42.236.10.84','2019-11-01 17:17:21','2019-11-01 17:17:21','2019-11-01 17:17:21'),(163,43,NULL,'117.157.99.114','2019-11-01 17:22:24','2019-11-01 17:22:24','2019-11-01 17:22:24'),(164,44,NULL,'117.157.99.114','2019-11-02 10:58:29','2019-11-02 10:58:29','2019-11-02 10:58:29'),(165,44,NULL,'117.157.99.114','2019-11-02 10:59:25','2019-11-02 10:59:25','2019-11-02 10:59:25'),(166,43,NULL,'117.157.99.114','2019-11-02 12:37:13','2019-11-02 12:37:13','2019-11-02 12:37:13'),(167,43,NULL,'117.157.99.114','2019-11-02 12:38:46','2019-11-02 12:38:46','2019-11-02 12:38:46'),(168,14,NULL,'180.162.52.192','2019-11-03 11:24:05','2019-11-03 11:24:05','2019-11-03 11:24:05'),(169,14,NULL,'42.236.10.125','2019-11-03 11:24:09','2019-11-03 11:24:09','2019-11-03 11:24:09'),(170,45,NULL,'117.157.99.114','2019-11-07 16:02:38','2019-11-07 16:02:38','2019-11-07 16:02:38'),(171,45,NULL,'117.157.99.114','2019-11-07 20:50:05','2019-11-07 20:50:05','2019-11-07 20:50:05'),(172,15,NULL,'117.157.99.114','2019-11-08 17:59:53','2019-11-08 17:59:53','2019-11-08 17:59:53'),(173,15,NULL,'180.163.220.3','2019-11-08 18:00:01','2019-11-08 18:00:01','2019-11-08 18:00:01'),(174,36,NULL,'66.249.65.184','2019-11-14 16:08:50','2019-11-14 16:08:50','2019-11-14 16:08:50'),(175,43,NULL,'66.249.65.182','2019-11-14 16:10:26','2019-11-14 16:10:26','2019-11-14 16:10:26'),(176,45,NULL,'66.249.65.182','2019-11-14 16:11:40','2019-11-14 16:11:40','2019-11-14 16:11:40'),(177,41,NULL,'66.249.65.182','2019-11-14 16:13:27','2019-11-14 16:13:27','2019-11-14 16:13:27'),(178,37,NULL,'66.249.65.182','2019-11-14 16:15:08','2019-11-14 16:15:08','2019-11-14 16:15:08'),(179,35,NULL,'66.249.65.182','2019-11-14 16:17:10','2019-11-14 16:17:10','2019-11-14 16:17:10'),(180,14,NULL,'66.249.65.182','2019-11-14 16:20:47','2019-11-14 16:20:47','2019-11-14 16:20:47'),(181,23,NULL,'66.249.65.184','2019-11-14 16:30:06','2019-11-14 16:30:06','2019-11-14 16:30:06'),(182,1,NULL,'66.249.65.182','2019-11-14 16:45:55','2019-11-14 16:45:55','2019-11-14 16:45:55'),(183,27,NULL,'66.249.65.184','2019-11-14 16:57:11','2019-11-14 16:57:11','2019-11-14 16:57:11'),(184,28,NULL,'66.249.65.186','2019-11-15 00:28:02','2019-11-15 00:28:02','2019-11-15 00:28:02'),(185,14,NULL,'66.249.65.186','2019-11-15 04:14:01','2019-11-15 04:14:01','2019-11-15 04:14:01'),(186,14,NULL,'66.249.65.182','2019-11-15 04:27:46','2019-11-15 04:27:46','2019-11-15 04:27:46'),(187,23,NULL,'66.249.65.182','2019-11-15 05:33:41','2019-11-15 05:33:41','2019-11-15 05:33:41'),(188,28,NULL,'66.249.65.182','2019-11-15 11:25:31','2019-11-15 11:25:31','2019-11-15 11:25:31'),(189,14,NULL,'66.249.65.182','2019-11-15 15:08:19','2019-11-15 15:08:19','2019-11-15 15:08:19'),(190,23,NULL,'66.249.65.186','2019-11-15 15:17:21','2019-11-15 15:17:21','2019-11-15 15:17:21'),(191,14,NULL,'66.249.65.184','2019-11-16 00:48:59','2019-11-16 00:48:59','2019-11-16 00:48:59'),(192,23,NULL,'66.249.65.186','2019-11-16 02:32:12','2019-11-16 02:32:12','2019-11-16 02:32:12'),(193,14,NULL,'66.249.75.216','2019-11-16 11:42:02','2019-11-16 11:42:02','2019-11-16 11:42:02'),(194,42,NULL,'66.249.75.214','2019-11-16 11:59:27','2019-11-16 11:59:27','2019-11-16 11:59:27'),(195,44,NULL,'66.249.75.245','2019-11-16 12:06:37','2019-11-16 12:06:37','2019-11-16 12:06:37'),(196,23,NULL,'66.249.75.247','2019-11-17 01:09:17','2019-11-17 01:09:17','2019-11-17 01:09:17'),(197,14,NULL,'66.249.75.247','2019-11-17 03:09:04','2019-11-17 03:09:04','2019-11-17 03:09:04'),(198,23,NULL,'66.249.66.214','2019-11-17 10:40:52','2019-11-17 10:40:52','2019-11-17 10:40:52'),(199,14,NULL,'66.249.66.218','2019-11-17 13:02:10','2019-11-17 13:02:10','2019-11-17 13:02:10'),(200,23,NULL,'66.249.66.214','2019-11-17 19:27:04','2019-11-17 19:27:04','2019-11-17 19:27:04'),(201,14,NULL,'66.249.66.216','2019-11-17 23:07:59','2019-11-17 23:07:59','2019-11-17 23:07:59'),(202,23,NULL,'66.249.64.90','2019-11-18 05:50:02','2019-11-18 05:50:02','2019-11-18 05:50:02'),(203,14,NULL,'66.249.64.90','2019-11-18 08:20:01','2019-11-18 08:20:01','2019-11-18 08:20:01'),(204,14,NULL,'117.157.99.114','2019-11-18 14:29:36','2019-11-18 14:29:36','2019-11-18 14:29:36'),(205,36,NULL,'117.157.99.114','2019-11-18 17:36:22','2019-11-18 17:36:22','2019-11-18 17:36:22'),(206,42,NULL,'117.157.99.114','2019-11-18 17:37:15','2019-11-18 17:37:15','2019-11-18 17:37:15'),(207,43,NULL,'117.157.99.114','2019-11-18 17:37:25','2019-11-18 17:37:25','2019-11-18 17:37:25'),(208,44,NULL,'117.157.99.114','2019-11-18 17:40:43','2019-11-18 17:40:43','2019-11-18 17:40:43'),(209,45,NULL,'117.157.99.114','2019-11-18 17:41:22','2019-11-18 17:41:22','2019-11-18 17:41:22'),(210,14,NULL,'117.157.99.114','2019-11-18 17:41:29','2019-11-18 17:41:29','2019-11-18 17:41:29'),(211,32,NULL,'117.157.99.114','2019-11-18 17:41:48','2019-11-18 17:41:48','2019-11-18 17:41:48'),(212,31,NULL,'117.157.99.114','2019-11-18 17:42:03','2019-11-18 17:42:03','2019-11-18 17:42:03'),(213,27,NULL,'117.157.99.114','2019-11-18 17:42:13','2019-11-18 17:42:13','2019-11-18 17:42:13'),(214,23,NULL,'117.157.99.114','2019-11-18 17:42:26','2019-11-18 17:42:26','2019-11-18 17:42:26'),(215,21,NULL,'117.157.99.114','2019-11-18 17:43:14','2019-11-18 17:43:14','2019-11-18 17:43:14'),(216,27,NULL,'42.120.160.114','2019-12-02 10:04:52','2019-12-02 10:04:52','2019-12-02 10:04:52'),(217,23,NULL,'42.156.138.23','2019-12-02 14:40:08','2019-12-02 14:40:08','2019-12-02 14:40:08'),(218,43,NULL,'42.156.136.117','2019-12-02 23:17:29','2019-12-02 23:17:29','2019-12-02 23:17:29'),(219,14,NULL,'42.120.161.63','2019-12-03 01:26:21','2019-12-03 01:26:21','2019-12-03 01:26:21'),(220,42,NULL,'42.156.137.105','2019-12-03 13:48:35','2019-12-03 13:48:35','2019-12-03 13:48:35'),(221,31,NULL,'42.156.254.112','2019-12-04 05:15:22','2019-12-04 05:15:22','2019-12-04 05:15:22'),(222,21,NULL,'42.120.161.3','2019-12-04 08:26:58','2019-12-04 08:26:58','2019-12-04 08:26:58'),(223,28,NULL,'106.11.152.92','2019-12-04 11:47:13','2019-12-04 11:47:13','2019-12-04 11:47:13'),(224,37,NULL,'42.156.137.3','2019-12-06 01:48:59','2019-12-06 01:48:59','2019-12-06 01:48:59'),(225,15,NULL,'42.156.136.45','2019-12-06 05:48:55','2019-12-06 05:48:55','2019-12-06 05:48:55'),(226,36,NULL,'106.11.153.89','2019-12-06 10:06:29','2019-12-06 10:06:29','2019-12-06 10:06:29'),(227,33,NULL,'42.120.160.106','2019-12-07 02:59:49','2019-12-07 02:59:49','2019-12-07 02:59:49'),(228,32,NULL,'42.156.139.76','2019-12-07 04:54:23','2019-12-07 04:54:23','2019-12-07 04:54:23'),(229,41,NULL,'106.11.159.102','2019-12-07 09:36:37','2019-12-07 09:36:38','2019-12-07 09:36:38'),(230,35,NULL,'42.156.139.46','2019-12-07 14:17:48','2019-12-07 14:17:48','2019-12-07 14:17:48'),(231,45,NULL,'106.11.152.46','2019-12-07 18:39:13','2019-12-07 18:39:13','2019-12-07 18:39:13'),(232,44,NULL,'42.120.160.29','2019-12-08 00:35:16','2019-12-08 00:35:16','2019-12-08 00:35:16'),(233,33,NULL,'106.11.159.109','2019-12-08 05:03:50','2019-12-08 05:03:50','2019-12-08 05:03:50'),(234,1,NULL,'106.11.159.73','2019-12-08 14:23:43','2019-12-08 14:23:43','2019-12-08 14:23:43'),(235,32,NULL,'106.11.158.173','2019-12-11 13:53:51','2019-12-11 13:53:51','2019-12-11 13:53:51'),(236,45,NULL,'106.11.154.188','2019-12-12 03:09:06','2019-12-12 03:09:06','2019-12-12 03:09:06'),(237,23,NULL,'106.11.153.169','2019-12-12 08:20:45','2019-12-12 08:20:45','2019-12-12 08:20:45'),(238,27,NULL,'106.11.158.173','2019-12-13 12:22:28','2019-12-13 12:22:28','2019-12-13 12:22:28'),(239,33,NULL,'106.11.153.169','2019-12-14 00:56:00','2019-12-14 00:56:00','2019-12-14 00:56:00'),(240,44,NULL,'106.11.155.189','2019-12-14 09:03:44','2019-12-14 09:03:44','2019-12-14 09:03:44'),(241,33,NULL,'106.11.152.173','2019-12-15 08:14:58','2019-12-15 08:14:58','2019-12-15 08:14:58'),(242,33,NULL,'220.181.108.170','2019-12-15 17:40:49','2019-12-15 17:40:49','2019-12-15 17:40:49'),(243,45,NULL,'220.181.108.183','2019-12-15 18:47:29','2019-12-15 18:47:29','2019-12-15 18:47:29'),(244,14,NULL,'106.11.159.167','2019-12-15 20:57:00','2019-12-15 20:57:00','2019-12-15 20:57:00'),(245,44,NULL,'123.125.71.117','2019-12-16 08:01:48','2019-12-16 08:01:49','2019-12-16 08:01:49'),(246,41,NULL,'123.125.71.82','2019-12-16 12:01:02','2019-12-16 12:01:02','2019-12-16 12:01:02'),(247,14,NULL,'220.181.108.145','2019-12-16 18:57:46','2019-12-16 18:57:46','2019-12-16 18:57:46'),(248,35,NULL,'106.11.155.189','2019-12-17 10:10:59','2019-12-17 10:10:59','2019-12-17 10:10:59'),(249,32,NULL,'220.181.108.83','2019-12-18 08:31:45','2019-12-18 08:31:45','2019-12-18 08:31:45'),(250,28,NULL,'123.125.71.114','2019-12-18 13:45:05','2019-12-18 13:45:05','2019-12-18 13:45:05'),(251,21,NULL,'220.181.108.178','2019-12-18 15:15:05','2019-12-18 15:15:05','2019-12-18 15:15:05'),(252,46,NULL,'117.157.99.114','2019-12-18 16:01:47','2019-12-18 16:01:47','2019-12-18 16:01:47'),(253,31,NULL,'123.125.71.114','2019-12-18 22:25:40','2019-12-18 22:25:40','2019-12-18 22:25:40'),(254,35,NULL,'123.125.71.104','2019-12-19 02:18:53','2019-12-19 02:18:53','2019-12-19 02:18:53'),(255,15,NULL,'220.181.108.180','2019-12-19 12:11:09','2019-12-19 12:11:09','2019-12-19 12:11:09'),(256,36,NULL,'123.125.71.27','2019-12-19 14:32:56','2019-12-19 14:32:56','2019-12-19 14:32:56'),(257,37,NULL,'220.181.108.121','2019-12-20 08:06:09','2019-12-20 08:06:10','2019-12-20 08:06:10'),(258,14,NULL,'106.11.156.176','2019-12-20 09:42:18','2019-12-20 09:42:18','2019-12-20 09:42:18'),(259,43,NULL,'218.17.40.171','2019-12-20 16:56:40','2019-12-20 16:56:40','2019-12-20 16:56:40'),(260,28,NULL,'106.11.157.188','2019-12-21 09:56:56','2019-12-21 09:56:56','2019-12-21 09:56:56'),(261,46,NULL,'203.208.60.88','2019-12-21 12:44:42','2019-12-21 12:44:42','2019-12-21 12:44:42'),(262,14,NULL,'203.208.60.115','2019-12-21 18:08:33','2019-12-21 18:08:33','2019-12-21 18:08:33'),(263,23,NULL,'203.208.60.4','2019-12-21 18:38:57','2019-12-21 18:38:57','2019-12-21 18:38:57'),(264,31,NULL,'106.11.153.165','2019-12-21 22:16:23','2019-12-21 22:16:23','2019-12-21 22:16:23'),(265,23,NULL,'123.125.71.90','2019-12-22 00:36:56','2019-12-22 00:36:56','2019-12-22 00:36:56'),(266,14,NULL,'203.208.60.34','2019-12-22 04:36:19','2019-12-22 04:36:19','2019-12-22 04:36:19'),(267,27,NULL,'220.181.108.182','2019-12-22 23:45:11','2019-12-22 23:45:11','2019-12-22 23:45:11'),(268,15,NULL,'220.181.108.178','2019-12-23 00:32:05','2019-12-23 00:32:05','2019-12-23 00:32:05'),(269,46,NULL,'106.11.159.70','2019-12-24 07:22:56','2019-12-24 07:22:56','2019-12-24 07:22:56'),(270,46,NULL,'220.181.108.140','2019-12-24 08:11:35','2019-12-24 08:11:35','2019-12-24 08:11:35'),(271,43,NULL,'106.11.153.242','2019-12-24 11:16:03','2019-12-24 11:16:03','2019-12-24 11:16:03'),(272,15,NULL,'106.11.157.234','2019-12-24 13:30:25','2019-12-24 13:30:25','2019-12-24 13:30:25'),(273,46,NULL,'42.120.161.69','2019-12-25 09:46:02','2019-12-25 09:46:02','2019-12-25 09:46:02'),(274,47,NULL,'117.157.99.114','2019-12-25 11:24:29','2019-12-25 11:24:29','2019-12-25 11:24:29'),(275,36,NULL,'123.125.71.51','2019-12-25 17:52:38','2019-12-25 17:52:39','2019-12-25 17:52:39'),(276,15,NULL,'106.11.156.97','2019-12-25 20:46:32','2019-12-25 20:46:32','2019-12-25 20:46:32'),(277,36,NULL,'106.11.155.126','2019-12-26 05:38:28','2019-12-26 05:38:28','2019-12-26 05:38:28'),(278,46,NULL,'220.181.108.141','2019-12-26 09:11:26','2019-12-26 09:11:26','2019-12-26 09:11:26'),(279,37,NULL,'106.11.152.123','2019-12-26 15:46:16','2019-12-26 15:46:16','2019-12-26 15:46:16'),(280,49,NULL,'139.207.122.254','2019-12-26 19:34:42','2019-12-26 19:34:42','2019-12-26 19:34:42'),(281,14,NULL,'123.232.59.150','2019-12-26 20:54:17','2019-12-26 20:54:17','2019-12-26 20:54:17'),(282,43,NULL,'106.113.10.152','2019-12-26 20:58:53','2019-12-26 20:58:53','2019-12-26 20:58:53'),(283,43,NULL,'106.113.10.152','2019-12-26 21:00:51','2019-12-26 21:00:51','2019-12-26 21:00:51'),(284,43,NULL,'106.113.10.152','2019-12-26 21:02:33','2019-12-26 21:02:33','2019-12-26 21:02:33'),(285,43,NULL,'106.114.183.250','2019-12-26 21:09:00','2019-12-26 21:09:00','2019-12-26 21:09:00'),(286,43,NULL,'106.113.10.152','2019-12-26 21:29:31','2019-12-26 21:29:31','2019-12-26 21:29:31'),(287,14,NULL,'114.88.154.163','2019-12-26 22:40:38','2019-12-26 22:40:38','2019-12-26 22:40:38'),(288,47,NULL,'203.208.60.72','2019-12-27 08:59:52','2019-12-27 08:59:52','2019-12-27 08:59:52'),(289,48,NULL,'203.208.60.44','2019-12-27 09:01:44','2019-12-27 09:01:44','2019-12-27 09:01:44'),(290,43,NULL,'106.114.183.250','2019-12-27 09:04:04','2019-12-27 09:04:04','2019-12-27 09:04:04'),(291,49,NULL,'203.208.60.53','2019-12-27 09:04:19','2019-12-27 09:04:19','2019-12-27 09:04:19'),(292,50,NULL,'203.208.60.35','2019-12-27 09:05:08','2019-12-27 09:05:08','2019-12-27 09:05:08'),(294,49,NULL,'222.211.207.91','2019-12-27 10:17:06','2019-12-27 10:17:06','2019-12-27 10:17:06'),(295,14,NULL,'116.6.99.221','2019-12-27 11:19:24','2019-12-27 11:19:24','2019-12-27 11:19:24'),(296,45,NULL,'43.255.75.202','2019-12-27 12:55:53','2019-12-27 12:55:53','2019-12-27 12:55:53'),(297,41,NULL,'106.11.158.118','2019-12-27 17:10:02','2019-12-27 17:10:02','2019-12-27 17:10:02'),(298,27,NULL,'123.125.71.50','2019-12-27 18:12:08','2019-12-27 18:12:08','2019-12-27 18:12:08'),(299,45,NULL,'120.228.159.69','2019-12-29 09:37:31','2019-12-29 09:37:31','2019-12-29 09:37:31'),(300,21,NULL,'144.76.14.153','2019-12-29 14:24:31','2019-12-29 14:24:31','2019-12-29 14:24:31'),(301,32,NULL,'144.76.14.153','2019-12-29 14:24:44','2019-12-29 14:24:44','2019-12-29 14:24:44'),(302,33,NULL,'144.76.14.153','2019-12-29 14:24:57','2019-12-29 14:24:57','2019-12-29 14:24:57'),(303,36,NULL,'144.76.14.153','2019-12-29 14:25:08','2019-12-29 14:25:08','2019-12-29 14:25:08'),(304,37,NULL,'144.76.14.153','2019-12-29 14:25:20','2019-12-29 14:25:20','2019-12-29 14:25:20'),(305,14,NULL,'164.68.117.152','2019-12-29 16:12:36','2019-12-29 16:12:36','2019-12-29 16:12:36'),(306,43,NULL,'164.68.117.152','2019-12-29 16:12:48','2019-12-29 16:12:48','2019-12-29 16:12:48'),(307,44,NULL,'164.68.117.152','2019-12-29 16:13:04','2019-12-29 16:13:04','2019-12-29 16:13:04'),(308,45,NULL,'164.68.117.152','2019-12-29 16:13:23','2019-12-29 16:13:23','2019-12-29 16:13:23'),(309,46,NULL,'164.68.117.152','2019-12-29 16:13:45','2019-12-29 16:13:45','2019-12-29 16:13:45'),(310,47,NULL,'164.68.117.152','2019-12-29 16:13:57','2019-12-29 16:13:57','2019-12-29 16:13:57'),(311,48,NULL,'164.68.117.152','2019-12-29 16:14:10','2019-12-29 16:14:10','2019-12-29 16:14:10'),(312,49,NULL,'164.68.117.152','2019-12-29 16:14:29','2019-12-29 16:14:29','2019-12-29 16:14:29'),(313,50,NULL,'164.68.117.152','2019-12-29 16:14:42','2019-12-29 16:14:42','2019-12-29 16:14:42'),(316,1,NULL,'89.163.242.78','2019-12-30 01:34:26','2019-12-30 01:34:26','2019-12-30 01:34:26'),(317,15,NULL,'89.163.242.78','2019-12-30 01:34:33','2019-12-30 01:34:33','2019-12-30 01:34:33'),(318,23,NULL,'89.163.242.78','2019-12-30 01:34:37','2019-12-30 01:34:37','2019-12-30 01:34:37'),(319,27,NULL,'89.163.242.78','2019-12-30 01:34:45','2019-12-30 01:34:45','2019-12-30 01:34:45'),(320,28,NULL,'89.163.242.78','2019-12-30 01:34:51','2019-12-30 01:34:51','2019-12-30 01:34:51'),(321,31,NULL,'89.163.242.78','2019-12-30 01:34:54','2019-12-30 01:34:54','2019-12-30 01:34:54'),(322,35,NULL,'89.163.242.78','2019-12-30 01:34:58','2019-12-30 01:34:58','2019-12-30 01:34:58'),(323,41,NULL,'89.163.242.78','2019-12-30 01:35:04','2019-12-30 01:35:04','2019-12-30 01:35:04'),(324,42,NULL,'89.163.242.78','2019-12-30 01:35:08','2019-12-30 01:35:08','2019-12-30 01:35:08'),(325,43,NULL,'106.114.183.250','2019-12-30 08:56:38','2019-12-30 08:56:38','2019-12-30 08:56:38'),(326,45,NULL,'219.156.161.163','2019-12-30 09:20:27','2019-12-30 09:20:27','2019-12-30 09:20:27'),(327,23,NULL,'106.11.159.123','2019-12-30 09:49:06','2019-12-30 09:49:06','2019-12-30 09:49:06'),(328,27,NULL,'117.157.99.114','2019-12-30 10:51:24','2019-12-30 10:51:24','2019-12-30 10:51:24'),(329,27,NULL,'117.157.99.114','2019-12-30 10:51:46','2019-12-30 10:51:46','2019-12-30 10:51:46'),(330,27,NULL,'117.157.99.114','2019-12-30 10:52:40','2019-12-30 10:52:40','2019-12-30 10:52:40'),(331,45,NULL,'106.11.156.97','2019-12-31 01:46:13','2019-12-31 01:46:13','2019-12-31 01:46:13'),(332,15,NULL,'220.181.108.174','2019-12-31 02:24:02','2019-12-31 02:24:02','2019-12-31 02:24:02'),(333,15,NULL,'42.156.136.15','2019-12-31 04:35:13','2019-12-31 04:35:14','2019-12-31 04:35:14'),(336,14,NULL,'117.157.99.114','2019-12-31 11:26:53','2019-12-31 11:26:53','2019-12-31 11:26:53'),(337,21,NULL,'95.216.2.253','2019-12-31 18:14:22','2019-12-31 18:14:22','2019-12-31 18:14:22'),(338,32,NULL,'95.216.2.253','2019-12-31 18:14:24','2019-12-31 18:14:24','2019-12-31 18:14:24'),(339,33,NULL,'95.216.2.253','2019-12-31 18:14:27','2019-12-31 18:14:27','2019-12-31 18:14:27'),(340,36,NULL,'95.216.2.253','2019-12-31 18:14:29','2019-12-31 18:14:29','2019-12-31 18:14:29'),(341,37,NULL,'95.216.2.253','2019-12-31 18:14:32','2019-12-31 18:14:32','2019-12-31 18:14:32'),(342,27,NULL,'106.11.158.210','2020-01-01 01:41:05','2020-01-01 01:41:05','2020-01-01 01:41:05'),(343,44,NULL,'106.11.154.204','2020-01-01 22:09:37','2020-01-01 22:09:37','2020-01-01 22:09:37'),(344,14,NULL,'123.125.71.74','2020-01-02 04:54:30','2020-01-02 04:54:30','2020-01-02 04:54:30'),(345,42,NULL,'220.181.108.184','2020-01-02 06:32:54','2020-01-02 06:32:54','2020-01-02 06:32:54'),(346,48,NULL,'220.181.108.79','2020-01-02 19:48:08','2020-01-02 19:48:08','2020-01-02 19:48:08'),(347,21,NULL,'106.11.158.134','2020-01-03 05:28:08','2020-01-03 05:28:08','2020-01-03 05:28:08'),(348,14,NULL,'117.157.99.114','2020-01-03 17:12:36','2020-01-03 17:12:36','2020-01-03 17:12:36'),(349,35,NULL,'106.11.156.195','2020-01-04 01:29:10','2020-01-04 01:29:10','2020-01-04 01:29:10'),(350,50,NULL,'220.181.108.186','2020-01-04 23:44:38','2020-01-04 23:44:38','2020-01-04 23:44:38'),(351,15,NULL,'106.11.157.91','2020-01-05 17:02:58','2020-01-05 17:03:00','2020-01-05 17:03:00'),(352,49,NULL,'42.156.137.43','2020-01-06 05:23:28','2020-01-06 05:23:29','2020-01-06 05:23:29'),(353,48,NULL,'106.11.152.66','2020-01-06 08:53:37','2020-01-06 08:53:37','2020-01-06 08:53:37'),(354,52,NULL,'117.157.99.114','2020-01-06 09:50:23','2020-01-06 09:50:23','2020-01-06 09:50:23'),(355,52,NULL,'117.157.99.114','2020-01-06 09:58:11','2020-01-06 09:58:11','2020-01-06 09:58:11'),(356,52,NULL,'117.157.72.6','2020-01-06 09:59:31','2020-01-06 09:59:31','2020-01-06 09:59:31'),(357,52,NULL,'117.157.99.114','2020-01-06 09:59:42','2020-01-06 09:59:42','2020-01-06 09:59:42'),(358,52,NULL,'117.157.99.114','2020-01-06 09:59:50','2020-01-06 09:59:50','2020-01-06 09:59:50'),(359,52,NULL,'117.157.99.114','2020-01-06 10:00:41','2020-01-06 10:00:41','2020-01-06 10:00:41'),(360,52,NULL,'117.157.99.114','2020-01-06 10:03:12','2020-01-06 10:03:12','2020-01-06 10:03:12'),(361,52,NULL,'117.136.64.78','2020-01-06 10:08:26','2020-01-06 10:08:26','2020-01-06 10:08:26'),(362,52,NULL,'117.136.64.78','2020-01-06 10:08:27','2020-01-06 10:08:27','2020-01-06 10:08:27'),(363,52,NULL,'117.157.99.114','2020-01-06 10:09:12','2020-01-06 10:09:12','2020-01-06 10:09:12'),(364,52,NULL,'118.122.119.70','2020-01-06 10:12:43','2020-01-06 10:12:43','2020-01-06 10:12:43'),(365,52,NULL,'117.157.99.114','2020-01-06 10:13:08','2020-01-06 10:13:08','2020-01-06 10:13:08'),(366,52,NULL,'180.163.220.67','2020-01-06 10:13:42','2020-01-06 10:13:42','2020-01-06 10:13:42'),(367,14,NULL,'117.157.99.114','2020-01-06 10:41:24','2020-01-06 10:41:24','2020-01-06 10:41:24'),(368,46,NULL,'117.157.99.114','2020-01-06 10:41:46','2020-01-06 10:41:46','2020-01-06 10:41:46'),(369,48,NULL,'117.157.99.114','2020-01-06 10:42:01','2020-01-06 10:42:01','2020-01-06 10:42:01'),(370,48,NULL,'172.19.0.5','2020-01-06 10:42:12','2020-01-06 10:42:12','2020-01-06 10:42:12'),(371,48,NULL,'172.19.0.5','2020-01-06 10:42:18','2020-01-06 10:42:18','2020-01-06 10:42:18'),(372,14,NULL,'117.157.99.114','2020-01-06 10:43:52','2020-01-06 10:43:52','2020-01-06 10:43:52'),(373,14,NULL,'172.19.0.5','2020-01-06 10:44:02','2020-01-06 10:44:02','2020-01-06 10:44:02'),(374,47,NULL,'172.19.0.5','2020-01-06 10:45:28','2020-01-06 10:45:28','2020-01-06 10:45:28'),(375,52,NULL,'172.19.0.5','2020-01-06 10:47:00','2020-01-06 10:47:00','2020-01-06 10:47:00'),(376,52,NULL,'172.19.0.5','2020-01-06 10:52:58','2020-01-06 10:52:58','2020-01-06 10:52:58'),(377,14,NULL,'172.19.0.5','2020-01-06 11:02:40','2020-01-06 11:02:40','2020-01-06 11:02:40'),(378,52,NULL,'172.19.0.5','2020-01-06 11:20:17','2020-01-06 11:20:17','2020-01-06 11:20:17'),(379,47,NULL,'172.19.0.5','2020-01-06 11:21:59','2020-01-06 11:21:59','2020-01-06 11:21:59'),(380,47,NULL,'172.19.0.5','2020-01-06 11:22:37','2020-01-06 11:22:37','2020-01-06 11:22:37'),(381,52,NULL,'172.19.0.5','2020-01-06 11:25:38','2020-01-06 11:25:38','2020-01-06 11:25:38'),(382,43,NULL,'172.19.0.5','2020-01-06 11:30:18','2020-01-06 11:30:18','2020-01-06 11:30:18'),(383,52,NULL,'172.19.0.5','2020-01-06 11:42:18','2020-01-06 11:42:18','2020-01-06 11:42:18'),(384,52,NULL,'172.19.0.5','2020-01-06 11:42:30','2020-01-06 11:42:30','2020-01-06 11:42:30'),(385,52,NULL,'172.19.0.5','2020-01-06 11:42:31','2020-01-06 11:42:31','2020-01-06 11:42:31'),(386,52,NULL,'172.19.0.5','2020-01-06 11:42:32','2020-01-06 11:42:32','2020-01-06 11:42:32'),(387,52,NULL,'172.19.0.5','2020-01-06 11:47:12','2020-01-06 11:47:12','2020-01-06 11:47:12'),(388,50,NULL,'42.156.139.122','2020-01-06 16:19:03','2020-01-06 16:19:03','2020-01-06 16:19:03'),(389,14,NULL,'106.11.159.198','2020-01-07 02:35:04','2020-01-07 02:35:04','2020-01-07 02:35:04'),(390,48,NULL,'172.19.0.5','2020-01-07 16:26:54','2020-01-07 16:26:54','2020-01-07 16:26:54'),(391,52,NULL,'172.19.0.5','2020-01-07 19:07:46','2020-01-07 19:07:46','2020-01-07 19:07:46'),(392,14,NULL,'172.19.0.5','2020-01-07 19:53:18','2020-01-07 19:53:18','2020-01-07 19:53:18'),(393,14,NULL,'172.19.0.5','2020-01-07 20:02:01','2020-01-07 20:02:01','2020-01-07 20:02:01'),(394,42,NULL,'106.11.152.200','2020-01-07 21:32:49','2020-01-07 21:32:49','2020-01-07 21:32:49'),(395,52,NULL,'172.19.0.5','2020-01-08 10:27:06','2020-01-08 10:27:06','2020-01-08 10:27:06'),(396,52,NULL,'172.19.0.5','2020-01-08 10:28:46','2020-01-08 10:28:46','2020-01-08 10:28:46'),(397,52,NULL,'172.19.0.5','2020-01-08 10:28:59','2020-01-08 10:28:59','2020-01-08 10:28:59'),(398,52,NULL,'172.19.0.5','2020-01-08 10:29:18','2020-01-08 10:29:18','2020-01-08 10:29:18'),(399,52,NULL,'172.19.0.5','2020-01-08 15:44:44','2020-01-08 15:44:44','2020-01-08 15:44:44'),(400,14,NULL,'172.19.0.5','2020-01-08 16:21:36','2020-01-08 16:21:36','2020-01-08 16:21:36'),(401,50,NULL,'42.156.139.13','2020-01-09 20:05:05','2020-01-09 20:05:05','2020-01-09 20:05:05'),(402,47,NULL,'42.156.139.105','2020-01-09 20:05:12','2020-01-09 20:05:12','2020-01-09 20:05:12'),(403,48,NULL,'42.120.161.109','2020-01-09 20:05:20','2020-01-09 20:05:20','2020-01-09 20:05:20'),(404,49,NULL,'42.156.136.72','2020-01-10 01:11:35','2020-01-10 01:11:35','2020-01-10 01:11:35'),(405,52,NULL,'106.83.201.105','2020-01-10 08:53:59','2020-01-10 08:53:59','2020-01-10 08:53:59'),(406,52,NULL,'118.122.119.70','2020-01-10 09:19:42','2020-01-10 09:19:42','2020-01-10 09:19:42'),(407,52,NULL,'172.19.0.5','2020-01-10 09:48:01','2020-01-10 09:48:01','2020-01-10 09:48:01'),(408,52,NULL,'172.19.0.5','2020-01-10 09:48:11','2020-01-10 09:48:11','2020-01-10 09:48:11'),(409,42,NULL,'106.11.154.175','2020-01-10 12:25:37','2020-01-10 12:25:37','2020-01-10 12:25:37'),(410,14,NULL,'172.19.0.5','2020-01-11 04:33:38','2020-01-11 04:33:38','2020-01-11 04:33:38'),(411,47,NULL,'172.19.0.5','2020-01-11 04:33:40','2020-01-11 04:33:40','2020-01-11 04:33:40'),(412,52,NULL,'172.19.0.5','2020-01-11 04:33:41','2020-01-11 04:33:41','2020-01-11 04:33:41'),(413,50,NULL,'172.19.0.5','2020-01-11 04:33:46','2020-01-11 04:33:46','2020-01-11 04:33:46'),(414,49,NULL,'172.19.0.5','2020-01-11 04:33:47','2020-01-11 04:33:47','2020-01-11 04:33:47'),(415,48,NULL,'172.19.0.5','2020-01-11 04:33:48','2020-01-11 04:33:48','2020-01-11 04:33:48'),(416,46,NULL,'172.19.0.5','2020-01-11 04:33:49','2020-01-11 04:33:49','2020-01-11 04:33:49'),(417,45,NULL,'172.19.0.5','2020-01-11 04:33:54','2020-01-11 04:33:54','2020-01-11 04:33:54'),(418,44,NULL,'172.19.0.5','2020-01-11 04:33:55','2020-01-11 04:33:55','2020-01-11 04:33:55'),(419,43,NULL,'172.19.0.5','2020-01-11 04:33:59','2020-01-11 04:33:59','2020-01-11 04:33:59'),(420,42,NULL,'172.19.0.5','2020-01-11 04:34:07','2020-01-11 04:34:07','2020-01-11 04:34:07'),(421,36,NULL,'172.19.0.5','2020-01-11 04:34:10','2020-01-11 04:34:10','2020-01-11 04:34:10'),(422,23,NULL,'172.19.0.5','2020-01-11 04:34:10','2020-01-11 04:34:10','2020-01-11 04:34:10'),(423,21,NULL,'172.19.0.5','2020-01-11 04:34:11','2020-01-11 04:34:11','2020-01-11 04:34:11'),(424,27,NULL,'172.19.0.5','2020-01-11 04:34:12','2020-01-11 04:34:12','2020-01-11 04:34:12'),(425,14,NULL,'172.19.0.5','2020-01-11 09:21:05','2020-01-11 09:21:05','2020-01-11 09:21:05'),(426,48,NULL,'106.11.152.161','2020-01-11 18:53:16','2020-01-11 18:53:16','2020-01-11 18:53:16'),(427,47,NULL,'220.181.108.81','2020-01-12 15:37:42','2020-01-12 15:37:42','2020-01-12 15:37:42'),(428,49,NULL,'106.11.155.172','2020-01-12 16:35:05','2020-01-12 16:35:05','2020-01-12 16:35:05'),(429,23,NULL,'106.11.159.38','2020-01-12 17:33:26','2020-01-12 17:33:26','2020-01-12 17:33:26'),(430,33,NULL,'172.19.0.5','2020-01-12 22:06:23','2020-01-12 22:06:23','2020-01-12 22:06:23'),(431,36,NULL,'106.11.154.175','2020-01-12 22:23:24','2020-01-12 22:23:24','2020-01-12 22:23:24'),(432,27,NULL,'220.181.108.106','2020-01-13 08:12:02','2020-01-13 08:12:02','2020-01-13 08:12:02'),(433,42,NULL,'172.19.0.5','2020-01-13 08:46:25','2020-01-13 08:46:25','2020-01-13 08:46:25'),(434,42,NULL,'172.19.0.5','2020-01-13 09:28:39','2020-01-13 09:28:39','2020-01-13 09:28:39'),(435,14,NULL,'172.19.0.5','2020-01-13 13:23:24','2020-01-13 13:23:24','2020-01-13 13:23:24'),(436,47,NULL,'172.19.0.5','2020-01-13 13:23:31','2020-01-13 13:23:31','2020-01-13 13:23:31'),(437,52,NULL,'172.19.0.5','2020-01-13 13:23:31','2020-01-13 13:23:31','2020-01-13 13:23:31'),(438,50,NULL,'172.19.0.5','2020-01-13 13:23:32','2020-01-13 13:23:32','2020-01-13 13:23:32'),(439,49,NULL,'172.19.0.5','2020-01-13 13:23:33','2020-01-13 13:23:33','2020-01-13 13:23:33'),(440,48,NULL,'172.19.0.5','2020-01-13 13:23:35','2020-01-13 13:23:35','2020-01-13 13:23:35'),(441,46,NULL,'172.19.0.5','2020-01-13 13:23:36','2020-01-13 13:23:36','2020-01-13 13:23:36'),(442,45,NULL,'172.19.0.5','2020-01-13 13:23:39','2020-01-13 13:23:39','2020-01-13 13:23:39'),(443,44,NULL,'172.19.0.5','2020-01-13 13:23:40','2020-01-13 13:23:40','2020-01-13 13:23:40'),(444,43,NULL,'172.19.0.5','2020-01-13 13:23:41','2020-01-13 13:23:41','2020-01-13 13:23:41'),(445,28,NULL,'172.19.0.5','2020-01-13 13:23:56','2020-01-13 13:23:56','2020-01-13 13:23:56'),(446,21,NULL,'172.19.0.5','2020-01-13 13:23:58','2020-01-13 13:23:58','2020-01-13 13:23:58'),(447,31,NULL,'172.19.0.5','2020-01-13 13:23:59','2020-01-13 13:23:59','2020-01-13 13:23:59'),(448,36,NULL,'172.19.0.5','2020-01-13 13:44:34','2020-01-13 13:44:34','2020-01-13 13:44:34'),(449,37,NULL,'172.19.0.5','2020-01-13 13:44:34','2020-01-13 13:44:34','2020-01-13 13:44:34'),(450,41,NULL,'172.19.0.5','2020-01-13 13:44:35','2020-01-13 13:44:35','2020-01-13 13:44:35'),(451,42,NULL,'172.19.0.5','2020-01-13 13:44:36','2020-01-13 13:44:36','2020-01-13 13:44:36'),(452,35,NULL,'172.19.0.5','2020-01-13 13:44:36','2020-01-13 13:44:36','2020-01-13 13:44:36'),(453,15,NULL,'172.19.0.5','2020-01-13 13:44:36','2020-01-13 13:44:36','2020-01-13 13:44:36'),(454,27,NULL,'172.19.0.5','2020-01-13 13:44:36','2020-01-13 13:44:37','2020-01-13 13:44:37'),(455,33,NULL,'172.19.0.5','2020-01-13 13:44:37','2020-01-13 13:44:37','2020-01-13 13:44:37'),(456,23,NULL,'172.19.0.5','2020-01-13 13:44:49','2020-01-13 13:44:49','2020-01-13 13:44:49'),(457,32,NULL,'172.19.0.5','2020-01-13 13:44:49','2020-01-13 13:44:49','2020-01-13 13:44:49'),(458,1,NULL,'172.19.0.5','2020-01-13 13:44:50','2020-01-13 13:44:50','2020-01-13 13:44:50'),(459,52,NULL,'172.19.0.5','2020-01-13 16:24:34','2020-01-13 16:24:34','2020-01-13 16:24:34'),(460,23,NULL,'172.19.0.5','2020-01-13 17:38:26','2020-01-13 17:38:26','2020-01-13 17:38:26'),(461,21,NULL,'172.19.0.5','2020-01-13 21:12:17','2020-01-13 21:12:17','2020-01-13 21:12:17'),(462,33,NULL,'172.19.0.5','2020-01-13 22:14:06','2020-01-13 22:14:06','2020-01-13 22:14:06'),(463,37,NULL,'106.11.152.161','2020-01-14 01:10:25','2020-01-14 01:10:25','2020-01-14 01:10:25'),(464,52,NULL,'117.157.99.114','2020-01-14 11:31:15','2020-01-14 11:31:15','2020-01-14 11:31:15'),(465,52,NULL,'117.157.99.114','2020-01-14 11:35:19','2020-01-14 11:35:19','2020-01-14 11:35:19'),(466,52,NULL,'117.157.99.114','2020-01-14 14:42:54','2020-01-14 14:42:54','2020-01-14 14:42:54'),(467,14,NULL,'172.19.0.5','2020-01-14 15:39:21','2020-01-14 15:39:21','2020-01-14 15:39:21'),(468,14,NULL,'172.19.0.5','2020-01-14 23:13:40','2020-01-14 23:13:40','2020-01-14 23:13:40'),(469,42,NULL,'203.208.60.66','2020-01-15 10:01:20','2020-01-15 10:01:20','2020-01-15 10:01:20'),(470,32,NULL,'106.11.153.175','2020-01-15 10:24:42','2020-01-15 10:24:42','2020-01-15 10:24:42'),(471,14,NULL,'203.208.60.127','2020-01-15 11:12:09','2020-01-15 11:12:09','2020-01-15 11:12:09'),(472,42,NULL,'172.19.0.5','2020-01-15 23:30:03','2020-01-15 23:30:03','2020-01-15 23:30:03'),(473,28,NULL,'172.19.0.5','2020-01-15 23:30:06','2020-01-15 23:30:06','2020-01-15 23:30:06'),(474,37,NULL,'172.19.0.5','2020-01-15 23:30:17','2020-01-15 23:30:17','2020-01-15 23:30:17'),(475,32,NULL,'172.19.0.5','2020-01-16 00:02:53','2020-01-16 00:02:53','2020-01-16 00:02:53'),(476,33,NULL,'172.19.0.5','2020-01-16 00:06:27','2020-01-16 00:06:27','2020-01-16 00:06:27'),(477,23,NULL,'172.19.0.5','2020-01-16 02:32:21','2020-01-16 02:32:21','2020-01-16 02:32:21'),(478,15,NULL,'172.19.0.5','2020-01-16 05:33:26','2020-01-16 05:33:26','2020-01-16 05:33:26'),(479,1,NULL,'172.19.0.5','2020-01-16 06:21:25','2020-01-16 06:21:25','2020-01-16 06:21:25'),(480,14,NULL,'172.19.0.5','2020-01-16 09:58:23','2020-01-16 09:58:23','2020-01-16 09:58:23'),(481,14,NULL,'172.19.0.5','2020-01-16 09:58:23','2020-01-16 09:58:23','2020-01-16 09:58:23'),(482,14,NULL,'172.19.0.5','2020-01-16 10:01:47','2020-01-16 10:01:47','2020-01-16 10:01:47'),(483,14,NULL,'172.19.0.5','2020-01-16 10:03:53','2020-01-16 10:03:53','2020-01-16 10:03:53'),(484,27,NULL,'172.19.0.5','2020-01-16 10:22:30','2020-01-16 10:22:30','2020-01-16 10:22:30'),(485,47,NULL,'172.19.0.5','2020-01-16 12:44:14','2020-01-16 12:44:14','2020-01-16 12:44:14'),(486,46,NULL,'172.19.0.5','2020-01-16 12:45:07','2020-01-16 12:45:07','2020-01-16 12:45:07'),(487,50,NULL,'172.19.0.5','2020-01-16 12:45:34','2020-01-16 12:45:34','2020-01-16 12:45:34'),(488,44,NULL,'172.19.0.5','2020-01-16 12:46:01','2020-01-16 12:46:01','2020-01-16 12:46:01'),(489,52,NULL,'172.19.0.5','2020-01-16 12:46:28','2020-01-16 12:46:28','2020-01-16 12:46:28'),(490,43,NULL,'172.19.0.5','2020-01-16 12:46:57','2020-01-16 12:46:57','2020-01-16 12:46:57'),(491,14,NULL,'172.19.0.5','2020-01-16 12:47:22','2020-01-16 12:47:22','2020-01-16 12:47:22'),(492,41,NULL,'172.19.0.5','2020-01-16 12:47:50','2020-01-16 12:47:50','2020-01-16 12:47:50'),(493,49,NULL,'172.19.0.5','2020-01-16 12:48:17','2020-01-16 12:48:17','2020-01-16 12:48:17'),(494,48,NULL,'172.19.0.5','2020-01-16 12:48:46','2020-01-16 12:48:46','2020-01-16 12:48:46'),(495,36,NULL,'172.19.0.5','2020-01-16 12:49:12','2020-01-16 12:49:12','2020-01-16 12:49:12'),(496,45,NULL,'172.19.0.5','2020-01-16 12:51:37','2020-01-16 12:51:37','2020-01-16 12:51:37'),(497,21,NULL,'172.19.0.5','2020-01-16 12:53:46','2020-01-16 12:53:46','2020-01-16 12:53:46'),(498,27,NULL,'172.19.0.5','2020-01-16 12:55:58','2020-01-16 12:55:58','2020-01-16 12:55:58'),(499,31,NULL,'172.19.0.5','2020-01-16 12:58:29','2020-01-16 12:58:29','2020-01-16 12:58:29'),(500,15,NULL,'172.19.0.5','2020-01-16 14:56:52','2020-01-16 14:56:52','2020-01-16 14:56:52'),(501,23,NULL,'203.208.60.5','2020-01-17 00:46:51','2020-01-17 00:46:51','2020-01-17 00:46:51'),(502,14,NULL,'172.19.0.5','2020-01-19 16:12:22','2020-01-19 16:12:22','2020-01-19 16:12:22'),(503,14,NULL,'172.19.0.5','2020-01-19 16:15:34','2020-01-19 16:15:34','2020-01-19 16:15:34'),(504,14,NULL,'172.19.0.5','2020-01-19 16:21:25','2020-01-19 16:21:25','2020-01-19 16:21:25'),(505,14,NULL,'172.19.0.5','2020-01-19 16:21:40','2020-01-19 16:21:40','2020-01-19 16:21:40'),(506,45,NULL,'203.208.60.50','2020-01-20 01:48:02','2020-01-20 01:48:02','2020-01-20 01:48:02'),(507,14,NULL,'172.19.0.5','2020-01-20 16:20:11','2020-01-20 16:20:11','2020-01-20 16:20:11'),(508,52,NULL,'172.19.0.5','2020-01-20 16:20:15','2020-01-20 16:20:15','2020-01-20 16:20:15'),(509,50,NULL,'172.19.0.5','2020-01-20 16:20:17','2020-01-20 16:20:17','2020-01-20 16:20:17'),(510,47,NULL,'172.19.0.5','2020-01-20 16:20:17','2020-01-20 16:20:18','2020-01-20 16:20:18'),(511,48,NULL,'172.19.0.5','2020-01-20 16:20:17','2020-01-20 16:20:18','2020-01-20 16:20:18'),(512,49,NULL,'172.19.0.5','2020-01-20 16:20:18','2020-01-20 16:20:18','2020-01-20 16:20:18'),(513,46,NULL,'172.19.0.5','2020-01-20 16:20:18','2020-01-20 16:20:18','2020-01-20 16:20:18'),(514,45,NULL,'172.19.0.5','2020-01-20 16:20:20','2020-01-20 16:20:20','2020-01-20 16:20:20'),(515,44,NULL,'172.19.0.5','2020-01-20 16:20:21','2020-01-20 16:20:21','2020-01-20 16:20:21'),(516,43,NULL,'172.19.0.5','2020-01-20 16:20:25','2020-01-20 16:20:25','2020-01-20 16:20:25'),(517,23,NULL,'172.19.0.5','2020-01-20 16:20:42','2020-01-20 16:20:42','2020-01-20 16:20:42'),(518,35,NULL,'172.19.0.5','2020-01-20 16:20:42','2020-01-20 16:20:42','2020-01-20 16:20:42'),(519,42,NULL,'172.19.0.5','2020-01-20 16:20:43','2020-01-20 16:20:43','2020-01-20 16:20:43'),(520,33,NULL,'172.19.0.5','2020-01-20 16:20:44','2020-01-20 16:20:44','2020-01-20 16:20:44'),(521,49,NULL,'172.19.0.5','2020-01-21 18:53:12','2020-01-21 18:53:12','2020-01-21 18:53:12'),(522,50,NULL,'172.19.0.5','2020-01-22 00:24:32','2020-01-22 00:24:32','2020-01-22 00:24:32'),(523,43,NULL,'172.19.0.5','2020-01-22 05:10:00','2020-01-22 05:10:00','2020-01-22 05:10:00'),(524,44,NULL,'172.19.0.5','2020-01-22 09:38:23','2020-01-22 09:38:23','2020-01-22 09:38:23'),(525,50,NULL,'172.19.0.5','2020-01-22 13:43:38','2020-01-22 13:43:38','2020-01-22 13:43:38'),(526,28,NULL,'172.19.0.5','2020-01-22 14:11:46','2020-01-22 14:11:46','2020-01-22 14:11:46'),(527,33,NULL,'203.208.60.66','2020-01-22 15:34:19','2020-01-22 15:34:19','2020-01-22 15:34:19'),(528,46,NULL,'172.19.0.5','2020-01-22 18:46:01','2020-01-22 18:46:01','2020-01-22 18:46:01'),(529,14,NULL,'172.19.0.5','2020-01-22 20:34:02','2020-01-22 20:34:02','2020-01-22 20:34:02'),(530,45,NULL,'172.19.0.5','2020-01-22 21:23:57','2020-01-22 21:23:57','2020-01-22 21:23:57'),(531,50,NULL,'172.19.0.5','2020-01-22 23:04:32','2020-01-22 23:04:32','2020-01-22 23:04:32'),(532,47,NULL,'172.19.0.5','2020-01-23 00:38:37','2020-01-23 00:38:37','2020-01-23 00:38:37'),(533,14,NULL,'172.19.0.5','2020-01-23 01:20:51','2020-01-23 01:20:51','2020-01-23 01:20:51'),(534,47,NULL,'172.19.0.5','2020-01-23 01:20:53','2020-01-23 01:20:53','2020-01-23 01:20:53'),(535,52,NULL,'172.19.0.5','2020-01-23 01:20:56','2020-01-23 01:20:56','2020-01-23 01:20:56'),(536,50,NULL,'172.19.0.5','2020-01-23 01:21:01','2020-01-23 01:21:01','2020-01-23 01:21:01'),(537,49,NULL,'172.19.0.5','2020-01-23 01:21:02','2020-01-23 01:21:02','2020-01-23 01:21:02'),(538,46,NULL,'172.19.0.5','2020-01-23 01:21:03','2020-01-23 01:21:03','2020-01-23 01:21:03'),(539,45,NULL,'172.19.0.5','2020-01-23 01:21:04','2020-01-23 01:21:04','2020-01-23 01:21:04'),(540,48,NULL,'172.19.0.5','2020-01-23 01:21:04','2020-01-23 01:21:04','2020-01-23 01:21:04'),(541,44,NULL,'172.19.0.5','2020-01-23 01:21:08','2020-01-23 01:21:08','2020-01-23 01:21:08'),(542,43,NULL,'172.19.0.5','2020-01-23 01:21:08','2020-01-23 01:21:08','2020-01-23 01:21:08'),(543,36,NULL,'172.19.0.5','2020-01-23 01:21:26','2020-01-23 01:21:26','2020-01-23 01:21:26'),(544,21,NULL,'172.19.0.5','2020-01-23 01:21:27','2020-01-23 01:21:27','2020-01-23 01:21:27'),(545,27,NULL,'172.19.0.5','2020-01-23 01:21:27','2020-01-23 01:21:27','2020-01-23 01:21:27'),(546,33,NULL,'172.19.0.5','2020-01-23 01:21:29','2020-01-23 01:21:29','2020-01-23 01:21:29'),(547,37,NULL,'172.19.0.5','2020-01-23 01:21:31','2020-01-23 01:21:31','2020-01-23 01:21:31'),(548,41,NULL,'172.19.0.5','2020-01-23 01:47:49','2020-01-23 01:47:49','2020-01-23 01:47:49'),(549,23,NULL,'172.19.0.5','2020-01-23 01:47:49','2020-01-23 01:47:49','2020-01-23 01:47:49'),(550,35,NULL,'172.19.0.5','2020-01-23 01:47:49','2020-01-23 01:47:49','2020-01-23 01:47:49'),(551,32,NULL,'172.19.0.5','2020-01-23 01:47:50','2020-01-23 01:47:50','2020-01-23 01:47:50'),(552,42,NULL,'172.19.0.5','2020-01-23 01:47:51','2020-01-23 01:47:51','2020-01-23 01:47:51'),(553,15,NULL,'172.19.0.5','2020-01-23 01:47:51','2020-01-23 01:47:51','2020-01-23 01:47:51'),(554,31,NULL,'172.19.0.5','2020-01-23 01:47:54','2020-01-23 01:47:54','2020-01-23 01:47:54'),(555,28,NULL,'172.19.0.5','2020-01-23 01:47:54','2020-01-23 01:47:54','2020-01-23 01:47:54'),(556,1,NULL,'172.19.0.5','2020-01-23 01:48:03','2020-01-23 01:48:03','2020-01-23 01:48:03'),(557,21,NULL,'172.19.0.5','2020-01-23 14:34:57','2020-01-23 14:34:57','2020-01-23 14:34:57'),(558,15,NULL,'172.19.0.5','2020-01-24 04:12:33','2020-01-24 04:12:33','2020-01-24 04:12:33'),(559,35,NULL,'172.19.0.5','2020-01-24 04:13:11','2020-01-24 04:13:11','2020-01-24 04:13:11'),(560,49,NULL,'172.19.0.5','2020-01-24 04:13:49','2020-01-24 04:13:49','2020-01-24 04:13:49'),(561,42,NULL,'172.19.0.5','2020-01-24 10:17:24','2020-01-24 10:17:24','2020-01-24 10:17:24'),(562,42,NULL,'172.19.0.5','2020-01-24 10:47:22','2020-01-24 10:47:22','2020-01-24 10:47:22'),(563,42,NULL,'172.19.0.5','2020-01-24 11:17:45','2020-01-24 11:17:45','2020-01-24 11:17:45'),(564,32,NULL,'172.19.0.5','2020-01-24 17:30:52','2020-01-24 17:30:52','2020-01-24 17:30:52'),(565,33,NULL,'172.19.0.5','2020-01-24 17:31:00','2020-01-24 17:31:00','2020-01-24 17:31:00'),(566,32,NULL,'172.19.0.5','2020-01-24 18:01:22','2020-01-24 18:01:22','2020-01-24 18:01:22'),(567,33,NULL,'172.19.0.5','2020-01-24 18:01:29','2020-01-24 18:01:29','2020-01-24 18:01:29'),(568,32,NULL,'172.19.0.5','2020-01-24 18:31:52','2020-01-24 18:31:52','2020-01-24 18:31:52'),(569,33,NULL,'172.19.0.5','2020-01-24 18:32:02','2020-01-24 18:32:02','2020-01-24 18:32:02'),(570,41,NULL,'172.19.0.5','2020-01-25 01:53:20','2020-01-25 01:53:20','2020-01-25 01:53:20'),(571,41,NULL,'172.19.0.5','2020-01-25 02:23:30','2020-01-25 02:23:30','2020-01-25 02:23:30'),(572,41,NULL,'172.19.0.5','2020-01-25 02:57:04','2020-01-25 02:57:04','2020-01-25 02:57:04'),(573,14,NULL,'172.19.0.5','2020-02-07 16:54:17','2020-02-07 16:54:17','2020-02-07 16:54:17'),(574,44,NULL,'172.19.0.5','2020-02-08 19:16:30','2020-02-08 19:16:30','2020-02-08 19:16:30'),(575,48,NULL,'172.19.0.5','2020-02-08 20:16:23','2020-02-08 20:16:23','2020-02-08 20:16:23'),(576,31,NULL,'172.19.0.5','2020-02-08 23:35:57','2020-02-08 23:35:57','2020-02-08 23:35:57'),(577,31,NULL,'172.19.0.5','2020-02-09 00:26:49','2020-02-09 00:26:49','2020-02-09 00:26:49'),(578,37,NULL,'172.19.0.5','2020-02-09 01:40:45','2020-02-09 01:40:45','2020-02-09 01:40:45'),(579,21,NULL,'172.19.0.5','2020-02-09 06:37:28','2020-02-09 06:37:28','2020-02-09 06:37:28'),(580,47,NULL,'172.19.0.5','2020-02-09 08:29:31','2020-02-09 08:29:31','2020-02-09 08:29:31'),(581,47,NULL,'172.19.0.5','2020-02-09 08:49:48','2020-02-09 08:49:48','2020-02-09 08:49:48'),(582,27,NULL,'172.19.0.5','2020-02-09 10:37:55','2020-02-09 10:37:55','2020-02-09 10:37:55'),(583,46,NULL,'172.19.0.5','2020-02-09 13:31:44','2020-02-09 13:31:44','2020-02-09 13:31:44'),(584,47,NULL,'172.19.0.5','2020-02-09 14:25:03','2020-02-09 14:25:03','2020-02-09 14:25:03'),(585,47,NULL,'172.19.0.5','2020-02-09 18:00:39','2020-02-09 18:00:39','2020-02-09 18:00:39'),(586,45,NULL,'172.19.0.5','2020-02-09 18:32:18','2020-02-09 18:32:18','2020-02-09 18:32:18'),(587,47,NULL,'172.19.0.5','2020-02-10 05:47:31','2020-02-10 05:47:31','2020-02-10 05:47:31'),(588,14,NULL,'172.19.0.5','2020-02-12 07:22:42','2020-02-12 07:22:42','2020-02-12 07:22:42'),(589,14,NULL,'172.19.0.5','2020-02-12 18:36:15','2020-02-12 18:36:15','2020-02-12 18:36:15'),(590,50,NULL,'172.19.0.5','2020-02-13 00:21:16','2020-02-13 00:21:16','2020-02-13 00:21:16'),(591,21,NULL,'172.19.0.5','2020-02-13 13:36:45','2020-02-13 13:36:45','2020-02-13 13:36:45'),(592,21,NULL,'172.19.0.5','2020-02-13 14:00:22','2020-02-13 14:00:22','2020-02-13 14:00:22'),(593,45,NULL,'172.19.0.5','2020-02-13 23:14:49','2020-02-13 23:14:49','2020-02-13 23:14:49'),(594,23,NULL,'172.19.0.5','2020-02-14 06:18:47','2020-02-14 06:18:47','2020-02-14 06:18:47'),(595,1,NULL,'66.249.65.219','2020-02-15 11:17:43','2020-02-15 11:17:43','2020-02-15 11:17:43'),(596,14,NULL,'172.19.0.5','2020-02-15 16:38:35','2020-02-15 16:38:35','2020-02-15 16:38:35'),(597,42,NULL,'172.19.0.5','2020-02-16 02:47:18','2020-02-16 02:47:18','2020-02-16 02:47:18'),(598,41,NULL,'106.11.153.225','2020-02-16 12:21:07','2020-02-16 12:21:07','2020-02-16 12:21:07'),(599,33,NULL,'172.19.0.5','2020-02-16 12:37:14','2020-02-16 12:37:14','2020-02-16 12:37:14'),(600,14,NULL,'172.19.0.5','2020-02-16 13:09:34','2020-02-16 13:09:34','2020-02-16 13:09:34'),(601,47,NULL,'172.19.0.5','2020-02-16 13:09:37','2020-02-16 13:09:37','2020-02-16 13:09:37'),(602,52,NULL,'172.19.0.5','2020-02-16 13:09:38','2020-02-16 13:09:38','2020-02-16 13:09:38'),(603,50,NULL,'172.19.0.5','2020-02-16 13:09:39','2020-02-16 13:09:39','2020-02-16 13:09:39'),(604,49,NULL,'172.19.0.5','2020-02-16 13:09:40','2020-02-16 13:09:40','2020-02-16 13:09:40'),(605,48,NULL,'172.19.0.5','2020-02-16 13:09:40','2020-02-16 13:09:40','2020-02-16 13:09:40'),(606,46,NULL,'172.19.0.5','2020-02-16 13:09:42','2020-02-16 13:09:42','2020-02-16 13:09:42'),(607,45,NULL,'172.19.0.5','2020-02-16 13:09:42','2020-02-16 13:09:42','2020-02-16 13:09:42'),(608,44,NULL,'172.19.0.5','2020-02-16 13:09:48','2020-02-16 13:09:48','2020-02-16 13:09:48'),(609,43,NULL,'172.19.0.5','2020-02-16 13:09:50','2020-02-16 13:09:50','2020-02-16 13:09:50'),(610,28,NULL,'172.19.0.5','2020-02-16 13:10:02','2020-02-16 13:10:02','2020-02-16 13:10:02'),(611,31,NULL,'172.19.0.5','2020-02-16 13:10:03','2020-02-16 13:10:03','2020-02-16 13:10:03'),(612,15,NULL,'172.19.0.5','2020-02-16 13:10:08','2020-02-16 13:10:08','2020-02-16 13:10:08'),(613,42,NULL,'172.19.0.5','2020-02-16 13:10:08','2020-02-16 13:10:08','2020-02-16 13:10:08'),(614,41,NULL,'172.19.0.5','2020-02-16 13:10:09','2020-02-16 13:10:10','2020-02-16 13:10:10'),(615,37,NULL,'172.19.0.5','2020-02-16 13:10:10','2020-02-16 13:10:10','2020-02-16 13:10:10'),(616,33,NULL,'172.19.0.5','2020-02-16 13:36:14','2020-02-16 13:36:14','2020-02-16 13:36:14'),(617,35,NULL,'172.19.0.5','2020-02-16 13:36:14','2020-02-16 13:36:14','2020-02-16 13:36:14'),(618,23,NULL,'172.19.0.5','2020-02-16 13:36:14','2020-02-16 13:36:14','2020-02-16 13:36:14'),(619,27,NULL,'172.19.0.5','2020-02-16 13:36:15','2020-02-16 13:36:15','2020-02-16 13:36:15'),(620,32,NULL,'172.19.0.5','2020-02-16 13:36:17','2020-02-16 13:36:17','2020-02-16 13:36:17'),(621,36,NULL,'172.19.0.5','2020-02-16 13:36:17','2020-02-16 13:36:17','2020-02-16 13:36:17'),(622,21,NULL,'172.19.0.5','2020-02-16 13:36:18','2020-02-16 13:36:18','2020-02-16 13:36:18'),(623,1,NULL,'172.19.0.5','2020-02-16 13:36:19','2020-02-16 13:36:19','2020-02-16 13:36:19'),(624,31,NULL,'172.19.0.5','2020-02-17 00:45:45','2020-02-17 00:45:45','2020-02-17 00:45:45'),(625,33,NULL,'172.19.0.5','2020-02-17 01:05:29','2020-02-17 01:05:29','2020-02-17 01:05:29'),(626,21,NULL,'172.19.0.5','2020-02-17 01:37:28','2020-02-17 01:37:28','2020-02-17 01:37:28'),(627,21,NULL,'172.19.0.5','2020-02-17 02:30:50','2020-02-17 02:30:50','2020-02-17 02:30:50'),(628,50,NULL,'172.19.0.5','2020-02-17 08:12:35','2020-02-17 08:12:35','2020-02-17 08:12:35'),(629,33,NULL,'172.19.0.5','2020-02-17 10:11:50','2020-02-17 10:11:50','2020-02-17 10:11:50'),(630,44,NULL,'172.19.0.5','2020-02-17 12:13:32','2020-02-17 12:13:32','2020-02-17 12:13:32'),(631,47,NULL,'172.19.0.5','2020-02-17 12:13:37','2020-02-17 12:13:37','2020-02-17 12:13:37'),(632,52,NULL,'172.19.0.5','2020-02-17 12:13:45','2020-02-17 12:13:45','2020-02-17 12:13:45'),(633,43,NULL,'172.19.0.5','2020-02-17 12:13:54','2020-02-17 12:13:54','2020-02-17 12:13:54'),(634,15,NULL,'172.19.0.5','2020-02-17 12:16:12','2020-02-17 12:16:12','2020-02-17 12:16:12'),(635,28,NULL,'172.19.0.5','2020-02-17 12:16:35','2020-02-17 12:16:35','2020-02-17 12:16:35'),(636,32,NULL,'172.19.0.5','2020-02-17 12:16:42','2020-02-17 12:16:42','2020-02-17 12:16:42'),(637,33,NULL,'172.19.0.5','2020-02-17 12:19:06','2020-02-17 12:19:06','2020-02-17 12:19:06'),(638,49,NULL,'172.19.0.5','2020-02-17 12:21:44','2020-02-17 12:21:44','2020-02-17 12:21:44'),(639,14,NULL,'172.19.0.5','2020-02-17 12:22:35','2020-02-17 12:22:35','2020-02-17 12:22:35'),(640,48,NULL,'172.19.0.5','2020-02-17 12:22:48','2020-02-17 12:22:48','2020-02-17 12:22:48'),(641,46,NULL,'172.19.0.5','2020-02-17 12:22:51','2020-02-17 12:22:51','2020-02-17 12:22:51'),(642,50,NULL,'172.19.0.5','2020-02-17 12:24:28','2020-02-17 12:24:28','2020-02-17 12:24:28'),(643,31,NULL,'172.19.0.5','2020-02-17 12:25:04','2020-02-17 12:25:04','2020-02-17 12:25:04'),(644,45,NULL,'172.19.0.5','2020-02-17 12:25:26','2020-02-17 12:25:26','2020-02-17 12:25:26'),(645,32,NULL,'106.11.157.253','2020-02-17 15:56:56','2020-02-17 15:56:56','2020-02-17 15:56:56'),(646,44,NULL,'203.208.60.86','2020-02-17 19:57:09','2020-02-17 19:57:09','2020-02-17 19:57:09'),(647,44,NULL,'172.19.0.5','2020-02-18 06:13:59','2020-02-18 06:13:59','2020-02-18 06:13:59'),(648,14,NULL,'172.19.0.5','2020-02-18 07:44:15','2020-02-18 07:44:15','2020-02-18 07:44:15'),(649,23,NULL,'106.11.155.248','2020-02-18 12:21:24','2020-02-18 12:21:24','2020-02-18 12:21:24'),(650,14,NULL,'172.19.0.5','2020-02-18 22:02:15','2020-02-18 22:02:15','2020-02-18 22:02:15'),(651,14,NULL,'172.19.0.5','2020-02-18 22:02:21','2020-02-18 22:02:21','2020-02-18 22:02:21'),(652,42,NULL,'172.19.0.5','2020-02-19 00:22:24','2020-02-19 00:22:24','2020-02-19 00:22:24'),(653,50,NULL,'123.125.71.27','2020-02-19 05:28:21','2020-02-19 05:28:21','2020-02-19 05:28:21'),(654,37,NULL,'172.19.0.5','2020-02-19 12:06:38','2020-02-19 12:06:38','2020-02-19 12:06:38'),(655,27,NULL,'172.19.0.5','2020-02-19 12:06:47','2020-02-19 12:06:47','2020-02-19 12:06:47'),(656,21,NULL,'172.19.0.5','2020-02-19 12:07:03','2020-02-19 12:07:03','2020-02-19 12:07:03'),(657,42,NULL,'172.19.0.5','2020-02-19 12:10:11','2020-02-19 12:10:11','2020-02-19 12:10:11'),(658,23,NULL,'172.19.0.5','2020-02-19 12:14:26','2020-02-19 12:14:26','2020-02-19 12:14:26'),(659,35,NULL,'172.19.0.5','2020-02-19 12:18:07','2020-02-19 12:18:07','2020-02-19 12:18:07'),(660,1,NULL,'172.19.0.5','2020-02-19 12:18:15','2020-02-19 12:18:15','2020-02-19 12:18:15'),(661,36,NULL,'172.19.0.5','2020-02-19 12:35:41','2020-02-19 12:35:41','2020-02-19 12:35:41'),(662,41,NULL,'172.19.0.5','2020-02-19 12:35:47','2020-02-19 12:35:47','2020-02-19 12:35:47'),(663,47,NULL,'172.19.0.5','2020-02-20 01:56:32','2020-02-20 01:56:32','2020-02-20 01:56:32'),(664,44,NULL,'42.156.137.73','2020-02-20 08:19:00','2020-02-20 08:19:00','2020-02-20 08:19:00'),(665,14,NULL,'172.19.0.5','2020-02-21 07:52:01','2020-02-21 07:52:01','2020-02-21 07:52:01'),(666,52,NULL,'172.19.0.5','2020-02-21 07:52:03','2020-02-21 07:52:03','2020-02-21 07:52:03'),(667,50,NULL,'172.19.0.5','2020-02-21 07:52:04','2020-02-21 07:52:04','2020-02-21 07:52:04'),(668,49,NULL,'172.19.0.5','2020-02-21 07:52:13','2020-02-21 07:52:13','2020-02-21 07:52:13'),(669,48,NULL,'172.19.0.5','2020-02-21 07:52:14','2020-02-21 07:52:14','2020-02-21 07:52:14'),(670,47,NULL,'172.19.0.5','2020-02-21 07:52:16','2020-02-21 07:52:16','2020-02-21 07:52:16'),(671,46,NULL,'172.19.0.5','2020-02-21 07:52:17','2020-02-21 07:52:17','2020-02-21 07:52:17'),(672,45,NULL,'172.19.0.5','2020-02-21 07:52:21','2020-02-21 07:52:21','2020-02-21 07:52:21'),(673,44,NULL,'172.19.0.5','2020-02-21 07:52:22','2020-02-21 07:52:22','2020-02-21 07:52:22'),(674,43,NULL,'172.19.0.5','2020-02-21 07:52:25','2020-02-21 07:52:25','2020-02-21 07:52:25'),(675,41,NULL,'172.19.0.5','2020-02-21 07:52:26','2020-02-21 07:52:26','2020-02-21 07:52:26'),(676,37,NULL,'172.19.0.5','2020-02-21 07:52:31','2020-02-21 07:52:31','2020-02-21 07:52:31'),(677,36,NULL,'172.19.0.5','2020-02-21 07:52:36','2020-02-21 07:52:36','2020-02-21 07:52:36'),(678,35,NULL,'172.19.0.5','2020-02-21 07:52:39','2020-02-21 07:52:39','2020-02-21 07:52:39'),(679,27,NULL,'172.19.0.5','2020-02-21 07:52:50','2020-02-21 07:52:50','2020-02-21 07:52:50'),(680,23,NULL,'172.19.0.5','2020-02-21 07:52:52','2020-02-21 07:52:52','2020-02-21 07:52:52'),(681,21,NULL,'172.19.0.5','2020-02-21 07:52:53','2020-02-21 07:52:53','2020-02-21 07:52:53'),(682,42,NULL,'172.19.0.5','2020-02-21 07:52:54','2020-02-21 07:52:54','2020-02-21 07:52:54'),(683,33,NULL,'172.19.0.5','2020-02-21 07:52:56','2020-02-21 07:52:56','2020-02-21 07:52:56'),(684,32,NULL,'172.19.0.5','2020-02-21 07:52:57','2020-02-21 07:52:57','2020-02-21 07:52:57'),(685,31,NULL,'172.19.0.5','2020-02-21 07:52:59','2020-02-21 07:52:59','2020-02-21 07:52:59'),(686,28,NULL,'172.19.0.5','2020-02-21 07:53:00','2020-02-21 07:53:00','2020-02-21 07:53:00'),(687,15,NULL,'172.19.0.5','2020-02-21 07:53:03','2020-02-21 07:53:03','2020-02-21 07:53:03'),(688,1,NULL,'172.19.0.5','2020-02-21 07:53:04','2020-02-21 07:53:04','2020-02-21 07:53:04'),(689,23,NULL,'172.19.0.5','2020-02-21 20:35:11','2020-02-21 20:35:11','2020-02-21 20:35:11'),(690,35,NULL,'106.11.156.7','2020-02-22 07:00:37','2020-02-22 07:00:37','2020-02-22 07:00:37'),(691,41,NULL,'172.19.0.5','2020-02-22 08:20:37','2020-02-22 08:20:37','2020-02-22 08:20:37'),(692,31,NULL,'172.19.0.5','2020-02-23 00:22:55','2020-02-23 00:22:55','2020-02-23 00:22:55'),(693,35,NULL,'172.19.0.5','2020-02-23 04:56:57','2020-02-23 04:56:57','2020-02-23 04:56:57'),(694,14,NULL,'172.19.0.5','2020-02-23 12:03:32','2020-02-23 12:03:32','2020-02-23 12:03:32'),(695,14,NULL,'172.19.0.5','2020-02-25 02:25:08','2020-02-25 02:25:08','2020-02-25 02:25:08'),(696,47,NULL,'172.19.0.5','2020-02-25 02:25:13','2020-02-25 02:25:13','2020-02-25 02:25:13'),(697,52,NULL,'172.19.0.5','2020-02-25 02:25:16','2020-02-25 02:25:16','2020-02-25 02:25:16'),(698,50,NULL,'172.19.0.5','2020-02-25 02:25:23','2020-02-25 02:25:23','2020-02-25 02:25:23'),(699,50,NULL,'172.19.0.5','2020-02-25 03:06:53','2020-02-25 03:06:53','2020-02-25 03:06:53'),(700,47,NULL,'172.19.0.5','2020-02-25 03:07:01','2020-02-25 03:07:01','2020-02-25 03:07:01'),(701,52,NULL,'172.19.0.5','2020-02-25 04:40:55','2020-02-25 04:40:55','2020-02-25 04:40:55'),(702,45,NULL,'172.19.0.5','2020-02-25 04:58:00','2020-02-25 04:58:00','2020-02-25 04:58:00'),(703,46,NULL,'172.19.0.5','2020-02-25 04:58:06','2020-02-25 04:58:06','2020-02-25 04:58:06'),(704,14,NULL,'172.19.0.5','2020-02-25 04:58:12','2020-02-25 04:58:12','2020-02-25 04:58:12'),(705,43,NULL,'172.19.0.5','2020-02-25 04:58:20','2020-02-25 04:58:20','2020-02-25 04:58:20'),(706,48,NULL,'172.19.0.5','2020-02-25 05:18:18','2020-02-25 05:18:18','2020-02-25 05:18:18'),(707,44,NULL,'172.19.0.5','2020-02-25 05:18:22','2020-02-25 05:18:22','2020-02-25 05:18:22'),(708,49,NULL,'172.19.0.5','2020-02-25 05:32:26','2020-02-25 05:32:26','2020-02-25 05:32:26'),(709,21,NULL,'172.19.0.5','2020-02-27 23:05:38','2020-02-27 23:05:38','2020-02-27 23:05:38'),(710,43,NULL,'106.11.153.199','2020-02-29 12:15:08','2020-02-29 12:15:08','2020-02-29 12:15:08'),(711,49,NULL,'106.11.158.212','2020-03-01 19:27:14','2020-03-01 19:27:14','2020-03-01 19:27:14'),(712,1,NULL,'172.19.0.5','2020-03-02 04:37:16','2020-03-02 04:37:16','2020-03-02 04:37:16'),(713,27,NULL,'172.19.0.5','2020-03-02 05:27:58','2020-03-02 05:27:58','2020-03-02 05:27:58'),(714,14,NULL,'172.19.0.5','2020-03-02 13:11:02','2020-03-02 13:11:02','2020-03-02 13:11:02'),(715,47,NULL,'172.19.0.5','2020-03-02 13:11:03','2020-03-02 13:11:03','2020-03-02 13:11:03'),(716,52,NULL,'172.19.0.5','2020-03-02 13:11:06','2020-03-02 13:11:06','2020-03-02 13:11:06'),(717,50,NULL,'172.19.0.5','2020-03-02 13:11:12','2020-03-02 13:11:12','2020-03-02 13:11:12'),(718,49,NULL,'172.19.0.5','2020-03-02 13:11:12','2020-03-02 13:11:12','2020-03-02 13:11:12'),(719,46,NULL,'172.19.0.5','2020-03-02 13:11:13','2020-03-02 13:11:13','2020-03-02 13:11:13'),(720,48,NULL,'172.19.0.5','2020-03-02 13:11:14','2020-03-02 13:11:14','2020-03-02 13:11:14'),(721,44,NULL,'172.19.0.5','2020-03-02 13:11:18','2020-03-02 13:11:18','2020-03-02 13:11:18'),(722,43,NULL,'172.19.0.5','2020-03-02 13:11:18','2020-03-02 13:11:18','2020-03-02 13:11:18'),(723,15,NULL,'172.19.0.5','2020-03-02 13:11:32','2020-03-02 13:11:32','2020-03-02 13:11:32'),(724,28,NULL,'172.19.0.5','2020-03-02 13:11:33','2020-03-02 13:11:33','2020-03-02 13:11:33'),(725,23,NULL,'172.19.0.5','2020-03-02 13:11:33','2020-03-02 13:11:33','2020-03-02 13:11:33'),(726,27,NULL,'172.19.0.5','2020-03-02 13:11:36','2020-03-02 13:11:36','2020-03-02 13:11:36'),(727,21,NULL,'172.19.0.5','2020-03-02 13:11:39','2020-03-02 13:11:40','2020-03-02 13:11:40'),(728,35,NULL,'172.19.0.5','2020-03-02 13:42:12','2020-03-02 13:42:12','2020-03-02 13:42:12'),(729,33,NULL,'172.19.0.5','2020-03-02 13:42:13','2020-03-02 13:42:13','2020-03-02 13:42:13'),(730,36,NULL,'172.19.0.5','2020-03-02 13:42:14','2020-03-02 13:42:15','2020-03-02 13:42:15'),(731,42,NULL,'172.19.0.5','2020-03-02 13:42:16','2020-03-02 13:42:16','2020-03-02 13:42:16'),(732,41,NULL,'172.19.0.5','2020-03-02 13:42:17','2020-03-02 13:42:17','2020-03-02 13:42:17'),(733,31,NULL,'172.19.0.5','2020-03-02 13:42:17','2020-03-02 13:42:17','2020-03-02 13:42:17'),(734,37,NULL,'172.19.0.5','2020-03-02 13:42:19','2020-03-02 13:42:19','2020-03-02 13:42:19'),(735,32,NULL,'172.19.0.5','2020-03-02 13:42:21','2020-03-02 13:42:21','2020-03-02 13:42:21'),(736,1,NULL,'172.19.0.5','2020-03-02 13:42:24','2020-03-02 13:42:24','2020-03-02 13:42:24'),(737,37,NULL,'106.11.157.222','2020-03-02 15:22:50','2020-03-02 15:22:50','2020-03-02 15:22:50'),(738,23,NULL,'106.11.158.212','2020-03-05 10:42:28','2020-03-05 10:42:28','2020-03-05 10:42:28'),(739,14,NULL,'172.19.0.5','2020-03-05 20:46:31','2020-03-05 20:46:31','2020-03-05 20:46:31'),(740,15,NULL,'172.19.0.5','2020-03-05 20:47:50','2020-03-05 20:47:50','2020-03-05 20:47:50'),(741,31,NULL,'172.19.0.5','2020-03-05 20:49:29','2020-03-05 20:49:29','2020-03-05 20:49:29'),(742,32,NULL,'172.19.0.5','2020-03-05 20:50:14','2020-03-05 20:50:14','2020-03-05 20:50:14'),(743,33,NULL,'172.19.0.5','2020-03-05 20:50:53','2020-03-05 20:50:53','2020-03-05 20:50:53'),(744,35,NULL,'172.19.0.5','2020-03-05 20:51:26','2020-03-05 20:51:26','2020-03-05 20:51:26'),(745,36,NULL,'172.19.0.5','2020-03-05 20:52:04','2020-03-05 20:52:04','2020-03-05 20:52:04'),(746,42,NULL,'172.19.0.5','2020-03-05 20:52:33','2020-03-05 20:52:33','2020-03-05 20:52:33'),(747,43,NULL,'172.19.0.5','2020-03-05 20:53:01','2020-03-05 20:53:01','2020-03-05 20:53:01'),(748,44,NULL,'172.19.0.5','2020-03-05 20:53:33','2020-03-05 20:53:33','2020-03-05 20:53:33'),(749,45,NULL,'172.19.0.5','2020-03-05 20:54:18','2020-03-05 20:54:18','2020-03-05 20:54:18'),(750,46,NULL,'172.19.0.5','2020-03-05 20:54:50','2020-03-05 20:54:50','2020-03-05 20:54:50'),(751,47,NULL,'172.19.0.5','2020-03-05 20:55:38','2020-03-05 20:55:38','2020-03-05 20:55:38'),(752,48,NULL,'172.19.0.5','2020-03-05 20:56:24','2020-03-05 20:56:24','2020-03-05 20:56:24'),(753,49,NULL,'172.19.0.5','2020-03-05 20:57:01','2020-03-05 20:57:01','2020-03-05 20:57:01'),(754,50,NULL,'172.19.0.5','2020-03-05 20:57:39','2020-03-05 20:57:39','2020-03-05 20:57:39'),(755,52,NULL,'172.19.0.5','2020-03-05 20:58:21','2020-03-05 20:58:21','2020-03-05 20:58:21'),(756,1,NULL,'172.19.0.5','2020-03-06 09:56:54','2020-03-06 09:56:54','2020-03-06 09:56:54'),(757,21,NULL,'172.19.0.5','2020-03-06 09:57:05','2020-03-06 09:57:05','2020-03-06 09:57:05'),(758,23,NULL,'172.19.0.5','2020-03-06 09:57:17','2020-03-06 09:57:17','2020-03-06 09:57:17'),(759,27,NULL,'172.19.0.5','2020-03-06 09:57:30','2020-03-06 09:57:30','2020-03-06 09:57:30'),(760,28,NULL,'172.19.0.5','2020-03-06 09:57:40','2020-03-06 09:57:40','2020-03-06 09:57:40'),(761,37,NULL,'172.19.0.5','2020-03-06 09:57:51','2020-03-06 09:57:51','2020-03-06 09:57:51'),(762,41,NULL,'172.19.0.5','2020-03-06 09:58:00','2020-03-06 09:58:00','2020-03-06 09:58:00'),(763,49,NULL,'172.19.0.5','2020-03-08 02:28:40','2020-03-08 02:28:40','2020-03-08 02:28:40'),(764,47,NULL,'172.19.0.5','2020-03-08 02:38:33','2020-03-08 02:38:33','2020-03-08 02:38:33'),(765,43,NULL,'172.19.0.5','2020-03-08 03:13:26','2020-03-08 03:13:26','2020-03-08 03:13:26'),(766,48,NULL,'172.19.0.5','2020-03-08 05:58:47','2020-03-08 05:58:47','2020-03-08 05:58:47'),(767,52,NULL,'172.19.0.5','2020-03-08 05:59:09','2020-03-08 05:59:09','2020-03-08 05:59:09'),(768,45,NULL,'172.19.0.5','2020-03-08 05:59:18','2020-03-08 05:59:18','2020-03-08 05:59:18'),(769,44,NULL,'172.19.0.5','2020-03-08 06:26:26','2020-03-08 06:26:26','2020-03-08 06:26:26'),(770,46,NULL,'172.19.0.5','2020-03-08 06:26:33','2020-03-08 06:26:33','2020-03-08 06:26:33'),(771,50,NULL,'172.19.0.5','2020-03-08 06:26:42','2020-03-08 06:26:42','2020-03-08 06:26:42'),(772,14,NULL,'172.19.0.5','2020-03-08 06:26:48','2020-03-08 06:26:48','2020-03-08 06:26:48'),(773,14,NULL,'172.19.0.5','2020-03-10 11:10:35','2020-03-10 11:10:35','2020-03-10 11:10:35'),(774,31,NULL,'172.19.0.5','2020-03-10 11:10:47','2020-03-10 11:10:47','2020-03-10 11:10:47'),(775,52,NULL,'172.19.0.5','2020-03-10 23:25:29','2020-03-10 23:25:29','2020-03-10 23:25:29'),(776,49,NULL,'172.19.0.5','2020-03-11 02:42:31','2020-03-11 02:42:31','2020-03-11 02:42:31'),(777,52,NULL,'117.157.99.114','2020-03-11 09:58:36','2020-03-11 09:58:36','2020-03-11 09:58:36'),(778,52,NULL,'13.70.26.158','2020-03-11 10:06:39','2020-03-11 10:06:39','2020-03-11 10:06:39'),(779,53,NULL,'172.19.0.5','2020-03-11 15:45:10','2020-03-11 15:45:10','2020-03-11 15:45:10'),(780,53,NULL,'172.19.0.5','2020-03-11 15:55:48','2020-03-11 15:55:48','2020-03-11 15:55:48'),(781,23,NULL,'172.19.0.5','2020-03-11 15:55:50','2020-03-11 15:55:50','2020-03-11 15:55:50'),(782,44,NULL,'172.19.0.5','2020-03-11 15:56:08','2020-03-11 15:56:08','2020-03-11 15:56:08'),(783,44,NULL,'172.19.0.5','2020-03-11 15:56:14','2020-03-11 15:56:14','2020-03-11 15:56:14'),(784,52,NULL,'172.19.0.5','2020-03-11 15:56:20','2020-03-11 15:56:20','2020-03-11 15:56:20'),(785,52,NULL,'172.19.0.5','2020-03-11 15:56:27','2020-03-11 15:56:27','2020-03-11 15:56:27'),(786,53,NULL,'172.19.0.5','2020-03-11 16:02:25','2020-03-11 16:02:25','2020-03-11 16:02:25'),(787,53,NULL,'172.19.0.5','2020-03-11 16:07:23','2020-03-11 16:07:23','2020-03-11 16:07:23'),(788,53,NULL,'172.19.0.5','2020-03-11 19:11:36','2020-03-11 19:11:36','2020-03-11 19:11:36'),(789,55,NULL,'172.19.0.5','2020-03-12 15:41:13','2020-03-12 15:41:13','2020-03-12 15:41:13'),(790,54,NULL,'172.19.0.5','2020-03-12 15:45:24','2020-03-12 15:45:24','2020-03-12 15:45:24'),(808,14,NULL,'172.19.0.5','2020-03-12 22:11:31','2020-03-12 22:11:31','2020-03-12 22:11:31'),(811,14,NULL,'172.19.0.5','2020-03-12 22:27:40','2020-03-12 22:27:40','2020-03-12 22:27:40'),(837,65,NULL,'172.19.0.5','2020-03-13 08:54:14','2020-03-13 08:54:14','2020-03-13 08:54:14'),(839,46,NULL,'172.19.0.5','2020-03-13 12:12:23','2020-03-13 12:12:23','2020-03-13 12:12:23'),(851,72,NULL,'172.19.0.5','2020-03-13 20:06:30','2020-03-13 20:06:30','2020-03-13 20:06:30'),(856,32,NULL,'203.208.60.75','2020-03-13 20:19:04','2020-03-13 20:19:04','2020-03-13 20:19:04'),(857,31,NULL,'203.208.60.69','2020-03-13 20:21:01','2020-03-13 20:21:01','2020-03-13 20:21:01'),(858,21,NULL,'203.208.60.81','2020-03-13 20:25:45','2020-03-13 20:25:45','2020-03-13 20:25:45'),(859,1,NULL,'172.19.0.5','2020-03-13 20:26:56','2020-03-13 20:26:56','2020-03-13 20:26:56'),(860,46,NULL,'172.19.0.5','2020-03-14 00:28:24','2020-03-14 00:28:24','2020-03-14 00:28:24'),(862,1,NULL,'172.19.0.5','2020-03-14 08:37:08','2020-03-14 08:37:08','2020-03-14 08:37:08'),(865,88,NULL,'172.19.0.5','2020-03-14 09:43:13','2020-03-14 09:43:13','2020-03-14 09:43:13'),(866,48,NULL,'172.19.0.5','2020-03-14 21:53:00','2020-03-14 21:53:00','2020-03-14 21:53:00'),(867,46,NULL,'172.19.0.5','2020-03-15 19:48:15','2020-03-15 19:48:15','2020-03-15 19:48:15'),(873,72,NULL,'172.19.0.5','2020-03-16 10:24:08','2020-03-16 10:24:08','2020-03-16 10:24:08'),(887,65,NULL,'172.19.0.5','2020-03-16 10:32:33','2020-03-16 10:32:33','2020-03-16 10:32:33'),(893,14,NULL,'172.19.0.5','2020-03-17 13:24:11','2020-03-17 13:24:11','2020-03-17 13:24:11'),(895,88,NULL,'172.19.0.5','2020-03-17 13:24:14','2020-03-17 13:24:14','2020-03-17 13:24:14'),(906,23,NULL,'106.11.158.211','2020-03-21 15:35:50','2020-03-21 15:35:50','2020-03-21 15:35:50'),(907,32,NULL,'172.19.0.5','2020-03-22 06:26:43','2020-03-22 06:26:43','2020-03-22 06:26:43'),(910,88,NULL,'172.19.0.5','2020-03-22 07:26:38','2020-03-22 07:26:38','2020-03-22 07:26:38'),(911,47,NULL,'172.19.0.5','2020-03-23 08:23:49','2020-03-23 08:23:49','2020-03-23 08:23:49'),(913,21,NULL,'158.69.243.138','2020-03-23 19:08:12','2020-03-23 19:08:12','2020-03-23 19:08:12'),(914,32,NULL,'158.69.243.138','2020-03-23 19:08:16','2020-03-23 19:08:16','2020-03-23 19:08:16'),(915,33,NULL,'158.69.243.138','2020-03-23 19:08:24','2020-03-23 19:08:24','2020-03-23 19:08:24'),(916,36,NULL,'158.69.243.138','2020-03-23 19:08:29','2020-03-23 19:08:29','2020-03-23 19:08:29'),(917,37,NULL,'158.69.243.138','2020-03-23 19:08:37','2020-03-23 19:08:37','2020-03-23 19:08:37'),(918,14,NULL,'172.19.0.5','2020-03-23 21:24:31','2020-03-23 21:24:31','2020-03-23 21:24:31'),(919,65,NULL,'172.19.0.5','2020-03-24 00:39:49','2020-03-24 00:39:49','2020-03-24 00:39:49'),(926,72,NULL,'172.19.0.5','2020-03-24 00:41:01','2020-03-24 00:41:01','2020-03-24 00:41:01'),(942,88,NULL,'172.19.0.5','2020-03-24 00:44:27','2020-03-24 00:44:27','2020-03-24 00:44:27'),(943,47,NULL,'172.19.0.5','2020-03-24 01:09:17','2020-03-24 01:09:17','2020-03-24 01:09:17'),(944,44,NULL,'172.19.0.5','2020-03-24 02:26:42','2020-03-24 02:26:42','2020-03-24 02:26:42'),(945,14,NULL,'172.19.0.5','2020-03-24 09:53:25','2020-03-24 09:53:25','2020-03-24 09:53:25'),(947,88,NULL,'172.19.0.5','2020-03-24 09:57:56','2020-03-24 09:57:56','2020-03-24 09:57:56'),(948,21,NULL,'172.19.0.5','2020-03-24 17:20:31','2020-03-24 17:20:31','2020-03-24 17:20:31'),(949,33,NULL,'172.19.0.5','2020-03-24 23:57:17','2020-03-24 23:57:17','2020-03-24 23:57:17'),(951,33,NULL,'172.19.0.5','2020-03-25 05:12:32','2020-03-25 05:12:32','2020-03-25 05:12:32'),(952,41,NULL,'172.19.0.5','2020-03-25 05:12:38','2020-03-25 05:12:38','2020-03-25 05:12:38'),(953,88,NULL,'172.19.0.5','2020-03-25 05:12:45','2020-03-25 05:12:45','2020-03-25 05:12:45'),(955,32,NULL,'172.19.0.5','2020-03-25 05:12:57','2020-03-25 05:12:57','2020-03-25 05:12:57'),(957,46,NULL,'172.19.0.5','2020-03-25 05:13:08','2020-03-25 05:13:08','2020-03-25 05:13:08'),(966,14,NULL,'172.19.0.5','2020-03-25 05:13:51','2020-03-25 05:13:51','2020-03-25 05:13:51'),(967,48,NULL,'172.19.0.5','2020-03-25 05:13:56','2020-03-25 05:13:56','2020-03-25 05:13:56'),(969,47,NULL,'172.19.0.5','2020-03-25 05:14:25','2020-03-25 05:14:25','2020-03-25 05:14:25'),(970,88,NULL,'172.19.0.5','2020-03-25 05:14:29','2020-03-25 05:14:29','2020-03-25 05:14:29'),(971,50,NULL,'172.19.0.5','2020-03-25 05:14:39','2020-03-25 05:14:39','2020-03-25 05:14:39'),(978,14,NULL,'172.19.0.5','2020-03-25 05:14:57','2020-03-25 05:14:57','2020-03-25 05:14:57'),(979,33,NULL,'172.19.0.5','2020-03-25 14:29:03','2020-03-25 14:29:03','2020-03-25 14:29:03'),(980,1,NULL,'172.19.0.5','2020-03-26 07:07:20','2020-03-26 07:07:20','2020-03-26 07:07:20'),(981,42,NULL,'172.19.0.5','2020-03-27 17:42:18','2020-03-27 17:42:18','2020-03-27 17:42:18'),(983,21,NULL,'172.19.0.5','2020-03-28 01:31:48','2020-03-28 01:31:48','2020-03-28 01:31:48'),(990,14,NULL,'172.19.0.5','2020-03-28 13:06:10','2020-03-28 13:06:10','2020-03-28 13:06:10'),(991,14,NULL,'172.19.0.5','2020-03-28 13:06:14','2020-03-28 13:06:14','2020-03-28 13:06:14'),(992,88,NULL,'172.19.0.5','2020-03-28 13:06:15','2020-03-28 13:06:15','2020-03-28 13:06:15'),(993,88,NULL,'172.19.0.5','2020-03-28 13:06:18','2020-03-28 13:06:18','2020-03-28 13:06:18'),(1010,50,NULL,'172.19.0.5','2020-03-28 13:07:08','2020-03-28 13:07:08','2020-03-28 13:07:08'),(1011,31,NULL,'172.19.0.5','2020-03-28 13:07:10','2020-03-28 13:07:10','2020-03-28 13:07:10'),(1012,27,NULL,'172.19.0.5','2020-03-28 13:07:11','2020-03-28 13:07:11','2020-03-28 13:07:11'),(1013,52,NULL,'172.19.0.5','2020-03-28 13:07:13','2020-03-28 13:07:13','2020-03-28 13:07:13'),(1014,35,NULL,'172.19.0.5','2020-03-28 13:07:14','2020-03-28 13:07:14','2020-03-28 13:07:14'),(1016,46,NULL,'172.19.0.5','2020-03-28 13:07:18','2020-03-28 13:07:18','2020-03-28 13:07:18'),(1017,36,NULL,'172.19.0.5','2020-03-28 13:07:31','2020-03-28 13:07:31','2020-03-28 13:07:31'),(1018,43,NULL,'172.19.0.5','2020-03-28 13:07:32','2020-03-28 13:07:32','2020-03-28 13:07:32'),(1019,15,NULL,'172.19.0.5','2020-03-28 13:07:34','2020-03-28 13:07:34','2020-03-28 13:07:34'),(1021,44,NULL,'172.19.0.5','2020-03-28 13:07:37','2020-03-28 13:07:37','2020-03-28 13:07:37'),(1022,28,NULL,'172.19.0.5','2020-03-28 13:07:39','2020-03-28 13:07:39','2020-03-28 13:07:39'),(1023,23,NULL,'172.19.0.5','2020-03-28 13:07:41','2020-03-28 13:07:41','2020-03-28 13:07:41'),(1024,21,NULL,'172.19.0.5','2020-03-28 13:07:42','2020-03-28 13:07:42','2020-03-28 13:07:42'),(1025,48,NULL,'172.19.0.5','2020-03-28 13:07:43','2020-03-28 13:07:43','2020-03-28 13:07:43'),(1027,41,NULL,'172.19.0.5','2020-03-28 13:07:46','2020-03-28 13:07:46','2020-03-28 13:07:46'),(1028,32,NULL,'172.19.0.5','2020-03-28 13:07:48','2020-03-28 13:07:48','2020-03-28 13:07:48'),(1031,49,NULL,'172.19.0.5','2020-03-28 13:07:52','2020-03-28 13:07:52','2020-03-28 13:07:52'),(1034,47,NULL,'172.19.0.5','2020-03-28 13:07:57','2020-03-28 13:07:57','2020-03-28 13:07:57'),(1035,47,NULL,'172.19.0.5','2020-03-28 13:07:58','2020-03-28 13:07:58','2020-03-28 13:07:58'),(1036,46,NULL,'172.19.0.5','2020-03-28 13:08:00','2020-03-28 13:08:00','2020-03-28 13:08:00'),(1037,44,NULL,'172.19.0.5','2020-03-28 13:08:02','2020-03-28 13:08:02','2020-03-28 13:08:02'),(1038,43,NULL,'172.19.0.5','2020-03-28 13:08:04','2020-03-28 13:08:04','2020-03-28 13:08:04'),(1039,42,NULL,'172.19.0.5','2020-03-28 13:08:06','2020-03-28 13:08:06','2020-03-28 13:08:06'),(1040,42,NULL,'172.19.0.5','2020-03-28 13:08:07','2020-03-28 13:08:07','2020-03-28 13:08:07'),(1041,41,NULL,'172.19.0.5','2020-03-28 13:08:09','2020-03-28 13:08:09','2020-03-28 13:08:09'),(1042,37,NULL,'172.19.0.5','2020-03-28 13:08:10','2020-03-28 13:08:10','2020-03-28 13:08:10'),(1043,37,NULL,'172.19.0.5','2020-03-28 13:08:12','2020-03-28 13:08:12','2020-03-28 13:08:12'),(1044,36,NULL,'172.19.0.5','2020-03-28 13:08:14','2020-03-28 13:08:14','2020-03-28 13:08:14'),(1045,35,NULL,'172.19.0.5','2020-03-28 13:08:16','2020-03-28 13:08:16','2020-03-28 13:08:16'),(1050,23,NULL,'172.19.0.5','2020-03-29 23:11:59','2020-03-29 23:11:59','2020-03-29 23:11:59'),(1052,23,NULL,'172.19.0.5','2020-03-30 02:50:23','2020-03-30 02:50:23','2020-03-30 02:50:23'),(1054,42,NULL,'172.19.0.5','2020-03-30 20:20:00','2020-03-30 20:20:00','2020-03-30 20:20:00'),(1055,21,NULL,'172.19.0.5','2020-03-31 00:58:08','2020-03-31 00:58:08','2020-03-31 00:58:08'),(1056,42,NULL,'172.19.0.5','2020-03-31 02:16:07','2020-03-31 02:16:07','2020-03-31 02:16:07'),(1057,21,NULL,'172.19.0.5','2020-03-31 03:48:37','2020-03-31 03:48:37','2020-03-31 03:48:37'),(1058,23,NULL,'172.19.0.5','2020-04-01 03:20:14','2020-04-01 03:20:14','2020-04-01 03:20:14'),(1059,48,NULL,'172.19.0.5','2020-04-01 07:22:03','2020-04-01 07:22:03','2020-04-01 07:22:03'),(1060,52,NULL,'172.19.0.5','2020-04-01 07:45:17','2020-04-01 07:45:17','2020-04-01 07:45:17'),(1061,46,NULL,'172.19.0.5','2020-04-01 07:54:40','2020-04-01 07:54:40','2020-04-01 07:54:40'),(1062,47,NULL,'172.19.0.5','2020-04-01 07:54:48','2020-04-01 07:54:48','2020-04-01 07:54:48'),(1063,49,NULL,'172.19.0.5','2020-04-01 07:54:57','2020-04-01 07:54:57','2020-04-01 07:54:57'),(1064,49,NULL,'172.19.0.5','2020-04-01 07:55:00','2020-04-01 07:55:00','2020-04-01 07:55:00'),(1065,14,NULL,'172.19.0.5','2020-04-01 07:55:06','2020-04-01 07:55:06','2020-04-01 07:55:06'),(1066,50,NULL,'172.19.0.5','2020-04-01 07:55:16','2020-04-01 07:55:16','2020-04-01 07:55:16'),(1067,43,NULL,'172.19.0.5','2020-04-01 08:00:59','2020-04-01 08:00:59','2020-04-01 08:00:59'),(1068,44,NULL,'172.19.0.5','2020-04-01 08:01:08','2020-04-01 08:01:08','2020-04-01 08:01:08'),(1069,14,NULL,'172.19.0.5','2020-04-01 13:18:41','2020-04-01 13:18:41','2020-04-01 13:18:41'),(1070,88,NULL,'172.19.0.5','2020-04-01 13:18:44','2020-04-01 13:18:44','2020-04-01 13:18:44'),(1079,44,NULL,'172.19.0.5','2020-04-01 13:19:09','2020-04-01 13:19:09','2020-04-01 13:19:09'),(1080,48,NULL,'172.19.0.5','2020-04-01 13:19:09','2020-04-01 13:19:09','2020-04-01 13:19:09'),(1081,15,NULL,'172.19.0.5','2020-04-01 13:19:11','2020-04-01 13:19:12','2020-04-01 13:19:12'),(1084,32,NULL,'172.19.0.5','2020-04-01 13:19:18','2020-04-01 13:19:18','2020-04-01 13:19:18'),(1085,33,NULL,'172.19.0.5','2020-04-01 13:45:18','2020-04-01 13:45:18','2020-04-01 13:45:18'),(1087,31,NULL,'172.19.0.5','2020-04-01 13:45:20','2020-04-01 13:45:20','2020-04-01 13:45:20'),(1088,50,NULL,'172.19.0.5','2020-04-01 13:45:22','2020-04-01 13:45:22','2020-04-01 13:45:22'),(1090,47,NULL,'172.19.0.5','2020-04-01 13:45:26','2020-04-01 13:45:26','2020-04-01 13:45:26'),(1092,35,NULL,'172.19.0.5','2020-04-01 13:45:27','2020-04-01 13:45:27','2020-04-01 13:45:27'),(1093,41,NULL,'172.19.0.5','2020-04-01 13:45:29','2020-04-01 13:45:29','2020-04-01 13:45:29'),(1094,23,NULL,'172.19.0.5','2020-04-01 13:45:31','2020-04-01 13:45:31','2020-04-01 13:45:31'),(1095,46,NULL,'172.19.0.5','2020-04-01 13:45:31','2020-04-01 13:45:31','2020-04-01 13:45:31'),(1096,42,NULL,'172.19.0.5','2020-04-01 13:45:32','2020-04-01 13:45:32','2020-04-01 13:45:32'),(1097,43,NULL,'172.19.0.5','2020-04-01 13:45:32','2020-04-01 13:45:33','2020-04-01 13:45:33'),(1098,37,NULL,'172.19.0.5','2020-04-01 13:45:38','2020-04-01 13:45:38','2020-04-01 13:45:38'),(1100,36,NULL,'172.19.0.5','2020-04-01 13:45:43','2020-04-01 13:45:43','2020-04-01 13:45:43'),(1101,52,NULL,'172.19.0.5','2020-04-01 13:45:44','2020-04-01 13:45:44','2020-04-01 13:45:44'),(1104,21,NULL,'172.19.0.5','2020-04-01 13:45:47','2020-04-01 13:45:47','2020-04-01 13:45:47'),(1106,65,NULL,'172.19.0.5','2020-04-01 13:45:49','2020-04-01 13:45:49','2020-04-01 13:45:49'),(1108,49,NULL,'172.19.0.5','2020-04-01 13:45:57','2020-04-01 13:45:57','2020-04-01 13:45:57'),(1109,45,NULL,'172.19.0.5','2020-04-01 13:45:58','2020-04-01 13:45:58','2020-04-01 13:45:58'),(1110,27,NULL,'172.19.0.5','2020-04-01 13:45:58','2020-04-01 13:45:58','2020-04-01 13:45:58'),(1112,28,NULL,'172.19.0.5','2020-04-01 13:46:00','2020-04-01 13:46:00','2020-04-01 13:46:00'),(1113,1,NULL,'172.19.0.5','2020-04-01 13:46:00','2020-04-01 13:46:00','2020-04-01 13:46:00'),(1114,72,NULL,'172.19.0.5','2020-04-01 13:46:01','2020-04-01 13:46:01','2020-04-01 13:46:01'),(1117,47,NULL,'172.19.0.5','2020-04-02 03:16:24','2020-04-02 03:16:24','2020-04-02 03:16:24'),(1118,88,NULL,'172.19.0.5','2020-04-02 03:16:28','2020-04-02 03:16:28','2020-04-02 03:16:28'),(1123,41,NULL,'172.19.0.5','2020-04-02 03:16:37','2020-04-02 03:16:37','2020-04-02 03:16:37'),(1131,28,NULL,'172.19.0.5','2020-04-02 03:17:06','2020-04-02 03:17:06','2020-04-02 03:17:06'),(1133,65,NULL,'172.19.0.5','2020-04-02 03:17:08','2020-04-02 03:17:08','2020-04-02 03:17:08'),(1134,14,NULL,'172.19.0.5','2020-04-02 03:17:10','2020-04-02 03:17:10','2020-04-02 03:17:10'),(1135,52,NULL,'172.19.0.5','2020-04-02 03:17:12','2020-04-02 03:17:12','2020-04-02 03:17:12'),(1137,36,NULL,'172.19.0.5','2020-04-02 03:17:15','2020-04-02 03:17:15','2020-04-02 03:17:15'),(1138,50,NULL,'172.19.0.5','2020-04-02 03:17:18','2020-04-02 03:17:18','2020-04-02 03:17:18'),(1140,49,NULL,'172.19.0.5','2020-04-02 03:17:21','2020-04-02 03:17:21','2020-04-02 03:17:21'),(1141,48,NULL,'172.19.0.5','2020-04-02 03:17:22','2020-04-02 03:17:22','2020-04-02 03:17:22'),(1142,46,NULL,'172.19.0.5','2020-04-02 03:17:24','2020-04-02 03:17:24','2020-04-02 03:17:24'),(1143,45,NULL,'172.19.0.5','2020-04-02 03:17:25','2020-04-02 03:17:25','2020-04-02 03:17:25'),(1145,33,NULL,'172.19.0.5','2020-04-02 03:17:28','2020-04-02 03:17:28','2020-04-02 03:17:28'),(1146,32,NULL,'172.19.0.5','2020-04-02 03:17:29','2020-04-02 03:17:29','2020-04-02 03:17:29'),(1147,31,NULL,'172.19.0.5','2020-04-02 03:17:32','2020-04-02 03:17:32','2020-04-02 03:17:32'),(1148,23,NULL,'172.19.0.5','2020-04-02 03:17:33','2020-04-02 03:17:33','2020-04-02 03:17:33'),(1149,44,NULL,'172.19.0.5','2020-04-02 03:17:35','2020-04-02 03:17:35','2020-04-02 03:17:35'),(1150,43,NULL,'172.19.0.5','2020-04-02 03:17:36','2020-04-02 03:17:36','2020-04-02 03:17:36'),(1151,42,NULL,'172.19.0.5','2020-04-02 03:17:39','2020-04-02 03:17:39','2020-04-02 03:17:39'),(1152,37,NULL,'172.19.0.5','2020-04-02 03:17:40','2020-04-02 03:17:40','2020-04-02 03:17:40'),(1154,35,NULL,'172.19.0.5','2020-04-02 03:17:43','2020-04-02 03:17:43','2020-04-02 03:17:43'),(1156,27,NULL,'172.19.0.5','2020-04-02 03:17:47','2020-04-02 03:17:47','2020-04-02 03:17:47'),(1159,21,NULL,'172.19.0.5','2020-04-02 03:17:53','2020-04-02 03:17:53','2020-04-02 03:17:53'),(1160,15,NULL,'172.19.0.5','2020-04-02 03:17:54','2020-04-02 03:17:54','2020-04-02 03:17:54'),(1161,72,NULL,'172.19.0.5','2020-04-02 03:17:57','2020-04-02 03:17:57','2020-04-02 03:17:57'),(1162,1,NULL,'172.19.0.5','2020-04-02 03:17:58','2020-04-02 03:17:58','2020-04-02 03:17:58'),(1165,49,NULL,'106.11.156.194','2020-04-02 10:15:28','2020-04-02 10:15:28','2020-04-02 10:15:28'),(1166,37,NULL,'106.11.153.208','2020-04-03 00:26:58','2020-04-03 00:26:58','2020-04-03 00:26:58'),(1168,41,NULL,'42.156.136.110','2020-04-04 08:27:09','2020-04-04 08:27:09','2020-04-04 08:27:09'),(1171,32,NULL,'106.11.154.48','2020-04-04 19:24:10','2020-04-04 19:24:10','2020-04-04 19:24:10'),(1173,1,NULL,'172.19.0.5','2020-04-07 09:15:57','2020-04-07 09:15:57','2020-04-07 09:15:57'),(1174,14,NULL,'172.19.0.5','2020-04-07 13:08:34','2020-04-07 13:08:34','2020-04-07 13:08:34'),(1178,88,NULL,'172.19.0.5','2020-04-08 14:48:57','2020-04-08 14:48:57','2020-04-08 14:48:57'),(1180,89,NULL,'172.19.0.5','2020-04-09 19:32:31','2020-04-09 19:32:31','2020-04-09 19:32:31'),(1181,90,NULL,'172.19.0.5','2020-04-09 20:07:51','2020-04-09 20:07:51','2020-04-09 20:07:51'),(1182,89,NULL,'172.19.0.5','2020-04-09 20:57:56','2020-04-09 20:57:56','2020-04-09 20:57:56'),(1183,90,NULL,'172.19.0.5','2020-04-09 20:57:58','2020-04-09 20:57:58','2020-04-09 20:57:58'),(1184,52,NULL,'172.19.0.5','2020-04-09 23:10:27','2020-04-09 23:10:27','2020-04-09 23:10:27'),(1185,41,NULL,'172.19.0.5','2020-04-09 23:10:29','2020-04-09 23:10:29','2020-04-09 23:10:29'),(1186,14,NULL,'172.19.0.5','2020-04-09 23:10:31','2020-04-09 23:10:31','2020-04-09 23:10:31'),(1187,52,NULL,'172.19.0.5','2020-04-09 23:10:35','2020-04-09 23:10:35','2020-04-09 23:10:35'),(1188,41,NULL,'172.19.0.5','2020-04-09 23:10:37','2020-04-09 23:10:38','2020-04-09 23:10:38'),(1189,14,NULL,'172.19.0.5','2020-04-09 23:10:39','2020-04-09 23:10:39','2020-04-09 23:10:39'),(1190,90,NULL,'172.19.0.5','2020-04-09 23:10:41','2020-04-09 23:10:41','2020-04-09 23:10:41'),(1191,90,NULL,'172.19.0.5','2020-04-09 23:10:42','2020-04-09 23:10:42','2020-04-09 23:10:42'),(1192,89,NULL,'172.19.0.5','2020-04-09 23:10:44','2020-04-09 23:10:44','2020-04-09 23:10:44'),(1193,89,NULL,'172.19.0.5','2020-04-09 23:10:45','2020-04-09 23:10:45','2020-04-09 23:10:45'),(1194,88,NULL,'172.19.0.5','2020-04-09 23:10:46','2020-04-09 23:10:46','2020-04-09 23:10:46'),(1195,88,NULL,'172.19.0.5','2020-04-09 23:10:49','2020-04-09 23:10:49','2020-04-09 23:10:49'),(1196,72,NULL,'172.19.0.5','2020-04-09 23:10:50','2020-04-09 23:10:50','2020-04-09 23:10:50'),(1197,72,NULL,'172.19.0.5','2020-04-09 23:10:51','2020-04-09 23:10:51','2020-04-09 23:10:51'),(1198,65,NULL,'172.19.0.5','2020-04-09 23:10:53','2020-04-09 23:10:53','2020-04-09 23:10:53'),(1199,65,NULL,'172.19.0.5','2020-04-09 23:10:54','2020-04-09 23:10:54','2020-04-09 23:10:54'),(1200,50,NULL,'172.19.0.5','2020-04-09 23:10:56','2020-04-09 23:10:56','2020-04-09 23:10:56'),(1201,50,NULL,'172.19.0.5','2020-04-09 23:10:57','2020-04-09 23:10:57','2020-04-09 23:10:57'),(1202,49,NULL,'172.19.0.5','2020-04-09 23:10:59','2020-04-09 23:10:59','2020-04-09 23:10:59'),(1203,49,NULL,'172.19.0.5','2020-04-09 23:11:00','2020-04-09 23:11:00','2020-04-09 23:11:00'),(1204,47,NULL,'172.19.0.5','2020-04-09 23:11:20','2020-04-09 23:11:20','2020-04-09 23:11:20'),(1205,36,NULL,'172.19.0.5','2020-04-09 23:11:21','2020-04-09 23:11:21','2020-04-09 23:11:21'),(1206,44,NULL,'172.19.0.5','2020-04-09 23:11:23','2020-04-09 23:11:23','2020-04-09 23:11:23'),(1207,33,NULL,'172.19.0.5','2020-04-09 23:11:25','2020-04-09 23:11:25','2020-04-09 23:11:25'),(1208,15,NULL,'172.19.0.5','2020-04-09 23:11:27','2020-04-09 23:11:27','2020-04-09 23:11:27'),(1209,37,NULL,'172.19.0.5','2020-04-09 23:11:40','2020-04-09 23:11:40','2020-04-09 23:11:40'),(1210,21,NULL,'172.19.0.5','2020-04-09 23:11:41','2020-04-09 23:11:41','2020-04-09 23:11:41'),(1211,45,NULL,'172.19.0.5','2020-04-09 23:11:43','2020-04-09 23:11:43','2020-04-09 23:11:43'),(1212,35,NULL,'172.19.0.5','2020-04-09 23:11:44','2020-04-09 23:11:44','2020-04-09 23:11:44'),(1213,48,NULL,'172.19.0.5','2020-04-09 23:11:46','2020-04-09 23:11:46','2020-04-09 23:11:46'),(1214,23,NULL,'172.19.0.5','2020-04-09 23:11:48','2020-04-09 23:11:48','2020-04-09 23:11:48'),(1215,31,NULL,'172.19.0.5','2020-04-09 23:11:49','2020-04-09 23:11:49','2020-04-09 23:11:49'),(1216,27,NULL,'172.19.0.5','2020-04-09 23:11:51','2020-04-09 23:11:51','2020-04-09 23:11:51'),(1217,42,NULL,'172.19.0.5','2020-04-09 23:11:53','2020-04-09 23:11:53','2020-04-09 23:11:53'),(1218,47,NULL,'172.19.0.5','2020-04-09 23:11:54','2020-04-09 23:11:54','2020-04-09 23:11:54'),(1219,46,NULL,'172.19.0.5','2020-04-09 23:11:55','2020-04-09 23:11:55','2020-04-09 23:11:55'),(1220,46,NULL,'172.19.0.5','2020-04-09 23:11:57','2020-04-09 23:11:57','2020-04-09 23:11:57'),(1221,44,NULL,'172.19.0.5','2020-04-09 23:11:59','2020-04-09 23:11:59','2020-04-09 23:11:59'),(1222,43,NULL,'172.19.0.5','2020-04-09 23:12:01','2020-04-09 23:12:01','2020-04-09 23:12:01'),(1223,43,NULL,'172.19.0.5','2020-04-09 23:12:03','2020-04-09 23:12:03','2020-04-09 23:12:03'),(1224,42,NULL,'172.19.0.5','2020-04-09 23:12:05','2020-04-09 23:12:05','2020-04-09 23:12:05'),(1225,37,NULL,'172.19.0.5','2020-04-09 23:12:06','2020-04-09 23:12:06','2020-04-09 23:12:06'),(1226,23,NULL,'172.19.0.5','2020-04-09 23:12:09','2020-04-09 23:12:09','2020-04-09 23:12:09'),(1227,48,NULL,'172.19.0.5','2020-04-09 23:12:10','2020-04-09 23:12:10','2020-04-09 23:12:10'),(1228,45,NULL,'172.19.0.5','2020-04-09 23:12:12','2020-04-09 23:12:12','2020-04-09 23:12:12'),(1229,33,NULL,'172.19.0.5','2020-04-09 23:12:13','2020-04-09 23:12:13','2020-04-09 23:12:13'),(1230,32,NULL,'172.19.0.5','2020-04-09 23:12:15','2020-04-09 23:12:15','2020-04-09 23:12:15'),(1231,32,NULL,'172.19.0.5','2020-04-09 23:12:17','2020-04-09 23:12:17','2020-04-09 23:12:17'),(1232,15,NULL,'172.19.0.5','2020-04-09 23:12:19','2020-04-09 23:12:19','2020-04-09 23:12:19'),(1233,21,NULL,'172.19.0.5','2020-04-09 23:12:20','2020-04-09 23:12:20','2020-04-09 23:12:20'),(1234,28,NULL,'172.19.0.5','2020-04-09 23:12:22','2020-04-09 23:12:22','2020-04-09 23:12:22'),(1235,1,NULL,'172.19.0.5','2020-04-09 23:12:23','2020-04-09 23:12:23','2020-04-09 23:12:23'),(1236,31,NULL,'172.19.0.5','2020-04-09 23:12:24','2020-04-09 23:12:24','2020-04-09 23:12:24'),(1237,47,NULL,'172.19.0.5','2020-04-10 02:54:54','2020-04-10 02:54:54','2020-04-10 02:54:54'),(1238,88,NULL,'172.19.0.5','2020-04-10 03:00:02','2020-04-10 03:00:02','2020-04-10 03:00:02'),(1239,72,NULL,'172.19.0.5','2020-04-10 03:05:03','2020-04-10 03:05:03','2020-04-10 03:05:03'),(1240,50,NULL,'172.19.0.5','2020-04-10 03:38:53','2020-04-10 03:38:53','2020-04-10 03:38:53'),(1241,28,NULL,'172.19.0.5','2020-04-10 03:42:51','2020-04-10 03:42:51','2020-04-10 03:42:51'),(1242,52,NULL,'172.19.0.5','2020-04-10 04:49:13','2020-04-10 04:49:13','2020-04-10 04:49:13'),(1243,41,NULL,'172.19.0.5','2020-04-10 06:12:40','2020-04-10 06:12:40','2020-04-10 06:12:40'),(1244,43,NULL,'172.19.0.5','2020-04-10 06:56:28','2020-04-10 06:56:28','2020-04-10 06:56:28'),(1245,41,NULL,'172.19.0.5','2020-04-10 07:02:13','2020-04-10 07:02:13','2020-04-10 07:02:13'),(1246,49,NULL,'172.19.0.5','2020-04-10 07:07:19','2020-04-10 07:07:19','2020-04-10 07:07:19'),(1247,14,NULL,'172.19.0.5','2020-04-10 07:12:04','2020-04-10 07:12:04','2020-04-10 07:12:04'),(1248,36,NULL,'172.19.0.5','2020-04-10 07:17:18','2020-04-10 07:17:18','2020-04-10 07:17:18'),(1249,48,NULL,'172.19.0.5','2020-04-10 07:59:09','2020-04-10 07:59:09','2020-04-10 07:59:09'),(1250,65,NULL,'172.19.0.5','2020-04-10 09:18:52','2020-04-10 09:18:52','2020-04-10 09:18:52'),(1251,37,NULL,'172.19.0.5','2020-04-10 10:30:02','2020-04-10 10:30:02','2020-04-10 10:30:02'),(1252,23,NULL,'172.19.0.5','2020-04-10 11:07:45','2020-04-10 11:07:45','2020-04-10 11:07:45'),(1253,21,NULL,'172.19.0.5','2020-04-10 11:48:45','2020-04-10 11:48:45','2020-04-10 11:48:45'),(1254,88,NULL,'172.19.0.5','2020-04-10 12:08:10','2020-04-10 12:08:10','2020-04-10 12:08:10'),(1255,90,NULL,'172.19.0.5','2020-04-10 12:17:06','2020-04-10 12:17:06','2020-04-10 12:17:06'),(1256,27,NULL,'172.19.0.5','2020-04-10 13:08:31','2020-04-10 13:08:31','2020-04-10 13:08:31'),(1257,31,NULL,'172.19.0.5','2020-04-10 14:19:26','2020-04-10 14:19:26','2020-04-10 14:19:26'),(1258,23,NULL,'172.19.0.5','2020-04-10 20:22:36','2020-04-10 20:22:36','2020-04-10 20:22:36'),(1259,15,NULL,'172.19.0.5','2020-04-10 21:28:45','2020-04-10 21:28:45','2020-04-10 21:28:45'),(1260,32,NULL,'172.19.0.5','2020-04-10 21:29:07','2020-04-10 21:29:07','2020-04-10 21:29:07'),(1261,42,NULL,'172.19.0.5','2020-04-10 21:30:00','2020-04-10 21:30:00','2020-04-10 21:30:00'),(1262,46,NULL,'172.19.0.5','2020-04-10 21:31:22','2020-04-10 21:31:22','2020-04-10 21:31:22'),(1263,44,NULL,'172.19.0.5','2020-04-10 21:32:23','2020-04-10 21:32:23','2020-04-10 21:32:23'),(1264,41,NULL,'172.19.0.5','2020-04-11 01:02:06','2020-04-11 01:02:06','2020-04-11 01:02:06'),(1265,89,NULL,'172.19.0.5','2020-04-11 02:03:22','2020-04-11 02:03:22','2020-04-11 02:03:22'),(1266,90,NULL,'172.19.0.5','2020-04-11 02:20:16','2020-04-11 02:20:16','2020-04-11 02:20:16'),(1267,1,NULL,'172.19.0.5','2020-04-11 03:08:39','2020-04-11 03:08:39','2020-04-11 03:08:39'),(1268,45,NULL,'172.19.0.5','2020-04-11 04:41:53','2020-04-11 04:41:53','2020-04-11 04:41:53'),(1269,33,NULL,'172.19.0.5','2020-04-11 04:47:01','2020-04-11 04:47:01','2020-04-11 04:47:01'),(1270,35,NULL,'172.19.0.5','2020-04-11 05:46:38','2020-04-11 05:46:38','2020-04-11 05:46:38'),(1271,23,NULL,'172.19.0.5','2020-04-12 00:29:48','2020-04-12 00:29:48','2020-04-12 00:29:48'),(1272,52,NULL,'172.19.0.5','2020-04-13 01:36:57','2020-04-13 01:36:57','2020-04-13 01:36:57'),(1273,44,NULL,'172.19.0.5','2020-04-13 01:37:06','2020-04-13 01:37:06','2020-04-13 01:37:06'),(1274,43,NULL,'172.19.0.5','2020-04-13 01:37:14','2020-04-13 01:37:14','2020-04-13 01:37:14'),(1275,48,NULL,'172.19.0.5','2020-04-13 05:28:37','2020-04-13 05:28:37','2020-04-13 05:28:37'),(1276,14,NULL,'172.19.0.5','2020-04-13 05:29:02','2020-04-13 05:29:02','2020-04-13 05:29:02'),(1277,50,NULL,'172.19.0.5','2020-04-13 05:44:47','2020-04-13 05:44:47','2020-04-13 05:44:47'),(1278,46,NULL,'172.19.0.5','2020-04-13 05:44:55','2020-04-13 05:44:55','2020-04-13 05:44:55'),(1279,47,NULL,'172.19.0.5','2020-04-13 05:45:05','2020-04-13 05:45:05','2020-04-13 05:45:05'),(1280,49,NULL,'172.19.0.5','2020-04-13 05:45:13','2020-04-13 05:45:13','2020-04-13 05:45:13'),(1281,14,NULL,'172.19.0.5','2020-04-13 15:57:35','2020-04-13 15:57:35','2020-04-13 15:57:35'),(1282,90,NULL,'172.19.0.5','2020-04-13 15:59:43','2020-04-13 15:59:43','2020-04-13 15:59:43'),(1283,90,NULL,'172.19.0.5','2020-04-13 15:59:52','2020-04-13 15:59:52','2020-04-13 15:59:52'),(1284,28,NULL,'172.19.0.5','2020-04-13 16:35:10','2020-04-13 16:35:10','2020-04-13 16:35:10'),(1285,33,NULL,'172.19.0.5','2020-04-13 21:37:06','2020-04-13 21:37:06','2020-04-13 21:37:06'),(1286,89,NULL,'172.19.0.5','2020-04-15 08:02:55','2020-04-15 08:02:55','2020-04-15 08:02:55'),(1287,1,NULL,'172.19.0.5','2020-04-15 08:05:46','2020-04-15 08:05:46','2020-04-15 08:05:46'),(1288,90,NULL,'172.19.0.5','2020-04-15 08:06:34','2020-04-15 08:06:34','2020-04-15 08:06:34'),(1289,23,NULL,'172.19.0.5','2020-04-15 22:02:08','2020-04-15 22:02:08','2020-04-15 22:02:08'),(1290,14,NULL,'172.19.0.5','2020-04-16 12:54:27','2020-04-16 12:54:27','2020-04-16 12:54:27'),(1291,14,NULL,'172.19.0.5','2020-04-16 12:54:28','2020-04-16 12:54:28','2020-04-16 12:54:28'),(1292,14,NULL,'172.19.0.5','2020-04-16 12:54:56','2020-04-16 12:54:56','2020-04-16 12:54:56'),(1293,52,NULL,'172.19.0.5','2020-04-16 13:22:18','2020-04-16 13:22:18','2020-04-16 13:22:18'),(1294,41,NULL,'172.19.0.5','2020-04-16 13:22:19','2020-04-16 13:22:19','2020-04-16 13:22:19'),(1295,14,NULL,'172.19.0.5','2020-04-16 13:22:20','2020-04-16 13:22:20','2020-04-16 13:22:20'),(1296,90,NULL,'172.19.0.5','2020-04-16 13:22:22','2020-04-16 13:22:22','2020-04-16 13:22:22'),(1297,89,NULL,'172.19.0.5','2020-04-16 13:22:23','2020-04-16 13:22:23','2020-04-16 13:22:23'),(1298,88,NULL,'172.19.0.5','2020-04-16 13:22:25','2020-04-16 13:22:25','2020-04-16 13:22:25'),(1299,72,NULL,'172.19.0.5','2020-04-16 13:22:31','2020-04-16 13:22:31','2020-04-16 13:22:31'),(1300,65,NULL,'172.19.0.5','2020-04-16 13:22:33','2020-04-16 13:22:33','2020-04-16 13:22:33'),(1301,50,NULL,'172.19.0.5','2020-04-16 13:22:35','2020-04-16 13:22:35','2020-04-16 13:22:35'),(1302,49,NULL,'172.19.0.5','2020-04-16 13:22:36','2020-04-16 13:22:36','2020-04-16 13:22:36'),(1303,33,NULL,'172.19.0.5','2020-04-16 13:22:49','2020-04-16 13:22:49','2020-04-16 13:22:49'),(1304,28,NULL,'172.19.0.5','2020-04-16 13:22:49','2020-04-16 13:22:49','2020-04-16 13:22:49'),(1305,32,NULL,'172.19.0.5','2020-04-16 13:22:50','2020-04-16 13:22:50','2020-04-16 13:22:50'),(1306,42,NULL,'172.19.0.5','2020-04-16 13:22:52','2020-04-16 13:22:52','2020-04-16 13:22:52'),(1307,48,NULL,'172.19.0.5','2020-04-16 13:22:52','2020-04-16 13:22:52','2020-04-16 13:22:52'),(1308,31,NULL,'172.19.0.5','2020-04-16 13:22:56','2020-04-16 13:22:56','2020-04-16 13:22:56'),(1309,36,NULL,'172.19.0.5','2020-04-16 13:22:58','2020-04-16 13:22:58','2020-04-16 13:22:58'),(1310,27,NULL,'172.19.0.5','2020-04-16 13:22:59','2020-04-16 13:22:59','2020-04-16 13:22:59'),(1311,91,NULL,'172.19.0.5','2020-04-16 19:32:14','2020-04-16 19:32:14','2020-04-16 19:32:14'),(1313,93,NULL,'172.19.0.5','2020-04-16 20:03:50','2020-04-16 20:03:50','2020-04-16 20:03:50'),(1314,35,NULL,'172.19.0.5','2020-04-16 20:18:12','2020-04-16 20:18:12','2020-04-16 20:18:12'),(1315,43,NULL,'106.11.156.208','2020-04-17 01:05:01','2020-04-17 01:05:02','2020-04-17 01:05:02'),(1316,31,NULL,'172.19.0.5','2020-04-17 03:33:40','2020-04-17 03:33:40','2020-04-17 03:33:40'),(1317,72,NULL,'172.19.0.5','2020-04-17 03:33:43','2020-04-17 03:33:43','2020-04-17 03:33:43'),(1318,27,NULL,'172.19.0.5','2020-04-17 03:33:44','2020-04-17 03:33:44','2020-04-17 03:33:44'),(1319,21,NULL,'172.19.0.5','2020-04-17 03:33:48','2020-04-17 03:33:48','2020-04-17 03:33:48'),(1320,14,NULL,'172.19.0.5','2020-04-17 03:33:54','2020-04-17 03:33:54','2020-04-17 03:33:54'),(1321,52,NULL,'172.19.0.5','2020-04-17 03:34:01','2020-04-17 03:34:01','2020-04-17 03:34:01'),(1322,93,NULL,'172.19.0.5','2020-04-17 03:34:04','2020-04-17 03:34:04','2020-04-17 03:34:04'),(1324,91,NULL,'172.19.0.5','2020-04-17 03:34:07','2020-04-17 03:34:07','2020-04-17 03:34:07'),(1325,90,NULL,'172.19.0.5','2020-04-17 03:34:08','2020-04-17 03:34:08','2020-04-17 03:34:08'),(1326,45,NULL,'172.19.0.5','2020-04-17 03:34:22','2020-04-17 03:34:22','2020-04-17 03:34:22'),(1327,44,NULL,'172.19.0.5','2020-04-17 03:34:25','2020-04-17 03:34:25','2020-04-17 03:34:25'),(1328,89,NULL,'172.19.0.5','2020-04-17 03:34:31','2020-04-17 03:34:31','2020-04-17 03:34:31'),(1329,88,NULL,'172.19.0.5','2020-04-17 03:34:32','2020-04-17 03:34:32','2020-04-17 03:34:32'),(1330,41,NULL,'172.19.0.5','2020-04-17 03:34:35','2020-04-17 03:34:35','2020-04-17 03:34:35'),(1331,36,NULL,'172.19.0.5','2020-04-17 03:34:36','2020-04-17 03:34:36','2020-04-17 03:34:36'),(1332,35,NULL,'172.19.0.5','2020-04-17 03:34:40','2020-04-17 03:34:40','2020-04-17 03:34:40'),(1333,15,NULL,'172.19.0.5','2020-04-17 03:34:43','2020-04-17 03:34:43','2020-04-17 03:34:43'),(1334,49,NULL,'172.19.0.5','2020-04-17 03:34:46','2020-04-17 03:34:46','2020-04-17 03:34:46'),(1335,47,NULL,'172.19.0.5','2020-04-17 03:34:47','2020-04-17 03:34:47','2020-04-17 03:34:47'),(1336,43,NULL,'172.19.0.5','2020-04-17 03:34:49','2020-04-17 03:34:49','2020-04-17 03:34:49'),(1337,42,NULL,'172.19.0.5','2020-04-17 03:34:51','2020-04-17 03:34:51','2020-04-17 03:34:51'),(1338,37,NULL,'172.19.0.5','2020-04-17 03:34:53','2020-04-17 03:34:53','2020-04-17 03:34:53'),(1339,33,NULL,'172.19.0.5','2020-04-17 03:34:55','2020-04-17 03:34:55','2020-04-17 03:34:55'),(1340,32,NULL,'172.19.0.5','2020-04-17 03:34:56','2020-04-17 03:34:56','2020-04-17 03:34:56'),(1341,28,NULL,'172.19.0.5','2020-04-17 03:34:59','2020-04-17 03:34:59','2020-04-17 03:34:59'),(1342,23,NULL,'172.19.0.5','2020-04-17 03:35:00','2020-04-17 03:35:00','2020-04-17 03:35:00'),(1343,65,NULL,'172.19.0.5','2020-04-17 03:35:02','2020-04-17 03:35:02','2020-04-17 03:35:02'),(1344,50,NULL,'172.19.0.5','2020-04-17 03:35:03','2020-04-17 03:35:03','2020-04-17 03:35:03'),(1345,46,NULL,'172.19.0.5','2020-04-17 03:35:04','2020-04-17 03:35:04','2020-04-17 03:35:04'),(1346,48,NULL,'172.19.0.5','2020-04-17 03:35:06','2020-04-17 03:35:06','2020-04-17 03:35:06'),(1347,1,NULL,'172.19.0.5','2020-04-17 03:35:18','2020-04-17 03:35:18','2020-04-17 03:35:18'),(1348,93,NULL,'172.19.0.5','2020-04-17 08:12:44','2020-04-17 08:12:44','2020-04-17 08:12:44'),(1349,14,NULL,'172.19.0.5','2020-04-17 08:14:12','2020-04-17 08:14:12','2020-04-17 08:14:12'),(1352,91,NULL,'172.19.0.5','2020-04-18 01:19:17','2020-04-18 01:19:17','2020-04-18 01:19:17'),(1353,23,NULL,'172.19.0.5','2020-04-18 01:50:40','2020-04-18 01:50:40','2020-04-18 01:50:40'),(1354,14,NULL,'172.19.0.5','2020-04-18 20:25:10','2020-04-18 20:25:10','2020-04-18 20:25:10'),(1355,37,NULL,'106.11.153.197','2020-04-19 03:50:39','2020-04-19 03:50:39','2020-04-19 03:50:39'),(1356,42,NULL,'172.19.0.5','2020-04-19 06:20:24','2020-04-19 06:20:24','2020-04-19 06:20:24'),(1357,41,NULL,'42.156.139.19','2020-04-20 03:05:13','2020-04-20 03:05:13','2020-04-20 03:05:13'),(1359,93,NULL,'172.19.0.5','2020-04-21 01:11:55','2020-04-21 01:11:55','2020-04-21 01:11:55'),(1360,91,NULL,'172.19.0.5','2020-04-21 01:33:57','2020-04-21 01:33:57','2020-04-21 01:33:57'),(1361,93,NULL,'172.19.0.5','2020-04-21 01:51:49','2020-04-21 01:51:49','2020-04-21 01:51:49'),(1362,52,NULL,'172.19.0.5','2020-04-21 20:21:12','2020-04-21 20:21:12','2020-04-21 20:21:12'),(1363,41,NULL,'172.19.0.5','2020-04-21 20:21:15','2020-04-21 20:21:15','2020-04-21 20:21:15'),(1364,14,NULL,'172.19.0.5','2020-04-21 20:21:16','2020-04-21 20:21:16','2020-04-21 20:21:16'),(1365,52,NULL,'172.19.0.5','2020-04-21 20:21:21','2020-04-21 20:21:21','2020-04-21 20:21:21'),(1366,41,NULL,'172.19.0.5','2020-04-21 20:21:25','2020-04-21 20:21:25','2020-04-21 20:21:25'),(1367,14,NULL,'172.19.0.5','2020-04-21 20:21:26','2020-04-21 20:21:26','2020-04-21 20:21:26'),(1368,93,NULL,'172.19.0.5','2020-04-21 20:21:28','2020-04-21 20:21:28','2020-04-21 20:21:28'),(1369,93,NULL,'172.19.0.5','2020-04-21 20:21:30','2020-04-21 20:21:30','2020-04-21 20:21:30'),(1372,91,NULL,'172.19.0.5','2020-04-21 20:21:35','2020-04-21 20:21:35','2020-04-21 20:21:35'),(1373,91,NULL,'172.19.0.5','2020-04-21 20:21:36','2020-04-21 20:21:36','2020-04-21 20:21:36'),(1374,90,NULL,'172.19.0.5','2020-04-21 20:21:38','2020-04-21 20:21:38','2020-04-21 20:21:38'),(1375,90,NULL,'172.19.0.5','2020-04-21 20:21:39','2020-04-21 20:21:39','2020-04-21 20:21:39'),(1376,89,NULL,'172.19.0.5','2020-04-21 20:21:40','2020-04-21 20:21:40','2020-04-21 20:21:40'),(1377,89,NULL,'172.19.0.5','2020-04-21 20:21:42','2020-04-21 20:21:42','2020-04-21 20:21:42'),(1378,88,NULL,'172.19.0.5','2020-04-21 20:21:43','2020-04-21 20:21:43','2020-04-21 20:21:43'),(1379,88,NULL,'172.19.0.5','2020-04-21 20:21:45','2020-04-21 20:21:45','2020-04-21 20:21:45'),(1380,72,NULL,'172.19.0.5','2020-04-21 20:21:46','2020-04-21 20:21:46','2020-04-21 20:21:46'),(1381,72,NULL,'172.19.0.5','2020-04-21 20:21:47','2020-04-21 20:21:47','2020-04-21 20:21:47'),(1382,49,NULL,'172.19.0.5','2020-04-21 20:22:07','2020-04-21 20:22:07','2020-04-21 20:22:07'),(1383,36,NULL,'172.19.0.5','2020-04-21 20:22:09','2020-04-21 20:22:09','2020-04-21 20:22:09'),(1384,33,NULL,'172.19.0.5','2020-04-21 20:22:13','2020-04-21 20:22:13','2020-04-21 20:22:13'),(1385,32,NULL,'172.19.0.5','2020-04-21 20:22:15','2020-04-21 20:22:15','2020-04-21 20:22:15'),(1386,21,NULL,'172.19.0.5','2020-04-21 20:22:18','2020-04-21 20:22:18','2020-04-21 20:22:18'),(1387,27,NULL,'172.19.0.5','2020-04-21 20:22:18','2020-04-21 20:22:18','2020-04-21 20:22:18'),(1388,44,NULL,'172.19.0.5','2020-04-21 20:22:20','2020-04-21 20:22:20','2020-04-21 20:22:20'),(1389,65,NULL,'172.19.0.5','2020-04-21 20:22:40','2020-04-21 20:22:40','2020-04-21 20:22:40'),(1390,35,NULL,'172.19.0.5','2020-04-21 20:22:42','2020-04-21 20:22:42','2020-04-21 20:22:42'),(1391,50,NULL,'172.19.0.5','2020-04-21 20:22:45','2020-04-21 20:22:45','2020-04-21 20:22:45'),(1392,31,NULL,'172.19.0.5','2020-04-21 20:22:45','2020-04-21 20:22:45','2020-04-21 20:22:45'),(1393,43,NULL,'172.19.0.5','2020-04-21 20:22:47','2020-04-21 20:22:47','2020-04-21 20:22:47'),(1394,45,NULL,'172.19.0.5','2020-04-21 20:22:49','2020-04-21 20:22:49','2020-04-21 20:22:49'),(1395,48,NULL,'172.19.0.5','2020-04-21 20:22:50','2020-04-21 20:22:50','2020-04-21 20:22:50'),(1396,47,NULL,'172.19.0.5','2020-04-21 20:22:51','2020-04-21 20:22:51','2020-04-21 20:22:51'),(1397,46,NULL,'172.19.0.5','2020-04-21 20:22:53','2020-04-21 20:22:53','2020-04-21 20:22:53'),(1398,47,NULL,'172.19.0.5','2020-04-21 20:22:55','2020-04-21 20:22:55','2020-04-21 20:22:55'),(1399,46,NULL,'172.19.0.5','2020-04-21 20:22:57','2020-04-21 20:22:57','2020-04-21 20:22:57'),(1400,44,NULL,'172.19.0.5','2020-04-21 20:22:59','2020-04-21 20:22:59','2020-04-21 20:22:59'),(1401,43,NULL,'172.19.0.5','2020-04-21 20:23:00','2020-04-21 20:23:00','2020-04-21 20:23:00'),(1402,42,NULL,'172.19.0.5','2020-04-21 20:23:02','2020-04-21 20:23:02','2020-04-21 20:23:02'),(1403,42,NULL,'172.19.0.5','2020-04-21 20:23:04','2020-04-21 20:23:04','2020-04-21 20:23:04'),(1404,37,NULL,'172.19.0.5','2020-04-21 20:23:05','2020-04-21 20:23:05','2020-04-21 20:23:05'),(1405,37,NULL,'172.19.0.5','2020-04-21 20:23:07','2020-04-21 20:23:07','2020-04-21 20:23:07'),(1406,23,NULL,'172.19.0.5','2020-04-21 20:23:09','2020-04-21 20:23:09','2020-04-21 20:23:09'),(1407,15,NULL,'172.19.0.5','2020-04-21 20:23:11','2020-04-21 20:23:11','2020-04-21 20:23:11'),(1408,23,NULL,'172.19.0.5','2020-04-21 20:23:13','2020-04-21 20:23:13','2020-04-21 20:23:13'),(1409,65,NULL,'172.19.0.5','2020-04-21 20:23:15','2020-04-21 20:23:15','2020-04-21 20:23:15'),(1410,50,NULL,'172.19.0.5','2020-04-21 20:23:17','2020-04-21 20:23:17','2020-04-21 20:23:17'),(1411,49,NULL,'172.19.0.5','2020-04-21 20:23:18','2020-04-21 20:23:18','2020-04-21 20:23:18'),(1412,48,NULL,'172.19.0.5','2020-04-21 20:23:19','2020-04-21 20:23:19','2020-04-21 20:23:19'),(1413,45,NULL,'172.19.0.5','2020-04-21 20:23:22','2020-04-21 20:23:22','2020-04-21 20:23:22'),(1414,33,NULL,'172.19.0.5','2020-04-21 20:23:24','2020-04-21 20:23:24','2020-04-21 20:23:24'),(1415,32,NULL,'172.19.0.5','2020-04-21 20:23:25','2020-04-21 20:23:25','2020-04-21 20:23:25'),(1416,23,NULL,'172.19.0.5','2020-04-22 02:21:44','2020-04-22 02:21:44','2020-04-22 02:21:44'),(1417,52,NULL,'117.157.99.114','2020-04-22 11:08:39','2020-04-22 11:08:39','2020-04-22 11:08:39'),(1418,52,NULL,'172.19.0.5','2020-04-22 16:56:13','2020-04-22 16:56:13','2020-04-22 16:56:13'),(1419,93,NULL,'172.19.0.5','2020-04-22 16:56:22','2020-04-22 16:56:22','2020-04-22 16:56:22'),(1422,41,NULL,'172.19.0.5','2020-04-22 16:57:19','2020-04-22 16:57:19','2020-04-22 16:57:19'),(1423,91,NULL,'172.19.0.5','2020-04-22 16:57:27','2020-04-22 16:57:27','2020-04-22 16:57:27'),(1424,91,NULL,'172.19.0.5','2020-04-22 16:57:35','2020-04-22 16:57:35','2020-04-22 16:57:35'),(1425,49,NULL,'172.19.0.5','2020-04-23 17:31:42','2020-04-23 17:31:42','2020-04-23 17:31:42'),(1426,14,NULL,'172.19.0.5','2020-04-24 06:26:08','2020-04-24 06:26:08','2020-04-24 06:26:08'),(1427,48,NULL,'172.19.0.5','2020-04-25 01:23:00','2020-04-25 01:23:00','2020-04-25 01:23:00'),(1428,49,NULL,'172.19.0.5','2020-04-25 01:23:48','2020-04-25 01:23:48','2020-04-25 01:23:48'),(1429,43,NULL,'172.19.0.5','2020-04-25 01:45:31','2020-04-25 01:45:31','2020-04-25 01:45:31'),(1430,14,NULL,'172.19.0.5','2020-04-25 02:13:27','2020-04-25 02:13:27','2020-04-25 02:13:27'),(1431,52,NULL,'172.19.0.5','2020-04-25 02:16:16','2020-04-25 02:16:16','2020-04-25 02:16:16'),(1432,44,NULL,'172.19.0.5','2020-04-25 02:16:40','2020-04-25 02:16:40','2020-04-25 02:16:40'),(1433,46,NULL,'172.19.0.5','2020-04-25 02:17:04','2020-04-25 02:17:04','2020-04-25 02:17:04'),(1434,14,NULL,'172.19.0.5','2020-04-25 02:17:28','2020-04-25 02:17:28','2020-04-25 02:17:28'),(1435,1,NULL,'172.19.0.5','2020-04-25 03:54:04','2020-04-25 03:54:04','2020-04-25 03:54:04'),(1436,47,NULL,'172.19.0.5','2020-04-25 03:54:28','2020-04-25 03:54:28','2020-04-25 03:54:28'),(1437,50,NULL,'172.19.0.5','2020-04-25 05:35:34','2020-04-25 05:35:34','2020-04-25 05:35:34'),(1438,14,NULL,'172.19.0.5','2020-04-25 13:57:25','2020-04-25 13:57:26','2020-04-25 13:57:26'),(1439,72,NULL,'172.19.0.5','2020-04-25 14:18:35','2020-04-25 14:18:35','2020-04-25 14:18:35'),(1440,14,NULL,'172.19.0.5','2020-04-26 01:30:33','2020-04-26 01:30:33','2020-04-26 01:30:33'),(1441,14,NULL,'172.19.0.5','2020-04-26 10:34:30','2020-04-26 10:34:30','2020-04-26 10:34:30'),(1442,23,NULL,'172.19.0.5','2020-04-27 05:21:09','2020-04-27 05:21:09','2020-04-27 05:21:09'),(1443,90,NULL,'172.19.0.5','2020-04-27 11:59:31','2020-04-27 11:59:31','2020-04-27 11:59:31'),(1444,46,NULL,'172.19.0.5','2020-04-27 13:06:11','2020-04-27 13:06:11','2020-04-27 13:06:11'),(1445,89,NULL,'172.19.0.5','2020-04-27 18:30:13','2020-04-27 18:30:13','2020-04-27 18:30:13'),(1446,37,NULL,'172.19.0.5','2020-04-27 22:11:34','2020-04-27 22:11:34','2020-04-27 22:11:34'),(1447,23,NULL,'172.19.0.5','2020-04-28 00:25:03','2020-04-28 00:25:03','2020-04-28 00:25:03'),(1448,93,NULL,'172.19.0.5','2020-04-28 02:29:52','2020-04-28 02:29:52','2020-04-28 02:29:52'),(1449,48,NULL,'172.19.0.5','2020-04-28 03:03:12','2020-04-28 03:03:12','2020-04-28 03:03:12'),(1450,23,NULL,'172.19.0.5','2020-04-28 04:02:04','2020-04-28 04:02:04','2020-04-28 04:02:04'),(1451,52,NULL,'172.19.0.5','2020-04-28 05:53:15','2020-04-28 05:53:15','2020-04-28 05:53:15'),(1452,52,NULL,'172.19.0.5','2020-04-28 10:25:25','2020-04-28 10:25:25','2020-04-28 10:25:25'),(1453,91,NULL,'172.19.0.5','2020-04-28 18:28:19','2020-04-28 18:28:19','2020-04-28 18:28:19'),(1454,43,NULL,'172.19.0.5','2020-04-28 22:02:16','2020-04-28 22:02:16','2020-04-28 22:02:16'),(1455,47,NULL,'172.19.0.5','2020-04-28 22:35:36','2020-04-28 22:35:36','2020-04-28 22:35:36'),(1456,88,NULL,'172.19.0.5','2020-04-29 05:08:13','2020-04-29 05:08:13','2020-04-29 05:08:13'),(1457,41,NULL,'172.19.0.5','2020-04-29 06:46:25','2020-04-29 06:46:25','2020-04-29 06:46:25'),(1458,45,NULL,'172.19.0.5','2020-04-29 09:18:48','2020-04-29 09:18:48','2020-04-29 09:18:48'),(1459,44,NULL,'172.19.0.5','2020-04-29 13:15:10','2020-04-29 13:15:10','2020-04-29 13:15:10'),(1460,35,NULL,'172.19.0.5','2020-04-29 15:20:51','2020-04-29 15:20:51','2020-04-29 15:20:51'),(1461,33,NULL,'172.19.0.5','2020-04-29 16:36:29','2020-04-29 16:36:29','2020-04-29 16:36:29'),(1462,88,NULL,'172.19.0.5','2020-04-29 22:14:19','2020-04-29 22:14:19','2020-04-29 22:14:19'),(1463,49,NULL,'172.19.0.5','2020-04-29 22:16:23','2020-04-29 22:16:23','2020-04-29 22:16:23'),(1464,15,NULL,'172.19.0.5','2020-04-30 00:58:24','2020-04-30 00:58:24','2020-04-30 00:58:24'),(1465,72,NULL,'172.19.0.5','2020-04-30 08:35:15','2020-04-30 08:35:15','2020-04-30 08:35:15'),(1466,21,NULL,'172.19.0.5','2020-04-30 17:35:29','2020-04-30 17:35:29','2020-04-30 17:35:29'),(1467,28,NULL,'172.19.0.5','2020-04-30 21:49:38','2020-04-30 21:49:38','2020-04-30 21:49:38'),(1468,42,NULL,'172.19.0.5','2020-05-01 01:03:36','2020-05-01 01:03:36','2020-05-01 01:03:36'),(1469,14,NULL,'172.19.0.5','2020-05-01 02:39:03','2020-05-01 02:39:03','2020-05-01 02:39:03'),(1470,33,NULL,'172.19.0.5','2020-05-01 03:25:48','2020-05-01 03:25:48','2020-05-01 03:25:48'),(1471,31,NULL,'172.19.0.5','2020-05-01 04:59:18','2020-05-01 04:59:18','2020-05-01 04:59:18'),(1472,65,NULL,'172.19.0.5','2020-05-01 06:00:36','2020-05-01 06:00:36','2020-05-01 06:00:36'),(1473,32,NULL,'172.19.0.5','2020-05-01 08:21:55','2020-05-01 08:21:55','2020-05-01 08:21:55'),(1474,27,NULL,'172.19.0.5','2020-05-01 10:06:15','2020-05-01 10:06:15','2020-05-01 10:06:15'),(1475,52,NULL,'172.19.0.5','2020-05-01 13:19:58','2020-05-01 13:19:58','2020-05-01 13:19:58'),(1476,14,NULL,'172.19.0.5','2020-05-01 13:20:00','2020-05-01 13:20:00','2020-05-01 13:20:00'),(1477,41,NULL,'172.19.0.5','2020-05-01 13:20:01','2020-05-01 13:20:01','2020-05-01 13:20:01'),(1478,93,NULL,'172.19.0.5','2020-05-01 13:20:03','2020-05-01 13:20:04','2020-05-01 13:20:04'),(1479,91,NULL,'172.19.0.5','2020-05-01 13:20:11','2020-05-01 13:20:11','2020-05-01 13:20:11'),(1480,90,NULL,'172.19.0.5','2020-05-01 13:20:12','2020-05-01 13:20:12','2020-05-01 13:20:12'),(1481,89,NULL,'172.19.0.5','2020-05-01 13:20:12','2020-05-01 13:20:12','2020-05-01 13:20:12'),(1482,88,NULL,'172.19.0.5','2020-05-01 13:20:12','2020-05-01 13:20:12','2020-05-01 13:20:12'),(1483,72,NULL,'172.19.0.5','2020-05-01 13:20:12','2020-05-01 13:20:12','2020-05-01 13:20:12'),(1484,65,NULL,'172.19.0.5','2020-05-01 13:20:13','2020-05-01 13:20:13','2020-05-01 13:20:13'),(1485,50,NULL,'172.19.0.5','2020-05-01 13:20:30','2020-05-01 13:20:30','2020-05-01 13:20:30'),(1486,42,NULL,'172.19.0.5','2020-05-01 13:20:30','2020-05-01 13:20:30','2020-05-01 13:20:30'),(1487,15,NULL,'172.19.0.5','2020-05-01 13:20:31','2020-05-01 13:20:31','2020-05-01 13:20:31'),(1488,47,NULL,'172.19.0.5','2020-05-01 13:20:31','2020-05-01 13:20:31','2020-05-01 13:20:31'),(1489,45,NULL,'172.19.0.5','2020-05-01 13:20:31','2020-05-01 13:20:31','2020-05-01 13:20:31'),(1490,36,NULL,'172.19.0.5','2020-05-01 13:20:35','2020-05-01 13:20:35','2020-05-01 13:20:35'),(1491,27,NULL,'172.19.0.5','2020-05-01 13:20:39','2020-05-01 13:20:39','2020-05-01 13:20:39'),(1492,43,NULL,'172.19.0.5','2020-05-01 13:20:42','2020-05-01 13:20:42','2020-05-01 13:20:42'),(1493,31,NULL,'172.19.0.5','2020-05-01 13:20:42','2020-05-01 13:20:43','2020-05-01 13:20:43'),(1494,48,NULL,'172.19.0.5','2020-05-01 13:48:15','2020-05-01 13:48:15','2020-05-01 13:48:15'),(1495,21,NULL,'172.19.0.5','2020-05-01 13:48:17','2020-05-01 13:48:17','2020-05-01 13:48:17'),(1496,28,NULL,'172.19.0.5','2020-05-01 13:48:17','2020-05-01 13:48:18','2020-05-01 13:48:18'),(1497,37,NULL,'172.19.0.5','2020-05-01 13:48:18','2020-05-01 13:48:18','2020-05-01 13:48:18'),(1498,23,NULL,'172.19.0.5','2020-05-01 13:48:23','2020-05-01 13:48:23','2020-05-01 13:48:23'),(1499,46,NULL,'172.19.0.5','2020-05-01 13:48:24','2020-05-01 13:48:24','2020-05-01 13:48:24'),(1500,44,NULL,'172.19.0.5','2020-05-01 13:48:25','2020-05-01 13:48:25','2020-05-01 13:48:25'),(1501,35,NULL,'172.19.0.5','2020-05-01 13:48:26','2020-05-01 13:48:26','2020-05-01 13:48:26'),(1502,32,NULL,'172.19.0.5','2020-05-01 13:48:27','2020-05-01 13:48:27','2020-05-01 13:48:27'),(1503,1,NULL,'172.19.0.5','2020-05-01 13:48:30','2020-05-01 13:48:30','2020-05-01 13:48:30'),(1504,33,NULL,'172.19.0.5','2020-05-01 13:48:31','2020-05-01 13:48:31','2020-05-01 13:48:31'),(1505,49,NULL,'172.19.0.5','2020-05-01 13:48:31','2020-05-01 13:48:31','2020-05-01 13:48:31'),(1506,33,NULL,'172.19.0.5','2020-05-01 22:34:32','2020-05-01 22:34:32','2020-05-01 22:34:32'),(1507,1,NULL,'172.19.0.5','2020-05-02 03:06:44','2020-05-02 03:06:44','2020-05-02 03:06:44'),(1508,52,NULL,'172.19.0.5','2020-05-02 03:17:54','2020-05-02 03:17:54','2020-05-02 03:17:54'),(1509,52,NULL,'172.19.0.5','2020-05-02 03:17:59','2020-05-02 03:17:59','2020-05-02 03:17:59'),(1510,52,NULL,'172.19.0.5','2020-05-02 03:32:41','2020-05-02 03:32:41','2020-05-02 03:32:41'),(1511,23,NULL,'172.19.0.5','2020-05-02 06:48:30','2020-05-02 06:48:30','2020-05-02 06:48:30'),(1512,14,NULL,'172.19.0.5','2020-05-02 10:13:45','2020-05-02 10:13:45','2020-05-02 10:13:45'),(1513,50,NULL,'172.19.0.5','2020-05-02 11:17:31','2020-05-02 11:17:31','2020-05-02 11:17:31'),(1514,36,NULL,'172.19.0.5','2020-05-02 11:50:51','2020-05-02 11:50:51','2020-05-02 11:50:51'),(1515,41,NULL,'172.19.0.5','2020-05-02 15:27:45','2020-05-02 15:27:45','2020-05-02 15:27:45'),(1516,32,NULL,'172.19.0.5','2020-05-02 19:43:55','2020-05-02 19:43:55','2020-05-02 19:43:55'),(1517,45,NULL,'172.19.0.5','2020-05-02 20:49:37','2020-05-02 20:49:37','2020-05-02 20:49:37'),(1518,23,NULL,'172.19.0.5','2020-05-02 21:21:57','2020-05-02 21:21:57','2020-05-02 21:21:57'),(1519,14,NULL,'172.19.0.5','2020-05-02 22:18:30','2020-05-02 22:18:30','2020-05-02 22:18:30'),(1520,88,NULL,'172.19.0.5','2020-05-03 00:24:47','2020-05-03 00:24:47','2020-05-03 00:24:47'),(1521,90,NULL,'172.19.0.5','2020-05-03 01:30:27','2020-05-03 01:30:27','2020-05-03 01:30:27'),(1522,44,NULL,'172.19.0.5','2020-05-03 01:50:36','2020-05-03 01:50:36','2020-05-03 01:50:36'),(1523,52,NULL,'172.19.0.5','2020-05-03 04:00:16','2020-05-03 04:00:16','2020-05-03 04:00:16'),(1524,33,NULL,'172.19.0.5','2020-05-03 08:08:33','2020-05-03 08:08:33','2020-05-03 08:08:33'),(1525,14,NULL,'172.19.0.5','2020-05-03 08:22:09','2020-05-03 08:22:09','2020-05-03 08:22:09'),(1526,52,NULL,'172.19.0.5','2020-05-03 14:53:03','2020-05-03 14:53:03','2020-05-03 14:53:03'),(1527,31,NULL,'172.19.0.5','2020-05-03 19:02:22','2020-05-03 19:02:22','2020-05-03 19:02:22'),(1528,72,NULL,'172.19.0.5','2020-05-03 19:02:25','2020-05-03 19:02:25','2020-05-03 19:02:25'),(1529,65,NULL,'172.19.0.5','2020-05-03 19:02:26','2020-05-03 19:02:26','2020-05-03 19:02:26'),(1530,14,NULL,'172.19.0.5','2020-05-03 19:02:35','2020-05-03 19:02:35','2020-05-03 19:02:35'),(1531,52,NULL,'172.19.0.5','2020-05-03 19:02:40','2020-05-03 19:02:40','2020-05-03 19:02:40'),(1532,93,NULL,'172.19.0.5','2020-05-03 19:02:42','2020-05-03 19:02:42','2020-05-03 19:02:42'),(1533,91,NULL,'172.19.0.5','2020-05-03 19:02:43','2020-05-03 19:02:43','2020-05-03 19:02:43'),(1534,90,NULL,'172.19.0.5','2020-05-03 19:02:45','2020-05-03 19:02:45','2020-05-03 19:02:45'),(1535,49,NULL,'172.19.0.5','2020-05-03 19:02:54','2020-05-03 19:02:54','2020-05-03 19:02:54'),(1536,89,NULL,'172.19.0.5','2020-05-03 19:03:01','2020-05-03 19:03:01','2020-05-03 19:03:01'),(1537,42,NULL,'172.19.0.5','2020-05-03 19:03:03','2020-05-03 19:03:03','2020-05-03 19:03:03'),(1538,88,NULL,'172.19.0.5','2020-05-03 19:03:05','2020-05-03 19:03:05','2020-05-03 19:03:05'),(1539,41,NULL,'172.19.0.5','2020-05-03 19:03:06','2020-05-03 19:03:06','2020-05-03 19:03:06'),(1540,37,NULL,'172.19.0.5','2020-05-03 19:03:08','2020-05-03 19:03:08','2020-05-03 19:03:08'),(1541,35,NULL,'172.19.0.5','2020-05-03 19:03:10','2020-05-03 19:03:10','2020-05-03 19:03:10'),(1542,33,NULL,'172.19.0.5','2020-05-03 19:03:13','2020-05-03 19:03:13','2020-05-03 19:03:13'),(1543,15,NULL,'172.19.0.5','2020-05-03 19:03:14','2020-05-03 19:03:14','2020-05-03 19:03:14'),(1544,48,NULL,'172.19.0.5','2020-05-03 19:03:15','2020-05-03 19:03:15','2020-05-03 19:03:15'),(1545,47,NULL,'172.19.0.5','2020-05-03 19:03:17','2020-05-03 19:03:17','2020-05-03 19:03:17'),(1546,46,NULL,'172.19.0.5','2020-05-03 19:03:19','2020-05-03 19:03:19','2020-05-03 19:03:19'),(1547,44,NULL,'172.19.0.5','2020-05-03 19:03:20','2020-05-03 19:03:20','2020-05-03 19:03:20'),(1548,43,NULL,'172.19.0.5','2020-05-03 19:03:23','2020-05-03 19:03:23','2020-05-03 19:03:23'),(1549,36,NULL,'172.19.0.5','2020-05-03 19:03:25','2020-05-03 19:03:25','2020-05-03 19:03:25'),(1550,32,NULL,'172.19.0.5','2020-05-03 19:03:26','2020-05-03 19:03:26','2020-05-03 19:03:26'),(1551,28,NULL,'172.19.0.5','2020-05-03 19:03:28','2020-05-03 19:03:28','2020-05-03 19:03:28'),(1552,23,NULL,'172.19.0.5','2020-05-03 19:03:29','2020-05-03 19:03:29','2020-05-03 19:03:29'),(1553,27,NULL,'172.19.0.5','2020-05-03 19:03:31','2020-05-03 19:03:31','2020-05-03 19:03:31'),(1554,21,NULL,'172.19.0.5','2020-05-03 19:03:32','2020-05-03 19:03:32','2020-05-03 19:03:32'),(1555,45,NULL,'172.19.0.5','2020-05-03 19:03:34','2020-05-03 19:03:34','2020-05-03 19:03:34'),(1556,50,NULL,'172.19.0.5','2020-05-03 19:03:35','2020-05-03 19:03:35','2020-05-03 19:03:35'),(1557,1,NULL,'172.19.0.5','2020-05-03 19:03:43','2020-05-03 19:03:43','2020-05-03 19:03:43'),(1558,89,NULL,'172.19.0.5','2020-05-03 22:37:44','2020-05-03 22:37:44','2020-05-03 22:37:44'),(1559,72,NULL,'172.19.0.5','2020-05-04 02:05:05','2020-05-04 02:05:05','2020-05-04 02:05:05'),(1560,49,NULL,'106.11.152.193','2020-05-04 08:56:56','2020-05-04 08:56:56','2020-05-04 08:56:56'),(1561,65,NULL,'172.19.0.5','2020-05-04 11:21:30','2020-05-04 11:21:30','2020-05-04 11:21:30'),(1562,42,NULL,'172.19.0.5','2020-05-04 14:57:34','2020-05-04 14:57:34','2020-05-04 14:57:34'),(1563,21,NULL,'172.19.0.5','2020-05-04 18:16:10','2020-05-04 18:16:10','2020-05-04 18:16:10'),(1564,65,NULL,'172.19.0.5','2020-05-04 18:49:31','2020-05-04 18:49:31','2020-05-04 18:49:31'),(1565,27,NULL,'172.19.0.5','2020-05-04 20:26:47','2020-05-04 20:26:47','2020-05-04 20:26:47'),(1566,52,NULL,'172.19.0.5','2020-05-05 06:20:58','2020-05-05 06:20:58','2020-05-05 06:20:58'),(1567,91,NULL,'172.19.0.5','2020-05-05 06:46:55','2020-05-05 06:46:55','2020-05-05 06:46:55'),(1568,28,NULL,'172.19.0.5','2020-05-05 07:10:35','2020-05-05 07:10:35','2020-05-05 07:10:35'),(1569,37,NULL,'106.11.159.220','2020-05-05 08:52:23','2020-05-05 08:52:23','2020-05-05 08:52:23'),(1570,41,NULL,'172.19.0.5','2020-05-05 13:59:56','2020-05-05 13:59:56','2020-05-05 13:59:56'),(1571,52,NULL,'172.19.0.5','2020-05-05 14:55:13','2020-05-05 14:55:13','2020-05-05 14:55:13'),(1572,41,NULL,'172.19.0.5','2020-05-05 14:55:14','2020-05-05 14:55:14','2020-05-05 14:55:14'),(1573,14,NULL,'172.19.0.5','2020-05-05 14:55:18','2020-05-05 14:55:18','2020-05-05 14:55:18'),(1574,52,NULL,'172.19.0.5','2020-05-05 14:55:22','2020-05-05 14:55:22','2020-05-05 14:55:22'),(1575,41,NULL,'172.19.0.5','2020-05-05 14:55:25','2020-05-05 14:55:25','2020-05-05 14:55:25'),(1576,14,NULL,'172.19.0.5','2020-05-05 14:55:27','2020-05-05 14:55:27','2020-05-05 14:55:27'),(1577,93,NULL,'172.19.0.5','2020-05-05 14:55:28','2020-05-05 14:55:28','2020-05-05 14:55:28'),(1578,93,NULL,'172.19.0.5','2020-05-05 14:55:33','2020-05-05 14:55:33','2020-05-05 14:55:33'),(1579,91,NULL,'172.19.0.5','2020-05-05 14:55:38','2020-05-05 14:55:38','2020-05-05 14:55:38'),(1580,91,NULL,'172.19.0.5','2020-05-05 14:55:39','2020-05-05 14:55:39','2020-05-05 14:55:39'),(1581,90,NULL,'172.19.0.5','2020-05-05 14:55:40','2020-05-05 14:55:40','2020-05-05 14:55:40'),(1582,90,NULL,'172.19.0.5','2020-05-05 14:55:42','2020-05-05 14:55:42','2020-05-05 14:55:42'),(1583,89,NULL,'172.19.0.5','2020-05-05 14:55:43','2020-05-05 14:55:43','2020-05-05 14:55:43'),(1584,89,NULL,'172.19.0.5','2020-05-05 14:55:45','2020-05-05 14:55:45','2020-05-05 14:55:45'),(1585,88,NULL,'172.19.0.5','2020-05-05 14:55:46','2020-05-05 14:55:46','2020-05-05 14:55:46'),(1586,88,NULL,'172.19.0.5','2020-05-05 14:55:48','2020-05-05 14:55:48','2020-05-05 14:55:48'),(1587,72,NULL,'172.19.0.5','2020-05-05 14:55:50','2020-05-05 14:55:50','2020-05-05 14:55:50'),(1588,72,NULL,'172.19.0.5','2020-05-05 14:55:51','2020-05-05 14:55:51','2020-05-05 14:55:51'),(1589,65,NULL,'172.19.0.5','2020-05-05 14:55:52','2020-05-05 14:55:52','2020-05-05 14:55:52'),(1590,65,NULL,'172.19.0.5','2020-05-05 14:55:53','2020-05-05 14:55:53','2020-05-05 14:55:53'),(1591,27,NULL,'172.19.0.5','2020-05-05 14:56:13','2020-05-05 14:56:13','2020-05-05 14:56:13'),(1592,21,NULL,'172.19.0.5','2020-05-05 14:56:14','2020-05-05 14:56:14','2020-05-05 14:56:14'),(1593,37,NULL,'172.19.0.5','2020-05-05 14:56:16','2020-05-05 14:56:16','2020-05-05 14:56:16'),(1594,45,NULL,'172.19.0.5','2020-05-05 14:56:19','2020-05-05 14:56:19','2020-05-05 14:56:19'),(1595,32,NULL,'172.19.0.5','2020-05-05 14:56:20','2020-05-05 14:56:20','2020-05-05 14:56:20'),(1596,46,NULL,'172.19.0.5','2020-05-05 14:56:21','2020-05-05 14:56:21','2020-05-05 14:56:21'),(1597,44,NULL,'172.19.0.5','2020-05-05 14:56:23','2020-05-05 14:56:23','2020-05-05 14:56:23'),(1598,50,NULL,'172.19.0.5','2020-05-05 14:56:25','2020-05-05 14:56:25','2020-05-05 14:56:25'),(1599,47,NULL,'172.19.0.5','2020-05-05 14:56:47','2020-05-05 14:56:47','2020-05-05 14:56:47'),(1600,23,NULL,'172.19.0.5','2020-05-05 14:56:49','2020-05-05 14:56:49','2020-05-05 14:56:49'),(1601,15,NULL,'172.19.0.5','2020-05-05 14:56:51','2020-05-05 14:56:51','2020-05-05 14:56:51'),(1602,28,NULL,'172.19.0.5','2020-05-05 14:56:52','2020-05-05 14:56:52','2020-05-05 14:56:52'),(1603,31,NULL,'172.19.0.5','2020-05-05 14:56:54','2020-05-05 14:56:54','2020-05-05 14:56:54'),(1604,48,NULL,'172.19.0.5','2020-05-05 14:57:01','2020-05-05 14:57:01','2020-05-05 14:57:01'),(1605,42,NULL,'172.19.0.5','2020-05-05 14:57:04','2020-05-05 14:57:04','2020-05-05 14:57:04'),(1606,47,NULL,'172.19.0.5','2020-05-05 14:57:05','2020-05-05 14:57:05','2020-05-05 14:57:05'),(1607,46,NULL,'172.19.0.5','2020-05-05 14:57:07','2020-05-05 14:57:07','2020-05-05 14:57:07'),(1608,44,NULL,'172.19.0.5','2020-05-05 14:57:08','2020-05-05 14:57:08','2020-05-05 14:57:08'),(1609,43,NULL,'172.19.0.5','2020-05-05 14:57:10','2020-05-05 14:57:10','2020-05-05 14:57:10'),(1610,43,NULL,'172.19.0.5','2020-05-05 14:57:12','2020-05-05 14:57:12','2020-05-05 14:57:12'),(1611,42,NULL,'172.19.0.5','2020-05-05 14:57:14','2020-05-05 14:57:14','2020-05-05 14:57:14'),(1612,37,NULL,'172.19.0.5','2020-05-05 14:57:15','2020-05-05 14:57:15','2020-05-05 14:57:15'),(1613,35,NULL,'172.19.0.5','2020-05-05 14:57:18','2020-05-05 14:57:18','2020-05-05 14:57:18'),(1614,33,NULL,'172.19.0.5','2020-05-05 14:57:20','2020-05-05 14:57:20','2020-05-05 14:57:20'),(1615,36,NULL,'172.19.0.5','2020-05-05 14:57:21','2020-05-05 14:57:21','2020-05-05 14:57:21'),(1616,23,NULL,'172.19.0.5','2020-05-05 14:57:25','2020-05-05 14:57:25','2020-05-05 14:57:25'),(1617,50,NULL,'172.19.0.5','2020-05-05 14:57:25','2020-05-05 14:57:25','2020-05-05 14:57:25'),(1618,49,NULL,'172.19.0.5','2020-05-05 14:57:29','2020-05-05 14:57:29','2020-05-05 14:57:29'),(1619,49,NULL,'172.19.0.5','2020-05-05 14:57:30','2020-05-05 14:57:30','2020-05-05 14:57:30'),(1620,48,NULL,'172.19.0.5','2020-05-05 14:57:32','2020-05-05 14:57:32','2020-05-05 14:57:32'),(1621,45,NULL,'172.19.0.5','2020-05-05 14:57:36','2020-05-05 14:57:36','2020-05-05 14:57:36'),(1622,33,NULL,'172.19.0.5','2020-05-05 14:57:37','2020-05-05 14:57:37','2020-05-05 14:57:37'),(1623,32,NULL,'172.19.0.5','2020-05-05 14:57:41','2020-05-05 14:57:41','2020-05-05 14:57:41'),(1624,15,NULL,'172.19.0.5','2020-05-05 14:57:41','2020-05-05 14:57:41','2020-05-05 14:57:41'),(1625,1,NULL,'172.19.0.5','2020-05-05 14:57:43','2020-05-05 14:57:43','2020-05-05 14:57:43'),(1626,23,NULL,'172.19.0.5','2020-05-05 15:14:40','2020-05-05 15:14:40','2020-05-05 15:14:40'),(1627,41,NULL,'172.19.0.5','2020-05-06 09:44:09','2020-05-06 09:44:09','2020-05-06 09:44:09'),(1628,45,NULL,'172.19.0.5','2020-05-06 16:58:08','2020-05-06 16:58:08','2020-05-06 16:58:08'),(1629,65,NULL,'172.19.0.5','2020-05-06 20:24:00','2020-05-06 20:24:00','2020-05-06 20:24:00'),(1630,48,NULL,'172.19.0.5','2020-05-07 04:56:20','2020-05-07 04:56:20','2020-05-07 04:56:20'),(1631,52,NULL,'172.19.0.5','2020-05-07 05:01:21','2020-05-07 05:01:21','2020-05-07 05:01:21'),(1632,1,NULL,'172.19.0.5','2020-05-07 05:01:45','2020-05-07 05:01:45','2020-05-07 05:01:45'),(1633,44,NULL,'172.19.0.5','2020-05-07 05:02:09','2020-05-07 05:02:09','2020-05-07 05:02:09'),(1634,46,NULL,'172.19.0.5','2020-05-07 05:02:31','2020-05-07 05:02:31','2020-05-07 05:02:31'),(1635,46,NULL,'172.19.0.5','2020-05-07 05:02:34','2020-05-07 05:02:34','2020-05-07 05:02:34'),(1636,47,NULL,'172.19.0.5','2020-05-07 05:04:02','2020-05-07 05:04:02','2020-05-07 05:04:02'),(1637,49,NULL,'172.19.0.5','2020-05-07 05:04:25','2020-05-07 05:04:25','2020-05-07 05:04:25'),(1638,14,NULL,'172.19.0.5','2020-05-07 05:04:47','2020-05-07 05:04:47','2020-05-07 05:04:47'),(1639,50,NULL,'172.19.0.5','2020-05-07 05:05:12','2020-05-07 05:05:12','2020-05-07 05:05:12'),(1640,43,NULL,'172.19.0.5','2020-05-07 05:05:33','2020-05-07 05:05:33','2020-05-07 05:05:33'),(1641,32,NULL,'42.156.136.31','2020-05-07 05:56:55','2020-05-07 05:56:55','2020-05-07 05:56:55'),(1642,23,NULL,'172.19.0.5','2020-05-07 07:29:23','2020-05-07 07:29:23','2020-05-07 07:29:23'),(1643,1,NULL,'172.19.0.5','2020-05-07 10:50:13','2020-05-07 10:50:13','2020-05-07 10:50:13'),(1644,23,NULL,'172.19.0.5','2020-05-07 12:58:39','2020-05-07 12:58:39','2020-05-07 12:58:39'),(1645,1,NULL,'172.19.0.5','2020-05-08 00:09:39','2020-05-08 00:09:39','2020-05-08 00:09:39'),(1646,72,NULL,'172.19.0.5','2020-05-08 05:21:28','2020-05-08 05:21:28','2020-05-08 05:21:28'),(1647,52,NULL,'172.19.0.5','2020-05-08 10:59:13','2020-05-08 10:59:13','2020-05-08 10:59:13'),(1648,32,NULL,'172.19.0.5','2020-05-08 12:39:36','2020-05-08 12:39:36','2020-05-08 12:39:36'),(1649,42,NULL,'172.19.0.5','2020-05-08 12:56:07','2020-05-08 12:56:07','2020-05-08 12:56:07'),(1650,42,NULL,'172.19.0.5','2020-05-08 18:58:53','2020-05-08 18:58:53','2020-05-08 18:58:53'),(1651,50,NULL,'172.19.0.5','2020-05-08 21:26:51','2020-05-08 21:26:51','2020-05-08 21:26:51'),(1652,28,NULL,'172.19.0.5','2020-05-08 21:47:12','2020-05-08 21:47:12','2020-05-08 21:47:12'),(1653,43,NULL,'172.19.0.5','2020-05-08 22:07:32','2020-05-08 22:07:32','2020-05-08 22:07:32'),(1654,41,NULL,'172.19.0.5','2020-05-09 01:33:11','2020-05-09 01:33:11','2020-05-09 01:33:11'),(1655,14,NULL,'172.19.0.5','2020-05-10 02:22:15','2020-05-10 02:22:15','2020-05-10 02:22:15'),(1656,31,NULL,'172.19.0.5','2020-05-10 04:41:59','2020-05-10 04:41:59','2020-05-10 04:41:59'),(1657,14,NULL,'172.19.0.5','2020-05-10 13:13:20','2020-05-10 13:13:20','2020-05-10 13:13:20'),(1658,23,NULL,'203.208.60.70','2020-05-10 13:23:35','2020-05-10 13:23:35','2020-05-10 13:23:35'),(1659,31,NULL,'172.19.0.5','2020-05-10 15:15:28','2020-05-10 15:15:28','2020-05-10 15:15:28'),(1660,14,NULL,'172.19.0.5','2020-05-10 16:15:45','2020-05-10 16:15:45','2020-05-10 16:15:45'),(1661,44,NULL,'172.19.0.5','2020-05-10 17:17:47','2020-05-10 17:17:47','2020-05-10 17:17:47'),(1662,45,NULL,'172.19.0.5','2020-05-10 19:15:14','2020-05-10 19:15:14','2020-05-10 19:15:14'),(1663,14,NULL,'172.19.0.5','2020-05-11 01:01:28','2020-05-11 01:01:28','2020-05-11 01:01:28'),(1664,23,NULL,'203.208.60.106','2020-05-11 05:55:20','2020-05-11 05:55:20','2020-05-11 05:55:20'),(1665,14,NULL,'172.19.0.5','2020-05-11 09:15:58','2020-05-11 09:15:58','2020-05-11 09:15:58'),(1666,52,NULL,'172.19.0.5','2020-05-11 10:50:45','2020-05-11 10:50:45','2020-05-11 10:50:45'),(1667,52,NULL,'172.19.0.5','2020-05-11 10:51:04','2020-05-11 10:51:04','2020-05-11 10:51:04'),(1668,52,NULL,'172.19.0.5','2020-05-11 10:51:13','2020-05-11 10:51:13','2020-05-11 10:51:13'),(1669,52,NULL,'172.19.0.5','2020-05-11 10:51:20','2020-05-11 10:51:20','2020-05-11 10:51:20'),(1670,65,NULL,'172.19.0.5','2020-05-11 11:49:47','2020-05-11 11:49:47','2020-05-11 11:49:47'),(1671,52,NULL,'172.19.0.5','2020-05-11 21:47:56','2020-05-11 21:47:56','2020-05-11 21:47:56'),(1672,52,NULL,'172.19.0.5','2020-05-11 21:57:25','2020-05-11 21:57:25','2020-05-11 21:57:25'),(1673,23,NULL,'172.19.0.5','2020-05-12 04:10:01','2020-05-12 04:10:01','2020-05-12 04:10:01'),(1674,28,NULL,'172.19.0.5','2020-05-12 11:46:29','2020-05-12 11:46:29','2020-05-12 11:46:29'),(1675,52,NULL,'172.19.0.5','2020-05-12 12:01:59','2020-05-12 12:01:59','2020-05-12 12:01:59'),(1676,23,NULL,'172.19.0.5','2020-05-12 15:55:56','2020-05-12 15:55:56','2020-05-12 15:55:56'),(1677,14,NULL,'172.19.0.5','2020-05-12 23:25:28','2020-05-12 23:25:28','2020-05-12 23:25:28'),(1678,42,NULL,'172.19.0.5','2020-05-13 03:00:36','2020-05-13 03:00:36','2020-05-13 03:00:36'),(1679,90,NULL,'172.19.0.5','2020-05-13 18:07:21','2020-05-13 18:07:21','2020-05-13 18:07:21'),(1680,89,NULL,'172.19.0.5','2020-05-13 20:41:40','2020-05-13 20:41:40','2020-05-13 20:41:40'),(1681,90,NULL,'172.19.0.5','2020-05-13 20:41:42','2020-05-13 20:41:42','2020-05-13 20:41:42'),(1682,91,NULL,'172.19.0.5','2020-05-13 20:41:45','2020-05-13 20:41:45','2020-05-13 20:41:45'),(1683,93,NULL,'172.19.0.5','2020-05-13 20:41:47','2020-05-13 20:41:47','2020-05-13 20:41:47'),(1684,21,NULL,'172.19.0.5','2020-05-14 00:00:54','2020-05-14 00:00:54','2020-05-14 00:00:54'),(1685,32,NULL,'172.19.0.5','2020-05-14 00:28:08','2020-05-14 00:28:08','2020-05-14 00:28:08'),(1686,42,NULL,'172.19.0.5','2020-05-14 01:01:07','2020-05-14 01:01:07','2020-05-14 01:01:07'),(1687,37,NULL,'172.19.0.5','2020-05-14 01:07:15','2020-05-14 01:07:15','2020-05-14 01:07:15'),(1688,94,NULL,'172.19.0.5','2020-05-14 02:09:47','2020-05-14 02:09:47','2020-05-14 02:09:47'),(1689,50,NULL,'172.19.0.5','2020-05-14 02:44:23','2020-05-14 02:44:23','2020-05-14 02:44:23'),(1690,42,NULL,'172.19.0.5','2020-05-14 03:54:06','2020-05-14 03:54:06','2020-05-14 03:54:06'),(1691,88,NULL,'172.19.0.5','2020-05-14 09:08:07','2020-05-14 09:08:07','2020-05-14 09:08:07'),(1692,65,NULL,'172.19.0.5','2020-05-14 11:17:16','2020-05-14 11:17:16','2020-05-14 11:17:16'),(1693,27,NULL,'172.19.0.5','2020-05-14 13:31:40','2020-05-14 13:31:40','2020-05-14 13:31:40'),(1694,45,NULL,'172.19.0.5','2020-05-14 15:37:00','2020-05-14 15:37:00','2020-05-14 15:37:00'),(1695,43,NULL,'172.19.0.5','2020-05-14 16:12:34','2020-05-14 16:12:34','2020-05-14 16:12:34'),(1696,52,NULL,'172.19.0.5','2020-05-14 16:17:36','2020-05-14 16:17:36','2020-05-14 16:17:36'),(1697,52,NULL,'172.19.0.5','2020-05-14 16:18:41','2020-05-14 16:18:41','2020-05-14 16:18:41'),(1698,90,NULL,'172.19.0.5','2020-05-14 16:28:58','2020-05-14 16:28:58','2020-05-14 16:28:58'),(1699,89,NULL,'172.19.0.5','2020-05-14 16:30:32','2020-05-14 16:30:32','2020-05-14 16:30:32'),(1700,21,NULL,'220.181.108.143','2020-05-14 19:16:38','2020-05-14 19:16:38','2020-05-14 19:16:38'),(1701,96,NULL,'172.19.0.5','2020-05-14 21:36:34','2020-05-14 21:36:34','2020-05-14 21:36:34'),(1702,42,NULL,'172.19.0.5','2020-05-14 22:58:56','2020-05-14 22:58:56','2020-05-14 22:58:56'),(1703,42,NULL,'172.19.0.5','2020-05-15 01:51:05','2020-05-15 01:51:05','2020-05-15 01:51:05'),(1704,42,NULL,'172.19.0.5','2020-05-15 04:06:17','2020-05-15 04:06:17','2020-05-15 04:06:17'),(1705,99,NULL,'172.19.0.5','2020-05-15 08:09:49','2020-05-15 08:09:49','2020-05-15 08:09:49'),(1706,98,NULL,'172.19.0.5','2020-05-15 09:16:33','2020-05-15 09:16:33','2020-05-15 09:16:33'),(1707,21,NULL,'172.19.0.5','2020-05-15 12:37:56','2020-05-15 12:37:56','2020-05-15 12:37:56'),(1708,42,NULL,'172.19.0.5','2020-05-15 12:38:00','2020-05-15 12:38:00','2020-05-15 12:38:00'),(1709,21,NULL,'172.19.0.5','2020-05-15 15:11:51','2020-05-15 15:11:51','2020-05-15 15:11:51'),(1710,23,NULL,'172.19.0.5','2020-05-15 21:50:46','2020-05-15 21:50:46','2020-05-15 21:50:46'),(1711,98,NULL,'172.19.0.5','2020-05-15 22:11:15','2020-05-15 22:11:15','2020-05-15 22:11:15'),(1712,99,NULL,'172.19.0.5','2020-05-15 23:12:33','2020-05-15 23:12:33','2020-05-15 23:12:33'),(1713,41,NULL,'220.181.108.160','2020-05-16 01:46:36','2020-05-16 01:46:36','2020-05-16 01:46:36'),(1714,42,NULL,'172.19.0.5','2020-05-16 01:47:40','2020-05-16 01:47:40','2020-05-16 01:47:40'),(1715,21,NULL,'172.19.0.5','2020-05-16 02:39:48','2020-05-16 02:39:48','2020-05-16 02:39:48'),(1716,99,NULL,'172.19.0.5','2020-05-16 13:06:02','2020-05-16 13:06:02','2020-05-16 13:06:02'),(1717,98,NULL,'172.19.0.5','2020-05-16 13:06:59','2020-05-16 13:06:59','2020-05-16 13:06:59'),(1718,94,NULL,'172.19.0.5','2020-05-16 13:17:20','2020-05-16 13:17:20','2020-05-16 13:17:20'),(1719,28,NULL,'172.19.0.5','2020-05-16 16:40:24','2020-05-16 16:40:24','2020-05-16 16:40:24'),(1720,32,NULL,'172.19.0.5','2020-05-16 16:40:39','2020-05-16 16:40:39','2020-05-16 16:40:39'),(1721,99,NULL,'172.19.0.5','2020-05-16 16:40:43','2020-05-16 16:40:43','2020-05-16 16:40:43'),(1722,98,NULL,'172.19.0.5','2020-05-16 16:40:51','2020-05-16 16:40:51','2020-05-16 16:40:51'),(1724,104,NULL,'172.19.0.5','2020-05-16 17:03:46','2020-05-16 17:03:46','2020-05-16 17:03:46'),(1725,104,NULL,'172.19.0.5','2020-05-16 17:06:29','2020-05-16 17:06:29','2020-05-16 17:06:29'),(1726,104,NULL,'172.19.0.5','2020-05-16 17:07:47','2020-05-16 17:07:47','2020-05-16 17:07:47'),(1727,100,NULL,'172.19.0.5','2020-05-16 17:26:00','2020-05-16 17:26:00','2020-05-16 17:26:00'),(1728,101,NULL,'172.19.0.5','2020-05-16 17:27:35','2020-05-16 17:27:35','2020-05-16 17:27:35'),(1729,101,NULL,'172.19.0.5','2020-05-16 17:37:50','2020-05-16 17:37:50','2020-05-16 17:37:50'),(1730,97,NULL,'172.19.0.5','2020-05-17 04:08:58','2020-05-17 04:08:58','2020-05-17 04:08:58'),(1731,95,NULL,'172.19.0.5','2020-05-17 04:11:16','2020-05-17 04:11:16','2020-05-17 04:11:16'),(1732,96,NULL,'172.19.0.5','2020-05-17 04:12:25','2020-05-17 04:12:25','2020-05-17 04:12:25'),(1733,104,NULL,'172.19.0.5','2020-05-17 04:14:25','2020-05-17 04:14:25','2020-05-17 04:14:25'),(1734,101,NULL,'172.19.0.5','2020-05-17 04:15:55','2020-05-17 04:15:55','2020-05-17 04:15:55'),(1735,100,NULL,'172.19.0.5','2020-05-17 04:18:03','2020-05-17 04:18:03','2020-05-17 04:18:03'),(1736,90,NULL,'172.19.0.5','2020-05-17 04:22:04','2020-05-17 04:22:04','2020-05-17 04:22:04'),(1737,42,NULL,'172.19.0.5','2020-05-17 05:43:11','2020-05-17 05:43:11','2020-05-17 05:43:11'),(1738,93,NULL,'172.19.0.5','2020-05-17 07:32:21','2020-05-17 07:32:21','2020-05-17 07:32:21'),(1739,46,NULL,'172.19.0.5','2020-05-17 09:36:14','2020-05-17 09:36:14','2020-05-17 09:36:14'),(1740,52,NULL,'172.19.0.5','2020-05-17 13:58:20','2020-05-17 13:58:20','2020-05-17 13:58:20'),(1741,105,NULL,'172.19.0.5','2020-05-17 15:34:24','2020-05-17 15:34:24','2020-05-17 15:34:24'),(1742,52,NULL,'172.19.0.5','2020-05-17 15:40:49','2020-05-17 15:40:49','2020-05-17 15:40:49'),(1743,105,NULL,'172.19.0.5','2020-05-17 15:49:59','2020-05-17 15:49:59','2020-05-17 15:49:59'),(1744,105,NULL,'172.19.0.5','2020-05-17 15:56:07','2020-05-17 15:56:07','2020-05-17 15:56:07'),(1745,52,NULL,'172.19.0.5','2020-05-17 15:59:02','2020-05-17 15:59:02','2020-05-17 15:59:02'),(1746,105,NULL,'172.19.0.5','2020-05-17 15:59:12','2020-05-17 15:59:12','2020-05-17 15:59:12'),(1747,42,NULL,'172.19.0.5','2020-05-17 16:08:05','2020-05-17 16:08:05','2020-05-17 16:08:05'),(1748,106,NULL,'172.19.0.5','2020-05-17 16:22:15','2020-05-17 16:22:15','2020-05-17 16:22:15'),(1749,105,NULL,'172.19.0.5','2020-05-17 16:23:28','2020-05-17 16:23:28','2020-05-17 16:23:28'),(1750,23,NULL,'172.19.0.5','2020-05-17 17:26:08','2020-05-17 17:26:08','2020-05-17 17:26:08'),(1751,42,NULL,'172.19.0.5','2020-05-18 05:04:47','2020-05-18 05:04:47','2020-05-18 05:04:47'),(1752,98,NULL,'172.19.0.5','2020-05-18 09:46:06','2020-05-18 09:46:06','2020-05-18 09:46:06'),(1753,15,NULL,'172.19.0.5','2020-05-18 09:49:33','2020-05-18 09:49:33','2020-05-18 09:49:33'),(1754,100,NULL,'172.19.0.5','2020-05-18 09:51:16','2020-05-18 09:51:16','2020-05-18 09:51:16'),(1755,106,NULL,'172.19.0.5','2020-05-18 12:34:09','2020-05-18 12:34:09','2020-05-18 12:34:09'),(1756,105,NULL,'172.19.0.5','2020-05-18 12:36:08','2020-05-18 12:36:08','2020-05-18 12:36:08'),(1757,14,NULL,'172.19.0.5','2020-05-18 14:10:28','2020-05-18 14:10:28','2020-05-18 14:10:28'),(1758,72,NULL,'172.19.0.5','2020-05-18 17:21:09','2020-05-18 17:21:09','2020-05-18 17:21:09'),(1759,23,NULL,'203.208.60.87','2020-05-18 17:41:18','2020-05-18 17:41:18','2020-05-18 17:41:18'),(1760,45,NULL,'172.19.0.5','2020-05-18 22:52:26','2020-05-18 22:52:26','2020-05-18 22:52:26'),(1761,44,NULL,'172.19.0.5','2020-05-18 22:52:29','2020-05-18 22:52:29','2020-05-18 22:52:29'),(1762,41,NULL,'172.19.0.5','2020-05-18 22:52:30','2020-05-18 22:52:30','2020-05-18 22:52:30'),(1763,89,NULL,'172.19.0.5','2020-05-18 22:52:32','2020-05-18 22:52:32','2020-05-18 22:52:32'),(1764,88,NULL,'172.19.0.5','2020-05-18 22:52:33','2020-05-18 22:52:33','2020-05-18 22:52:33'),(1765,33,NULL,'172.19.0.5','2020-05-18 22:52:36','2020-05-18 22:52:36','2020-05-18 22:52:36'),(1766,106,NULL,'172.19.0.5','2020-05-18 22:52:51','2020-05-18 22:52:51','2020-05-18 22:52:51'),(1767,105,NULL,'172.19.0.5','2020-05-18 22:52:54','2020-05-18 22:52:54','2020-05-18 22:52:54'),(1768,104,NULL,'172.19.0.5','2020-05-18 22:52:58','2020-05-18 22:52:58','2020-05-18 22:52:58'),(1769,101,NULL,'172.19.0.5','2020-05-18 22:53:01','2020-05-18 22:53:01','2020-05-18 22:53:01'),(1770,100,NULL,'172.19.0.5','2020-05-18 22:53:02','2020-05-18 22:53:02','2020-05-18 22:53:02'),(1771,14,NULL,'172.19.0.5','2020-05-18 22:53:03','2020-05-18 22:53:03','2020-05-18 22:53:03'),(1772,52,NULL,'172.19.0.5','2020-05-18 22:53:05','2020-05-18 22:53:05','2020-05-18 22:53:05'),(1773,99,NULL,'172.19.0.5','2020-05-18 22:53:07','2020-05-18 22:53:07','2020-05-18 22:53:07'),(1774,98,NULL,'172.19.0.5','2020-05-18 22:53:09','2020-05-18 22:53:09','2020-05-18 22:53:09'),(1775,97,NULL,'172.19.0.5','2020-05-18 22:53:11','2020-05-18 22:53:11','2020-05-18 22:53:11'),(1776,91,NULL,'172.19.0.5','2020-05-18 22:53:12','2020-05-18 22:53:12','2020-05-18 22:53:12'),(1777,90,NULL,'172.19.0.5','2020-05-18 22:53:22','2020-05-18 22:53:22','2020-05-18 22:53:22'),(1778,47,NULL,'172.19.0.5','2020-05-18 22:53:24','2020-05-18 22:53:24','2020-05-18 22:53:24'),(1779,43,NULL,'172.19.0.5','2020-05-18 22:53:26','2020-05-18 22:53:26','2020-05-18 22:53:26'),(1780,42,NULL,'172.19.0.5','2020-05-18 22:53:28','2020-05-18 22:53:28','2020-05-18 22:53:28'),(1781,96,NULL,'172.19.0.5','2020-05-18 22:53:30','2020-05-18 22:53:30','2020-05-18 22:53:30'),(1782,65,NULL,'172.19.0.5','2020-05-18 22:53:31','2020-05-18 22:53:31','2020-05-18 22:53:31'),(1783,37,NULL,'172.19.0.5','2020-05-18 22:53:33','2020-05-18 22:53:33','2020-05-18 22:53:33'),(1784,32,NULL,'172.19.0.5','2020-05-18 22:53:35','2020-05-18 22:53:35','2020-05-18 22:53:35'),(1785,50,NULL,'172.19.0.5','2020-05-18 22:53:36','2020-05-18 22:53:36','2020-05-18 22:53:36'),(1786,21,NULL,'172.19.0.5','2020-05-18 22:53:38','2020-05-18 22:53:38','2020-05-18 22:53:38'),(1787,72,NULL,'172.19.0.5','2020-05-18 22:53:39','2020-05-18 22:53:39','2020-05-18 22:53:39'),(1788,95,NULL,'172.19.0.5','2020-05-18 22:53:41','2020-05-18 22:53:41','2020-05-18 22:53:41'),(1789,94,NULL,'172.19.0.5','2020-05-18 22:53:42','2020-05-18 22:53:42','2020-05-18 22:53:42'),(1790,48,NULL,'172.19.0.5','2020-05-18 22:53:44','2020-05-18 22:53:44','2020-05-18 22:53:44'),(1791,15,NULL,'172.19.0.5','2020-05-18 22:53:45','2020-05-18 22:53:45','2020-05-18 22:53:45'),(1792,31,NULL,'172.19.0.5','2020-05-18 22:53:47','2020-05-18 22:53:47','2020-05-18 22:53:47'),(1793,28,NULL,'172.19.0.5','2020-05-18 22:53:48','2020-05-18 22:53:48','2020-05-18 22:53:48'),(1794,36,NULL,'172.19.0.5','2020-05-18 22:53:50','2020-05-18 22:53:50','2020-05-18 22:53:50'),(1795,35,NULL,'172.19.0.5','2020-05-18 22:53:52','2020-05-18 22:53:52','2020-05-18 22:53:52'),(1796,49,NULL,'172.19.0.5','2020-05-18 22:53:54','2020-05-18 22:53:54','2020-05-18 22:53:54'),(1797,93,NULL,'172.19.0.5','2020-05-18 22:53:55','2020-05-18 22:53:55','2020-05-18 22:53:55'),(1798,46,NULL,'172.19.0.5','2020-05-18 22:53:57','2020-05-18 22:53:57','2020-05-18 22:53:57'),(1799,27,NULL,'172.19.0.5','2020-05-18 22:53:58','2020-05-18 22:53:58','2020-05-18 22:53:58'),(1800,23,NULL,'172.19.0.5','2020-05-18 22:54:00','2020-05-18 22:54:00','2020-05-18 22:54:00'),(1801,1,NULL,'172.19.0.5','2020-05-18 22:54:02','2020-05-18 22:54:02','2020-05-18 22:54:02'),(1802,43,NULL,'42.120.160.74','2020-05-19 03:06:19','2020-05-19 03:06:19','2020-05-19 03:06:19'),(1803,52,NULL,'172.19.0.5','2020-05-19 04:28:00','2020-05-19 04:28:00','2020-05-19 04:28:00'),(1804,1,NULL,'172.19.0.5','2020-05-19 04:28:23','2020-05-19 04:28:23','2020-05-19 04:28:23'),(1805,44,NULL,'172.19.0.5','2020-05-19 04:29:33','2020-05-19 04:29:33','2020-05-19 04:29:33'),(1806,46,NULL,'172.19.0.5','2020-05-19 04:29:57','2020-05-19 04:29:57','2020-05-19 04:29:57'),(1807,47,NULL,'172.19.0.5','2020-05-19 04:30:19','2020-05-19 04:30:19','2020-05-19 04:30:19'),(1808,49,NULL,'172.19.0.5','2020-05-19 04:33:33','2020-05-19 04:33:33','2020-05-19 04:33:33'),(1809,14,NULL,'172.19.0.5','2020-05-19 04:33:56','2020-05-19 04:33:56','2020-05-19 04:33:56'),(1810,48,NULL,'172.19.0.5','2020-05-19 04:37:22','2020-05-19 04:37:22','2020-05-19 04:37:22'),(1811,50,NULL,'172.19.0.5','2020-05-19 04:41:26','2020-05-19 04:41:26','2020-05-19 04:41:26'),(1812,43,NULL,'172.19.0.5','2020-05-19 04:41:48','2020-05-19 04:41:48','2020-05-19 04:41:48'),(1813,88,NULL,'172.19.0.5','2020-05-19 05:29:42','2020-05-19 05:29:42','2020-05-19 05:29:42'),(1814,45,NULL,'172.19.0.5','2020-05-19 06:38:04','2020-05-19 06:38:04','2020-05-19 06:38:04'),(1815,14,NULL,'172.19.0.5','2020-05-19 08:03:22','2020-05-19 08:03:22','2020-05-19 08:03:22'),(1816,31,NULL,'172.19.0.5','2020-05-19 08:21:38','2020-05-19 08:21:38','2020-05-19 08:21:38'),(1817,96,NULL,'172.19.0.5','2020-05-19 08:22:36','2020-05-19 08:22:36','2020-05-19 08:22:36'),(1818,46,NULL,'172.19.0.5','2020-05-19 08:23:23','2020-05-19 08:23:23','2020-05-19 08:23:23'),(1819,43,NULL,'172.19.0.5','2020-05-19 08:34:41','2020-05-19 08:34:41','2020-05-19 08:34:41'),(1820,35,NULL,'172.19.0.5','2020-05-19 09:10:14','2020-05-19 09:10:14','2020-05-19 09:10:14'),(1821,42,NULL,'172.19.0.5','2020-05-19 09:46:08','2020-05-19 09:46:08','2020-05-19 09:46:08'),(1822,28,NULL,'172.19.0.5','2020-05-19 09:47:01','2020-05-19 09:47:01','2020-05-19 09:47:01'),(1823,44,NULL,'172.19.0.5','2020-05-19 09:47:54','2020-05-19 09:47:54','2020-05-19 09:47:54'),(1824,37,NULL,'172.19.0.5','2020-05-19 10:08:26','2020-05-19 10:08:26','2020-05-19 10:08:26'),(1825,36,NULL,'172.19.0.5','2020-05-19 10:19:53','2020-05-19 10:19:53','2020-05-19 10:19:53'),(1826,32,NULL,'172.19.0.5','2020-05-19 10:23:48','2020-05-19 10:23:48','2020-05-19 10:23:48'),(1827,21,NULL,'172.19.0.5','2020-05-19 10:25:54','2020-05-19 10:25:54','2020-05-19 10:25:54'),(1828,99,NULL,'172.19.0.5','2020-05-19 18:51:24','2020-05-19 18:51:24','2020-05-19 18:51:24'),(1829,99,NULL,'172.19.0.5','2020-05-19 23:20:50','2020-05-19 23:20:50','2020-05-19 23:20:50'),(1830,33,NULL,'172.19.0.5','2020-05-20 06:33:44','2020-05-20 06:33:44','2020-05-20 06:33:44'),(1831,49,NULL,'42.156.136.20','2020-05-20 07:24:28','2020-05-20 07:24:28','2020-05-20 07:24:28'),(1832,32,NULL,'172.19.0.5','2020-05-20 13:11:56','2020-05-20 13:11:56','2020-05-20 13:11:56'),(1833,94,NULL,'172.19.0.5','2020-05-20 18:41:23','2020-05-20 18:41:23','2020-05-20 18:41:23'),(1834,100,NULL,'172.19.0.5','2020-05-20 21:39:33','2020-05-20 21:39:33','2020-05-20 21:39:33'),(1835,101,NULL,'172.19.0.5','2020-05-20 21:39:38','2020-05-20 21:39:38','2020-05-20 21:39:38'),(1836,104,NULL,'172.19.0.5','2020-05-20 21:39:41','2020-05-20 21:39:41','2020-05-20 21:39:41'),(1837,105,NULL,'172.19.0.5','2020-05-20 21:40:35','2020-05-20 21:40:35','2020-05-20 21:40:35'),(1838,106,NULL,'172.19.0.5','2020-05-20 21:41:56','2020-05-20 21:41:56','2020-05-20 21:41:56'),(1839,97,NULL,'172.19.0.5','2020-05-20 21:41:59','2020-05-20 21:41:59','2020-05-20 21:41:59'),(1840,98,NULL,'172.19.0.5','2020-05-20 21:42:03','2020-05-20 21:42:03','2020-05-20 21:42:03'),(1841,99,NULL,'172.19.0.5','2020-05-20 21:42:15','2020-05-20 21:42:15','2020-05-20 21:42:15'),(1842,90,NULL,'172.19.0.5','2020-05-20 22:05:43','2020-05-20 22:05:43','2020-05-20 22:05:43'),(1843,95,NULL,'172.19.0.5','2020-05-21 00:54:25','2020-05-21 00:54:25','2020-05-21 00:54:25'),(1844,96,NULL,'172.19.0.5','2020-05-21 01:02:56','2020-05-21 01:02:56','2020-05-21 01:02:56'),(1845,95,NULL,'172.19.0.5','2020-05-21 01:09:32','2020-05-21 01:09:32','2020-05-21 01:09:32'),(1846,37,NULL,'42.156.136.98','2020-05-21 02:23:36','2020-05-21 02:23:36','2020-05-21 02:23:36'),(1847,96,NULL,'172.19.0.5','2020-05-21 05:29:09','2020-05-21 05:29:09','2020-05-21 05:29:09'),(1848,98,NULL,'172.19.0.5','2020-05-21 05:29:33','2020-05-21 05:29:33','2020-05-21 05:29:33'),(1849,97,NULL,'172.19.0.5','2020-05-21 05:44:04','2020-05-21 05:44:04','2020-05-21 05:44:04'),(1850,104,NULL,'172.19.0.5','2020-05-21 05:45:42','2020-05-21 05:45:42','2020-05-21 05:45:42'),(1851,100,NULL,'172.19.0.5','2020-05-21 05:45:58','2020-05-21 05:45:58','2020-05-21 05:45:58'),(1852,99,NULL,'172.19.0.5','2020-05-21 05:46:19','2020-05-21 05:46:19','2020-05-21 05:46:19'),(1853,94,NULL,'172.19.0.5','2020-05-21 05:46:40','2020-05-21 05:46:40','2020-05-21 05:46:40'),(1854,106,NULL,'172.19.0.5','2020-05-21 05:48:26','2020-05-21 05:48:26','2020-05-21 05:48:26'),(1855,101,NULL,'172.19.0.5','2020-05-21 05:48:47','2020-05-21 05:48:47','2020-05-21 05:48:47'),(1856,105,NULL,'172.19.0.5','2020-05-21 05:49:08','2020-05-21 05:49:08','2020-05-21 05:49:08'),(1857,97,NULL,'172.19.0.5','2020-05-21 05:53:52','2020-05-21 05:53:52','2020-05-21 05:53:52'),(1858,88,NULL,'172.19.0.5','2020-05-21 07:08:18','2020-05-21 07:08:18','2020-05-21 07:08:18'),(1859,41,NULL,'172.19.0.5','2020-05-21 08:24:16','2020-05-21 08:24:16','2020-05-21 08:24:16'),(1860,48,NULL,'172.19.0.5','2020-05-21 09:19:02','2020-05-21 09:19:02','2020-05-21 09:19:02'),(1861,52,NULL,'172.19.0.5','2020-05-21 16:18:27','2020-05-21 16:18:27','2020-05-21 16:18:27'),(1862,37,NULL,'172.19.0.5','2020-05-21 16:18:29','2020-05-21 16:18:29','2020-05-21 16:18:29'),(1863,100,NULL,'172.19.0.5','2020-05-21 16:18:53','2020-05-21 16:18:53','2020-05-21 16:18:53'),(1864,52,NULL,'172.19.0.5','2020-05-21 16:19:09','2020-05-21 16:19:09','2020-05-21 16:19:09'),(1865,88,NULL,'172.19.0.5','2020-05-21 16:19:17','2020-05-21 16:19:17','2020-05-21 16:19:17'),(1866,52,NULL,'172.19.0.5','2020-05-21 16:19:25','2020-05-21 16:19:25','2020-05-21 16:19:25'),(1867,48,NULL,'172.19.0.5','2020-05-21 16:38:39','2020-05-21 16:38:39','2020-05-21 16:38:39'),(1868,106,NULL,'172.19.0.5','2020-05-21 17:03:06','2020-05-21 17:03:06','2020-05-21 17:03:06'),(1869,108,NULL,'172.19.0.5','2020-05-21 17:08:11','2020-05-21 17:08:11','2020-05-21 17:08:11'),(1870,107,NULL,'172.19.0.5','2020-05-21 17:14:14','2020-05-21 17:14:14','2020-05-21 17:14:14'),(1871,107,NULL,'172.19.0.5','2020-05-21 17:17:52','2020-05-21 17:17:52','2020-05-21 17:17:52'),(1872,109,NULL,'172.19.0.5','2020-05-21 17:23:02','2020-05-21 17:23:02','2020-05-21 17:23:02'),(1873,65,NULL,'172.19.0.4','2020-05-23 06:59:55','2020-05-23 06:59:55','2020-05-23 06:59:55'),(1874,23,NULL,'172.19.0.4','2020-05-23 09:27:27','2020-05-23 09:27:27','2020-05-23 09:27:27'),(1875,27,NULL,'172.19.0.4','2020-05-23 10:00:21','2020-05-23 10:00:21','2020-05-23 10:00:21'),(1876,107,NULL,'172.19.0.4','2020-05-23 12:12:25','2020-05-23 12:12:25','2020-05-23 12:12:25'),(1877,109,NULL,'172.19.0.4','2020-05-23 12:13:57','2020-05-23 12:13:57','2020-05-23 12:13:57'),(1878,108,NULL,'172.19.0.4','2020-05-23 12:16:31','2020-05-23 12:16:31','2020-05-23 12:16:31'),(1879,90,NULL,'172.19.0.4','2020-05-23 17:36:11','2020-05-23 17:36:11','2020-05-23 17:36:11'),(1880,65,NULL,'172.19.0.4','2020-05-23 21:50:37','2020-05-23 21:50:37','2020-05-23 21:50:37'),(1881,33,NULL,'172.19.0.4','2020-05-23 23:25:42','2020-05-23 23:25:42','2020-05-23 23:25:42'),(1882,44,NULL,'172.19.0.4','2020-05-23 23:34:35','2020-05-23 23:34:35','2020-05-23 23:34:35'),(1883,14,NULL,'172.19.0.4','2020-05-24 11:14:07','2020-05-24 11:14:07','2020-05-24 11:14:07'),(1884,31,NULL,'172.19.0.4','2020-05-24 11:14:19','2020-05-24 11:14:19','2020-05-24 11:14:19'),(1885,32,NULL,'172.19.0.4','2020-05-24 11:14:25','2020-05-24 11:14:25','2020-05-24 11:14:25'),(1886,33,NULL,'172.19.0.4','2020-05-24 11:14:33','2020-05-24 11:14:33','2020-05-24 11:14:33'),(1887,35,NULL,'172.19.0.4','2020-05-24 11:14:41','2020-05-24 11:14:41','2020-05-24 11:14:41'),(1888,36,NULL,'172.19.0.4','2020-05-24 11:14:49','2020-05-24 11:14:49','2020-05-24 11:14:49'),(1889,42,NULL,'172.19.0.4','2020-05-24 11:14:56','2020-05-24 11:14:56','2020-05-24 11:14:56'),(1890,43,NULL,'172.19.0.4','2020-05-24 11:15:06','2020-05-24 11:15:06','2020-05-24 11:15:06'),(1891,44,NULL,'172.19.0.4','2020-05-24 11:15:17','2020-05-24 11:15:17','2020-05-24 11:15:17'),(1892,45,NULL,'172.19.0.4','2020-05-24 11:15:29','2020-05-24 11:15:29','2020-05-24 11:15:29'),(1893,46,NULL,'172.19.0.4','2020-05-24 11:15:39','2020-05-24 11:15:39','2020-05-24 11:15:39'),(1894,47,NULL,'172.19.0.4','2020-05-24 11:15:46','2020-05-24 11:15:46','2020-05-24 11:15:46'),(1895,48,NULL,'172.19.0.4','2020-05-24 11:15:52','2020-05-24 11:15:52','2020-05-24 11:15:52'),(1896,49,NULL,'172.19.0.4','2020-05-24 11:16:00','2020-05-24 11:16:00','2020-05-24 11:16:00'),(1897,50,NULL,'172.19.0.4','2020-05-24 11:16:09','2020-05-24 11:16:09','2020-05-24 11:16:09'),(1898,52,NULL,'172.19.0.4','2020-05-24 11:16:18','2020-05-24 11:16:18','2020-05-24 11:16:18'),(1899,88,NULL,'172.19.0.4','2020-05-24 16:26:34','2020-05-24 16:26:34','2020-05-24 16:26:34'),(1900,91,NULL,'172.19.0.4','2020-05-24 16:59:46','2020-05-24 16:59:46','2020-05-24 16:59:46'),(1901,107,NULL,'172.19.0.4','2020-05-24 17:09:34','2020-05-24 17:09:34','2020-05-24 17:09:34'),(1902,108,NULL,'172.19.0.4','2020-05-24 17:09:42','2020-05-24 17:09:42','2020-05-24 17:09:42'),(1903,109,NULL,'172.19.0.4','2020-05-24 17:09:53','2020-05-24 17:09:53','2020-05-24 17:09:53'),(1904,65,NULL,'172.19.0.4','2020-05-24 17:16:33','2020-05-24 17:16:33','2020-05-24 17:16:33'),(1905,105,NULL,'172.19.0.4','2020-05-24 20:53:37','2020-05-24 20:53:37','2020-05-24 20:53:37'),(1906,27,NULL,'172.19.0.4','2020-05-24 22:22:52','2020-05-24 22:22:52','2020-05-24 22:22:52'),(1907,21,NULL,'172.19.0.4','2020-05-25 12:45:52','2020-05-25 12:45:52','2020-05-25 12:45:52'),(1908,23,NULL,'172.19.0.4','2020-05-25 12:46:32','2020-05-25 12:46:32','2020-05-25 12:46:32'),(1909,27,NULL,'172.19.0.4','2020-05-25 12:46:48','2020-05-25 12:46:48','2020-05-25 12:46:48'),(1910,28,NULL,'172.19.0.4','2020-05-25 12:47:03','2020-05-25 12:47:03','2020-05-25 12:47:03'),(1911,37,NULL,'172.19.0.4','2020-05-25 12:47:15','2020-05-25 12:47:15','2020-05-25 12:47:15'),(1912,41,NULL,'172.19.0.4','2020-05-25 12:47:26','2020-05-25 12:47:26','2020-05-25 12:47:26'),(1913,109,NULL,'172.19.0.4','2020-05-25 15:40:27','2020-05-25 15:40:27','2020-05-25 15:40:27'),(1914,48,NULL,'172.19.0.4','2020-05-25 15:41:09','2020-05-25 15:41:09','2020-05-25 15:41:09'),(1915,15,NULL,'172.19.0.4','2020-05-25 16:39:24','2020-05-25 16:39:24','2020-05-25 16:39:24'),(1916,65,NULL,'172.19.0.4','2020-05-26 04:57:32','2020-05-26 04:57:32','2020-05-26 04:57:32'),(1917,109,NULL,'172.19.0.4','2020-05-26 05:28:08','2020-05-26 05:28:08','2020-05-26 05:28:08'),(1918,107,NULL,'172.19.0.4','2020-05-26 05:39:20','2020-05-26 05:39:20','2020-05-26 05:39:20'),(1919,108,NULL,'172.19.0.4','2020-05-26 05:39:42','2020-05-26 05:39:42','2020-05-26 05:39:42'),(1920,65,NULL,'172.19.0.4','2020-05-26 06:04:12','2020-05-26 06:04:12','2020-05-26 06:04:12'),(1921,23,NULL,'172.19.0.4','2020-05-26 08:43:35','2020-05-26 08:43:35','2020-05-26 08:43:35'),(1922,65,NULL,'172.19.0.4','2020-05-26 08:43:48','2020-05-26 08:43:48','2020-05-26 08:43:48'),(1923,110,NULL,'172.19.0.4','2020-05-26 10:54:07','2020-05-26 10:54:07','2020-05-26 10:54:07'),(1924,98,NULL,'172.19.0.4','2020-05-26 10:54:42','2020-05-26 10:54:42','2020-05-26 10:54:42'),(1925,90,NULL,'172.19.0.4','2020-05-26 12:05:25','2020-05-26 12:05:25','2020-05-26 12:05:25'),(1926,110,NULL,'172.19.0.4','2020-05-26 15:15:55','2020-05-26 15:15:55','2020-05-26 15:15:55'),(1927,27,NULL,'172.19.0.4','2020-05-26 18:18:40','2020-05-26 18:18:40','2020-05-26 18:18:40'),(1928,42,NULL,'172.19.0.4','2020-05-26 21:30:43','2020-05-26 21:30:43','2020-05-26 21:30:43'),(1929,65,NULL,'172.19.0.4','2020-05-27 17:18:25','2020-05-27 17:18:25','2020-05-27 17:18:25'),(1930,104,NULL,'172.19.0.4','2020-05-27 17:34:33','2020-05-27 17:34:33','2020-05-27 17:34:33'),(1931,100,NULL,'172.19.0.4','2020-05-27 18:07:53','2020-05-27 18:07:53','2020-05-27 18:07:53'),(1932,72,NULL,'172.19.0.4','2020-05-27 18:40:20','2020-05-27 18:40:20','2020-05-27 18:40:20'),(1933,110,NULL,'172.19.0.4','2020-05-27 18:41:13','2020-05-27 18:41:13','2020-05-27 18:41:13'),(1934,110,NULL,'172.19.0.4','2020-05-27 18:45:27','2020-05-27 18:45:27','2020-05-27 18:45:27'),(1935,109,NULL,'172.19.0.4','2020-05-27 19:14:33','2020-05-27 19:14:33','2020-05-27 19:14:33'),(1936,107,NULL,'172.19.0.4','2020-05-27 19:47:53','2020-05-27 19:47:53','2020-05-27 19:47:53'),(1937,99,NULL,'172.19.0.4','2020-05-27 20:21:13','2020-05-27 20:21:13','2020-05-27 20:21:13'),(1938,106,NULL,'172.19.0.4','2020-05-27 20:28:08','2020-05-27 20:28:08','2020-05-27 20:28:08'),(1939,97,NULL,'172.19.0.4','2020-05-27 20:35:04','2020-05-27 20:35:04','2020-05-27 20:35:04'),(1940,98,NULL,'172.19.0.4','2020-05-27 20:41:59','2020-05-27 20:41:59','2020-05-27 20:41:59'),(1941,101,NULL,'172.19.0.4','2020-05-27 20:48:55','2020-05-27 20:48:55','2020-05-27 20:48:55'),(1942,95,NULL,'172.19.0.4','2020-05-27 20:55:50','2020-05-27 20:55:50','2020-05-27 20:55:50'),(1943,105,NULL,'172.19.0.4','2020-05-27 21:02:45','2020-05-27 21:02:45','2020-05-27 21:02:45'),(1944,108,NULL,'172.19.0.4','2020-05-27 21:09:41','2020-05-27 21:09:41','2020-05-27 21:09:41'),(1945,114,NULL,'172.19.0.4','2020-05-27 22:05:17','2020-05-27 22:05:17','2020-05-27 22:05:17'),(1946,121,NULL,'172.19.0.4','2020-05-27 22:07:16','2020-05-27 22:07:16','2020-05-27 22:07:16'),(1947,117,NULL,'172.19.0.4','2020-05-28 00:23:14','2020-05-28 00:23:14','2020-05-28 00:23:14'),(1948,122,NULL,'172.19.0.4','2020-05-28 00:23:55','2020-05-28 00:23:55','2020-05-28 00:23:55'),(1949,121,NULL,'172.19.0.4','2020-05-28 00:24:32','2020-05-28 00:24:32','2020-05-28 00:24:32'),(1950,119,NULL,'172.19.0.4','2020-05-28 00:25:05','2020-05-28 00:25:05','2020-05-28 00:25:05'),(1951,120,NULL,'172.19.0.4','2020-05-28 00:25:40','2020-05-28 00:25:40','2020-05-28 00:25:40'),(1952,115,NULL,'172.19.0.4','2020-05-28 00:26:17','2020-05-28 00:26:17','2020-05-28 00:26:17'),(1953,116,NULL,'172.19.0.4','2020-05-28 00:26:56','2020-05-28 00:26:56','2020-05-28 00:26:56'),(1954,114,NULL,'172.19.0.4','2020-05-28 00:28:29','2020-05-28 00:28:29','2020-05-28 00:28:29'),(1955,111,NULL,'172.19.0.4','2020-05-28 00:29:49','2020-05-28 00:29:49','2020-05-28 00:29:49'),(1956,113,NULL,'172.19.0.4','2020-05-28 00:31:40','2020-05-28 00:31:40','2020-05-28 00:31:40'),(1957,112,NULL,'172.19.0.4','2020-05-28 00:35:12','2020-05-28 00:35:12','2020-05-28 00:35:12'),(1958,42,NULL,'172.19.0.4','2020-05-28 02:13:10','2020-05-28 02:13:10','2020-05-28 02:13:10'),(1959,50,NULL,'172.19.0.4','2020-05-28 02:35:23','2020-05-28 02:35:23','2020-05-28 02:35:23'),(1960,106,NULL,'172.19.0.4','2020-05-28 07:34:50','2020-05-28 07:34:50','2020-05-28 07:34:50'),(1961,97,NULL,'172.19.0.4','2020-05-28 07:58:04','2020-05-28 07:58:04','2020-05-28 07:58:04'),(1962,50,NULL,'172.19.0.4','2020-05-28 08:53:59','2020-05-28 08:53:59','2020-05-28 08:53:59'),(1963,101,NULL,'172.19.0.4','2020-05-28 09:11:09','2020-05-28 09:11:09','2020-05-28 09:11:09'),(1964,98,NULL,'172.19.0.4','2020-05-28 09:18:36','2020-05-28 09:18:36','2020-05-28 09:18:36'),(1965,95,NULL,'172.19.0.4','2020-05-28 09:26:59','2020-05-28 09:26:59','2020-05-28 09:26:59'),(1966,99,NULL,'172.19.0.4','2020-05-28 10:38:01','2020-05-28 10:38:01','2020-05-28 10:38:01'),(1967,108,NULL,'172.19.0.4','2020-05-28 15:26:11','2020-05-28 15:26:11','2020-05-28 15:26:11'),(1968,105,NULL,'172.19.0.4','2020-05-28 15:41:53','2020-05-28 15:41:53','2020-05-28 15:41:53'),(1969,122,NULL,'172.19.0.4','2020-05-28 16:04:13','2020-05-28 16:04:13','2020-05-28 16:04:13'),(1970,88,NULL,'172.19.0.4','2020-05-28 17:51:04','2020-05-28 17:51:04','2020-05-28 17:51:04'),(1971,23,NULL,'172.19.0.4','2020-05-28 18:50:26','2020-05-28 18:50:26','2020-05-28 18:50:26'),(1972,116,NULL,'172.19.0.4','2020-05-28 18:55:19','2020-05-28 18:55:19','2020-05-28 18:55:19'),(1973,37,NULL,'172.19.0.4','2020-05-28 20:57:20','2020-05-28 20:57:20','2020-05-28 20:57:20'),(1974,96,NULL,'172.19.0.4','2020-05-28 21:55:13','2020-05-28 21:55:13','2020-05-28 21:55:13'),(1975,45,NULL,'172.19.0.4','2020-05-29 01:17:06','2020-05-29 01:17:06','2020-05-29 01:17:06'),(1976,98,NULL,'172.19.0.4','2020-05-29 09:46:19','2020-05-29 09:46:19','2020-05-29 09:46:19'),(1977,122,NULL,'172.19.0.4','2020-05-29 14:10:43','2020-05-29 14:10:43','2020-05-29 14:10:43'),(1978,100,NULL,'172.19.0.4','2020-05-29 14:17:18','2020-05-29 14:17:18','2020-05-29 14:17:18'),(1979,110,NULL,'172.19.0.4','2020-05-29 14:17:39','2020-05-29 14:17:39','2020-05-29 14:17:39'),(1980,110,NULL,'172.19.0.4','2020-05-29 14:17:52','2020-05-29 14:17:52','2020-05-29 14:17:52'),(1981,110,NULL,'172.19.0.4','2020-05-29 14:17:58','2020-05-29 14:17:58','2020-05-29 14:17:58'),(1982,122,NULL,'172.19.0.4','2020-05-29 14:58:24','2020-05-29 14:58:24','2020-05-29 14:58:24'),(1983,122,NULL,'172.19.0.4','2020-05-29 14:58:35','2020-05-29 14:58:35','2020-05-29 14:58:35'),(1984,121,NULL,'172.19.0.4','2020-05-29 15:10:21','2020-05-29 15:10:21','2020-05-29 15:10:21'),(1985,120,NULL,'172.19.0.4','2020-05-29 15:14:26','2020-05-29 15:14:26','2020-05-29 15:14:26'),(1986,116,NULL,'172.19.0.4','2020-05-29 15:30:29','2020-05-29 15:30:29','2020-05-29 15:30:29'),(1987,120,NULL,'172.19.0.4','2020-05-29 15:56:38','2020-05-29 15:56:38','2020-05-29 15:56:38'),(1988,119,NULL,'172.19.0.4','2020-05-29 15:58:05','2020-05-29 15:58:05','2020-05-29 15:58:05'),(1989,116,NULL,'172.19.0.4','2020-05-29 16:03:05','2020-05-29 16:03:05','2020-05-29 16:03:05'),(1990,117,NULL,'172.19.0.4','2020-05-29 16:04:32','2020-05-29 16:04:32','2020-05-29 16:04:32'),(1991,116,NULL,'172.19.0.4','2020-05-29 16:05:36','2020-05-29 16:05:36','2020-05-29 16:05:36'),(1992,115,NULL,'172.19.0.4','2020-05-29 16:12:01','2020-05-29 16:12:01','2020-05-29 16:12:01'),(1993,114,NULL,'172.19.0.4','2020-05-29 16:24:51','2020-05-29 16:24:51','2020-05-29 16:24:51'),(1994,108,NULL,'172.19.0.4','2020-05-29 16:37:45','2020-05-29 16:37:45','2020-05-29 16:37:45'),(1995,113,NULL,'172.19.0.4','2020-05-29 16:56:50','2020-05-29 16:56:50','2020-05-29 16:56:50'),(1996,105,NULL,'172.19.0.4','2020-05-29 17:20:52','2020-05-29 17:20:52','2020-05-29 17:20:52'),(1997,112,NULL,'172.19.0.4','2020-05-29 17:24:13','2020-05-29 17:24:13','2020-05-29 17:24:13'),(1998,111,NULL,'172.19.0.4','2020-05-29 17:38:51','2020-05-29 17:38:51','2020-05-29 17:38:51'),(1999,91,NULL,'172.19.0.4','2020-05-29 23:25:11','2020-05-29 23:25:11','2020-05-29 23:25:11'),(2000,116,NULL,'172.19.0.4','2020-05-30 00:15:12','2020-05-30 00:15:13','2020-05-30 00:15:13'),(2001,14,NULL,'172.19.0.4','2020-05-30 00:21:48','2020-05-30 00:21:48','2020-05-30 00:21:48'),(2002,23,NULL,'172.19.0.4','2020-05-30 00:26:26','2020-05-30 00:26:26','2020-05-30 00:26:26'),(2003,48,NULL,'172.19.0.4','2020-05-30 04:55:25','2020-05-30 04:55:25','2020-05-30 04:55:25'),(2004,65,NULL,'172.19.0.4','2020-05-30 07:53:20','2020-05-30 07:53:20','2020-05-30 07:53:20'),(2005,123,NULL,'172.19.0.4','2020-05-30 10:26:25','2020-05-30 10:26:25','2020-05-30 10:26:25'),(2006,72,NULL,'172.19.0.4','2020-05-30 12:41:44','2020-05-30 12:41:44','2020-05-30 12:41:44'),(2007,72,NULL,'172.19.0.4','2020-05-30 13:38:41','2020-05-30 13:38:41','2020-05-30 13:38:41'),(2008,43,NULL,'172.19.0.4','2020-05-30 14:24:18','2020-05-30 14:24:18','2020-05-30 14:24:18'),(2009,48,NULL,'172.19.0.4','2020-05-30 18:25:45','2020-05-30 18:25:45','2020-05-30 18:25:45'),(2010,72,NULL,'172.19.0.4','2020-05-31 01:02:14','2020-05-31 01:02:14','2020-05-31 01:02:14'),(2011,45,NULL,'172.19.0.4','2020-05-31 05:38:05','2020-05-31 05:38:05','2020-05-31 05:38:05'),(2012,48,NULL,'172.19.0.4','2020-05-31 07:01:45','2020-05-31 07:01:45','2020-05-31 07:01:45'),(2013,52,NULL,'172.19.0.4','2020-05-31 07:17:51','2020-05-31 07:17:51','2020-05-31 07:17:51'),(2014,44,NULL,'172.19.0.4','2020-05-31 07:18:15','2020-05-31 07:18:15','2020-05-31 07:18:15'),(2015,46,NULL,'172.19.0.4','2020-05-31 07:18:39','2020-05-31 07:18:39','2020-05-31 07:18:39'),(2016,47,NULL,'172.19.0.4','2020-05-31 07:19:03','2020-05-31 07:19:03','2020-05-31 07:19:03'),(2017,116,NULL,'172.19.0.4','2020-05-31 07:19:59','2020-05-31 07:19:59','2020-05-31 07:19:59'),(2018,49,NULL,'172.19.0.4','2020-05-31 07:23:18','2020-05-31 07:23:18','2020-05-31 07:23:18'),(2019,14,NULL,'172.19.0.4','2020-05-31 07:23:42','2020-05-31 07:23:42','2020-05-31 07:23:42'),(2020,50,NULL,'172.19.0.4','2020-05-31 07:24:06','2020-05-31 07:24:06','2020-05-31 07:24:06'),(2021,43,NULL,'172.19.0.4','2020-05-31 07:24:30','2020-05-31 07:24:30','2020-05-31 07:24:30'),(2022,52,NULL,'172.19.0.4','2020-05-31 13:23:14','2020-05-31 13:23:14','2020-05-31 13:23:14'),(2023,14,NULL,'172.19.0.4','2020-05-31 13:23:15','2020-05-31 13:23:16','2020-05-31 13:23:16'),(2024,105,NULL,'172.19.0.4','2020-05-31 13:23:23','2020-05-31 13:23:23','2020-05-31 13:23:23'),(2025,124,NULL,'172.19.0.4','2020-05-31 13:23:24','2020-05-31 13:23:24','2020-05-31 13:23:24'),(2026,123,NULL,'172.19.0.4','2020-05-31 13:23:24','2020-05-31 13:23:25','2020-05-31 13:23:25'),(2027,122,NULL,'172.19.0.4','2020-05-31 13:23:26','2020-05-31 13:23:26','2020-05-31 13:23:26'),(2028,121,NULL,'172.19.0.4','2020-05-31 13:23:26','2020-05-31 13:23:26','2020-05-31 13:23:26'),(2029,120,NULL,'172.19.0.4','2020-05-31 13:23:26','2020-05-31 13:23:27','2020-05-31 13:23:27'),(2030,119,NULL,'172.19.0.4','2020-05-31 13:23:29','2020-05-31 13:23:29','2020-05-31 13:23:29'),(2031,117,NULL,'172.19.0.4','2020-05-31 13:23:35','2020-05-31 13:23:36','2020-05-31 13:23:36'),(2032,43,NULL,'172.19.0.4','2020-05-31 13:24:00','2020-05-31 13:24:00','2020-05-31 13:24:00'),(2033,113,NULL,'172.19.0.4','2020-05-31 13:24:03','2020-05-31 13:24:03','2020-05-31 13:24:03'),(2034,32,NULL,'172.19.0.4','2020-05-31 13:24:05','2020-05-31 13:24:05','2020-05-31 13:24:05'),(2035,96,NULL,'172.19.0.4','2020-05-31 13:24:05','2020-05-31 13:24:05','2020-05-31 13:24:05'),(2036,116,NULL,'172.19.0.4','2020-05-31 13:24:05','2020-05-31 13:24:06','2020-05-31 13:24:06'),(2037,21,NULL,'172.19.0.4','2020-05-31 13:24:06','2020-05-31 13:24:06','2020-05-31 13:24:06'),(2038,90,NULL,'172.19.0.4','2020-05-31 16:35:35','2020-05-31 16:35:35','2020-05-31 16:35:35'),(2039,46,NULL,'172.19.0.4','2020-05-31 16:44:30','2020-05-31 16:44:30','2020-05-31 16:44:30'),(2040,23,NULL,'172.19.0.4','2020-05-31 19:14:11','2020-05-31 19:14:11','2020-05-31 19:14:11'),(2041,44,NULL,'172.19.0.4','2020-05-31 20:33:42','2020-05-31 20:33:42','2020-05-31 20:33:42'),(2042,23,NULL,'172.19.0.4','2020-05-31 21:26:28','2020-05-31 21:26:28','2020-05-31 21:26:28'),(2043,46,NULL,'172.19.0.4','2020-05-31 23:37:07','2020-05-31 23:37:07','2020-05-31 23:37:07'),(2044,124,NULL,'172.19.0.4','2020-05-31 23:39:01','2020-05-31 23:39:01','2020-05-31 23:39:01'),(2045,99,NULL,'172.19.0.4','2020-06-01 01:25:10','2020-06-01 01:25:10','2020-06-01 01:25:10'),(2046,90,NULL,'172.19.0.4','2020-06-01 04:38:38','2020-06-01 04:38:39','2020-06-01 04:38:39'),(2047,23,NULL,'172.19.0.4','2020-06-01 06:19:25','2020-06-01 06:19:25','2020-06-01 06:19:25'),(2048,27,NULL,'172.19.0.4','2020-06-01 09:08:38','2020-06-01 09:08:38','2020-06-01 09:08:38'),(2049,98,NULL,'172.19.0.4','2020-06-01 13:09:04','2020-06-01 13:09:04','2020-06-01 13:09:04'),(2050,98,NULL,'172.19.0.4','2020-06-01 13:09:14','2020-06-01 13:09:14','2020-06-01 13:09:14'),(2051,116,NULL,'172.19.0.4','2020-06-01 15:26:34','2020-06-01 15:26:34','2020-06-01 15:26:34'),(2052,112,NULL,'172.19.0.4','2020-06-01 15:27:15','2020-06-01 15:27:15','2020-06-01 15:27:15'),(2053,50,NULL,'172.19.0.4','2020-06-01 15:28:22','2020-06-01 15:28:22','2020-06-01 15:28:22'),(2054,48,NULL,'172.19.0.4','2020-06-01 15:28:30','2020-06-01 15:28:30','2020-06-01 15:28:30'),(2055,104,NULL,'172.19.0.4','2020-06-01 15:28:43','2020-06-01 15:28:43','2020-06-01 15:28:43'),(2056,107,NULL,'172.19.0.4','2020-06-01 15:28:45','2020-06-01 15:28:45','2020-06-01 15:28:45'),(2057,105,NULL,'172.19.0.4','2020-06-01 15:30:03','2020-06-01 15:30:03','2020-06-01 15:30:03'),(2058,124,NULL,'172.19.0.4','2020-06-01 15:30:22','2020-06-01 15:30:22','2020-06-01 15:30:22'),(2059,121,NULL,'172.19.0.4','2020-06-01 15:30:32','2020-06-01 15:30:32','2020-06-01 15:30:32'),(2060,23,NULL,'172.19.0.4','2020-06-01 15:31:33','2020-06-01 15:31:33','2020-06-01 15:31:33'),(2061,94,NULL,'172.19.0.4','2020-06-01 17:27:48','2020-06-01 17:27:48','2020-06-01 17:27:48'),(2062,23,NULL,'172.19.0.4','2020-06-02 01:15:35','2020-06-02 01:15:35','2020-06-02 01:15:35'),(2063,31,NULL,'172.19.0.4','2020-06-02 01:54:00','2020-06-02 01:54:00','2020-06-02 01:54:00'),(2064,41,NULL,'172.19.0.4','2020-06-02 02:18:47','2020-06-02 02:18:47','2020-06-02 02:18:47'),(2065,88,NULL,'172.19.0.4','2020-06-02 03:25:27','2020-06-02 03:25:27','2020-06-02 03:25:27'),(2066,48,NULL,'172.19.0.4','2020-06-02 05:50:15','2020-06-02 05:50:15','2020-06-02 05:50:15'),(2067,44,NULL,'172.19.0.4','2020-06-02 05:52:34','2020-06-02 05:52:34','2020-06-02 05:52:34'),(2068,114,NULL,'172.19.0.4','2020-06-02 05:56:46','2020-06-02 05:56:46','2020-06-02 05:56:46'),(2069,115,NULL,'172.19.0.4','2020-06-02 05:57:08','2020-06-02 05:57:08','2020-06-02 05:57:08'),(2070,121,NULL,'172.19.0.4','2020-06-02 05:57:54','2020-06-02 05:57:54','2020-06-02 05:57:54'),(2071,123,NULL,'172.19.0.4','2020-06-02 05:58:42','2020-06-02 05:58:42','2020-06-02 05:58:42'),(2072,113,NULL,'172.19.0.4','2020-06-02 05:58:59','2020-06-02 05:58:59','2020-06-02 05:58:59'),(2073,120,NULL,'172.19.0.4','2020-06-02 05:59:22','2020-06-02 05:59:22','2020-06-02 05:59:22'),(2074,111,NULL,'172.19.0.4','2020-06-02 05:59:44','2020-06-02 05:59:44','2020-06-02 05:59:44'),(2075,122,NULL,'172.19.0.4','2020-06-02 07:00:49','2020-06-02 07:00:49','2020-06-02 07:00:49'),(2076,116,NULL,'172.19.0.4','2020-06-02 07:01:13','2020-06-02 07:01:13','2020-06-02 07:01:13'),(2077,112,NULL,'172.19.0.4','2020-06-02 07:01:37','2020-06-02 07:01:37','2020-06-02 07:01:37'),(2078,110,NULL,'172.19.0.4','2020-06-02 07:02:01','2020-06-02 07:02:01','2020-06-02 07:02:01'),(2079,117,NULL,'172.19.0.4','2020-06-02 07:02:25','2020-06-02 07:02:25','2020-06-02 07:02:25'),(2080,49,NULL,'172.19.0.4','2020-06-02 07:05:46','2020-06-02 07:05:46','2020-06-02 07:05:46'),(2081,122,NULL,'172.19.0.4','2020-06-02 09:40:17','2020-06-02 09:40:17','2020-06-02 09:40:17'),(2082,120,NULL,'172.19.0.4','2020-06-02 09:41:10','2020-06-02 09:41:11','2020-06-02 09:41:11'),(2083,119,NULL,'172.19.0.4','2020-06-02 09:51:27','2020-06-02 09:51:27','2020-06-02 09:51:27'),(2084,117,NULL,'172.19.0.4','2020-06-02 09:53:55','2020-06-02 09:53:56','2020-06-02 09:53:56'),(2085,116,NULL,'172.19.0.4','2020-06-02 09:53:57','2020-06-02 09:53:57','2020-06-02 09:53:57'),(2086,112,NULL,'172.19.0.4','2020-06-02 10:06:47','2020-06-02 10:06:47','2020-06-02 10:06:47'),(2087,114,NULL,'172.19.0.4','2020-06-02 10:14:32','2020-06-02 10:14:32','2020-06-02 10:14:32'),(2088,111,NULL,'172.19.0.4','2020-06-02 10:15:36','2020-06-02 10:15:36','2020-06-02 10:15:36'),(2089,113,NULL,'172.19.0.4','2020-06-02 10:19:51','2020-06-02 10:19:51','2020-06-02 10:19:51'),(2090,96,NULL,'172.19.0.4','2020-06-02 11:57:17','2020-06-02 11:57:17','2020-06-02 11:57:17'),(2091,112,NULL,'172.19.0.4','2020-06-02 15:16:58','2020-06-02 15:16:58','2020-06-02 15:16:58'),(2092,125,NULL,'172.19.0.4','2020-06-02 15:38:47','2020-06-02 15:38:47','2020-06-02 15:38:47'),(2093,115,NULL,'172.19.0.4','2020-06-02 15:56:30','2020-06-02 15:56:30','2020-06-02 15:56:30'),(2094,116,NULL,'172.19.0.4','2020-06-02 16:04:13','2020-06-02 16:04:13','2020-06-02 16:04:13'),(2095,126,NULL,'172.19.0.4','2020-06-02 16:33:10','2020-06-02 16:33:10','2020-06-02 16:33:10'),(2096,126,NULL,'172.19.0.4','2020-06-02 16:34:21','2020-06-02 16:34:21','2020-06-02 16:34:21'),(2097,116,NULL,'172.19.0.4','2020-06-02 16:43:47','2020-06-02 16:43:47','2020-06-02 16:43:47'),(2098,116,NULL,'172.19.0.4','2020-06-02 16:44:37','2020-06-02 16:44:37','2020-06-02 16:44:37'),(2099,52,NULL,'172.19.0.4','2020-06-02 17:06:28','2020-06-02 17:06:28','2020-06-02 17:06:28'),(2100,116,NULL,'172.19.0.4','2020-06-02 17:26:47','2020-06-02 17:26:47','2020-06-02 17:26:47'),(2101,116,NULL,'172.19.0.4','2020-06-02 18:04:38','2020-06-02 18:04:38','2020-06-02 18:04:38'),(2102,98,NULL,'172.19.0.4','2020-06-02 18:35:56','2020-06-02 18:35:56','2020-06-02 18:35:56'),(2103,126,NULL,'172.19.0.4','2020-06-02 19:26:54','2020-06-02 19:26:54','2020-06-02 19:26:54'),(2104,119,NULL,'172.19.0.4','2020-06-02 23:11:53','2020-06-02 23:11:53','2020-06-02 23:11:53'),(2105,35,NULL,'172.19.0.4','2020-06-02 23:22:08','2020-06-02 23:22:08','2020-06-02 23:22:08'),(2106,122,NULL,'172.19.0.4','2020-06-02 23:29:14','2020-06-02 23:29:14','2020-06-02 23:29:14'),(2107,121,NULL,'172.19.0.4','2020-06-02 23:29:16','2020-06-02 23:29:16','2020-06-02 23:29:16'),(2108,120,NULL,'172.19.0.4','2020-06-02 23:29:18','2020-06-02 23:29:18','2020-06-02 23:29:18'),(2109,14,NULL,'172.19.0.4','2020-06-02 23:29:20','2020-06-02 23:29:20','2020-06-02 23:29:20'),(2110,52,NULL,'172.19.0.4','2020-06-02 23:29:23','2020-06-02 23:29:23','2020-06-02 23:29:23'),(2111,99,NULL,'172.19.0.4','2020-06-02 23:29:24','2020-06-02 23:29:24','2020-06-02 23:29:24'),(2112,111,NULL,'172.19.0.4','2020-06-02 23:29:28','2020-06-02 23:29:28','2020-06-02 23:29:28'),(2113,93,NULL,'172.19.0.4','2020-06-02 23:29:35','2020-06-02 23:29:35','2020-06-02 23:29:35'),(2114,41,NULL,'172.19.0.4','2020-06-02 23:29:46','2020-06-02 23:29:46','2020-06-02 23:29:46'),(2115,105,NULL,'172.19.0.4','2020-06-02 23:29:49','2020-06-02 23:29:49','2020-06-02 23:29:49'),(2116,101,NULL,'172.19.0.4','2020-06-02 23:29:55','2020-06-02 23:29:55','2020-06-02 23:29:55'),(2117,88,NULL,'172.19.0.4','2020-06-02 23:29:57','2020-06-02 23:29:57','2020-06-02 23:29:57'),(2118,37,NULL,'172.19.0.4','2020-06-02 23:29:59','2020-06-02 23:29:59','2020-06-02 23:29:59'),(2119,31,NULL,'172.19.0.4','2020-06-02 23:30:01','2020-06-02 23:30:01','2020-06-02 23:30:01'),(2120,72,NULL,'172.19.0.4','2020-06-02 23:30:04','2020-06-02 23:30:04','2020-06-02 23:30:04'),(2121,126,NULL,'172.19.0.4','2020-06-02 23:30:10','2020-06-02 23:30:10','2020-06-02 23:30:10'),(2122,125,NULL,'172.19.0.4','2020-06-02 23:30:12','2020-06-02 23:30:12','2020-06-02 23:30:12'),(2123,123,NULL,'172.19.0.4','2020-06-02 23:30:28','2020-06-02 23:30:28','2020-06-02 23:30:28'),(2124,119,NULL,'172.19.0.4','2020-06-02 23:30:32','2020-06-02 23:30:32','2020-06-02 23:30:32'),(2125,117,NULL,'172.19.0.4','2020-06-02 23:30:34','2020-06-02 23:30:34','2020-06-02 23:30:34'),(2126,116,NULL,'172.19.0.4','2020-06-02 23:30:36','2020-06-02 23:30:36','2020-06-02 23:30:36'),(2127,113,NULL,'172.19.0.4','2020-06-02 23:30:37','2020-06-02 23:30:37','2020-06-02 23:30:37'),(2128,23,NULL,'172.19.0.4','2020-06-02 23:30:41','2020-06-02 23:30:41','2020-06-02 23:30:41'),(2129,21,NULL,'172.19.0.4','2020-06-02 23:30:42','2020-06-02 23:30:42','2020-06-02 23:30:42'),(2130,98,NULL,'172.19.0.4','2020-06-02 23:30:43','2020-06-02 23:30:43','2020-06-02 23:30:43'),(2131,94,NULL,'172.19.0.4','2020-06-02 23:30:44','2020-06-02 23:30:44','2020-06-02 23:30:44'),(2132,48,NULL,'172.19.0.4','2020-06-02 23:30:46','2020-06-02 23:30:46','2020-06-02 23:30:46'),(2133,46,NULL,'172.19.0.4','2020-06-02 23:30:48','2020-06-02 23:30:48','2020-06-02 23:30:48'),(2134,44,NULL,'172.19.0.4','2020-06-02 23:30:50','2020-06-02 23:30:50','2020-06-02 23:30:50'),(2135,43,NULL,'172.19.0.4','2020-06-02 23:30:51','2020-06-02 23:30:51','2020-06-02 23:30:51'),(2136,42,NULL,'172.19.0.4','2020-06-02 23:30:56','2020-06-02 23:30:56','2020-06-02 23:30:56'),(2137,36,NULL,'172.19.0.4','2020-06-02 23:30:57','2020-06-02 23:30:57','2020-06-02 23:30:57'),(2138,35,NULL,'172.19.0.4','2020-06-02 23:30:59','2020-06-02 23:30:59','2020-06-02 23:30:59'),(2139,33,NULL,'172.19.0.4','2020-06-02 23:31:01','2020-06-02 23:31:01','2020-06-02 23:31:01'),(2140,32,NULL,'172.19.0.4','2020-06-02 23:31:03','2020-06-02 23:31:03','2020-06-02 23:31:03'),(2141,50,NULL,'172.19.0.4','2020-06-02 23:31:04','2020-06-02 23:31:04','2020-06-02 23:31:04'),(2142,15,NULL,'172.19.0.4','2020-06-02 23:31:05','2020-06-02 23:31:05','2020-06-02 23:31:05'),(2143,115,NULL,'172.19.0.4','2020-06-02 23:31:07','2020-06-02 23:31:07','2020-06-02 23:31:07'),(2144,108,NULL,'172.19.0.4','2020-06-02 23:31:10','2020-06-02 23:31:10','2020-06-02 23:31:10'),(2145,27,NULL,'172.19.0.4','2020-06-02 23:31:12','2020-06-02 23:31:12','2020-06-02 23:31:12'),(2146,91,NULL,'172.19.0.4','2020-06-02 23:31:14','2020-06-02 23:31:14','2020-06-02 23:31:14'),(2147,109,NULL,'172.19.0.4','2020-06-02 23:31:15','2020-06-02 23:31:15','2020-06-02 23:31:15'),(2148,47,NULL,'172.19.0.4','2020-06-02 23:31:16','2020-06-02 23:31:16','2020-06-02 23:31:16'),(2149,104,NULL,'172.19.0.4','2020-06-02 23:31:18','2020-06-02 23:31:18','2020-06-02 23:31:18'),(2150,112,NULL,'172.19.0.4','2020-06-02 23:31:20','2020-06-02 23:31:20','2020-06-02 23:31:20'),(2151,97,NULL,'172.19.0.4','2020-06-02 23:31:23','2020-06-02 23:31:23','2020-06-02 23:31:23'),(2152,106,NULL,'172.19.0.4','2020-06-02 23:31:24','2020-06-02 23:31:24','2020-06-02 23:31:24'),(2153,28,NULL,'172.19.0.4','2020-06-02 23:31:25','2020-06-02 23:31:25','2020-06-02 23:31:25'),(2154,110,NULL,'172.19.0.4','2020-06-02 23:31:27','2020-06-02 23:31:27','2020-06-02 23:31:27'),(2155,65,NULL,'172.19.0.4','2020-06-02 23:31:28','2020-06-02 23:31:28','2020-06-02 23:31:28'),(2156,89,NULL,'172.19.0.4','2020-06-02 23:31:30','2020-06-02 23:31:30','2020-06-02 23:31:30'),(2157,100,NULL,'172.19.0.4','2020-06-02 23:31:31','2020-06-02 23:31:31','2020-06-02 23:31:31'),(2158,45,NULL,'172.19.0.4','2020-06-02 23:31:33','2020-06-02 23:31:33','2020-06-02 23:31:33'),(2159,114,NULL,'172.19.0.4','2020-06-02 23:31:34','2020-06-02 23:31:34','2020-06-02 23:31:34'),(2160,95,NULL,'172.19.0.4','2020-06-02 23:31:37','2020-06-02 23:31:37','2020-06-02 23:31:37'),(2161,107,NULL,'172.19.0.4','2020-06-02 23:31:38','2020-06-02 23:31:38','2020-06-02 23:31:38'),(2162,96,NULL,'172.19.0.4','2020-06-02 23:31:40','2020-06-02 23:31:40','2020-06-02 23:31:40'),(2163,49,NULL,'172.19.0.4','2020-06-02 23:31:42','2020-06-02 23:31:42','2020-06-02 23:31:42'),(2164,90,NULL,'172.19.0.4','2020-06-02 23:31:43','2020-06-02 23:31:43','2020-06-02 23:31:43'),(2165,1,NULL,'172.19.0.4','2020-06-02 23:31:54','2020-06-02 23:31:54','2020-06-02 23:31:54'),(2166,100,NULL,'172.19.0.4','2020-06-03 00:11:53','2020-06-03 00:11:53','2020-06-03 00:11:53'),(2167,117,NULL,'172.19.0.4','2020-06-03 07:06:15','2020-06-03 07:06:58','2020-06-03 07:06:58'),(2168,117,NULL,'172.19.0.4','2020-06-03 07:06:58','2020-06-03 07:06:59','2020-06-03 07:06:59'),(2169,101,NULL,'172.19.0.4','2020-06-03 08:38:28','2020-06-03 08:38:28','2020-06-03 08:38:28'),(2170,96,NULL,'172.19.0.4','2020-06-03 08:56:26','2020-06-03 08:56:26','2020-06-03 08:56:26'),(2171,49,NULL,'172.19.0.4','2020-06-03 09:01:04','2020-06-03 09:01:04','2020-06-03 09:01:04'),(2172,65,NULL,'172.19.0.4','2020-06-03 10:03:06','2020-06-03 10:03:06','2020-06-03 10:03:06'),(2173,95,NULL,'172.19.0.4','2020-06-03 11:10:54','2020-06-03 11:10:54','2020-06-03 11:10:54'),(2174,112,NULL,'172.19.0.4','2020-06-03 15:44:05','2020-06-03 15:44:05','2020-06-03 15:44:05'),(2175,117,NULL,'172.19.0.4','2020-06-03 15:44:26','2020-06-03 15:44:26','2020-06-03 15:44:26'),(2176,120,NULL,'172.19.0.4','2020-06-03 15:45:01','2020-06-03 15:45:01','2020-06-03 15:45:01'),(2177,121,NULL,'172.19.0.4','2020-06-03 15:45:24','2020-06-03 15:45:24','2020-06-03 15:45:24'),(2178,122,NULL,'172.19.0.4','2020-06-03 15:45:44','2020-06-03 15:45:44','2020-06-03 15:45:44'),(2179,123,NULL,'172.19.0.4','2020-06-03 15:46:10','2020-06-03 15:46:10','2020-06-03 15:46:10'),(2180,124,NULL,'172.19.0.4','2020-06-03 15:46:42','2020-06-03 15:46:42','2020-06-03 15:46:42'),(2181,125,NULL,'172.19.0.4','2020-06-03 15:47:03','2020-06-03 15:47:03','2020-06-03 15:47:03'),(2182,126,NULL,'172.19.0.4','2020-06-03 15:47:30','2020-06-03 15:47:30','2020-06-03 15:47:30'),(2183,98,NULL,'172.19.0.4','2020-06-03 17:15:04','2020-06-03 17:15:04','2020-06-03 17:15:04'),(2184,127,NULL,'172.19.0.4','2020-06-03 17:49:15','2020-06-03 17:49:15','2020-06-03 17:49:15'),(2185,127,NULL,'172.19.0.4','2020-06-03 17:51:24','2020-06-03 17:51:24','2020-06-03 17:51:24'),(2186,47,NULL,'172.19.0.4','2020-06-03 18:59:18','2020-06-03 18:59:18','2020-06-03 18:59:18'),(2187,37,NULL,'172.19.0.4','2020-06-03 22:05:28','2020-06-03 22:05:29','2020-06-03 22:05:29'),(2188,52,NULL,'172.19.0.4','2020-06-03 22:53:26','2020-06-03 22:53:26','2020-06-03 22:53:26'),(2189,127,NULL,'172.19.0.4','2020-06-03 22:56:31','2020-06-03 22:56:31','2020-06-03 22:56:31'),(2190,126,NULL,'172.19.0.4','2020-06-03 22:56:58','2020-06-03 22:56:58','2020-06-03 22:56:58'),(2191,119,NULL,'172.19.0.4','2020-06-03 22:57:19','2020-06-03 22:57:19','2020-06-03 22:57:19'),(2192,116,NULL,'172.19.0.4','2020-06-03 22:57:38','2020-06-03 22:57:38','2020-06-03 22:57:38'),(2193,112,NULL,'172.19.0.4','2020-06-03 22:57:58','2020-06-03 22:57:58','2020-06-03 22:57:58'),(2194,111,NULL,'172.19.0.4','2020-06-04 01:08:40','2020-06-04 01:08:40','2020-06-04 01:08:40'),(2195,113,NULL,'172.19.0.4','2020-06-04 01:08:49','2020-06-04 01:08:49','2020-06-04 01:08:49'),(2196,114,NULL,'172.19.0.4','2020-06-04 01:09:03','2020-06-04 01:09:03','2020-06-04 01:09:03'),(2197,115,NULL,'172.19.0.4','2020-06-04 01:09:13','2020-06-04 01:09:13','2020-06-04 01:09:13'),(2198,116,NULL,'172.19.0.4','2020-06-04 01:09:26','2020-06-04 01:09:26','2020-06-04 01:09:26'),(2199,119,NULL,'172.19.0.4','2020-06-04 01:09:29','2020-06-04 01:09:29','2020-06-04 01:09:29'),(2200,72,NULL,'172.19.0.4','2020-06-04 07:01:16','2020-06-04 07:01:16','2020-06-04 07:01:16'),(2201,124,NULL,'172.19.0.4','2020-06-04 07:02:56','2020-06-04 07:02:56','2020-06-04 07:02:56'),(2202,33,NULL,'172.19.0.4','2020-06-04 07:12:13','2020-06-04 07:12:13','2020-06-04 07:12:13'),(2203,100,NULL,'172.19.0.4','2020-06-04 07:24:53','2020-06-04 07:24:53','2020-06-04 07:24:53'),(2204,127,NULL,'172.19.0.4','2020-06-04 08:57:29','2020-06-04 08:57:29','2020-06-04 08:57:29'),(2205,128,NULL,'172.19.0.4','2020-06-04 08:57:40','2020-06-04 08:57:40','2020-06-04 08:57:40'),(2206,127,NULL,'172.19.0.4','2020-06-04 09:35:49','2020-06-04 09:35:49','2020-06-04 09:35:49'),(2207,105,NULL,'172.19.0.4','2020-06-04 10:00:30','2020-06-04 10:00:30','2020-06-04 10:00:30'),(2208,127,NULL,'172.19.0.4','2020-06-04 10:01:00','2020-06-04 10:01:00','2020-06-04 10:01:00'),(2209,125,NULL,'172.19.0.4','2020-06-04 10:21:21','2020-06-04 10:21:21','2020-06-04 10:21:21'),(2210,115,NULL,'172.19.0.4','2020-06-04 10:23:36','2020-06-04 10:23:36','2020-06-04 10:23:36'),(2211,113,NULL,'172.19.0.4','2020-06-04 10:39:50','2020-06-04 10:39:50','2020-06-04 10:39:50'),(2212,99,NULL,'172.19.0.4','2020-06-04 10:58:28','2020-06-04 10:58:28','2020-06-04 10:58:28'),(2213,123,NULL,'172.19.0.4','2020-06-04 12:41:22','2020-06-04 12:41:22','2020-06-04 12:41:22'),(2214,125,NULL,'172.19.0.4','2020-06-04 14:48:02','2020-06-04 14:48:02','2020-06-04 14:48:02'),(2215,112,NULL,'172.19.0.4','2020-06-04 15:03:04','2020-06-04 15:03:04','2020-06-04 15:03:04'),(2216,115,NULL,'172.19.0.4','2020-06-04 15:46:41','2020-06-04 15:46:41','2020-06-04 15:46:41'),(2217,27,NULL,'172.19.0.4','2020-06-04 16:04:31','2020-06-04 16:04:31','2020-06-04 16:04:31'),(2218,117,NULL,'172.19.0.4','2020-06-04 16:37:15','2020-06-04 16:37:15','2020-06-04 16:37:15'),(2219,116,NULL,'172.19.0.4','2020-06-04 16:42:07','2020-06-04 16:42:07','2020-06-04 16:42:07'),(2220,97,NULL,'172.19.0.4','2020-06-04 17:26:55','2020-06-04 17:26:55','2020-06-04 17:26:55'),(2221,31,NULL,'172.19.0.4','2020-06-04 17:35:50','2020-06-04 17:35:50','2020-06-04 17:35:50'),(2222,33,NULL,'172.19.0.4','2020-06-04 18:30:45','2020-06-04 18:30:45','2020-06-04 18:30:45'),(2223,120,NULL,'172.19.0.4','2020-06-04 23:31:15','2020-06-04 23:31:15','2020-06-04 23:31:15'),(2224,101,NULL,'172.19.0.4','2020-06-05 00:11:26','2020-06-05 00:11:26','2020-06-05 00:11:26'),(2225,21,NULL,'172.19.0.4','2020-06-05 01:33:59','2020-06-05 01:33:59','2020-06-05 01:33:59'),(2226,121,NULL,'172.19.0.4','2020-06-05 02:31:15','2020-06-05 02:31:15','2020-06-05 02:31:15'),(2227,36,NULL,'172.19.0.4','2020-06-05 05:31:15','2020-06-05 05:31:15','2020-06-05 05:31:15'),(2228,14,NULL,'172.19.0.4','2020-06-05 07:17:56','2020-06-05 07:17:56','2020-06-05 07:17:56'),(2229,128,NULL,'172.19.0.4','2020-06-05 08:30:14','2020-06-05 08:30:14','2020-06-05 08:30:14'),(2230,15,NULL,'172.19.0.4','2020-06-05 09:23:55','2020-06-05 09:23:55','2020-06-05 09:23:55'),(2231,105,NULL,'172.19.0.4','2020-06-05 09:26:06','2020-06-05 09:26:06','2020-06-05 09:26:06'),(2232,105,NULL,'172.19.0.4','2020-06-05 09:50:28','2020-06-05 09:50:28','2020-06-05 09:50:28'),(2233,105,NULL,'172.19.0.4','2020-06-05 09:50:36','2020-06-05 09:50:36','2020-06-05 09:50:36'),(2234,105,NULL,'172.19.0.4','2020-06-05 09:50:46','2020-06-05 09:50:46','2020-06-05 09:50:46'),(2235,52,NULL,'172.19.0.4','2020-06-05 15:02:41','2020-06-05 15:02:41','2020-06-05 15:02:41'),(2236,112,NULL,'172.19.0.4','2020-06-05 15:37:56','2020-06-05 15:37:56','2020-06-05 15:37:56'),(2237,107,NULL,'172.19.0.4','2020-06-05 16:09:50','2020-06-05 16:09:50','2020-06-05 16:09:50'),(2238,131,NULL,'172.19.0.4','2020-06-05 16:53:13','2020-06-05 16:53:13','2020-06-05 16:53:13'),(2239,129,NULL,'172.19.0.4','2020-06-05 16:57:45','2020-06-05 16:57:45','2020-06-05 16:57:45'),(2240,130,NULL,'172.19.0.4','2020-06-05 17:24:32','2020-06-05 17:24:32','2020-06-05 17:24:32'),(2241,48,NULL,'172.19.0.4','2020-06-05 18:00:00','2020-06-05 18:00:00','2020-06-05 18:00:00'),(2242,48,NULL,'172.19.0.4','2020-06-05 18:00:00','2020-06-05 18:00:00','2020-06-05 18:00:00'),(2243,93,NULL,'172.19.0.4','2020-06-05 18:37:55','2020-06-05 18:37:55','2020-06-05 18:37:55'),(2244,43,NULL,'172.19.0.4','2020-06-05 20:07:55','2020-06-05 20:07:55','2020-06-05 20:07:55'),(2245,116,NULL,'172.19.0.4','2020-06-05 20:52:55','2020-06-05 20:52:55','2020-06-05 20:52:55'),(2246,35,NULL,'172.19.0.4','2020-06-05 21:54:57','2020-06-05 21:54:57','2020-06-05 21:54:57'),(2247,52,NULL,'172.19.0.4','2020-06-05 22:25:57','2020-06-05 22:25:57','2020-06-05 22:25:57'),(2248,50,NULL,'172.19.0.4','2020-06-05 23:11:35','2020-06-05 23:11:35','2020-06-05 23:11:35'),(2249,115,NULL,'172.19.0.4','2020-06-05 23:57:13','2020-06-05 23:57:13','2020-06-05 23:57:13'),(2250,125,NULL,'172.19.0.4','2020-06-06 04:27:21','2020-06-06 04:27:21','2020-06-06 04:27:21'),(2251,127,NULL,'172.19.0.4','2020-06-06 04:27:45','2020-06-06 04:27:45','2020-06-06 04:27:45'),(2252,44,NULL,'172.19.0.4','2020-06-06 07:11:29','2020-06-06 07:11:29','2020-06-06 07:11:29'),(2253,88,NULL,'172.19.0.4','2020-06-06 08:06:51','2020-06-06 08:06:51','2020-06-06 08:06:51'),(2254,125,NULL,'172.19.0.4','2020-06-06 08:42:51','2020-06-06 08:42:51','2020-06-06 08:42:51'),(2255,28,NULL,'172.19.0.4','2020-06-06 08:49:07','2020-06-06 08:49:07','2020-06-06 08:49:07'),(2256,126,NULL,'172.19.0.4','2020-06-06 09:18:51','2020-06-06 09:18:51','2020-06-06 09:18:51'),(2257,126,NULL,'172.19.0.4','2020-06-06 09:36:51','2020-06-06 09:36:51','2020-06-06 09:36:51'),(2258,48,NULL,'172.19.0.4','2020-06-06 09:36:51','2020-06-06 09:36:51','2020-06-06 09:36:51'),(2259,65,NULL,'172.19.0.4','2020-06-06 10:32:04','2020-06-06 10:32:04','2020-06-06 10:32:04'),(2260,37,NULL,'172.19.0.4','2020-06-06 14:46:26','2020-06-06 14:46:26','2020-06-06 14:46:26'),(2261,43,NULL,'172.19.0.4','2020-06-06 15:35:37','2020-06-06 15:35:37','2020-06-06 15:35:37'),(2262,93,NULL,'172.19.0.4','2020-06-06 17:39:12','2020-06-06 17:39:12','2020-06-06 17:39:12'),(2263,14,NULL,'172.19.0.4','2020-06-06 18:59:41','2020-06-06 18:59:41','2020-06-06 18:59:41'),(2264,44,NULL,'172.19.0.4','2020-06-06 19:18:09','2020-06-06 19:18:09','2020-06-06 19:18:09'),(2265,124,NULL,'172.19.0.4','2020-06-06 19:45:29','2020-06-06 19:45:29','2020-06-06 19:45:29'),(2266,129,NULL,'172.19.0.4','2020-06-06 20:05:42','2020-06-06 20:05:42','2020-06-06 20:05:42'),(2267,130,NULL,'172.19.0.4','2020-06-06 20:06:08','2020-06-06 20:06:08','2020-06-06 20:06:08'),(2268,125,NULL,'172.19.0.4','2020-06-06 20:07:03','2020-06-06 20:07:03','2020-06-06 20:07:03'),(2269,127,NULL,'172.19.0.4','2020-06-06 20:07:20','2020-06-06 20:07:20','2020-06-06 20:07:20'),(2270,131,NULL,'172.19.0.4','2020-06-06 20:07:25','2020-06-06 20:07:25','2020-06-06 20:07:25'),(2271,128,NULL,'172.19.0.4','2020-06-06 20:07:30','2020-06-06 20:07:30','2020-06-06 20:07:30'),(2272,126,NULL,'172.19.0.4','2020-06-06 20:11:04','2020-06-06 20:11:04','2020-06-06 20:11:04'),(2273,15,NULL,'172.19.0.4','2020-06-06 20:11:38','2020-06-06 20:11:38','2020-06-06 20:11:38'),(2274,124,NULL,'172.19.0.4','2020-06-06 20:12:05','2020-06-06 20:12:05','2020-06-06 20:12:05'),(2275,123,NULL,'172.19.0.4','2020-06-06 20:18:03','2020-06-06 20:18:03','2020-06-06 20:18:03'),(2276,130,NULL,'172.19.0.4','2020-06-06 21:26:52','2020-06-06 21:26:52','2020-06-06 21:26:52'),(2277,131,NULL,'172.19.0.4','2020-06-06 21:45:06','2020-06-06 21:45:06','2020-06-06 21:45:06'),(2278,113,NULL,'172.19.0.4','2020-06-06 21:54:50','2020-06-06 21:54:50','2020-06-06 21:54:50'),(2279,48,NULL,'172.19.0.4','2020-06-06 22:36:36','2020-06-06 22:36:36','2020-06-06 22:36:36'),(2280,15,NULL,'172.19.0.4','2020-06-06 23:57:22','2020-06-06 23:57:22','2020-06-06 23:57:22'),(2281,111,NULL,'172.19.0.4','2020-06-07 02:38:55','2020-06-07 02:38:55','2020-06-07 02:38:55'),(2282,90,NULL,'172.19.0.4','2020-06-07 02:54:38','2020-06-07 02:54:38','2020-06-07 02:54:38'),(2283,91,NULL,'172.19.0.4','2020-06-07 03:10:22','2020-06-07 03:10:22','2020-06-07 03:10:22'),(2284,33,NULL,'172.19.0.4','2020-06-07 03:26:05','2020-06-07 03:26:05','2020-06-07 03:26:05'),(2285,117,NULL,'172.19.0.4','2020-06-07 03:57:31','2020-06-07 03:57:32','2020-06-07 03:57:32'),(2286,122,NULL,'172.19.0.4','2020-06-07 04:13:15','2020-06-07 04:13:15','2020-06-07 04:13:15'),(2287,48,NULL,'172.19.0.4','2020-06-07 04:43:58','2020-06-07 04:43:58','2020-06-07 04:43:58'),(2288,96,NULL,'172.19.0.4','2020-06-07 08:10:46','2020-06-07 08:10:46','2020-06-07 08:10:46'),(2289,28,NULL,'172.19.0.4','2020-06-07 08:55:46','2020-06-07 08:55:46','2020-06-07 08:55:46'),(2290,105,NULL,'172.19.0.4','2020-06-07 09:35:55','2020-06-07 09:35:55','2020-06-07 09:35:55'),(2291,105,NULL,'172.19.0.4','2020-06-07 09:37:36','2020-06-07 09:37:36','2020-06-07 09:37:36'),(2292,128,NULL,'172.19.0.4','2020-06-07 11:10:46','2020-06-07 11:10:46','2020-06-07 11:10:46'),(2293,123,NULL,'172.19.0.4','2020-06-07 14:29:12','2020-06-07 14:29:12','2020-06-07 14:29:12'),(2294,41,NULL,'42.156.138.28','2020-06-07 14:29:19','2020-06-07 14:29:19','2020-06-07 14:29:19'),(2295,46,NULL,'172.19.0.4','2020-06-07 14:59:12','2020-06-07 14:59:12','2020-06-07 14:59:12'),(2296,126,NULL,'172.19.0.4','2020-06-07 19:48:12','2020-06-07 19:48:12','2020-06-07 19:48:12'),(2297,131,NULL,'172.19.0.4','2020-06-07 19:52:04','2020-06-07 19:52:04','2020-06-07 19:52:04'),(2298,128,NULL,'172.19.0.4','2020-06-07 19:56:12','2020-06-07 19:56:12','2020-06-07 19:56:12'),(2299,21,NULL,'172.19.0.4','2020-06-07 20:54:51','2020-06-07 20:54:51','2020-06-07 20:54:51'),(2300,27,NULL,'172.19.0.4','2020-06-07 21:31:36','2020-06-07 21:31:36','2020-06-07 21:31:36'),(2301,129,NULL,'172.19.0.4','2020-06-07 22:38:16','2020-06-07 22:38:16','2020-06-07 22:38:16'),(2302,72,NULL,'172.19.0.4','2020-06-08 04:19:03','2020-06-08 04:19:03','2020-06-08 04:19:03'),(2303,89,NULL,'172.19.0.4','2020-06-08 05:19:36','2020-06-08 05:19:36','2020-06-08 05:19:36'),(2304,124,NULL,'172.19.0.4','2020-06-08 05:44:28','2020-06-08 05:44:28','2020-06-08 05:44:28'),(2305,129,NULL,'172.19.0.4','2020-06-08 05:44:51','2020-06-08 05:44:51','2020-06-08 05:44:51'),(2306,131,NULL,'172.19.0.4','2020-06-08 05:45:14','2020-06-08 05:45:14','2020-06-08 05:45:14'),(2307,130,NULL,'172.19.0.4','2020-06-08 05:45:37','2020-06-08 05:45:37','2020-06-08 05:45:37'),(2308,49,NULL,'172.19.0.4','2020-06-08 06:49:35','2020-06-08 06:49:35','2020-06-08 06:49:35'),(2309,31,NULL,'172.19.0.4','2020-06-08 07:12:05','2020-06-08 07:12:05','2020-06-08 07:12:05'),(2310,47,NULL,'172.19.0.4','2020-06-08 07:34:36','2020-06-08 07:34:36','2020-06-08 07:34:36'),(2311,130,NULL,'172.19.0.4','2020-06-08 07:57:06','2020-06-08 07:57:06','2020-06-08 07:57:06'),(2312,127,NULL,'172.19.0.4','2020-06-08 08:42:07','2020-06-08 08:42:07','2020-06-08 08:42:07'),(2313,105,NULL,'172.19.0.4','2020-06-08 08:57:25','2020-06-08 08:57:25','2020-06-08 08:57:25'),(2314,44,NULL,'172.19.0.4','2020-06-08 09:43:17','2020-06-08 09:43:17','2020-06-08 09:43:17'),(2315,105,NULL,'172.19.0.4','2020-06-08 10:32:17','2020-06-08 10:32:17','2020-06-08 10:32:17'),(2316,114,NULL,'172.19.0.4','2020-06-08 13:18:37','2020-06-08 13:18:37','2020-06-08 13:18:37'),(2317,111,NULL,'172.19.0.4','2020-06-08 17:13:02','2020-06-08 17:13:02','2020-06-08 17:13:02'),(2318,14,NULL,'172.19.0.4','2020-06-08 20:43:16','2020-06-08 20:43:16','2020-06-08 20:43:16'),(2319,88,NULL,'172.19.0.4','2020-06-08 22:41:41','2020-06-08 22:41:41','2020-06-08 22:41:41'),(2320,131,NULL,'172.19.0.4','2020-06-08 23:04:27','2020-06-08 23:04:27','2020-06-08 23:04:27'),(2321,65,NULL,'172.19.0.4','2020-06-08 23:34:19','2020-06-08 23:34:19','2020-06-08 23:34:19'),(2322,42,NULL,'172.19.0.4','2020-06-09 00:00:39','2020-06-09 00:00:39','2020-06-09 00:00:39'),(2323,21,NULL,'172.19.0.4','2020-06-09 01:19:45','2020-06-09 01:19:45','2020-06-09 01:19:45'),(2324,131,NULL,'172.19.0.4','2020-06-09 02:50:47','2020-06-09 02:50:47','2020-06-09 02:50:47'),(2325,48,NULL,'172.19.0.4','2020-06-09 05:50:17','2020-06-09 05:50:17','2020-06-09 05:50:17'),(2326,105,NULL,'172.19.0.4','2020-06-09 08:55:49','2020-06-09 08:55:49','2020-06-09 08:55:49'),(2327,105,NULL,'172.19.0.4','2020-06-09 08:56:15','2020-06-09 08:56:15','2020-06-09 08:56:15'),(2328,105,NULL,'172.19.0.4','2020-06-09 08:56:15','2020-06-09 08:56:15','2020-06-09 08:56:15'),(2329,23,NULL,'172.19.0.4','2020-06-09 10:09:29','2020-06-09 10:09:29','2020-06-09 10:09:29'),(2330,48,NULL,'172.19.0.4','2020-06-09 13:51:12','2020-06-09 13:51:12','2020-06-09 13:51:12'),(2331,52,NULL,'172.19.0.4','2020-06-09 17:54:39','2020-06-09 17:54:39','2020-06-09 17:54:39'),(2332,14,NULL,'172.19.0.4','2020-06-09 17:54:47','2020-06-09 17:54:47','2020-06-09 17:54:47'),(2333,52,NULL,'172.19.0.4','2020-06-09 17:54:54','2020-06-09 17:54:54','2020-06-09 17:54:54'),(2334,14,NULL,'172.19.0.4','2020-06-09 17:54:57','2020-06-09 17:54:57','2020-06-09 17:54:57'),(2335,105,NULL,'172.19.0.4','2020-06-09 17:54:59','2020-06-09 17:54:59','2020-06-09 17:54:59'),(2336,105,NULL,'172.19.0.4','2020-06-09 17:55:02','2020-06-09 17:55:02','2020-06-09 17:55:02'),(2337,131,NULL,'172.19.0.4','2020-06-09 17:55:05','2020-06-09 17:55:05','2020-06-09 17:55:05'),(2338,131,NULL,'172.19.0.4','2020-06-09 17:55:07','2020-06-09 17:55:07','2020-06-09 17:55:07'),(2339,130,NULL,'172.19.0.4','2020-06-09 17:55:08','2020-06-09 17:55:08','2020-06-09 17:55:08'),(2340,130,NULL,'172.19.0.4','2020-06-09 17:55:10','2020-06-09 17:55:10','2020-06-09 17:55:10'),(2341,129,NULL,'172.19.0.4','2020-06-09 17:55:11','2020-06-09 17:55:11','2020-06-09 17:55:11'),(2342,129,NULL,'172.19.0.4','2020-06-09 17:55:21','2020-06-09 17:55:21','2020-06-09 17:55:21'),(2343,128,NULL,'172.19.0.4','2020-06-09 17:55:25','2020-06-09 17:55:25','2020-06-09 17:55:25'),(2344,128,NULL,'172.19.0.4','2020-06-09 17:55:27','2020-06-09 17:55:27','2020-06-09 17:55:27'),(2345,127,NULL,'172.19.0.4','2020-06-09 17:55:28','2020-06-09 17:55:28','2020-06-09 17:55:28'),(2346,127,NULL,'172.19.0.4','2020-06-09 17:55:31','2020-06-09 17:55:31','2020-06-09 17:55:31'),(2347,126,NULL,'172.19.0.4','2020-06-09 17:55:35','2020-06-09 17:55:35','2020-06-09 17:55:35'),(2348,126,NULL,'172.19.0.4','2020-06-09 17:55:36','2020-06-09 17:55:36','2020-06-09 17:55:36'),(2349,125,NULL,'172.19.0.4','2020-06-09 17:55:38','2020-06-09 17:55:38','2020-06-09 17:55:38'),(2350,125,NULL,'172.19.0.4','2020-06-09 17:55:42','2020-06-09 17:55:42','2020-06-09 17:55:42'),(2351,97,NULL,'172.19.0.4','2020-06-09 17:56:33','2020-06-09 17:56:33','2020-06-09 17:56:33'),(2352,120,NULL,'172.19.0.4','2020-06-09 17:56:37','2020-06-09 17:56:37','2020-06-09 17:56:37'),(2353,91,NULL,'172.19.0.4','2020-06-09 17:56:39','2020-06-09 17:56:39','2020-06-09 17:56:39'),(2354,21,NULL,'172.19.0.4','2020-06-09 17:56:40','2020-06-09 17:56:40','2020-06-09 17:56:40'),(2355,93,NULL,'172.19.0.4','2020-06-09 17:56:43','2020-06-09 17:56:43','2020-06-09 17:56:43'),(2356,119,NULL,'172.19.0.4','2020-06-09 17:56:44','2020-06-09 17:56:44','2020-06-09 17:56:44'),(2357,42,NULL,'172.19.0.4','2020-06-09 17:56:46','2020-06-09 17:56:46','2020-06-09 17:56:46'),(2358,41,NULL,'172.19.0.4','2020-06-09 17:56:47','2020-06-09 17:56:47','2020-06-09 17:56:47'),(2359,100,NULL,'172.19.0.4','2020-06-09 17:56:50','2020-06-09 17:56:50','2020-06-09 17:56:50'),(2360,46,NULL,'172.19.0.4','2020-06-09 17:57:11','2020-06-09 17:57:11','2020-06-09 17:57:11'),(2361,48,NULL,'172.19.0.4','2020-06-09 17:57:12','2020-06-09 17:57:12','2020-06-09 17:57:12'),(2362,107,NULL,'172.19.0.4','2020-06-09 17:57:14','2020-06-09 17:57:14','2020-06-09 17:57:14'),(2363,99,NULL,'172.19.0.4','2020-06-09 17:57:16','2020-06-09 17:57:16','2020-06-09 17:57:16'),(2364,90,NULL,'172.19.0.4','2020-06-09 17:57:18','2020-06-09 17:57:18','2020-06-09 17:57:18'),(2365,45,NULL,'172.19.0.4','2020-06-09 17:57:20','2020-06-09 17:57:20','2020-06-09 17:57:20'),(2366,110,NULL,'172.19.0.4','2020-06-09 17:57:21','2020-06-09 17:57:21','2020-06-09 17:57:21'),(2367,108,NULL,'172.19.0.4','2020-06-09 17:57:23','2020-06-09 17:57:23','2020-06-09 17:57:23'),(2368,36,NULL,'172.19.0.4','2020-06-09 17:57:24','2020-06-09 17:57:24','2020-06-09 17:57:24'),(2369,95,NULL,'172.19.0.4','2020-06-09 17:57:26','2020-06-09 17:57:26','2020-06-09 17:57:26'),(2370,43,NULL,'172.19.0.4','2020-06-09 17:57:28','2020-06-09 17:57:28','2020-06-09 17:57:28'),(2371,35,NULL,'172.19.0.4','2020-06-09 17:57:30','2020-06-09 17:57:30','2020-06-09 17:57:30'),(2372,72,NULL,'172.19.0.4','2020-06-09 17:57:32','2020-06-09 17:57:32','2020-06-09 17:57:32'),(2373,115,NULL,'172.19.0.4','2020-06-09 17:57:33','2020-06-09 17:57:33','2020-06-09 17:57:33'),(2374,94,NULL,'172.19.0.4','2020-06-09 17:57:37','2020-06-09 17:57:37','2020-06-09 17:57:37'),(2375,96,NULL,'172.19.0.4','2020-06-09 17:57:38','2020-06-09 17:57:38','2020-06-09 17:57:38'),(2376,121,NULL,'172.19.0.4','2020-06-09 17:57:40','2020-06-09 17:57:40','2020-06-09 17:57:40'),(2377,112,NULL,'172.19.0.4','2020-06-09 17:57:41','2020-06-09 17:57:41','2020-06-09 17:57:41'),(2378,124,NULL,'172.19.0.4','2020-06-09 17:57:43','2020-06-09 17:57:43','2020-06-09 17:57:43'),(2379,124,NULL,'172.19.0.4','2020-06-09 17:57:45','2020-06-09 17:57:45','2020-06-09 17:57:45'),(2380,123,NULL,'172.19.0.4','2020-06-09 17:57:46','2020-06-09 17:57:46','2020-06-09 17:57:46'),(2381,123,NULL,'172.19.0.4','2020-06-09 17:57:51','2020-06-09 17:57:51','2020-06-09 17:57:51'),(2382,113,NULL,'172.19.0.4','2020-06-09 17:57:56','2020-06-09 17:57:56','2020-06-09 17:57:56'),(2383,114,NULL,'172.19.0.4','2020-06-09 17:57:59','2020-06-09 17:57:59','2020-06-09 17:57:59'),(2384,23,NULL,'172.19.0.4','2020-06-09 17:58:01','2020-06-09 17:58:01','2020-06-09 17:58:01'),(2385,23,NULL,'172.19.0.4','2020-06-09 17:58:03','2020-06-09 17:58:03','2020-06-09 17:58:03'),(2386,109,NULL,'172.19.0.4','2020-06-09 17:58:04','2020-06-09 17:58:04','2020-06-09 17:58:04'),(2387,98,NULL,'172.19.0.4','2020-06-09 17:58:06','2020-06-09 17:58:06','2020-06-09 17:58:06'),(2388,89,NULL,'172.19.0.4','2020-06-09 17:58:08','2020-06-09 17:58:08','2020-06-09 17:58:08'),(2389,93,NULL,'172.19.0.4','2020-06-09 17:58:10','2020-06-09 17:58:10','2020-06-09 17:58:10'),(2390,91,NULL,'172.19.0.4','2020-06-09 17:58:11','2020-06-09 17:58:11','2020-06-09 17:58:11'),(2391,88,NULL,'172.19.0.4','2020-06-09 17:58:13','2020-06-09 17:58:13','2020-06-09 17:58:13'),(2392,88,NULL,'172.19.0.4','2020-06-09 17:58:15','2020-06-09 17:58:15','2020-06-09 17:58:15'),(2393,72,NULL,'172.19.0.4','2020-06-09 17:58:16','2020-06-09 17:58:16','2020-06-09 17:58:16'),(2394,65,NULL,'172.19.0.4','2020-06-09 17:58:17','2020-06-09 17:58:17','2020-06-09 17:58:17'),(2395,65,NULL,'172.19.0.4','2020-06-09 17:58:19','2020-06-09 17:58:19','2020-06-09 17:58:19'),(2396,32,NULL,'172.19.0.4','2020-06-09 17:58:20','2020-06-09 17:58:20','2020-06-09 17:58:20'),(2397,44,NULL,'172.19.0.4','2020-06-09 17:58:22','2020-06-09 17:58:22','2020-06-09 17:58:22'),(2398,28,NULL,'172.19.0.4','2020-06-09 17:58:24','2020-06-09 17:58:24','2020-06-09 17:58:24'),(2399,104,NULL,'172.19.0.4','2020-06-09 17:58:25','2020-06-09 17:58:25','2020-06-09 17:58:25'),(2400,33,NULL,'172.19.0.4','2020-06-09 17:58:27','2020-06-09 17:58:27','2020-06-09 17:58:27'),(2401,50,NULL,'172.19.0.4','2020-06-09 17:58:29','2020-06-09 17:58:29','2020-06-09 17:58:29'),(2402,50,NULL,'172.19.0.4','2020-06-09 17:58:30','2020-06-09 17:58:30','2020-06-09 17:58:30'),(2403,49,NULL,'172.19.0.4','2020-06-09 17:58:32','2020-06-09 17:58:32','2020-06-09 17:58:32'),(2404,49,NULL,'172.19.0.4','2020-06-09 17:58:33','2020-06-09 17:58:33','2020-06-09 17:58:33'),(2405,48,NULL,'172.19.0.4','2020-06-09 17:58:35','2020-06-09 17:58:35','2020-06-09 17:58:35'),(2406,45,NULL,'172.19.0.4','2020-06-09 17:58:37','2020-06-09 17:58:37','2020-06-09 17:58:37'),(2407,33,NULL,'172.19.0.4','2020-06-09 17:58:38','2020-06-09 17:58:38','2020-06-09 17:58:38'),(2408,27,NULL,'172.19.0.4','2020-06-09 17:58:43','2020-06-09 17:58:43','2020-06-09 17:58:43'),(2409,117,NULL,'172.19.0.4','2020-06-09 17:58:45','2020-06-09 17:58:45','2020-06-09 17:58:45'),(2410,15,NULL,'172.19.0.4','2020-06-09 17:58:52','2020-06-09 17:58:52','2020-06-09 17:58:52'),(2411,42,NULL,'172.19.0.4','2020-06-09 17:58:56','2020-06-09 17:58:56','2020-06-09 17:58:56'),(2412,43,NULL,'172.19.0.4','2020-06-09 17:58:57','2020-06-09 17:58:57','2020-06-09 17:58:57'),(2413,32,NULL,'172.19.0.4','2020-06-09 17:59:02','2020-06-09 17:59:02','2020-06-09 17:59:02'),(2414,44,NULL,'172.19.0.4','2020-06-09 17:59:03','2020-06-09 17:59:03','2020-06-09 17:59:03'),(2415,21,NULL,'172.19.0.4','2020-06-09 17:59:07','2020-06-09 17:59:07','2020-06-09 17:59:07'),(2416,31,NULL,'172.19.0.4','2020-06-09 17:59:08','2020-06-09 17:59:08','2020-06-09 17:59:08'),(2417,106,NULL,'172.19.0.4','2020-06-09 17:59:10','2020-06-09 17:59:10','2020-06-09 17:59:10'),(2418,47,NULL,'172.19.0.4','2020-06-09 17:59:11','2020-06-09 17:59:11','2020-06-09 17:59:11'),(2419,122,NULL,'172.19.0.4','2020-06-09 17:59:13','2020-06-09 17:59:13','2020-06-09 17:59:13'),(2420,116,NULL,'172.19.0.4','2020-06-09 17:59:15','2020-06-09 17:59:15','2020-06-09 17:59:15'),(2421,101,NULL,'172.19.0.4','2020-06-09 17:59:16','2020-06-09 17:59:16','2020-06-09 17:59:16'),(2422,37,NULL,'172.19.0.4','2020-06-09 17:59:18','2020-06-09 17:59:18','2020-06-09 17:59:18'),(2423,1,NULL,'172.19.0.4','2020-06-09 17:59:27','2020-06-09 17:59:27','2020-06-09 17:59:27'),(2424,111,NULL,'172.19.0.4','2020-06-09 17:59:29','2020-06-09 17:59:29','2020-06-09 17:59:29'),(2425,31,NULL,'172.19.0.4','2020-06-09 17:59:35','2020-06-09 17:59:35','2020-06-09 17:59:35'),(2426,96,NULL,'172.19.0.4','2020-06-09 17:59:36','2020-06-09 17:59:36','2020-06-09 17:59:36'),(2427,46,NULL,'172.19.0.4','2020-06-09 17:59:37','2020-06-09 17:59:37','2020-06-09 17:59:37'),(2428,35,NULL,'172.19.0.4','2020-06-09 17:59:39','2020-06-09 17:59:39','2020-06-09 17:59:39'),(2429,28,NULL,'172.19.0.4','2020-06-09 17:59:41','2020-06-09 17:59:41','2020-06-09 17:59:41'),(2430,110,NULL,'172.19.0.4','2020-06-09 17:59:46','2020-06-09 17:59:46','2020-06-09 17:59:46'),(2431,104,NULL,'172.19.0.4','2020-06-09 17:59:47','2020-06-09 17:59:47','2020-06-09 17:59:47'),(2432,90,NULL,'172.19.0.4','2020-06-09 17:59:49','2020-06-09 17:59:49','2020-06-09 17:59:49'),(2433,47,NULL,'172.19.0.4','2020-06-09 17:59:50','2020-06-09 17:59:50','2020-06-09 17:59:50'),(2434,37,NULL,'172.19.0.4','2020-06-09 17:59:53','2020-06-09 17:59:53','2020-06-09 17:59:53'),(2435,36,NULL,'172.19.0.4','2020-06-09 17:59:55','2020-06-09 17:59:55','2020-06-09 17:59:55'),(2436,89,NULL,'172.19.0.4','2020-06-09 18:00:06','2020-06-09 18:00:06','2020-06-09 18:00:06'),(2437,15,NULL,'172.19.0.4','2020-06-09 18:00:07','2020-06-09 18:00:07','2020-06-09 18:00:07'),(2438,99,NULL,'172.19.0.4','2020-06-09 18:00:08','2020-06-09 18:00:08','2020-06-09 18:00:08'),(2439,98,NULL,'172.19.0.4','2020-06-09 18:00:21','2020-06-09 18:00:21','2020-06-09 18:00:21'),(2440,101,NULL,'172.19.0.4','2020-06-09 18:00:21','2020-06-09 18:00:21','2020-06-09 18:00:21'),(2441,100,NULL,'172.19.0.4','2020-06-09 18:00:23','2020-06-09 18:00:23','2020-06-09 18:00:23'),(2442,97,NULL,'172.19.0.4','2020-06-09 18:00:25','2020-06-09 18:00:25','2020-06-09 18:00:25'),(2443,95,NULL,'172.19.0.4','2020-06-09 18:00:26','2020-06-09 18:00:26','2020-06-09 18:00:26'),(2444,94,NULL,'172.19.0.4','2020-06-09 18:00:28','2020-06-09 18:00:28','2020-06-09 18:00:28'),(2445,109,NULL,'172.19.0.4','2020-06-09 18:00:30','2020-06-09 18:00:30','2020-06-09 18:00:30'),(2446,108,NULL,'172.19.0.4','2020-06-09 18:00:31','2020-06-09 18:00:31','2020-06-09 18:00:31'),(2447,107,NULL,'172.19.0.4','2020-06-09 18:00:33','2020-06-09 18:00:33','2020-06-09 18:00:33'),(2448,106,NULL,'172.19.0.4','2020-06-09 18:00:35','2020-06-09 18:00:35','2020-06-09 18:00:35'),(2449,46,NULL,'172.19.0.4','2020-06-09 18:36:30','2020-06-09 18:36:30','2020-06-09 18:36:30'),(2450,52,NULL,'172.19.0.4','2020-06-10 03:34:43','2020-06-10 03:34:43','2020-06-10 03:34:43'),(2451,112,NULL,'172.19.0.4','2020-06-10 06:44:06','2020-06-10 06:44:06','2020-06-10 06:44:06'),(2452,52,NULL,'172.19.0.4','2020-06-10 13:16:14','2020-06-10 13:16:14','2020-06-10 13:16:14'),(2453,90,NULL,'172.19.0.4','2020-06-10 14:11:29','2020-06-10 14:11:29','2020-06-10 14:11:29'),(2454,129,NULL,'172.19.0.4','2020-06-10 17:29:33','2020-06-10 17:29:33','2020-06-10 17:29:33'),(2455,130,NULL,'172.19.0.4','2020-06-10 17:29:41','2020-06-10 17:29:41','2020-06-10 17:29:41'),(2456,131,NULL,'172.19.0.4','2020-06-10 17:29:53','2020-06-10 17:29:53','2020-06-10 17:29:53'),(2457,111,NULL,'172.19.0.4','2020-06-10 17:44:49','2020-06-10 17:44:49','2020-06-10 17:44:49'),(2458,65,NULL,'172.19.0.4','2020-06-10 23:03:00','2020-06-10 23:03:00','2020-06-10 23:03:00'),(2459,105,NULL,'172.19.0.4','2020-06-11 00:36:38','2020-06-11 00:36:38','2020-06-11 00:36:38'),(2460,65,NULL,'172.19.0.4','2020-06-11 00:58:57','2020-06-11 00:58:57','2020-06-11 00:58:57'),(2461,41,NULL,'172.19.0.4','2020-06-11 06:56:53','2020-06-11 06:56:53','2020-06-11 06:56:53'),(2462,49,NULL,'172.19.0.4','2020-06-11 07:21:59','2020-06-11 07:21:59','2020-06-11 07:21:59'),(2463,65,NULL,'172.19.0.4','2020-06-11 07:23:12','2020-06-11 07:23:12','2020-06-11 07:23:12'),(2464,72,NULL,'172.19.0.4','2020-06-11 13:01:38','2020-06-11 13:01:38','2020-06-11 13:01:38'),(2465,65,NULL,'172.19.0.4','2020-06-11 13:06:56','2020-06-11 13:06:56','2020-06-11 13:06:56'),(2466,88,NULL,'172.19.0.4','2020-06-11 13:08:43','2020-06-11 13:08:43','2020-06-11 13:08:43'),(2467,14,NULL,'172.19.0.4','2020-06-11 14:09:27','2020-06-11 14:09:27','2020-06-11 14:09:27'),(2468,52,NULL,'172.19.0.4','2020-06-11 17:37:55','2020-06-11 17:37:56','2020-06-11 17:37:56'),(2469,14,NULL,'172.19.0.4','2020-06-11 17:37:55','2020-06-11 17:37:56','2020-06-11 17:37:56'),(2470,52,NULL,'172.19.0.4','2020-06-11 18:27:54','2020-06-11 18:28:01','2020-06-11 18:28:01'),(2471,42,NULL,'172.19.0.4','2020-06-11 19:41:41','2020-06-11 19:41:41','2020-06-11 19:41:41'),(2472,90,NULL,'172.19.0.4','2020-06-11 21:09:05','2020-06-11 21:09:05','2020-06-11 21:09:05'),(2473,116,NULL,'172.19.0.4','2020-06-11 22:23:54','2020-06-11 22:23:54','2020-06-11 22:23:54'),(2474,65,NULL,'172.19.0.4','2020-06-11 23:27:46','2020-06-11 23:27:46','2020-06-11 23:27:46'),(2475,32,NULL,'172.19.0.4','2020-06-12 02:27:46','2020-06-12 02:27:46','2020-06-12 02:27:46'),(2476,33,NULL,'172.19.0.4','2020-06-12 02:53:15','2020-06-12 02:53:15','2020-06-12 02:53:15'),(2477,110,NULL,'172.19.0.4','2020-06-12 04:06:16','2020-06-12 04:06:16','2020-06-12 04:06:16'),(2478,88,NULL,'172.19.0.4','2020-06-12 05:56:43','2020-06-12 05:56:43','2020-06-12 05:56:43'),(2479,116,NULL,'172.19.0.4','2020-06-12 06:02:39','2020-06-12 06:02:39','2020-06-12 06:02:39'),(2480,128,NULL,'172.19.0.4','2020-06-12 07:02:13','2020-06-12 07:02:13','2020-06-12 07:02:13'),(2481,126,NULL,'172.19.0.4','2020-06-12 07:03:01','2020-06-12 07:03:01','2020-06-12 07:03:01'),(2482,27,NULL,'172.19.0.4','2020-06-12 09:41:41','2020-06-12 09:41:41','2020-06-12 09:41:41'),(2483,131,NULL,'172.19.0.4','2020-06-12 12:04:20','2020-06-12 12:04:20','2020-06-12 12:04:20'),(2484,43,NULL,'172.19.0.4','2020-06-12 12:04:34','2020-06-12 12:04:34','2020-06-12 12:04:34'),(2485,112,NULL,'172.19.0.4','2020-06-12 12:04:52','2020-06-12 12:04:52','2020-06-12 12:04:52'),(2486,44,NULL,'172.19.0.4','2020-06-12 12:05:07','2020-06-12 12:05:07','2020-06-12 12:05:07'),(2487,28,NULL,'172.19.0.4','2020-06-12 12:05:21','2020-06-12 12:05:21','2020-06-12 12:05:21'),(2488,105,NULL,'172.19.0.4','2020-06-12 17:56:48','2020-06-12 17:56:48','2020-06-12 17:56:48'),(2489,1,NULL,'172.19.0.4','2020-06-12 19:12:18','2020-06-12 19:12:18','2020-06-12 19:12:18'),(2490,94,NULL,'172.19.0.4','2020-06-13 03:00:34','2020-06-13 03:00:34','2020-06-13 03:00:34'),(2491,65,NULL,'172.19.0.4','2020-06-13 07:28:05','2020-06-13 07:28:05','2020-06-13 07:28:05'),(2492,36,NULL,'172.19.0.4','2020-06-13 10:15:42','2020-06-13 10:15:42','2020-06-13 10:15:42'),(2493,52,NULL,'172.19.0.4','2020-06-13 10:24:00','2020-06-13 10:24:00','2020-06-13 10:24:00'),(2494,48,NULL,'172.19.0.4','2020-06-13 10:40:34','2020-06-13 10:40:34','2020-06-13 10:40:34'),(2495,94,NULL,'172.19.0.4','2020-06-13 17:11:10','2020-06-13 17:11:10','2020-06-13 17:11:10'),(2496,105,NULL,'172.19.0.4','2020-06-13 17:11:17','2020-06-13 17:11:17','2020-06-13 17:11:17'),(2497,93,NULL,'172.19.0.4','2020-06-13 17:11:35','2020-06-13 17:11:35','2020-06-13 17:11:35'),(2498,52,NULL,'172.19.0.4','2020-06-13 17:59:14','2020-06-13 17:59:14','2020-06-13 17:59:14'),(2499,52,NULL,'172.19.0.4','2020-06-13 17:59:16','2020-06-13 17:59:16','2020-06-13 17:59:16'),(2500,106,NULL,'172.19.0.4','2020-06-14 01:35:43','2020-06-14 01:35:43','2020-06-14 01:35:43'),(2501,52,NULL,'172.19.0.4','2020-06-14 02:40:11','2020-06-14 02:40:11','2020-06-14 02:40:11'),(2502,14,NULL,'172.19.0.4','2020-06-14 02:40:11','2020-06-14 02:40:11','2020-06-14 02:40:11'),(2503,130,NULL,'172.19.0.4','2020-06-14 02:40:20','2020-06-14 02:40:20','2020-06-14 02:40:20'),(2504,105,NULL,'172.19.0.4','2020-06-14 02:40:21','2020-06-14 02:40:21','2020-06-14 02:40:21'),(2505,131,NULL,'172.19.0.4','2020-06-14 02:40:21','2020-06-14 02:40:21','2020-06-14 02:40:21'),(2506,128,NULL,'172.19.0.4','2020-06-14 02:40:24','2020-06-14 02:40:24','2020-06-14 02:40:24'),(2507,129,NULL,'172.19.0.4','2020-06-14 02:40:25','2020-06-14 02:40:25','2020-06-14 02:40:25'),(2508,127,NULL,'172.19.0.4','2020-06-14 02:40:26','2020-06-14 02:40:26','2020-06-14 02:40:26'),(2509,126,NULL,'172.19.0.4','2020-06-14 02:40:29','2020-06-14 02:40:29','2020-06-14 02:40:29'),(2510,125,NULL,'172.19.0.4','2020-06-14 02:40:30','2020-06-14 02:40:30','2020-06-14 02:40:30'),(2511,120,NULL,'172.19.0.4','2020-06-14 02:40:55','2020-06-14 02:40:56','2020-06-14 02:40:56'),(2512,94,NULL,'172.19.0.4','2020-06-14 02:40:57','2020-06-14 02:40:57','2020-06-14 02:40:57'),(2513,88,NULL,'172.19.0.4','2020-06-14 02:41:00','2020-06-14 02:41:00','2020-06-14 02:41:00'),(2514,98,NULL,'172.19.0.4','2020-06-14 02:41:00','2020-06-14 02:41:00','2020-06-14 02:41:00'),(2515,95,NULL,'172.19.0.4','2020-06-14 02:41:02','2020-06-14 02:41:02','2020-06-14 02:41:02'),(2516,45,NULL,'172.19.0.4','2020-06-14 02:41:02','2020-06-14 02:41:02','2020-06-14 02:41:02'),(2517,41,NULL,'172.19.0.4','2020-06-14 02:41:03','2020-06-14 02:41:03','2020-06-14 02:41:03'),(2518,15,NULL,'172.19.0.4','2020-06-14 02:41:04','2020-06-14 02:41:04','2020-06-14 02:41:04'),(2519,109,NULL,'172.19.0.4','2020-06-14 02:41:05','2020-06-14 02:41:05','2020-06-14 02:41:05'),(2520,97,NULL,'172.19.0.4','2020-06-14 02:41:06','2020-06-14 02:41:06','2020-06-14 02:41:06'),(2521,91,NULL,'172.19.0.4','2020-06-14 03:28:59','2020-06-14 03:28:59','2020-06-14 03:28:59'),(2522,96,NULL,'172.19.0.4','2020-06-14 06:02:03','2020-06-14 06:02:03','2020-06-14 06:02:03'),(2523,125,NULL,'172.19.0.4','2020-06-14 07:21:28','2020-06-14 07:21:28','2020-06-14 07:21:28'),(2524,130,NULL,'172.19.0.4','2020-06-14 08:32:57','2020-06-14 08:32:57','2020-06-14 08:32:57'),(2525,129,NULL,'172.19.0.4','2020-06-14 09:49:46','2020-06-14 09:49:46','2020-06-14 09:49:46'),(2526,104,NULL,'172.19.0.4','2020-06-14 10:09:56','2020-06-14 10:09:56','2020-06-14 10:09:56'),(2527,127,NULL,'172.19.0.4','2020-06-14 11:04:32','2020-06-14 11:04:32','2020-06-14 11:04:32'),(2528,52,NULL,'172.19.0.4','2020-06-14 11:24:06','2020-06-14 11:24:06','2020-06-14 11:24:06'),(2529,131,NULL,'172.19.0.4','2020-06-14 12:20:18','2020-06-14 12:20:18','2020-06-14 12:20:18'),(2530,90,NULL,'172.19.0.4','2020-06-14 12:54:05','2020-06-14 12:54:05','2020-06-14 12:54:05'),(2531,126,NULL,'172.19.0.4','2020-06-14 13:40:47','2020-06-14 13:40:47','2020-06-14 13:40:47'),(2532,128,NULL,'172.19.0.4','2020-06-14 14:51:53','2020-06-14 14:51:53','2020-06-14 14:51:53'),(2533,114,NULL,'172.19.0.4','2020-06-14 16:09:02','2020-06-14 16:09:02','2020-06-14 16:09:02'),(2534,105,NULL,'172.19.0.4','2020-06-14 17:23:26','2020-06-14 17:23:26','2020-06-14 17:23:26'),(2535,27,NULL,'172.19.0.4','2020-06-14 21:18:39','2020-06-14 21:18:39','2020-06-14 21:18:39'),(2536,94,NULL,'172.19.0.4','2020-06-15 08:03:57','2020-06-15 08:03:57','2020-06-15 08:03:57'),(2537,32,NULL,'172.19.0.4','2020-06-15 09:43:34','2020-06-15 09:43:34','2020-06-15 09:43:34'),(2538,65,NULL,'172.19.0.4','2020-06-15 10:01:22','2020-06-15 10:01:22','2020-06-15 10:01:22'),(2539,125,NULL,'172.19.0.4','2020-06-15 10:22:51','2020-06-15 10:22:51','2020-06-15 10:22:51'),(2540,52,NULL,'172.19.0.4','2020-06-15 10:22:59','2020-06-15 10:22:59','2020-06-15 10:22:59'),(2541,126,NULL,'172.19.0.4','2020-06-15 10:23:09','2020-06-15 10:23:09','2020-06-15 10:23:09'),(2542,52,NULL,'172.19.0.4','2020-06-15 10:23:22','2020-06-15 10:23:22','2020-06-15 10:23:22'),(2543,129,NULL,'172.19.0.4','2020-06-15 10:24:40','2020-06-15 10:24:40','2020-06-15 10:24:40'),(2544,127,NULL,'172.19.0.4','2020-06-15 10:25:48','2020-06-15 10:25:48','2020-06-15 10:25:48'),(2545,101,NULL,'172.19.0.4','2020-06-15 10:25:54','2020-06-15 10:25:54','2020-06-15 10:25:54'),(2546,88,NULL,'172.19.0.4','2020-06-15 10:34:42','2020-06-15 10:34:42','2020-06-15 10:34:42'),(2547,49,NULL,'172.19.0.4','2020-06-15 11:32:35','2020-06-15 11:32:35','2020-06-15 11:32:35'),(2548,52,NULL,'172.19.0.4','2020-06-15 12:12:36','2020-06-15 12:12:36','2020-06-15 12:12:36'),(2549,125,NULL,'172.19.0.4','2020-06-15 15:28:31','2020-06-15 15:28:31','2020-06-15 15:28:31'),(2550,88,NULL,'172.19.0.4','2020-06-15 15:34:39','2020-06-15 15:34:39','2020-06-15 15:34:39'),(2551,116,NULL,'172.19.0.4','2020-06-15 16:30:01','2020-06-15 16:30:01','2020-06-15 16:30:01'),(2552,99,NULL,'172.19.0.4','2020-06-15 19:22:45','2020-06-15 19:22:45','2020-06-15 19:22:45'),(2553,96,NULL,'172.19.0.4','2020-06-15 21:10:44','2020-06-15 21:10:44','2020-06-15 21:10:44'),(2554,130,NULL,'172.19.0.4','2020-06-15 21:12:58','2020-06-15 21:12:58','2020-06-15 21:12:58'),(2555,48,NULL,'172.19.0.4','2020-06-15 21:14:29','2020-06-15 21:14:29','2020-06-15 21:14:29'),(2556,126,NULL,'172.19.0.4','2020-06-15 21:15:12','2020-06-15 21:15:12','2020-06-15 21:15:12'),(2557,114,NULL,'172.19.0.4','2020-06-15 21:17:36','2020-06-15 21:17:36','2020-06-15 21:17:36'),(2558,99,NULL,'172.19.0.4','2020-06-15 21:20:01','2020-06-15 21:20:01','2020-06-15 21:20:01'),(2559,97,NULL,'172.19.0.4','2020-06-15 21:21:58','2020-06-15 21:21:58','2020-06-15 21:21:58'),(2560,95,NULL,'172.19.0.4','2020-06-15 21:23:57','2020-06-15 21:23:57','2020-06-15 21:23:57'),(2561,108,NULL,'172.19.0.4','2020-06-15 21:25:05','2020-06-15 21:25:05','2020-06-15 21:25:05'),(2562,107,NULL,'172.19.0.4','2020-06-15 21:26:12','2020-06-15 21:26:12','2020-06-15 21:26:12'),(2563,104,NULL,'172.19.0.4','2020-06-15 21:27:24','2020-06-15 21:27:24','2020-06-15 21:27:24'),(2564,93,NULL,'172.19.0.4','2020-06-15 21:31:19','2020-06-15 21:31:19','2020-06-15 21:31:19'),(2565,91,NULL,'172.19.0.4','2020-06-15 21:31:47','2020-06-15 21:31:47','2020-06-15 21:31:47'),(2566,94,NULL,'172.19.0.4','2020-06-15 21:32:09','2020-06-15 21:32:09','2020-06-15 21:32:09'),(2567,117,NULL,'172.19.0.4','2020-06-15 21:32:32','2020-06-15 21:32:32','2020-06-15 21:32:32'),(2568,119,NULL,'172.19.0.4','2020-06-15 21:33:03','2020-06-15 21:33:03','2020-06-15 21:33:03'),(2569,123,NULL,'172.19.0.4','2020-06-15 21:33:35','2020-06-15 21:33:35','2020-06-15 21:33:35'),(2570,122,NULL,'172.19.0.4','2020-06-15 22:39:21','2020-06-15 22:39:21','2020-06-15 22:39:21'),(2571,98,NULL,'172.19.0.4','2020-06-16 01:32:43','2020-06-16 01:32:43','2020-06-16 01:32:43'),(2572,96,NULL,'172.19.0.4','2020-06-16 04:10:36','2020-06-16 04:10:36','2020-06-16 04:10:36'),(2573,108,NULL,'172.19.0.4','2020-06-16 05:21:04','2020-06-16 05:21:04','2020-06-16 05:21:04'),(2574,119,NULL,'172.19.0.4','2020-06-16 06:40:46','2020-06-16 06:40:46','2020-06-16 06:40:46'),(2575,131,NULL,'172.19.0.4','2020-06-16 07:42:47','2020-06-16 07:42:47','2020-06-16 07:42:47'),(2576,124,NULL,'172.19.0.4','2020-06-16 07:55:23','2020-06-16 07:55:23','2020-06-16 07:55:23'),(2577,125,NULL,'172.19.0.4','2020-06-16 09:17:21','2020-06-16 09:17:21','2020-06-16 09:17:21'),(2578,111,NULL,'172.19.0.4','2020-06-16 10:30:15','2020-06-16 10:30:15','2020-06-16 10:30:15'),(2579,44,NULL,'172.19.0.4','2020-06-16 10:50:22','2020-06-16 10:50:22','2020-06-16 10:50:22'),(2580,52,NULL,'172.19.0.4','2020-06-16 11:34:42','2020-06-16 11:34:42','2020-06-16 11:34:42'),(2581,131,NULL,'172.19.0.4','2020-06-16 11:34:45','2020-06-16 11:34:45','2020-06-16 11:34:45'),(2582,105,NULL,'172.19.0.4','2020-06-16 11:34:45','2020-06-16 11:34:46','2020-06-16 11:34:46'),(2583,130,NULL,'172.19.0.4','2020-06-16 11:34:46','2020-06-16 11:34:46','2020-06-16 11:34:46'),(2584,14,NULL,'172.19.0.4','2020-06-16 11:34:46','2020-06-16 11:34:47','2020-06-16 11:34:47'),(2585,129,NULL,'172.19.0.4','2020-06-16 11:34:47','2020-06-16 11:34:48','2020-06-16 11:34:48'),(2586,128,NULL,'172.19.0.4','2020-06-16 11:34:48','2020-06-16 11:34:48','2020-06-16 11:34:48'),(2587,127,NULL,'172.19.0.4','2020-06-16 11:34:52','2020-06-16 11:34:52','2020-06-16 11:34:52'),(2588,126,NULL,'172.19.0.4','2020-06-16 11:34:59','2020-06-16 11:34:59','2020-06-16 11:34:59'),(2589,125,NULL,'172.19.0.4','2020-06-16 11:35:00','2020-06-16 11:35:00','2020-06-16 11:35:00'),(2590,119,NULL,'172.19.0.4','2020-06-16 11:35:23','2020-06-16 11:35:23','2020-06-16 11:35:23'),(2591,42,NULL,'172.19.0.4','2020-06-16 11:35:25','2020-06-16 11:35:25','2020-06-16 11:35:25'),(2592,50,NULL,'172.19.0.4','2020-06-16 11:35:26','2020-06-16 11:35:26','2020-06-16 11:35:26'),(2593,41,NULL,'172.19.0.4','2020-06-16 11:35:26','2020-06-16 11:35:26','2020-06-16 11:35:26'),(2594,31,NULL,'172.19.0.4','2020-06-16 11:35:27','2020-06-16 11:35:27','2020-06-16 11:35:27'),(2595,49,NULL,'172.19.0.4','2020-06-16 11:35:29','2020-06-16 11:35:29','2020-06-16 11:35:29'),(2596,120,NULL,'172.19.0.4','2020-06-16 11:35:32','2020-06-16 11:35:32','2020-06-16 11:35:32'),(2597,129,NULL,'172.19.0.4','2020-06-16 11:40:16','2020-06-16 11:40:16','2020-06-16 11:40:16'),(2598,127,NULL,'172.19.0.4','2020-06-16 13:05:58','2020-06-16 13:05:58','2020-06-16 13:05:58'),(2599,116,NULL,'172.19.0.4','2020-06-16 14:14:53','2020-06-16 14:14:53','2020-06-16 14:14:53'),(2600,88,NULL,'172.19.0.4','2020-06-16 15:15:19','2020-06-16 15:15:19','2020-06-16 15:15:19'),(2601,95,NULL,'172.19.0.4','2020-06-16 15:18:01','2020-06-16 15:18:01','2020-06-16 15:18:01'),(2602,106,NULL,'172.19.0.4','2020-06-16 15:25:28','2020-06-16 15:25:28','2020-06-16 15:25:28'),(2603,110,NULL,'172.19.0.4','2020-06-16 16:57:48','2020-06-16 16:57:48','2020-06-16 16:57:48'),(2604,90,NULL,'172.19.0.4','2020-06-16 17:29:40','2020-06-16 17:29:40','2020-06-16 17:29:40'),(2605,101,NULL,'172.19.0.4','2020-06-16 17:58:33','2020-06-16 17:58:33','2020-06-16 17:58:33'),(2606,120,NULL,'172.19.0.4','2020-06-16 18:04:08','2020-06-16 18:04:08','2020-06-16 18:04:08'),(2607,131,NULL,'172.19.0.4','2020-06-16 19:33:46','2020-06-16 19:33:46','2020-06-16 19:33:46'),(2608,121,NULL,'172.19.0.4','2020-06-16 20:23:40','2020-06-16 20:23:40','2020-06-16 20:23:40'),(2609,113,NULL,'172.19.0.4','2020-06-16 21:41:08','2020-06-16 21:41:08','2020-06-16 21:41:08'),(2610,109,NULL,'172.19.0.4','2020-06-16 23:02:08','2020-06-16 23:02:08','2020-06-16 23:02:08'),(2611,105,NULL,'172.19.0.4','2020-06-16 23:11:56','2020-06-16 23:11:56','2020-06-16 23:11:56'),(2612,111,NULL,'172.19.0.4','2020-06-17 00:02:14','2020-06-17 00:02:14','2020-06-17 00:02:14'),(2613,119,NULL,'172.19.0.4','2020-06-17 00:02:25','2020-06-17 00:02:25','2020-06-17 00:02:25'),(2614,115,NULL,'172.19.0.4','2020-06-17 00:02:38','2020-06-17 00:02:38','2020-06-17 00:02:38'),(2615,98,NULL,'172.19.0.4','2020-06-17 00:06:17','2020-06-17 00:06:17','2020-06-17 00:06:17'),(2616,131,NULL,'172.19.0.4','2020-06-17 01:34:37','2020-06-17 01:34:37','2020-06-17 01:34:37'),(2617,72,NULL,'172.19.0.4','2020-06-17 01:43:48','2020-06-17 01:43:48','2020-06-17 01:43:48'),(2618,126,NULL,'172.19.0.4','2020-06-17 02:29:41','2020-06-17 02:29:41','2020-06-17 02:29:41'),(2619,99,NULL,'172.19.0.4','2020-06-17 03:32:35','2020-06-17 03:32:35','2020-06-17 03:32:35'),(2620,128,NULL,'172.19.0.4','2020-06-17 04:01:54','2020-06-17 04:01:54','2020-06-17 04:01:54'),(2621,120,NULL,'172.19.0.4','2020-06-17 04:04:26','2020-06-17 04:04:26','2020-06-17 04:04:26'),(2622,105,NULL,'172.19.0.4','2020-06-17 04:07:17','2020-06-17 04:07:17','2020-06-17 04:07:17'),(2623,104,NULL,'172.19.0.4','2020-06-17 04:15:20','2020-06-17 04:15:20','2020-06-17 04:15:20'),(2624,100,NULL,'172.19.0.4','2020-06-17 05:14:11','2020-06-17 05:14:11','2020-06-17 05:14:11'),(2625,123,NULL,'172.19.0.4','2020-06-17 05:18:44','2020-06-17 05:18:44','2020-06-17 05:18:44'),(2626,126,NULL,'172.19.0.4','2020-06-17 05:26:22','2020-06-17 05:26:22','2020-06-17 05:26:22'),(2627,122,NULL,'172.19.0.4','2020-06-17 05:26:26','2020-06-17 05:26:26','2020-06-17 05:26:26'),(2628,115,NULL,'172.19.0.4','2020-06-17 06:30:36','2020-06-17 06:30:37','2020-06-17 06:30:37'),(2629,112,NULL,'172.19.0.4','2020-06-17 07:50:10','2020-06-17 07:50:10','2020-06-17 07:50:10'),(2630,109,NULL,'172.19.0.4','2020-06-17 08:46:10','2020-06-17 08:46:10','2020-06-17 08:46:10'),(2631,119,NULL,'172.19.0.4','2020-06-17 08:47:44','2020-06-17 08:47:44','2020-06-17 08:47:44'),(2632,47,NULL,'172.19.0.4','2020-06-17 09:04:57','2020-06-17 09:04:57','2020-06-17 09:04:57'),(2633,88,NULL,'172.19.0.4','2020-06-17 09:15:08','2020-06-17 09:15:08','2020-06-17 09:15:08'),(2634,72,NULL,'172.19.0.4','2020-06-17 09:16:37','2020-06-17 09:16:37','2020-06-17 09:16:37'),(2635,105,NULL,'172.19.0.4','2020-06-17 09:32:18','2020-06-17 09:32:18','2020-06-17 09:32:18'),(2636,123,NULL,'172.19.0.4','2020-06-17 09:48:53','2020-06-17 09:48:53','2020-06-17 09:48:53'),(2637,121,NULL,'172.19.0.4','2020-06-17 11:07:13','2020-06-17 11:07:13','2020-06-17 11:07:13'),(2638,129,NULL,'172.19.0.4','2020-06-17 11:07:17','2020-06-17 11:07:17','2020-06-17 11:07:17'),(2639,125,NULL,'172.19.0.4','2020-06-17 11:07:26','2020-06-17 11:07:26','2020-06-17 11:07:26'),(2640,114,NULL,'172.19.0.4','2020-06-17 11:13:03','2020-06-17 11:13:03','2020-06-17 11:13:03'),(2641,42,NULL,'172.19.0.4','2020-06-17 11:22:14','2020-06-17 11:22:14','2020-06-17 11:22:14'),(2642,50,NULL,'172.19.0.4','2020-06-17 11:22:23','2020-06-17 11:22:23','2020-06-17 11:22:23'),(2643,117,NULL,'172.19.0.4','2020-06-17 11:30:52','2020-06-17 11:30:52','2020-06-17 11:30:52'),(2644,113,NULL,'172.19.0.4','2020-06-17 11:30:56','2020-06-17 11:30:56','2020-06-17 11:30:56'),(2645,121,NULL,'172.19.0.4','2020-06-17 14:29:43','2020-06-17 14:29:43','2020-06-17 14:29:43'),(2646,129,NULL,'172.19.0.4','2020-06-17 16:19:23','2020-06-17 16:19:23','2020-06-17 16:19:23'),(2647,52,NULL,'172.19.0.4','2020-06-17 16:43:18','2020-06-17 16:43:18','2020-06-17 16:43:18'),(2648,14,NULL,'172.19.0.4','2020-06-17 16:51:45','2020-06-17 16:51:45','2020-06-17 16:51:45'),(2649,90,NULL,'172.19.0.4','2020-06-17 17:22:29','2020-06-17 17:22:29','2020-06-17 17:22:29'),(2650,99,NULL,'172.19.0.4','2020-06-17 18:04:05','2020-06-17 18:04:05','2020-06-17 18:04:05'),(2651,99,NULL,'172.19.0.4','2020-06-17 18:40:42','2020-06-17 18:40:42','2020-06-17 18:40:42'),(2652,21,NULL,'172.19.0.4','2020-06-17 18:42:02','2020-06-17 18:42:02','2020-06-17 18:42:02'),(2653,90,NULL,'172.19.0.4','2020-06-17 19:23:24','2020-06-17 19:23:24','2020-06-17 19:23:24'),(2654,27,NULL,'172.19.0.4','2020-06-17 20:39:44','2020-06-17 20:39:44','2020-06-17 20:39:44'),(2655,112,NULL,'172.19.0.4','2020-06-17 23:12:00','2020-06-17 23:12:00','2020-06-17 23:12:00'),(2656,106,NULL,'172.19.0.4','2020-06-18 00:18:16','2020-06-18 00:18:16','2020-06-18 00:18:16'),(2657,105,NULL,'172.19.0.4','2020-06-18 00:18:23','2020-06-18 00:18:23','2020-06-18 00:18:23'),(2658,49,NULL,'172.19.0.4','2020-06-18 00:18:24','2020-06-18 00:18:24','2020-06-18 00:18:24'),(2659,93,NULL,'172.19.0.4','2020-06-18 00:18:36','2020-06-18 00:18:36','2020-06-18 00:18:36'),(2660,49,NULL,'172.19.0.4','2020-06-18 00:18:37','2020-06-18 00:18:37','2020-06-18 00:18:37'),(2661,108,NULL,'172.19.0.4','2020-06-18 00:18:38','2020-06-18 00:18:38','2020-06-18 00:18:38'),(2662,105,NULL,'172.19.0.4','2020-06-18 00:18:40','2020-06-18 00:18:40','2020-06-18 00:18:40'),(2663,90,NULL,'172.19.0.4','2020-06-18 00:18:44','2020-06-18 00:18:45','2020-06-18 00:18:45'),(2664,94,NULL,'172.19.0.4','2020-06-18 00:18:45','2020-06-18 00:18:45','2020-06-18 00:18:45'),(2665,91,NULL,'172.19.0.4','2020-06-18 00:18:47','2020-06-18 00:18:47','2020-06-18 00:18:47'),(2666,105,NULL,'172.19.0.4','2020-06-18 00:18:54','2020-06-18 00:18:54','2020-06-18 00:18:54'),(2667,105,NULL,'172.19.0.4','2020-06-18 00:18:55','2020-06-18 00:18:55','2020-06-18 00:18:55'),(2668,109,NULL,'172.19.0.4','2020-06-18 00:18:55','2020-06-18 00:18:55','2020-06-18 00:18:55'),(2669,109,NULL,'172.19.0.4','2020-06-18 00:19:09','2020-06-18 00:19:09','2020-06-18 00:19:09'),(2670,46,NULL,'172.19.0.4','2020-06-18 00:19:09','2020-06-18 00:19:10','2020-06-18 00:19:10'),(2671,37,NULL,'172.19.0.4','2020-06-18 00:19:19','2020-06-18 00:19:20','2020-06-18 00:19:20'),(2672,94,NULL,'172.19.0.4','2020-06-18 00:19:20','2020-06-18 00:19:20','2020-06-18 00:19:20'),(2673,100,NULL,'172.19.0.4','2020-06-18 00:19:26','2020-06-18 00:19:27','2020-06-18 00:19:27'),(2674,48,NULL,'172.19.0.4','2020-06-18 00:19:27','2020-06-18 00:19:27','2020-06-18 00:19:27'),(2675,108,NULL,'172.19.0.4','2020-06-18 00:19:28','2020-06-18 00:19:28','2020-06-18 00:19:28'),(2676,35,NULL,'172.19.0.4','2020-06-18 00:19:37','2020-06-18 00:19:37','2020-06-18 00:19:37'),(2677,105,NULL,'172.19.0.4','2020-06-18 00:19:39','2020-06-18 00:19:40','2020-06-18 00:19:40'),(2678,107,NULL,'172.19.0.4','2020-06-18 00:19:40','2020-06-18 00:19:40','2020-06-18 00:19:40'),(2679,91,NULL,'172.19.0.4','2020-06-18 00:19:45','2020-06-18 00:19:46','2020-06-18 00:19:46'),(2680,91,NULL,'172.19.0.4','2020-06-18 00:19:46','2020-06-18 00:19:47','2020-06-18 00:19:47'),(2681,108,NULL,'172.19.0.4','2020-06-18 00:19:48','2020-06-18 00:19:50','2020-06-18 00:19:50'),(2682,46,NULL,'172.19.0.4','2020-06-18 00:19:56','2020-06-18 00:19:57','2020-06-18 00:19:57'),(2683,89,NULL,'172.19.0.4','2020-06-18 00:19:57','2020-06-18 00:19:58','2020-06-18 00:19:58'),(2684,31,NULL,'172.19.0.4','2020-06-18 00:20:00','2020-06-18 00:20:05','2020-06-18 00:20:05'),(2685,46,NULL,'172.19.0.4','2020-06-18 00:20:01','2020-06-18 00:20:05','2020-06-18 00:20:05'),(2686,46,NULL,'172.19.0.4','2020-06-18 00:21:03','2020-06-18 00:21:04','2020-06-18 00:21:04'),(2687,131,NULL,'172.19.0.4','2020-06-18 00:21:04','2020-06-18 00:21:04','2020-06-18 00:21:04'),(2688,37,NULL,'172.19.0.4','2020-06-18 00:21:04','2020-06-18 00:21:05','2020-06-18 00:21:05'),(2689,72,NULL,'172.19.0.4','2020-06-18 00:21:07','2020-06-18 00:21:07','2020-06-18 00:21:07'),(2690,105,NULL,'172.19.0.4','2020-06-18 00:21:12','2020-06-18 00:21:12','2020-06-18 00:21:12'),(2691,32,NULL,'172.19.0.4','2020-06-18 00:21:15','2020-06-18 00:21:15','2020-06-18 00:21:15'),(2692,131,NULL,'172.19.0.4','2020-06-18 00:21:16','2020-06-18 00:21:16','2020-06-18 00:21:16'),(2693,131,NULL,'172.19.0.4','2020-06-18 00:21:21','2020-06-18 00:21:21','2020-06-18 00:21:21'),(2694,108,NULL,'172.19.0.4','2020-06-18 00:21:22','2020-06-18 00:21:22','2020-06-18 00:21:22'),(2695,131,NULL,'172.19.0.4','2020-06-18 00:21:26','2020-06-18 00:21:26','2020-06-18 00:21:26'),(2696,130,NULL,'172.19.0.4','2020-06-18 00:21:31','2020-06-18 00:21:31','2020-06-18 00:21:31'),(2697,130,NULL,'172.19.0.4','2020-06-18 00:21:33','2020-06-18 00:21:33','2020-06-18 00:21:33'),(2698,72,NULL,'172.19.0.4','2020-06-18 00:21:35','2020-06-18 00:21:35','2020-06-18 00:21:35'),(2699,37,NULL,'172.19.0.4','2020-06-18 00:21:37','2020-06-18 00:21:38','2020-06-18 00:21:38'),(2700,130,NULL,'172.19.0.4','2020-06-18 00:21:39','2020-06-18 00:21:39','2020-06-18 00:21:39'),(2701,131,NULL,'172.19.0.4','2020-06-18 00:21:40','2020-06-18 00:21:40','2020-06-18 00:21:40'),(2702,107,NULL,'172.19.0.4','2020-06-18 00:21:43','2020-06-18 00:21:43','2020-06-18 00:21:43'),(2703,124,NULL,'172.19.0.4','2020-06-18 00:21:47','2020-06-18 00:21:47','2020-06-18 00:21:47'),(2704,130,NULL,'172.19.0.4','2020-06-18 00:21:47','2020-06-18 00:21:47','2020-06-18 00:21:47'),(2705,130,NULL,'172.19.0.4','2020-06-18 00:21:50','2020-06-18 00:21:50','2020-06-18 00:21:50'),(2706,131,NULL,'172.19.0.4','2020-06-18 00:21:50','2020-06-18 00:21:50','2020-06-18 00:21:50'),(2707,104,NULL,'172.19.0.4','2020-06-18 00:21:57','2020-06-18 00:21:57','2020-06-18 00:21:57'),(2708,105,NULL,'172.19.0.4','2020-06-18 00:21:57','2020-06-18 00:21:57','2020-06-18 00:21:57'),(2709,31,NULL,'172.19.0.4','2020-06-18 00:22:00','2020-06-18 00:22:00','2020-06-18 00:22:00'),(2710,33,NULL,'172.19.0.4','2020-06-18 00:22:01','2020-06-18 00:22:01','2020-06-18 00:22:01'),(2711,131,NULL,'172.19.0.4','2020-06-18 00:22:04','2020-06-18 00:22:04','2020-06-18 00:22:04'),(2712,130,NULL,'172.19.0.4','2020-06-18 00:22:09','2020-06-18 00:22:09','2020-06-18 00:22:09'),(2713,130,NULL,'172.19.0.4','2020-06-18 00:22:20','2020-06-18 00:22:20','2020-06-18 00:22:20'),(2714,27,NULL,'172.19.0.4','2020-06-18 00:22:22','2020-06-18 00:22:22','2020-06-18 00:22:22'),(2715,32,NULL,'172.19.0.4','2020-06-18 00:22:28','2020-06-18 00:22:28','2020-06-18 00:22:28'),(2716,131,NULL,'172.19.0.4','2020-06-18 00:22:38','2020-06-18 00:22:38','2020-06-18 00:22:38'),(2717,28,NULL,'172.19.0.4','2020-06-18 00:22:51','2020-06-18 00:22:51','2020-06-18 00:22:51'),(2718,131,NULL,'172.19.0.4','2020-06-18 00:22:51','2020-06-18 00:22:51','2020-06-18 00:22:51'),(2719,28,NULL,'172.19.0.4','2020-06-18 00:22:57','2020-06-18 00:22:57','2020-06-18 00:22:57'),(2720,32,NULL,'172.19.0.4','2020-06-18 00:23:01','2020-06-18 00:23:02','2020-06-18 00:23:02'),(2721,130,NULL,'172.19.0.4','2020-06-18 00:23:03','2020-06-18 00:23:03','2020-06-18 00:23:03'),(2722,131,NULL,'172.19.0.4','2020-06-18 00:23:05','2020-06-18 00:23:05','2020-06-18 00:23:05'),(2723,27,NULL,'172.19.0.4','2020-06-18 00:23:18','2020-06-18 00:23:18','2020-06-18 00:23:18'),(2724,31,NULL,'172.19.0.4','2020-06-18 00:23:20','2020-06-18 00:23:21','2020-06-18 00:23:21'),(2725,130,NULL,'172.19.0.4','2020-06-18 00:23:28','2020-06-18 00:23:28','2020-06-18 00:23:28'),(2726,129,NULL,'172.19.0.4','2020-06-18 00:23:29','2020-06-18 00:23:29','2020-06-18 00:23:29'),(2727,130,NULL,'172.19.0.4','2020-06-18 00:23:33','2020-06-18 00:23:33','2020-06-18 00:23:33'),(2728,28,NULL,'172.19.0.4','2020-06-18 00:23:39','2020-06-18 00:23:39','2020-06-18 00:23:39'),(2729,128,NULL,'172.19.0.4','2020-06-18 00:23:44','2020-06-18 00:23:44','2020-06-18 00:23:44'),(2730,129,NULL,'172.19.0.4','2020-06-18 00:23:55','2020-06-18 00:23:55','2020-06-18 00:23:55'),(2731,127,NULL,'172.19.0.4','2020-06-18 00:23:56','2020-06-18 00:23:56','2020-06-18 00:23:56'),(2732,129,NULL,'172.19.0.4','2020-06-18 00:24:01','2020-06-18 00:24:01','2020-06-18 00:24:01'),(2733,129,NULL,'172.19.0.4','2020-06-18 00:24:02','2020-06-18 00:24:02','2020-06-18 00:24:02'),(2734,128,NULL,'172.19.0.4','2020-06-18 00:24:02','2020-06-18 00:24:02','2020-06-18 00:24:02'),(2735,27,NULL,'172.19.0.4','2020-06-18 00:24:03','2020-06-18 00:24:03','2020-06-18 00:24:03'),(2736,129,NULL,'172.19.0.4','2020-06-18 00:24:05','2020-06-18 00:24:05','2020-06-18 00:24:05'),(2737,131,NULL,'172.19.0.4','2020-06-18 00:24:14','2020-06-18 00:24:14','2020-06-18 00:24:14'),(2738,23,NULL,'172.19.0.4','2020-06-18 00:24:24','2020-06-18 00:24:24','2020-06-18 00:24:24'),(2739,128,NULL,'172.19.0.4','2020-06-18 00:24:24','2020-06-18 00:24:24','2020-06-18 00:24:24'),(2740,21,NULL,'172.19.0.4','2020-06-18 00:24:26','2020-06-18 00:24:26','2020-06-18 00:24:26'),(2741,128,NULL,'172.19.0.4','2020-06-18 00:24:29','2020-06-18 00:24:29','2020-06-18 00:24:29'),(2742,127,NULL,'172.19.0.4','2020-06-18 00:24:32','2020-06-18 00:24:32','2020-06-18 00:24:32'),(2743,128,NULL,'172.19.0.4','2020-06-18 00:24:32','2020-06-18 00:24:33','2020-06-18 00:24:33'),(2744,27,NULL,'172.19.0.4','2020-06-18 00:24:33','2020-06-18 00:24:33','2020-06-18 00:24:33'),(2745,130,NULL,'172.19.0.4','2020-06-18 00:24:34','2020-06-18 00:24:34','2020-06-18 00:24:34'),(2746,129,NULL,'172.19.0.4','2020-06-18 00:24:36','2020-06-18 00:24:36','2020-06-18 00:24:36'),(2747,129,NULL,'172.19.0.4','2020-06-18 00:24:38','2020-06-18 00:24:38','2020-06-18 00:24:38'),(2748,129,NULL,'172.19.0.4','2020-06-18 00:24:42','2020-06-18 00:24:42','2020-06-18 00:24:42'),(2749,128,NULL,'172.19.0.4','2020-06-18 00:24:47','2020-06-18 00:24:47','2020-06-18 00:24:47'),(2750,128,NULL,'172.19.0.4','2020-06-18 00:24:47','2020-06-18 00:24:47','2020-06-18 00:24:47'),(2751,127,NULL,'172.19.0.4','2020-06-18 00:24:51','2020-06-18 00:24:51','2020-06-18 00:24:51'),(2752,126,NULL,'172.19.0.4','2020-06-18 00:24:59','2020-06-18 00:25:00','2020-06-18 00:25:00'),(2753,127,NULL,'172.19.0.4','2020-06-18 00:25:00','2020-06-18 00:25:00','2020-06-18 00:25:00'),(2754,127,NULL,'172.19.0.4','2020-06-18 00:25:09','2020-06-18 00:25:09','2020-06-18 00:25:09'),(2755,128,NULL,'172.19.0.4','2020-06-18 00:25:10','2020-06-18 00:25:10','2020-06-18 00:25:10'),(2756,126,NULL,'172.19.0.4','2020-06-18 00:25:11','2020-06-18 00:25:11','2020-06-18 00:25:11'),(2757,23,NULL,'172.19.0.4','2020-06-18 00:25:12','2020-06-18 00:25:12','2020-06-18 00:25:12'),(2758,127,NULL,'172.19.0.4','2020-06-18 00:25:16','2020-06-18 00:25:16','2020-06-18 00:25:16'),(2759,127,NULL,'172.19.0.4','2020-06-18 00:25:16','2020-06-18 00:25:16','2020-06-18 00:25:16'),(2760,21,NULL,'172.19.0.4','2020-06-18 00:25:16','2020-06-18 00:25:16','2020-06-18 00:25:16'),(2761,65,NULL,'172.19.0.4','2020-06-18 00:25:22','2020-06-18 00:25:22','2020-06-18 00:25:22'),(2762,129,NULL,'172.19.0.4','2020-06-18 00:25:24','2020-06-18 00:25:24','2020-06-18 00:25:24'),(2763,125,NULL,'172.19.0.4','2020-06-18 00:25:32','2020-06-18 00:25:32','2020-06-18 00:25:32'),(2764,126,NULL,'172.19.0.4','2020-06-18 00:25:38','2020-06-18 00:25:38','2020-06-18 00:25:38'),(2765,23,NULL,'172.19.0.4','2020-06-18 00:25:42','2020-06-18 00:25:42','2020-06-18 00:25:42'),(2766,129,NULL,'172.19.0.4','2020-06-18 00:25:42','2020-06-18 00:25:42','2020-06-18 00:25:42'),(2767,128,NULL,'172.19.0.4','2020-06-18 00:25:45','2020-06-18 00:25:45','2020-06-18 00:25:45'),(2768,127,NULL,'172.19.0.4','2020-06-18 00:25:52','2020-06-18 00:25:52','2020-06-18 00:25:52'),(2769,125,NULL,'172.19.0.4','2020-06-18 00:25:56','2020-06-18 00:25:56','2020-06-18 00:25:56'),(2770,126,NULL,'172.19.0.4','2020-06-18 00:25:57','2020-06-18 00:25:57','2020-06-18 00:25:57'),(2771,123,NULL,'172.19.0.4','2020-06-18 00:25:59','2020-06-18 00:25:59','2020-06-18 00:25:59'),(2772,126,NULL,'172.19.0.4','2020-06-18 00:26:00','2020-06-18 00:26:00','2020-06-18 00:26:00'),(2773,128,NULL,'172.19.0.4','2020-06-18 00:26:01','2020-06-18 00:26:01','2020-06-18 00:26:01'),(2774,129,NULL,'172.19.0.4','2020-06-18 00:26:03','2020-06-18 00:26:03','2020-06-18 00:26:03'),(2775,65,NULL,'172.19.0.4','2020-06-18 00:26:09','2020-06-18 00:26:09','2020-06-18 00:26:09'),(2776,129,NULL,'172.19.0.4','2020-06-18 00:26:11','2020-06-18 00:26:11','2020-06-18 00:26:11'),(2777,127,NULL,'172.19.0.4','2020-06-18 00:26:13','2020-06-18 00:26:13','2020-06-18 00:26:13'),(2778,126,NULL,'172.19.0.4','2020-06-18 00:26:16','2020-06-18 00:26:16','2020-06-18 00:26:16'),(2779,125,NULL,'172.19.0.4','2020-06-18 00:26:27','2020-06-18 00:26:27','2020-06-18 00:26:27'),(2780,127,NULL,'172.19.0.4','2020-06-18 00:26:29','2020-06-18 00:26:29','2020-06-18 00:26:29'),(2781,128,NULL,'172.19.0.4','2020-06-18 00:26:33','2020-06-18 00:26:33','2020-06-18 00:26:33'),(2782,125,NULL,'172.19.0.4','2020-06-18 00:26:37','2020-06-18 00:26:37','2020-06-18 00:26:37'),(2783,128,NULL,'172.19.0.4','2020-06-18 00:26:38','2020-06-18 00:26:38','2020-06-18 00:26:38'),(2784,125,NULL,'172.19.0.4','2020-06-18 00:26:40','2020-06-18 00:26:40','2020-06-18 00:26:40'),(2785,127,NULL,'172.19.0.4','2020-06-18 00:26:44','2020-06-18 00:26:44','2020-06-18 00:26:44'),(2786,126,NULL,'172.19.0.4','2020-06-18 00:26:52','2020-06-18 00:26:52','2020-06-18 00:26:52'),(2787,124,NULL,'172.19.0.4','2020-06-18 00:26:54','2020-06-18 00:26:54','2020-06-18 00:26:54'),(2788,126,NULL,'172.19.0.4','2020-06-18 00:26:57','2020-06-18 00:26:57','2020-06-18 00:26:57'),(2789,129,NULL,'172.19.0.4','2020-06-18 00:27:01','2020-06-18 00:27:02','2020-06-18 00:27:02'),(2790,123,NULL,'172.19.0.4','2020-06-18 00:27:01','2020-06-18 00:27:02','2020-06-18 00:27:02'),(2791,129,NULL,'172.19.0.4','2020-06-18 00:27:06','2020-06-18 00:27:06','2020-06-18 00:27:06'),(2792,122,NULL,'172.19.0.4','2020-06-18 00:27:06','2020-06-18 00:27:06','2020-06-18 00:27:06'),(2793,127,NULL,'172.19.0.4','2020-06-18 00:27:07','2020-06-18 00:27:07','2020-06-18 00:27:07'),(2794,126,NULL,'172.19.0.4','2020-06-18 00:27:09','2020-06-18 00:27:09','2020-06-18 00:27:09'),(2795,125,NULL,'172.19.0.4','2020-06-18 00:27:22','2020-06-18 00:27:22','2020-06-18 00:27:22'),(2796,23,NULL,'172.19.0.4','2020-06-18 00:27:22','2020-06-18 00:27:22','2020-06-18 00:27:22'),(2797,128,NULL,'172.19.0.4','2020-06-18 00:27:26','2020-06-18 00:27:26','2020-06-18 00:27:26'),(2798,125,NULL,'172.19.0.4','2020-06-18 00:27:27','2020-06-18 00:27:28','2020-06-18 00:27:28'),(2799,129,NULL,'172.19.0.4','2020-06-18 00:27:30','2020-06-18 00:27:30','2020-06-18 00:27:30'),(2800,128,NULL,'172.19.0.4','2020-06-18 00:27:35','2020-06-18 00:27:35','2020-06-18 00:27:35'),(2801,125,NULL,'172.19.0.4','2020-06-18 00:27:40','2020-06-18 00:27:40','2020-06-18 00:27:40'),(2802,127,NULL,'172.19.0.4','2020-06-18 00:27:41','2020-06-18 00:27:41','2020-06-18 00:27:41'),(2803,126,NULL,'172.19.0.4','2020-06-18 00:27:44','2020-06-18 00:27:44','2020-06-18 00:27:44'),(2804,126,NULL,'172.19.0.4','2020-06-18 00:27:45','2020-06-18 00:27:46','2020-06-18 00:27:46'),(2805,126,NULL,'172.19.0.4','2020-06-18 00:27:46','2020-06-18 00:27:46','2020-06-18 00:27:46'),(2806,122,NULL,'172.19.0.4','2020-06-18 00:27:48','2020-06-18 00:27:48','2020-06-18 00:27:48'),(2807,128,NULL,'172.19.0.4','2020-06-18 00:28:03','2020-06-18 00:28:03','2020-06-18 00:28:03'),(2808,125,NULL,'172.19.0.4','2020-06-18 00:28:05','2020-06-18 00:28:05','2020-06-18 00:28:05'),(2809,127,NULL,'172.19.0.4','2020-06-18 00:28:05','2020-06-18 00:28:05','2020-06-18 00:28:05'),(2810,121,NULL,'172.19.0.4','2020-06-18 00:28:06','2020-06-18 00:28:07','2020-06-18 00:28:07'),(2811,125,NULL,'172.19.0.4','2020-06-18 00:28:10','2020-06-18 00:28:10','2020-06-18 00:28:10'),(2812,124,NULL,'172.19.0.4','2020-06-18 00:28:12','2020-06-18 00:28:12','2020-06-18 00:28:12'),(2813,125,NULL,'172.19.0.4','2020-06-18 00:28:18','2020-06-18 00:28:18','2020-06-18 00:28:18'),(2814,125,NULL,'172.19.0.4','2020-06-18 00:28:24','2020-06-18 00:28:24','2020-06-18 00:28:24'),(2815,126,NULL,'172.19.0.4','2020-06-18 00:28:28','2020-06-18 00:28:28','2020-06-18 00:28:28'),(2816,127,NULL,'172.19.0.4','2020-06-18 00:28:29','2020-06-18 00:28:29','2020-06-18 00:28:29'),(2817,14,NULL,'172.19.0.4','2020-06-18 00:28:50','2020-06-18 00:28:50','2020-06-18 00:28:50'),(2818,14,NULL,'172.19.0.4','2020-06-18 00:28:59','2020-06-18 00:28:59','2020-06-18 00:28:59'),(2819,123,NULL,'172.19.0.4','2020-06-18 00:29:00','2020-06-18 00:29:00','2020-06-18 00:29:00'),(2820,120,NULL,'172.19.0.4','2020-06-18 00:29:00','2020-06-18 00:29:00','2020-06-18 00:29:00'),(2821,113,NULL,'172.19.0.4','2020-06-18 00:29:01','2020-06-18 00:29:01','2020-06-18 00:29:01'),(2822,125,NULL,'172.19.0.4','2020-06-18 00:29:08','2020-06-18 00:29:08','2020-06-18 00:29:08'),(2823,52,NULL,'172.19.0.4','2020-06-18 00:29:11','2020-06-18 00:29:11','2020-06-18 00:29:11'),(2824,126,NULL,'172.19.0.4','2020-06-18 00:29:20','2020-06-18 00:29:20','2020-06-18 00:29:20'),(2825,116,NULL,'172.19.0.4','2020-06-18 00:29:22','2020-06-18 00:29:22','2020-06-18 00:29:22'),(2826,121,NULL,'172.19.0.4','2020-06-18 00:29:25','2020-06-18 00:29:26','2020-06-18 00:29:26'),(2827,112,NULL,'172.19.0.4','2020-06-18 00:29:28','2020-06-18 00:29:28','2020-06-18 00:29:28'),(2828,126,NULL,'172.19.0.4','2020-06-18 00:29:35','2020-06-18 00:29:35','2020-06-18 00:29:35'),(2829,14,NULL,'172.19.0.4','2020-06-18 00:29:38','2020-06-18 00:29:40','2020-06-18 00:29:40'),(2830,88,NULL,'172.19.0.4','2020-06-18 00:29:39','2020-06-18 00:29:41','2020-06-18 00:29:41'),(2831,122,NULL,'172.19.0.4','2020-06-18 00:29:43','2020-06-18 00:29:44','2020-06-18 00:29:44'),(2832,120,NULL,'172.19.0.4','2020-06-18 00:29:46','2020-06-18 00:29:46','2020-06-18 00:29:46'),(2833,52,NULL,'172.19.0.4','2020-06-18 00:29:49','2020-06-18 00:29:49','2020-06-18 00:29:49'),(2834,36,NULL,'172.19.0.4','2020-06-18 00:29:51','2020-06-18 00:29:53','2020-06-18 00:29:53'),(2835,14,NULL,'172.19.0.4','2020-06-18 00:29:54','2020-06-18 00:29:57','2020-06-18 00:29:57'),(2836,125,NULL,'172.19.0.4','2020-06-18 00:29:55','2020-06-18 00:29:58','2020-06-18 00:29:58'),(2837,52,NULL,'172.19.0.4','2020-06-18 00:29:57','2020-06-18 00:30:01','2020-06-18 00:30:01'),(2838,72,NULL,'172.19.0.4','2020-06-18 00:29:59','2020-06-18 00:30:13','2020-06-18 00:30:13'),(2839,116,NULL,'172.19.0.4','2020-06-18 00:30:01','2020-06-18 00:30:28','2020-06-18 00:30:28'),(2840,114,NULL,'172.19.0.4','2020-06-18 00:30:05','2020-06-18 00:30:33','2020-06-18 00:30:33'),(2841,14,NULL,'172.19.0.4','2020-06-18 00:30:06','2020-06-18 00:30:35','2020-06-18 00:30:35'),(2842,112,NULL,'172.19.0.4','2020-06-18 00:30:07','2020-06-18 00:31:18','2020-06-18 00:31:18'),(2843,21,NULL,'172.19.0.4','2020-06-18 00:30:09','2020-06-18 00:32:31','2020-06-18 00:32:31'),(2844,23,NULL,'172.19.0.4','2020-06-18 00:30:11','2020-06-18 00:32:38','2020-06-18 00:32:38'),(2845,14,NULL,'172.19.0.4','2020-06-18 00:30:14','2020-06-18 00:33:11','2020-06-18 00:33:11'),(2846,52,NULL,'172.19.0.4','2020-06-18 00:30:15','2020-06-18 00:33:11','2020-06-18 00:33:11'),(2847,117,NULL,'172.19.0.4','2020-06-18 00:30:16','2020-06-18 00:33:11','2020-06-18 00:33:11'),(2848,96,NULL,'172.19.0.4','2020-06-18 00:30:17','2020-06-18 00:33:17','2020-06-18 00:33:17'),(2849,97,NULL,'172.19.0.4','2020-06-18 00:30:19','2020-06-18 00:33:17','2020-06-18 00:33:17'),(2850,108,NULL,'172.19.0.4','2020-06-18 00:30:21','2020-06-18 00:33:17','2020-06-18 00:33:17'),(2851,52,NULL,'172.19.0.4','2020-06-18 00:30:24','2020-06-18 00:33:28','2020-06-18 00:33:28'),(2852,125,NULL,'172.19.0.4','2020-06-18 00:30:25','2020-06-18 00:33:35','2020-06-18 00:33:35'),(2853,116,NULL,'172.19.0.4','2020-06-18 00:30:26','2020-06-18 00:33:35','2020-06-18 00:33:35'),(2854,88,NULL,'172.19.0.4','2020-06-18 00:30:27','2020-06-18 00:33:40','2020-06-18 00:33:40'),(2855,96,NULL,'172.19.0.4','2020-06-18 00:30:27','2020-06-18 00:34:06','2020-06-18 00:34:06'),(2856,49,NULL,'172.19.0.4','2020-06-18 00:30:30','2020-06-18 00:34:32','2020-06-18 00:34:32'),(2857,94,NULL,'172.19.0.4','2020-06-18 00:30:32','2020-06-18 00:34:39','2020-06-18 00:34:39'),(2858,37,NULL,'172.19.0.4','2020-06-18 00:30:34','2020-06-18 00:34:43','2020-06-18 00:34:43'),(2859,14,NULL,'172.19.0.4','2020-06-18 00:30:36','2020-06-18 00:34:43','2020-06-18 00:34:43'),(2860,52,NULL,'172.19.0.4','2020-06-18 00:30:37','2020-06-18 00:34:59','2020-06-18 00:34:59'),(2861,50,NULL,'172.19.0.4','2020-06-18 00:30:37','2020-06-18 00:35:08','2020-06-18 00:35:08'),(2862,27,NULL,'172.19.0.4','2020-06-18 00:30:38','2020-06-18 00:35:25','2020-06-18 00:35:25'),(2863,14,NULL,'172.19.0.4','2020-06-18 00:30:39','2020-06-18 00:35:25','2020-06-18 00:35:25'),(2864,48,NULL,'172.19.0.4','2020-06-18 00:30:40','2020-06-18 00:35:29','2020-06-18 00:35:29'),(2865,65,NULL,'172.19.0.4','2020-06-18 00:30:42','2020-06-18 00:35:31','2020-06-18 00:35:31'),(2866,15,NULL,'172.19.0.4','2020-06-18 00:30:44','2020-06-18 00:35:34','2020-06-18 00:35:34'),(2867,33,NULL,'172.19.0.4','2020-06-18 00:30:45','2020-06-18 00:36:00','2020-06-18 00:36:00'),(2868,15,NULL,'172.19.0.4','2020-06-18 00:30:45','2020-06-18 00:36:20','2020-06-18 00:36:20'),(2869,117,NULL,'172.19.0.4','2020-06-18 00:30:47','2020-06-18 00:36:33','2020-06-18 00:36:33'),(2870,98,NULL,'172.19.0.4','2020-06-18 00:30:47','2020-06-18 00:36:36','2020-06-18 00:36:36'),(2871,124,NULL,'172.19.0.4','2020-06-18 00:30:47','2020-06-18 00:37:04','2020-06-18 00:37:04'),(2872,107,NULL,'172.19.0.4','2020-06-18 00:30:48','2020-06-18 00:37:04','2020-06-18 00:37:04'),(2873,15,NULL,'172.19.0.4','2020-06-18 00:30:48','2020-06-18 00:37:08','2020-06-18 00:37:08'),(2874,97,NULL,'172.19.0.4','2020-06-18 00:30:48','2020-06-18 00:37:10','2020-06-18 00:37:10'),(2875,52,NULL,'172.19.0.4','2020-06-18 00:30:49','2020-06-18 00:37:11','2020-06-18 00:37:11'),(2876,121,NULL,'172.19.0.4','2020-06-18 00:30:50','2020-06-18 00:37:23','2020-06-18 00:37:23'),(2877,45,NULL,'172.19.0.4','2020-06-18 00:30:52','2020-06-18 00:37:25','2020-06-18 00:37:25'),(2878,124,NULL,'172.19.0.4','2020-06-18 00:30:52','2020-06-18 00:37:42','2020-06-18 00:37:42'),(2879,14,NULL,'172.19.0.4','2020-06-18 00:30:54','2020-06-18 00:37:51','2020-06-18 00:37:51'),(2880,32,NULL,'172.19.0.4','2020-06-18 00:30:55','2020-06-18 00:37:56','2020-06-18 00:37:56'),(2881,14,NULL,'172.19.0.4','2020-06-18 00:30:56','2020-06-18 00:38:01','2020-06-18 00:38:01'),(2882,23,NULL,'172.19.0.4','2020-06-18 00:30:57','2020-06-18 00:38:10','2020-06-18 00:38:10'),(2883,52,NULL,'172.19.0.4','2020-06-18 00:30:57','2020-06-18 00:38:20','2020-06-18 00:38:20'),(2884,104,NULL,'172.19.0.4','2020-06-18 00:30:58','2020-06-18 00:38:23','2020-06-18 00:38:23'),(2885,93,NULL,'172.19.0.4','2020-06-18 00:30:59','2020-06-18 00:38:23','2020-06-18 00:38:23'),(2886,14,NULL,'172.19.0.4','2020-06-18 00:30:59','2020-06-18 00:38:23','2020-06-18 00:38:23'),(2887,98,NULL,'172.19.0.4','2020-06-18 00:30:59','2020-06-18 00:38:24','2020-06-18 00:38:24'),(2888,42,NULL,'172.19.0.4','2020-06-18 00:31:02','2020-06-18 00:38:24','2020-06-18 00:38:24'),(2889,91,NULL,'172.19.0.4','2020-06-18 00:31:03','2020-06-18 00:38:29','2020-06-18 00:38:29'),(2890,52,NULL,'172.19.0.4','2020-06-18 00:31:05','2020-06-18 00:38:41','2020-06-18 00:38:41'),(2891,31,NULL,'172.19.0.4','2020-06-18 00:31:06','2020-06-18 00:38:43','2020-06-18 00:38:43'),(2892,52,NULL,'172.19.0.4','2020-06-18 00:31:06','2020-06-18 00:38:50','2020-06-18 00:38:50'),(2893,14,NULL,'172.19.0.4','2020-06-18 00:31:06','2020-06-18 00:38:53','2020-06-18 00:38:53'),(2894,108,NULL,'172.19.0.4','2020-06-18 00:31:07','2020-06-18 00:38:55','2020-06-18 00:38:55'),(2895,111,NULL,'172.19.0.4','2020-06-18 00:31:07','2020-06-18 00:38:55','2020-06-18 00:38:55'),(2896,94,NULL,'172.19.0.4','2020-06-18 00:31:08','2020-06-18 00:38:57','2020-06-18 00:38:57'),(2897,117,NULL,'172.19.0.4','2020-06-18 00:31:09','2020-06-18 00:39:10','2020-06-18 00:39:10'),(2898,88,NULL,'172.19.0.4','2020-06-18 00:31:09','2020-06-18 00:39:10','2020-06-18 00:39:10'),(2899,96,NULL,'172.19.0.4','2020-06-18 00:31:09','2020-06-18 00:39:31','2020-06-18 00:39:31'),(2900,93,NULL,'172.19.0.4','2020-06-18 00:31:12','2020-06-18 00:39:36','2020-06-18 00:39:36'),(2901,114,NULL,'172.19.0.4','2020-06-18 00:31:13','2020-06-18 00:39:37','2020-06-18 00:39:37'),(2902,50,NULL,'172.19.0.4','2020-06-18 00:31:16','2020-06-18 00:39:37','2020-06-18 00:39:37'),(2903,50,NULL,'172.19.0.4','2020-06-18 00:31:16','2020-06-18 00:39:45','2020-06-18 00:39:45'),(2904,117,NULL,'172.19.0.4','2020-06-18 00:31:16','2020-06-18 00:39:47','2020-06-18 00:39:47'),(2905,28,NULL,'172.19.0.4','2020-06-18 00:31:16','2020-06-18 00:39:58','2020-06-18 00:39:58'),(2906,97,NULL,'172.19.0.4','2020-06-18 00:31:18','2020-06-18 00:40:02','2020-06-18 00:40:02'),(2907,50,NULL,'172.19.0.4','2020-06-18 00:31:18','2020-06-18 00:40:02','2020-06-18 00:40:02'),(2908,43,NULL,'172.19.0.4','2020-06-18 00:31:19','2020-06-18 00:40:07','2020-06-18 00:40:07'),(2909,52,NULL,'172.19.0.4','2020-06-18 00:31:19','2020-06-18 00:40:07','2020-06-18 00:40:07'),(2910,35,NULL,'172.19.0.4','2020-06-18 00:31:19','2020-06-18 00:40:23','2020-06-18 00:40:23'),(2911,119,NULL,'172.19.0.4','2020-06-18 00:31:20','2020-06-18 00:40:24','2020-06-18 00:40:24'),(2912,90,NULL,'172.19.0.4','2020-06-18 00:31:22','2020-06-18 00:40:26','2020-06-18 00:40:26'),(2913,44,NULL,'172.19.0.4','2020-06-18 00:31:24','2020-06-18 00:40:26','2020-06-18 00:40:26'),(2914,97,NULL,'172.19.0.4','2020-06-18 00:31:26','2020-06-18 00:40:26','2020-06-18 00:40:26'),(2915,97,NULL,'172.19.0.4','2020-06-18 00:31:26','2020-06-18 00:40:28','2020-06-18 00:40:28'),(2916,99,NULL,'172.19.0.4','2020-06-18 00:31:27','2020-06-18 00:40:30','2020-06-18 00:40:30'),(2917,122,NULL,'172.19.0.4','2020-06-18 00:31:27','2020-06-18 00:40:31','2020-06-18 00:40:31'),(2918,52,NULL,'172.19.0.4','2020-06-18 00:31:27','2020-06-18 00:40:33','2020-06-18 00:40:33'),(2919,96,NULL,'172.19.0.4','2020-06-18 00:31:28','2020-06-18 00:40:33','2020-06-18 00:40:33'),(2920,35,NULL,'172.19.0.4','2020-06-18 00:31:28','2020-06-18 00:40:35','2020-06-18 00:40:35'),(2921,90,NULL,'172.19.0.4','2020-06-18 00:31:29','2020-06-18 00:40:36','2020-06-18 00:40:36'),(2922,100,NULL,'172.19.0.4','2020-06-18 00:31:29','2020-06-18 00:40:37','2020-06-18 00:40:37'),(2923,117,NULL,'172.19.0.4','2020-06-18 00:31:29','2020-06-18 00:40:37','2020-06-18 00:40:37'),(2924,110,NULL,'172.19.0.4','2020-06-18 00:31:30','2020-06-18 00:40:38','2020-06-18 00:40:38'),(2925,88,NULL,'172.19.0.4','2020-06-18 00:31:32','2020-06-18 00:40:38','2020-06-18 00:40:38'),(2926,43,NULL,'172.19.0.4','2020-06-18 00:31:34','2020-06-18 00:40:39','2020-06-18 00:40:39'),(2927,104,NULL,'172.19.0.4','2020-06-18 00:31:36','2020-06-18 00:40:40','2020-06-18 00:40:40'),(2928,117,NULL,'172.19.0.4','2020-06-18 00:31:36','2020-06-18 00:40:40','2020-06-18 00:40:40'),(2929,23,NULL,'172.19.0.4','2020-06-18 00:31:37','2020-06-18 00:40:41','2020-06-18 00:40:41'),(2930,98,NULL,'172.19.0.4','2020-06-18 00:31:37','2020-06-18 00:40:41','2020-06-18 00:40:41'),(2931,65,NULL,'172.19.0.4','2020-06-18 00:31:38','2020-06-18 00:40:41','2020-06-18 00:40:41'),(2932,33,NULL,'172.19.0.4','2020-06-18 00:31:39','2020-06-18 00:40:42','2020-06-18 00:40:42'),(2933,116,NULL,'172.19.0.4','2020-06-18 00:31:39','2020-06-18 00:40:42','2020-06-18 00:40:42'),(2934,37,NULL,'172.19.0.4','2020-06-18 00:31:39','2020-06-18 00:40:42','2020-06-18 00:40:42'),(2935,36,NULL,'172.19.0.4','2020-06-18 00:31:40','2020-06-18 00:40:42','2020-06-18 00:40:42'),(2936,28,NULL,'172.19.0.4','2020-06-18 00:31:40','2020-06-18 00:40:43','2020-06-18 00:40:43'),(2937,117,NULL,'172.19.0.4','2020-06-18 00:31:43','2020-06-18 00:40:43','2020-06-18 00:40:43'),(2938,72,NULL,'172.19.0.4','2020-06-18 00:31:45','2020-06-18 00:40:43','2020-06-18 00:40:43'),(2939,72,NULL,'172.19.0.4','2020-06-18 00:31:47','2020-06-18 00:40:43','2020-06-18 00:40:43'),(2940,112,NULL,'172.19.0.4','2020-06-18 00:31:47','2020-06-18 00:40:44','2020-06-18 00:40:44'),(2941,94,NULL,'172.19.0.4','2020-06-18 00:31:48','2020-06-18 00:40:44','2020-06-18 00:40:44'),(2942,21,NULL,'172.19.0.4','2020-06-18 00:31:49','2020-06-18 00:40:44','2020-06-18 00:40:44'),(2943,31,NULL,'172.19.0.4','2020-06-18 00:31:49','2020-06-18 00:40:44','2020-06-18 00:40:44'),(2944,110,NULL,'172.19.0.4','2020-06-18 00:31:50','2020-06-18 00:40:45','2020-06-18 00:40:45'),(2945,36,NULL,'172.19.0.4','2020-06-18 00:31:53','2020-06-18 00:40:45','2020-06-18 00:40:45'),(2946,31,NULL,'172.19.0.4','2020-06-18 00:32:25','2020-06-18 00:40:45','2020-06-18 00:40:45'),(2947,99,NULL,'172.19.0.4','2020-06-18 00:32:34','2020-06-18 00:40:45','2020-06-18 00:40:45'),(2948,94,NULL,'172.19.0.4','2020-06-18 00:32:35','2020-06-18 00:40:45','2020-06-18 00:40:45'),(2949,44,NULL,'172.19.0.4','2020-06-18 00:32:46','2020-06-18 00:40:45','2020-06-18 00:40:45'),(2950,35,NULL,'172.19.0.4','2020-06-18 00:32:49','2020-06-18 00:40:45','2020-06-18 00:40:45'),(2951,35,NULL,'172.19.0.4','2020-06-18 00:32:56','2020-06-18 00:40:45','2020-06-18 00:40:45'),(2952,50,NULL,'172.19.0.4','2020-06-18 00:33:03','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2953,114,NULL,'172.19.0.4','2020-06-18 00:33:08','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2954,72,NULL,'172.19.0.4','2020-06-18 00:33:14','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2955,95,NULL,'172.19.0.4','2020-06-18 00:33:25','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2956,88,NULL,'172.19.0.4','2020-06-18 00:33:27','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2957,46,NULL,'172.19.0.4','2020-06-18 00:33:36','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2958,89,NULL,'172.19.0.4','2020-06-18 00:33:44','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2959,49,NULL,'172.19.0.4','2020-06-18 00:34:05','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2960,96,NULL,'172.19.0.4','2020-06-18 00:34:13','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2961,36,NULL,'172.19.0.4','2020-06-18 00:34:17','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2962,47,NULL,'172.19.0.4','2020-06-18 00:34:22','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2963,109,NULL,'172.19.0.4','2020-06-18 00:34:27','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2964,116,NULL,'172.19.0.4','2020-06-18 00:34:35','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2965,121,NULL,'172.19.0.4','2020-06-18 00:34:40','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2966,115,NULL,'172.19.0.4','2020-06-18 00:34:40','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2967,33,NULL,'172.19.0.4','2020-06-18 00:34:41','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2968,48,NULL,'172.19.0.4','2020-06-18 00:34:41','2020-06-18 00:40:46','2020-06-18 00:40:46'),(2969,100,NULL,'172.19.0.4','2020-06-18 00:34:42','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2970,15,NULL,'172.19.0.4','2020-06-18 00:34:44','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2971,111,NULL,'172.19.0.4','2020-06-18 00:34:44','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2972,48,NULL,'172.19.0.4','2020-06-18 00:34:47','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2973,33,NULL,'172.19.0.4','2020-06-18 00:34:48','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2974,32,NULL,'172.19.0.4','2020-06-18 00:34:50','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2975,45,NULL,'172.19.0.4','2020-06-18 00:34:53','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2976,91,NULL,'172.19.0.4','2020-06-18 00:34:55','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2977,116,NULL,'172.19.0.4','2020-06-18 00:35:02','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2978,109,NULL,'172.19.0.4','2020-06-18 00:35:03','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2979,45,NULL,'172.19.0.4','2020-06-18 00:35:07','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2980,122,NULL,'172.19.0.4','2020-06-18 00:35:07','2020-06-18 00:40:47','2020-06-18 00:40:47'),(2981,44,NULL,'172.19.0.4','2020-06-18 00:35:10','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2982,120,NULL,'172.19.0.4','2020-06-18 00:35:10','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2983,107,NULL,'172.19.0.4','2020-06-18 00:35:11','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2984,112,NULL,'172.19.0.4','2020-06-18 00:35:11','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2985,42,NULL,'172.19.0.4','2020-06-18 00:35:12','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2986,65,NULL,'172.19.0.4','2020-06-18 00:35:13','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2987,50,NULL,'172.19.0.4','2020-06-18 00:35:14','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2988,120,NULL,'172.19.0.4','2020-06-18 00:35:16','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2989,44,NULL,'172.19.0.4','2020-06-18 00:35:17','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2990,43,NULL,'172.19.0.4','2020-06-18 00:35:18','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2991,109,NULL,'172.19.0.4','2020-06-18 00:35:18','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2992,47,NULL,'172.19.0.4','2020-06-18 00:35:20','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2993,123,NULL,'172.19.0.4','2020-06-18 00:35:21','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2994,119,NULL,'172.19.0.4','2020-06-18 00:35:21','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2995,106,NULL,'172.19.0.4','2020-06-18 00:35:21','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2996,122,NULL,'172.19.0.4','2020-06-18 00:35:22','2020-06-18 00:40:48','2020-06-18 00:40:48'),(2997,99,NULL,'172.19.0.4','2020-06-18 00:35:22','2020-06-18 00:40:49','2020-06-18 00:40:49'),(2998,42,NULL,'172.19.0.4','2020-06-18 00:35:23','2020-06-18 00:40:49','2020-06-18 00:40:49'),(2999,42,NULL,'172.19.0.4','2020-06-18 00:35:28','2020-06-18 00:40:49','2020-06-18 00:40:49'),(3000,107,NULL,'172.19.0.4','2020-06-18 00:35:29','2020-06-18 00:40:49','2020-06-18 00:40:49'),(3001,116,NULL,'172.19.0.4','2020-06-18 00:35:32','2020-06-18 00:40:49','2020-06-18 00:40:49'),(3002,49,NULL,'172.19.0.4','2020-06-18 00:35:33','2020-06-18 00:40:49','2020-06-18 00:40:49'),(3003,104,NULL,'172.19.0.4','2020-06-18 00:35:33','2020-06-18 00:40:49','2020-06-18 00:40:49'),(3004,119,NULL,'172.19.0.4','2020-06-18 00:35:38','2020-06-18 00:40:49','2020-06-18 00:40:49'),(3005,89,NULL,'172.19.0.4','2020-06-18 00:35:39','2020-06-18 00:40:49','2020-06-18 00:40:49'),(3006,106,NULL,'172.19.0.4','2020-06-18 00:35:40','2020-06-18 00:40:49','2020-06-18 00:40:49'),(3007,115,NULL,'172.19.0.4','2020-06-18 00:35:41','2020-06-18 00:40:49','2020-06-18 00:40:49'),(3008,31,NULL,'172.19.0.4','2020-06-18 00:35:41','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3009,114,NULL,'172.19.0.4','2020-06-18 00:35:43','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3010,114,NULL,'172.19.0.4','2020-06-18 00:35:44','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3011,100,NULL,'172.19.0.4','2020-06-18 00:35:45','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3012,32,NULL,'172.19.0.4','2020-06-18 00:35:45','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3013,120,NULL,'172.19.0.4','2020-06-18 00:35:46','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3014,113,NULL,'172.19.0.4','2020-06-18 00:35:47','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3015,49,NULL,'172.19.0.4','2020-06-18 00:35:48','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3016,37,NULL,'172.19.0.4','2020-06-18 00:35:50','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3017,101,NULL,'172.19.0.4','2020-06-18 00:35:50','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3018,101,NULL,'172.19.0.4','2020-06-18 00:35:52','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3019,28,NULL,'172.19.0.4','2020-06-18 00:35:53','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3020,101,NULL,'172.19.0.4','2020-06-18 00:35:53','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3021,109,NULL,'172.19.0.4','2020-06-18 00:35:53','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3022,72,NULL,'172.19.0.4','2020-06-18 00:35:54','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3023,117,NULL,'172.19.0.4','2020-06-18 00:35:55','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3024,122,NULL,'172.19.0.4','2020-06-18 00:35:55','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3025,119,NULL,'172.19.0.4','2020-06-18 00:35:56','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3026,36,NULL,'172.19.0.4','2020-06-18 00:35:59','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3027,93,NULL,'172.19.0.4','2020-06-18 00:36:00','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3028,100,NULL,'172.19.0.4','2020-06-18 00:36:00','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3029,72,NULL,'172.19.0.4','2020-06-18 00:36:01','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3030,121,NULL,'172.19.0.4','2020-06-18 00:36:01','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3031,107,NULL,'172.19.0.4','2020-06-18 00:36:03','2020-06-18 00:40:50','2020-06-18 00:40:50'),(3032,106,NULL,'172.19.0.4','2020-06-18 00:36:05','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3033,116,NULL,'172.19.0.4','2020-06-18 00:36:05','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3034,28,NULL,'172.19.0.4','2020-06-18 00:36:05','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3035,110,NULL,'172.19.0.4','2020-06-18 00:36:06','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3036,106,NULL,'172.19.0.4','2020-06-18 00:36:09','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3037,89,NULL,'172.19.0.4','2020-06-18 00:36:10','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3038,33,NULL,'172.19.0.4','2020-06-18 00:36:11','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3039,104,NULL,'172.19.0.4','2020-06-18 00:36:12','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3040,42,NULL,'172.19.0.4','2020-06-18 00:36:12','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3041,120,NULL,'172.19.0.4','2020-06-18 00:36:13','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3042,106,NULL,'172.19.0.4','2020-06-18 00:36:13','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3043,121,NULL,'172.19.0.4','2020-06-18 00:36:16','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3044,27,NULL,'172.19.0.4','2020-06-18 00:36:16','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3045,112,NULL,'172.19.0.4','2020-06-18 00:36:17','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3046,120,NULL,'172.19.0.4','2020-06-18 00:36:17','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3047,107,NULL,'172.19.0.4','2020-06-18 00:36:17','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3048,93,NULL,'172.19.0.4','2020-06-18 00:36:18','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3049,110,NULL,'172.19.0.4','2020-06-18 00:36:18','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3050,100,NULL,'172.19.0.4','2020-06-18 00:36:18','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3051,48,NULL,'172.19.0.4','2020-06-18 00:36:18','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3052,123,NULL,'172.19.0.4','2020-06-18 00:36:18','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3053,115,NULL,'172.19.0.4','2020-06-18 00:36:18','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3054,120,NULL,'172.19.0.4','2020-06-18 00:36:19','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3055,117,NULL,'172.19.0.4','2020-06-18 00:36:19','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3056,100,NULL,'172.19.0.4','2020-06-18 00:36:20','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3057,96,NULL,'172.19.0.4','2020-06-18 00:36:22','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3058,23,NULL,'172.19.0.4','2020-06-18 00:36:23','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3059,47,NULL,'172.19.0.4','2020-06-18 00:36:23','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3060,32,NULL,'172.19.0.4','2020-06-18 00:36:23','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3061,97,NULL,'172.19.0.4','2020-06-18 00:36:24','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3062,104,NULL,'172.19.0.4','2020-06-18 00:36:24','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3063,89,NULL,'172.19.0.4','2020-06-18 00:36:25','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3064,99,NULL,'172.19.0.4','2020-06-18 00:36:28','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3065,41,NULL,'172.19.0.4','2020-06-18 00:36:29','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3066,113,NULL,'172.19.0.4','2020-06-18 00:36:29','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3067,101,NULL,'172.19.0.4','2020-06-18 00:36:30','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3068,124,NULL,'172.19.0.4','2020-06-18 00:36:30','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3069,98,NULL,'172.19.0.4','2020-06-18 00:36:31','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3070,91,NULL,'172.19.0.4','2020-06-18 00:36:31','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3071,112,NULL,'172.19.0.4','2020-06-18 00:36:31','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3072,120,NULL,'172.19.0.4','2020-06-18 00:36:32','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3073,114,NULL,'172.19.0.4','2020-06-18 00:36:33','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3074,21,NULL,'172.19.0.4','2020-06-18 00:36:34','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3075,95,NULL,'172.19.0.4','2020-06-18 00:36:34','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3076,123,NULL,'172.19.0.4','2020-06-18 00:36:36','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3077,96,NULL,'172.19.0.4','2020-06-18 00:36:37','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3078,119,NULL,'172.19.0.4','2020-06-18 00:36:39','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3079,97,NULL,'172.19.0.4','2020-06-18 00:36:40','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3080,41,NULL,'172.19.0.4','2020-06-18 00:36:40','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3081,111,NULL,'172.19.0.4','2020-06-18 00:36:40','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3082,110,NULL,'172.19.0.4','2020-06-18 00:36:41','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3083,111,NULL,'172.19.0.4','2020-06-18 00:36:42','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3084,94,NULL,'172.19.0.4','2020-06-18 00:36:42','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3085,21,NULL,'172.19.0.4','2020-06-18 00:36:43','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3086,108,NULL,'172.19.0.4','2020-06-18 00:36:45','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3087,95,NULL,'172.19.0.4','2020-06-18 00:36:45','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3088,65,NULL,'172.19.0.4','2020-06-18 00:36:45','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3089,46,NULL,'172.19.0.4','2020-06-18 00:36:45','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3090,109,NULL,'172.19.0.4','2020-06-18 00:36:46','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3091,107,NULL,'172.19.0.4','2020-06-18 00:36:47','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3092,97,NULL,'172.19.0.4','2020-06-18 00:36:47','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3093,94,NULL,'172.19.0.4','2020-06-18 00:36:47','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3094,114,NULL,'172.19.0.4','2020-06-18 00:36:47','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3095,47,NULL,'172.19.0.4','2020-06-18 00:36:47','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3096,65,NULL,'172.19.0.4','2020-06-18 00:36:48','2020-06-18 00:40:51','2020-06-18 00:40:51'),(3097,101,NULL,'172.19.0.4','2020-06-18 00:36:48','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3098,90,NULL,'172.19.0.4','2020-06-18 00:36:49','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3099,91,NULL,'172.19.0.4','2020-06-18 00:36:52','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3100,36,NULL,'172.19.0.4','2020-06-18 00:36:52','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3101,106,NULL,'172.19.0.4','2020-06-18 00:36:53','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3102,106,NULL,'172.19.0.4','2020-06-18 00:36:55','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3103,90,NULL,'172.19.0.4','2020-06-18 00:36:56','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3104,15,NULL,'172.19.0.4','2020-06-18 00:36:56','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3105,97,NULL,'172.19.0.4','2020-06-18 00:36:56','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3106,106,NULL,'172.19.0.4','2020-06-18 00:36:58','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3107,101,NULL,'172.19.0.4','2020-06-18 00:36:58','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3108,37,NULL,'172.19.0.4','2020-06-18 00:36:59','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3109,27,NULL,'172.19.0.4','2020-06-18 00:37:00','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3110,90,NULL,'172.19.0.4','2020-06-18 00:37:01','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3111,100,NULL,'172.19.0.4','2020-06-18 00:37:02','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3112,98,NULL,'172.19.0.4','2020-06-18 00:37:03','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3113,46,NULL,'172.19.0.4','2020-06-18 00:37:03','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3114,45,NULL,'172.19.0.4','2020-06-18 00:37:04','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3115,36,NULL,'172.19.0.4','2020-06-18 00:37:04','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3116,49,NULL,'172.19.0.4','2020-06-18 00:37:05','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3117,95,NULL,'172.19.0.4','2020-06-18 00:37:05','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3118,47,NULL,'172.19.0.4','2020-06-18 00:37:06','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3119,50,NULL,'172.19.0.4','2020-06-18 00:37:06','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3120,35,NULL,'172.19.0.4','2020-06-18 00:37:06','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3121,96,NULL,'172.19.0.4','2020-06-18 00:37:06','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3122,100,NULL,'172.19.0.4','2020-06-18 00:37:06','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3123,114,NULL,'172.19.0.4','2020-06-18 00:37:07','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3124,100,NULL,'172.19.0.4','2020-06-18 00:37:08','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3125,21,NULL,'172.19.0.4','2020-06-18 00:37:11','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3126,41,NULL,'172.19.0.4','2020-06-18 00:37:11','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3127,119,NULL,'172.19.0.4','2020-06-18 00:37:11','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3128,101,NULL,'172.19.0.4','2020-06-18 00:37:12','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3129,121,NULL,'172.19.0.4','2020-06-18 00:37:12','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3130,42,NULL,'172.19.0.4','2020-06-18 00:37:13','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3131,50,NULL,'172.19.0.4','2020-06-18 00:37:16','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3132,47,NULL,'172.19.0.4','2020-06-18 00:37:16','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3133,15,NULL,'172.19.0.4','2020-06-18 00:37:17','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3134,124,NULL,'172.19.0.4','2020-06-18 00:37:18','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3135,101,NULL,'172.19.0.4','2020-06-18 00:37:19','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3136,114,NULL,'172.19.0.4','2020-06-18 00:37:21','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3137,90,NULL,'172.19.0.4','2020-06-18 00:37:22','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3138,121,NULL,'172.19.0.4','2020-06-18 00:37:23','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3139,45,NULL,'172.19.0.4','2020-06-18 00:37:25','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3140,93,NULL,'172.19.0.4','2020-06-18 00:37:26','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3141,90,NULL,'172.19.0.4','2020-06-18 00:37:28','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3142,123,NULL,'172.19.0.4','2020-06-18 00:37:31','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3143,27,NULL,'172.19.0.4','2020-06-18 00:37:34','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3144,15,NULL,'172.19.0.4','2020-06-18 00:37:35','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3145,31,NULL,'172.19.0.4','2020-06-18 00:37:35','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3146,112,NULL,'172.19.0.4','2020-06-18 00:37:35','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3147,119,NULL,'172.19.0.4','2020-06-18 00:37:36','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3148,101,NULL,'172.19.0.4','2020-06-18 00:37:42','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3149,99,NULL,'172.19.0.4','2020-06-18 00:37:42','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3150,28,NULL,'172.19.0.4','2020-06-18 00:37:42','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3151,90,NULL,'172.19.0.4','2020-06-18 00:37:43','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3152,15,NULL,'172.19.0.4','2020-06-18 00:37:44','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3153,46,NULL,'172.19.0.4','2020-06-18 00:37:47','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3154,41,NULL,'172.19.0.4','2020-06-18 00:37:52','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3155,72,NULL,'172.19.0.4','2020-06-18 00:37:53','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3156,91,NULL,'172.19.0.4','2020-06-18 00:37:57','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3157,115,NULL,'172.19.0.4','2020-06-18 00:37:58','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3158,88,NULL,'172.19.0.4','2020-06-18 00:37:59','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3159,65,NULL,'172.19.0.4','2020-06-18 00:38:03','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3160,89,NULL,'172.19.0.4','2020-06-18 00:38:03','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3161,65,NULL,'172.19.0.4','2020-06-18 00:38:03','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3162,44,NULL,'172.19.0.4','2020-06-18 00:38:03','2020-06-18 00:40:52','2020-06-18 00:40:52'),(3163,45,NULL,'172.19.0.4','2020-06-18 00:38:04','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3164,28,NULL,'172.19.0.4','2020-06-18 00:38:04','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3165,95,NULL,'172.19.0.4','2020-06-18 00:38:05','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3166,111,NULL,'172.19.0.4','2020-06-18 00:38:08','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3167,122,NULL,'172.19.0.4','2020-06-18 00:38:10','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3168,120,NULL,'172.19.0.4','2020-06-18 00:38:11','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3169,93,NULL,'172.19.0.4','2020-06-18 00:38:12','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3170,108,NULL,'172.19.0.4','2020-06-18 00:38:12','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3171,106,NULL,'172.19.0.4','2020-06-18 00:38:16','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3172,124,NULL,'172.19.0.4','2020-06-18 00:38:17','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3173,49,NULL,'172.19.0.4','2020-06-18 00:38:17','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3174,123,NULL,'172.19.0.4','2020-06-18 00:38:20','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3175,89,NULL,'172.19.0.4','2020-06-18 00:38:20','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3176,95,NULL,'172.19.0.4','2020-06-18 00:38:22','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3177,93,NULL,'172.19.0.4','2020-06-18 00:38:24','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3178,90,NULL,'172.19.0.4','2020-06-18 00:38:24','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3179,94,NULL,'172.19.0.4','2020-06-18 00:38:24','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3180,65,NULL,'172.19.0.4','2020-06-18 00:38:25','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3181,101,NULL,'172.19.0.4','2020-06-18 00:38:28','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3182,36,NULL,'172.19.0.4','2020-06-18 00:38:31','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3183,15,NULL,'172.19.0.4','2020-06-18 00:38:32','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3184,31,NULL,'172.19.0.4','2020-06-18 00:38:33','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3185,108,NULL,'172.19.0.4','2020-06-18 00:38:38','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3186,93,NULL,'172.19.0.4','2020-06-18 00:38:39','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3187,98,NULL,'172.19.0.4','2020-06-18 00:38:40','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3188,107,NULL,'172.19.0.4','2020-06-18 00:38:41','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3189,41,NULL,'172.19.0.4','2020-06-18 00:38:42','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3190,93,NULL,'172.19.0.4','2020-06-18 00:38:43','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3191,114,NULL,'172.19.0.4','2020-06-18 00:38:43','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3192,41,NULL,'172.19.0.4','2020-06-18 00:38:44','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3193,48,NULL,'172.19.0.4','2020-06-18 00:38:47','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3194,50,NULL,'172.19.0.4','2020-06-18 00:38:49','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3195,101,NULL,'172.19.0.4','2020-06-18 00:38:53','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3196,93,NULL,'172.19.0.4','2020-06-18 00:38:53','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3197,91,NULL,'172.19.0.4','2020-06-18 00:38:53','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3198,50,NULL,'172.19.0.4','2020-06-18 00:38:55','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3199,37,NULL,'172.19.0.4','2020-06-18 00:38:55','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3200,112,NULL,'172.19.0.4','2020-06-18 00:38:56','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3201,110,NULL,'172.19.0.4','2020-06-18 00:38:57','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3202,90,NULL,'172.19.0.4','2020-06-18 00:38:59','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3203,47,NULL,'172.19.0.4','2020-06-18 00:38:59','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3204,41,NULL,'172.19.0.4','2020-06-18 00:39:00','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3205,115,NULL,'172.19.0.4','2020-06-18 00:39:02','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3206,98,NULL,'172.19.0.4','2020-06-18 00:39:02','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3207,100,NULL,'172.19.0.4','2020-06-18 00:39:03','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3208,124,NULL,'172.19.0.4','2020-06-18 00:39:03','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3209,36,NULL,'172.19.0.4','2020-06-18 00:39:05','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3210,50,NULL,'172.19.0.4','2020-06-18 00:39:06','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3211,110,NULL,'172.19.0.4','2020-06-18 00:39:09','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3212,49,NULL,'172.19.0.4','2020-06-18 00:39:10','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3213,28,NULL,'172.19.0.4','2020-06-18 00:39:10','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3214,49,NULL,'172.19.0.4','2020-06-18 00:39:11','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3215,35,NULL,'172.19.0.4','2020-06-18 00:39:11','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3216,111,NULL,'172.19.0.4','2020-06-18 00:39:11','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3217,35,NULL,'172.19.0.4','2020-06-18 00:39:12','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3218,47,NULL,'172.19.0.4','2020-06-18 00:39:12','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3219,120,NULL,'172.19.0.4','2020-06-18 00:39:13','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3220,27,NULL,'172.19.0.4','2020-06-18 00:39:14','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3221,47,NULL,'172.19.0.4','2020-06-18 00:39:14','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3222,107,NULL,'172.19.0.4','2020-06-18 00:39:17','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3223,43,NULL,'172.19.0.4','2020-06-18 00:39:19','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3224,37,NULL,'172.19.0.4','2020-06-18 00:39:20','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3225,114,NULL,'172.19.0.4','2020-06-18 00:39:23','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3226,65,NULL,'172.19.0.4','2020-06-18 00:39:24','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3227,46,NULL,'172.19.0.4','2020-06-18 00:39:25','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3228,101,NULL,'172.19.0.4','2020-06-18 00:39:28','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3229,32,NULL,'172.19.0.4','2020-06-18 00:39:30','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3230,110,NULL,'172.19.0.4','2020-06-18 00:39:32','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3231,101,NULL,'172.19.0.4','2020-06-18 00:39:35','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3232,45,NULL,'172.19.0.4','2020-06-18 00:39:35','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3233,15,NULL,'172.19.0.4','2020-06-18 00:39:35','2020-06-18 00:40:53','2020-06-18 00:40:53'),(3234,94,NULL,'172.19.0.4','2020-06-18 00:39:38','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3235,124,NULL,'172.19.0.4','2020-06-18 00:39:46','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3236,116,NULL,'172.19.0.4','2020-06-18 00:39:47','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3237,44,NULL,'172.19.0.4','2020-06-18 00:39:47','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3238,108,NULL,'172.19.0.4','2020-06-18 00:39:49','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3239,123,NULL,'172.19.0.4','2020-06-18 00:39:56','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3240,43,NULL,'172.19.0.4','2020-06-18 00:39:57','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3241,123,NULL,'172.19.0.4','2020-06-18 00:39:58','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3242,94,NULL,'172.19.0.4','2020-06-18 00:40:06','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3243,97,NULL,'172.19.0.4','2020-06-18 00:40:07','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3244,42,NULL,'172.19.0.4','2020-06-18 00:40:07','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3245,91,NULL,'172.19.0.4','2020-06-18 00:40:17','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3246,65,NULL,'172.19.0.4','2020-06-18 00:40:17','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3247,41,NULL,'172.19.0.4','2020-06-18 00:40:18','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3248,90,NULL,'172.19.0.4','2020-06-18 00:40:27','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3249,35,NULL,'172.19.0.4','2020-06-18 00:40:28','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3250,119,NULL,'172.19.0.4','2020-06-18 00:40:30','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3251,50,NULL,'172.19.0.4','2020-06-18 00:40:38','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3252,1,NULL,'172.19.0.4','2020-06-18 00:40:44','2020-06-18 00:40:54','2020-06-18 00:40:54'),(3253,41,NULL,'172.19.0.4','2020-06-18 00:40:55','2020-06-18 00:40:55','2020-06-18 00:40:55'),(3254,88,NULL,'172.19.0.4','2020-06-18 00:40:56','2020-06-18 00:40:56','2020-06-18 00:40:56'),(3255,113,NULL,'172.19.0.4','2020-06-18 00:40:57','2020-06-18 00:40:57','2020-06-18 00:40:57'),(3256,111,NULL,'172.19.0.4','2020-06-18 00:41:01','2020-06-18 00:41:01','2020-06-18 00:41:01'),(3257,104,NULL,'172.19.0.4','2020-06-18 00:41:04','2020-06-18 00:41:04','2020-06-18 00:41:04'),(3258,28,NULL,'172.19.0.4','2020-06-18 00:41:06','2020-06-18 00:41:06','2020-06-18 00:41:06'),(3259,117,NULL,'172.19.0.4','2020-06-18 05:36:29','2020-06-18 05:36:29','2020-06-18 05:36:29'),(3260,111,NULL,'172.19.0.4','2020-06-18 09:25:48','2020-06-18 09:25:48','2020-06-18 09:25:48'),(3261,14,NULL,'172.19.0.4','2020-06-18 12:26:42','2020-06-18 12:26:42','2020-06-18 12:26:42'),(3262,45,NULL,'172.19.0.4','2020-06-18 14:32:01','2020-06-18 14:32:01','2020-06-18 14:32:01'),(3263,48,NULL,'172.19.0.4','2020-06-18 14:50:21','2020-06-18 14:50:21','2020-06-18 14:50:21'),(3264,46,NULL,'172.19.0.4','2020-06-18 15:21:58','2020-06-18 15:21:58','2020-06-18 15:21:58'),(3265,14,NULL,'172.19.0.4','2020-06-18 20:28:12','2020-06-18 20:28:12','2020-06-18 20:28:12'),(3266,52,NULL,'172.19.0.4','2020-06-18 20:28:12','2020-06-18 20:28:12','2020-06-18 20:28:12'),(3267,105,NULL,'172.19.0.4','2020-06-18 20:28:20','2020-06-18 20:28:20','2020-06-18 20:28:20'),(3268,129,NULL,'172.19.0.4','2020-06-18 20:28:23','2020-06-18 20:28:23','2020-06-18 20:28:23'),(3269,128,NULL,'172.19.0.4','2020-06-18 20:28:24','2020-06-18 20:28:24','2020-06-18 20:28:24'),(3270,131,NULL,'172.19.0.4','2020-06-18 20:28:24','2020-06-18 20:28:24','2020-06-18 20:28:24'),(3271,126,NULL,'172.19.0.4','2020-06-18 20:28:26','2020-06-18 20:28:26','2020-06-18 20:28:26'),(3272,125,NULL,'172.19.0.4','2020-06-18 20:28:27','2020-06-18 20:28:27','2020-06-18 20:28:27'),(3273,127,NULL,'172.19.0.4','2020-06-18 20:28:28','2020-06-18 20:28:28','2020-06-18 20:28:28'),(3274,108,NULL,'172.19.0.4','2020-06-18 20:28:56','2020-06-18 20:28:56','2020-06-18 20:28:56'),(3275,35,NULL,'172.19.0.4','2020-06-18 20:28:56','2020-06-18 20:28:56','2020-06-18 20:28:56'),(3276,27,NULL,'172.19.0.4','2020-06-18 20:28:57','2020-06-18 20:28:57','2020-06-18 20:28:57'),(3277,122,NULL,'172.19.0.4','2020-06-18 20:29:01','2020-06-18 20:29:01','2020-06-18 20:29:01'),(3278,95,NULL,'172.19.0.4','2020-06-18 20:29:01','2020-06-18 20:29:01','2020-06-18 20:29:01'),(3279,15,NULL,'172.19.0.4','2020-06-18 20:29:03','2020-06-18 20:29:03','2020-06-18 20:29:03'),(3280,115,NULL,'172.19.0.4','2020-06-18 20:29:03','2020-06-18 20:29:03','2020-06-18 20:29:03'),(3281,23,NULL,'172.19.0.4','2020-06-18 20:29:05','2020-06-18 20:29:05','2020-06-18 20:29:05'),(3282,104,NULL,'172.19.0.4','2020-06-18 20:29:08','2020-06-18 20:29:08','2020-06-18 20:29:08'),(3283,107,NULL,'172.19.0.4','2020-06-18 20:29:12','2020-06-18 20:29:12','2020-06-18 20:29:12'),(3284,1,NULL,'172.19.0.4','2020-06-18 21:18:51','2020-06-18 21:18:51','2020-06-18 21:18:51'),(3285,27,NULL,'172.19.0.4','2020-06-19 01:06:59','2020-06-19 01:06:59','2020-06-19 01:06:59'),(3286,108,NULL,'172.19.0.4','2020-06-19 06:14:07','2020-06-19 06:14:07','2020-06-19 06:14:07'),(3287,100,NULL,'172.19.0.4','2020-06-19 06:24:03','2020-06-19 06:24:03','2020-06-19 06:24:03'),(3288,105,NULL,'172.19.0.4','2020-06-19 08:01:54','2020-06-19 08:01:54','2020-06-19 08:01:54'),(3289,65,NULL,'172.19.0.4','2020-06-19 08:57:01','2020-06-19 08:57:01','2020-06-19 08:57:01'),(3290,88,NULL,'172.19.0.4','2020-06-19 10:27:01','2020-06-19 10:27:01','2020-06-19 10:27:01'),(3291,97,NULL,'172.19.0.4','2020-06-19 12:59:44','2020-06-19 12:59:44','2020-06-19 12:59:44'),(3292,130,NULL,'172.19.0.4','2020-06-19 15:41:34','2020-06-19 15:41:34','2020-06-19 15:41:34'),(3293,95,NULL,'172.19.0.4','2020-06-19 16:27:01','2020-06-19 16:27:01','2020-06-19 16:27:01'),(3294,98,NULL,'172.19.0.4','2020-06-19 18:27:01','2020-06-19 18:27:01','2020-06-19 18:27:01'),(3295,35,NULL,'172.19.0.4','2020-06-19 21:08:10','2020-06-19 21:08:10','2020-06-19 21:08:10'),(3296,97,NULL,'172.19.0.4','2020-06-19 21:27:01','2020-06-19 21:27:01','2020-06-19 21:27:01'),(3297,107,NULL,'172.19.0.4','2020-06-19 22:50:36','2020-06-19 22:50:36','2020-06-19 22:50:36'),(3298,109,NULL,'172.19.0.4','2020-06-19 23:41:03','2020-06-19 23:41:03','2020-06-19 23:41:03'),(3299,28,NULL,'172.19.0.4','2020-06-20 00:03:15','2020-06-20 00:03:15','2020-06-20 00:03:15'),(3300,106,NULL,'172.19.0.4','2020-06-20 00:31:30','2020-06-20 00:31:30','2020-06-20 00:31:30'),(3301,14,NULL,'172.19.0.4','2020-06-20 01:07:50','2020-06-20 01:07:50','2020-06-20 01:07:50'),(3302,126,NULL,'172.19.0.4','2020-06-20 01:44:11','2020-06-20 01:44:11','2020-06-20 01:44:11'),(3303,108,NULL,'172.19.0.4','2020-06-20 02:20:29','2020-06-20 02:20:29','2020-06-20 02:20:29'),(3304,42,NULL,'172.19.0.4','2020-06-20 02:28:30','2020-06-20 02:28:30','2020-06-20 02:28:30'),(3305,106,NULL,'172.19.0.4','2020-06-20 02:34:49','2020-06-20 02:34:49','2020-06-20 02:34:49'),(3306,104,NULL,'172.19.0.4','2020-06-20 04:53:58','2020-06-20 04:53:58','2020-06-20 04:53:58'),(3307,43,NULL,'106.11.156.113','2020-06-20 06:59:43','2020-06-20 06:59:43','2020-06-20 06:59:43'),(3308,47,NULL,'172.19.0.4','2020-06-20 07:47:30','2020-06-20 07:47:30','2020-06-20 07:47:30'),(3309,110,NULL,'172.19.0.4','2020-06-20 09:23:59','2020-06-20 09:23:59','2020-06-20 09:23:59'),(3310,101,NULL,'172.19.0.4','2020-06-20 10:08:59','2020-06-20 10:08:59','2020-06-20 10:08:59'),(3311,46,NULL,'172.19.0.4','2020-06-20 12:00:29','2020-06-20 12:00:29','2020-06-20 12:00:29'),(3312,99,NULL,'172.19.0.4','2020-06-20 13:50:29','2020-06-20 13:50:29','2020-06-20 13:50:29'),(3313,127,NULL,'172.19.0.4','2020-06-20 15:50:05','2020-06-20 15:50:05','2020-06-20 15:50:05'),(3314,43,NULL,'172.19.0.4','2020-06-20 22:25:39','2020-06-20 22:25:39','2020-06-20 22:25:39'),(3315,104,NULL,'172.19.0.4','2020-06-21 03:51:25','2020-06-21 03:51:25','2020-06-21 03:51:25'),(3316,52,NULL,'172.19.0.4','2020-06-21 04:36:37','2020-06-21 04:36:37','2020-06-21 04:36:37'),(3317,14,NULL,'172.19.0.4','2020-06-21 05:34:50','2020-06-21 05:34:50','2020-06-21 05:34:50'),(3318,52,NULL,'172.19.0.4','2020-06-21 05:34:51','2020-06-21 05:34:52','2020-06-21 05:34:52'),(3319,131,NULL,'172.19.0.4','2020-06-21 05:34:58','2020-06-21 05:34:58','2020-06-21 05:34:58'),(3320,105,NULL,'172.19.0.4','2020-06-21 05:34:59','2020-06-21 05:34:59','2020-06-21 05:34:59'),(3321,129,NULL,'172.19.0.4','2020-06-21 05:35:04','2020-06-21 05:35:04','2020-06-21 05:35:04'),(3322,130,NULL,'172.19.0.4','2020-06-21 05:35:04','2020-06-21 05:35:04','2020-06-21 05:35:04'),(3323,127,NULL,'172.19.0.4','2020-06-21 05:35:04','2020-06-21 05:35:04','2020-06-21 05:35:04'),(3324,128,NULL,'172.19.0.4','2020-06-21 05:35:04','2020-06-21 05:35:05','2020-06-21 05:35:05'),(3325,126,NULL,'172.19.0.4','2020-06-21 05:35:04','2020-06-21 05:35:05','2020-06-21 05:35:05'),(3326,125,NULL,'172.19.0.4','2020-06-21 05:35:05','2020-06-21 05:35:05','2020-06-21 05:35:05'),(3327,115,NULL,'172.19.0.4','2020-06-21 05:35:35','2020-06-21 05:35:36','2020-06-21 05:35:36'),(3328,65,NULL,'172.19.0.4','2020-06-21 05:35:37','2020-06-21 05:35:37','2020-06-21 05:35:37'),(3329,120,NULL,'172.19.0.4','2020-06-21 05:35:37','2020-06-21 05:35:37','2020-06-21 05:35:37'),(3330,41,NULL,'172.19.0.4','2020-06-21 05:35:37','2020-06-21 05:35:37','2020-06-21 05:35:37'),(3331,45,NULL,'172.19.0.4','2020-06-21 05:35:41','2020-06-21 05:35:41','2020-06-21 05:35:41'),(3332,50,NULL,'172.19.0.4','2020-06-21 05:35:43','2020-06-21 05:35:43','2020-06-21 05:35:43'),(3333,21,NULL,'172.19.0.4','2020-06-21 05:35:44','2020-06-21 05:35:44','2020-06-21 05:35:44'),(3334,93,NULL,'172.19.0.4','2020-06-21 05:35:46','2020-06-21 05:35:46','2020-06-21 05:35:46'),(3335,42,NULL,'172.19.0.4','2020-06-21 05:35:50','2020-06-21 05:35:50','2020-06-21 05:35:50'),(3336,116,NULL,'172.19.0.4','2020-06-21 05:35:51','2020-06-21 05:35:51','2020-06-21 05:35:51'),(3337,109,NULL,'172.19.0.4','2020-06-21 05:39:52','2020-06-21 05:39:52','2020-06-21 05:39:52'),(3338,105,NULL,'172.19.0.4','2020-06-21 05:42:39','2020-06-21 05:42:39','2020-06-21 05:42:39'),(3339,49,NULL,'106.11.156.38','2020-06-21 06:04:53','2020-06-21 06:04:53','2020-06-21 06:04:53'),(3340,14,NULL,'172.19.0.4','2020-06-21 07:42:20','2020-06-21 07:42:20','2020-06-21 07:42:20'),(3341,96,NULL,'172.19.0.4','2020-06-22 00:12:45','2020-06-22 00:12:45','2020-06-22 00:12:45'),(3342,52,NULL,'172.19.0.4','2020-06-22 05:22:43','2020-06-22 05:22:43','2020-06-22 05:22:43'),(3343,46,NULL,'172.19.0.4','2020-06-22 12:21:52','2020-06-22 12:21:52','2020-06-22 12:21:52'),(3344,46,NULL,'172.19.0.4','2020-06-22 13:00:15','2020-06-22 13:00:15','2020-06-22 13:00:15'),(3345,89,NULL,'172.19.0.4','2020-06-22 13:04:44','2020-06-22 13:04:44','2020-06-22 13:04:44'),(3346,41,NULL,'172.19.0.4','2020-06-22 14:32:39','2020-06-22 14:32:39','2020-06-22 14:32:39'),(3347,120,NULL,'172.19.0.4','2020-06-22 15:02:34','2020-06-22 15:02:34','2020-06-22 15:02:34'),(3348,27,NULL,'172.19.0.4','2020-06-22 16:20:40','2020-06-22 16:20:40','2020-06-22 16:20:40'),(3349,37,NULL,'42.156.139.54','2020-06-22 17:07:52','2020-06-22 17:07:52','2020-06-22 17:07:52'),(3350,104,NULL,'172.19.0.4','2020-06-22 19:46:35','2020-06-22 19:46:35','2020-06-22 19:46:35'),(3351,107,NULL,'172.19.0.4','2020-06-22 19:51:24','2020-06-22 19:51:24','2020-06-22 19:51:24'),(3352,101,NULL,'172.19.0.4','2020-06-22 19:53:56','2020-06-22 19:53:56','2020-06-22 19:53:56'),(3353,121,NULL,'172.19.0.4','2020-06-22 21:18:49','2020-06-22 21:18:49','2020-06-22 21:18:49'),(3354,95,NULL,'172.19.0.4','2020-06-22 22:17:03','2020-06-22 22:17:03','2020-06-22 22:17:03'),(3355,15,NULL,'172.19.0.4','2020-06-22 22:44:16','2020-06-22 22:44:16','2020-06-22 22:44:16'),(3356,45,NULL,'172.19.0.4','2020-06-23 01:04:40','2020-06-23 01:04:40','2020-06-23 01:04:40'),(3357,88,NULL,'172.19.0.4','2020-06-23 02:11:20','2020-06-23 02:11:20','2020-06-23 02:11:20'),(3358,114,NULL,'172.19.0.4','2020-06-23 02:57:31','2020-06-23 02:57:31','2020-06-23 02:57:31'),(3359,94,NULL,'172.19.0.4','2020-06-23 05:03:09','2020-06-23 05:03:09','2020-06-23 05:03:09'),(3360,113,NULL,'172.19.0.4','2020-06-23 05:38:21','2020-06-23 05:38:21','2020-06-23 05:38:21'),(3361,47,NULL,'172.19.0.4','2020-06-23 06:19:37','2020-06-23 06:19:37','2020-06-23 06:19:37'),(3362,105,NULL,'172.19.0.4','2020-06-23 07:05:40','2020-06-23 07:05:40','2020-06-23 07:05:40'),(3363,65,NULL,'172.19.0.4','2020-06-23 07:50:40','2020-06-23 07:50:40','2020-06-23 07:50:40'),(3364,35,NULL,'172.19.0.4','2020-06-23 09:16:43','2020-06-23 09:16:43','2020-06-23 09:16:43'),(3365,37,NULL,'172.19.0.4','2020-06-23 09:20:00','2020-06-23 09:20:00','2020-06-23 09:20:00'),(3366,41,NULL,'172.19.0.4','2020-06-23 09:44:15','2020-06-23 09:44:15','2020-06-23 09:44:15'),(3367,109,NULL,'172.19.0.4','2020-06-23 09:46:35','2020-06-23 09:46:35','2020-06-23 09:46:35'),(3368,96,NULL,'172.19.0.4','2020-06-23 11:08:08','2020-06-23 11:08:08','2020-06-23 11:08:08'),(3369,52,NULL,'172.19.0.4','2020-06-23 14:21:39','2020-06-23 14:21:39','2020-06-23 14:21:39'),(3370,14,NULL,'172.19.0.4','2020-06-23 14:21:39','2020-06-23 14:21:39','2020-06-23 14:21:39'),(3371,105,NULL,'172.19.0.4','2020-06-23 14:21:45','2020-06-23 14:21:45','2020-06-23 14:21:45'),(3372,131,NULL,'172.19.0.4','2020-06-23 14:21:46','2020-06-23 14:21:46','2020-06-23 14:21:46'),(3373,130,NULL,'172.19.0.4','2020-06-23 14:21:47','2020-06-23 14:21:47','2020-06-23 14:21:47'),(3374,128,NULL,'172.19.0.4','2020-06-23 14:21:48','2020-06-23 14:21:48','2020-06-23 14:21:48'),(3375,129,NULL,'172.19.0.4','2020-06-23 14:21:48','2020-06-23 14:21:48','2020-06-23 14:21:48'),(3376,127,NULL,'172.19.0.4','2020-06-23 14:21:49','2020-06-23 14:21:49','2020-06-23 14:21:49'),(3377,126,NULL,'172.19.0.4','2020-06-23 14:21:51','2020-06-23 14:21:51','2020-06-23 14:21:51'),(3378,125,NULL,'172.19.0.4','2020-06-23 14:21:55','2020-06-23 14:21:55','2020-06-23 14:21:55'),(3379,91,NULL,'172.19.0.4','2020-06-23 14:22:20','2020-06-23 14:22:20','2020-06-23 14:22:20'),(3380,108,NULL,'172.19.0.4','2020-06-23 14:22:21','2020-06-23 14:22:22','2020-06-23 14:22:22'),(3381,112,NULL,'172.19.0.4','2020-06-23 14:22:21','2020-06-23 14:22:22','2020-06-23 14:22:22'),(3382,37,NULL,'172.19.0.4','2020-06-23 14:22:22','2020-06-23 14:22:22','2020-06-23 14:22:22'),(3383,50,NULL,'172.19.0.4','2020-06-23 14:22:23','2020-06-23 14:22:23','2020-06-23 14:22:23'),(3384,36,NULL,'172.19.0.4','2020-06-23 14:22:28','2020-06-23 14:22:28','2020-06-23 14:22:28'),(3385,110,NULL,'172.19.0.4','2020-06-23 14:22:29','2020-06-23 14:22:29','2020-06-23 14:22:29'),(3386,94,NULL,'172.19.0.4','2020-06-23 14:22:29','2020-06-23 14:22:30','2020-06-23 14:22:30'),(3387,97,NULL,'172.19.0.4','2020-06-23 15:59:20','2020-06-23 15:59:20','2020-06-23 15:59:20'),(3388,36,NULL,'172.19.0.4','2020-06-23 17:09:04','2020-06-23 17:09:04','2020-06-23 17:09:04'),(3389,48,NULL,'172.19.0.4','2020-06-23 20:33:45','2020-06-23 20:33:45','2020-06-23 20:33:45'),(3390,14,NULL,'172.19.0.4','2020-06-23 23:31:35','2020-06-23 23:31:35','2020-06-23 23:31:35'),(3391,125,NULL,'172.19.0.4','2020-06-24 00:43:54','2020-06-24 00:43:54','2020-06-24 00:43:54'),(3392,14,NULL,'172.19.0.4','2020-06-24 03:53:22','2020-06-24 03:53:22','2020-06-24 03:53:22'),(3393,41,NULL,'42.156.254.100','2020-06-24 05:12:55','2020-06-24 05:12:55','2020-06-24 05:12:55'),(3394,97,NULL,'172.19.0.4','2020-06-24 05:16:45','2020-06-24 05:16:45','2020-06-24 05:16:45'),(3395,52,NULL,'172.19.0.4','2020-06-24 05:22:51','2020-06-24 05:22:51','2020-06-24 05:22:51'),(3396,31,NULL,'172.19.0.4','2020-06-24 05:52:39','2020-06-24 05:52:39','2020-06-24 05:52:39'),(3397,97,NULL,'172.19.0.4','2020-06-24 06:18:12','2020-06-24 06:18:12','2020-06-24 06:18:12'),(3398,101,NULL,'172.19.0.4','2020-06-24 09:25:34','2020-06-24 09:25:34','2020-06-24 09:25:34'),(3399,36,NULL,'172.19.0.4','2020-06-24 14:53:25','2020-06-24 14:53:25','2020-06-24 14:53:25'),(3400,110,NULL,'172.19.0.4','2020-06-24 17:03:31','2020-06-24 17:03:31','2020-06-24 17:03:31'),(3401,130,NULL,'172.19.0.4','2020-06-24 17:39:04','2020-06-24 17:39:04','2020-06-24 17:39:04'),(3402,129,NULL,'172.19.0.4','2020-06-24 19:50:38','2020-06-24 19:50:38','2020-06-24 19:50:38'),(3403,104,NULL,'172.19.0.4','2020-06-24 20:14:18','2020-06-24 20:14:18','2020-06-24 20:14:18'),(3404,104,NULL,'172.19.0.4','2020-06-24 22:37:42','2020-06-24 22:37:42','2020-06-24 22:37:42'),(3405,131,NULL,'172.19.0.4','2020-06-24 23:11:09','2020-06-24 23:11:09','2020-06-24 23:11:09'),(3406,90,NULL,'172.19.0.4','2020-06-25 00:58:16','2020-06-25 00:58:17','2020-06-25 00:58:17'),(3407,104,NULL,'172.19.0.4','2020-06-25 04:58:07','2020-06-25 04:58:07','2020-06-25 04:58:07'),(3408,128,NULL,'172.19.0.4','2020-06-25 10:07:09','2020-06-25 10:07:09','2020-06-25 10:07:09'),(3409,43,NULL,'172.19.0.4','2020-06-25 12:44:49','2020-06-25 12:44:49','2020-06-25 12:44:49'),(3410,100,NULL,'172.19.0.4','2020-06-25 14:43:48','2020-06-25 14:43:48','2020-06-25 14:43:48'),(3411,101,NULL,'172.19.0.4','2020-06-25 17:08:51','2020-06-25 17:08:51','2020-06-25 17:08:51'),(3412,108,NULL,'172.19.0.4','2020-06-25 17:47:48','2020-06-25 17:47:48','2020-06-25 17:47:48'),(3413,65,NULL,'172.19.0.4','2020-06-25 18:34:32','2020-06-25 18:34:32','2020-06-25 18:34:32'),(3414,27,NULL,'172.19.0.4','2020-06-25 18:43:31','2020-06-25 18:43:31','2020-06-25 18:43:31'),(3415,72,NULL,'172.19.0.4','2020-06-25 22:38:14','2020-06-25 22:38:14','2020-06-25 22:38:14'),(3416,52,NULL,'172.19.0.4','2020-06-25 23:18:00','2020-06-25 23:18:01','2020-06-25 23:18:01'),(3417,14,NULL,'172.19.0.4','2020-06-25 23:18:02','2020-06-25 23:18:02','2020-06-25 23:18:02'),(3418,105,NULL,'172.19.0.4','2020-06-25 23:18:11','2020-06-25 23:18:11','2020-06-25 23:18:11'),(3419,131,NULL,'172.19.0.4','2020-06-25 23:18:11','2020-06-25 23:18:11','2020-06-25 23:18:11'),(3420,129,NULL,'172.19.0.4','2020-06-25 23:18:11','2020-06-25 23:18:11','2020-06-25 23:18:11'),(3421,130,NULL,'172.19.0.4','2020-06-25 23:18:12','2020-06-25 23:18:12','2020-06-25 23:18:12'),(3422,128,NULL,'172.19.0.4','2020-06-25 23:18:12','2020-06-25 23:18:13','2020-06-25 23:18:13'),(3423,127,NULL,'172.19.0.4','2020-06-25 23:18:13','2020-06-25 23:18:13','2020-06-25 23:18:13'),(3424,126,NULL,'172.19.0.4','2020-06-25 23:18:15','2020-06-25 23:18:15','2020-06-25 23:18:15'),(3425,125,NULL,'172.19.0.4','2020-06-25 23:18:21','2020-06-25 23:18:21','2020-06-25 23:18:21'),(3426,94,NULL,'172.19.0.4','2020-06-25 23:18:45','2020-06-25 23:18:45','2020-06-25 23:18:45'),(3427,101,NULL,'172.19.0.4','2020-06-25 23:18:46','2020-06-25 23:18:46','2020-06-25 23:18:46'),(3428,107,NULL,'172.19.0.4','2020-06-25 23:18:46','2020-06-25 23:18:46','2020-06-25 23:18:46'),(3429,115,NULL,'172.19.0.4','2020-06-25 23:18:48','2020-06-25 23:18:48','2020-06-25 23:18:48'),(3430,31,NULL,'172.19.0.4','2020-06-25 23:18:51','2020-06-25 23:18:51','2020-06-25 23:18:51'),(3431,49,NULL,'172.19.0.4','2020-06-25 23:18:52','2020-06-25 23:18:52','2020-06-25 23:18:52'),(3432,95,NULL,'172.19.0.4','2020-06-25 23:18:53','2020-06-25 23:18:53','2020-06-25 23:18:53'),(3433,41,NULL,'172.19.0.4','2020-06-25 23:18:55','2020-06-25 23:18:55','2020-06-25 23:18:55'),(3434,108,NULL,'172.19.0.4','2020-06-25 23:18:57','2020-06-25 23:18:57','2020-06-25 23:18:57'),(3435,43,NULL,'172.19.0.4','2020-06-25 23:19:02','2020-06-25 23:19:02','2020-06-25 23:19:02'),(3436,50,NULL,'172.19.0.4','2020-06-25 23:50:05','2020-06-25 23:50:05','2020-06-25 23:50:05'),(3437,65,NULL,'172.19.0.4','2020-06-25 23:50:06','2020-06-25 23:50:06','2020-06-25 23:50:06'),(3438,23,NULL,'172.19.0.4','2020-06-25 23:50:07','2020-06-25 23:50:07','2020-06-25 23:50:07'),(3439,33,NULL,'172.19.0.4','2020-06-25 23:50:08','2020-06-25 23:50:08','2020-06-25 23:50:08'),(3440,42,NULL,'172.19.0.4','2020-06-25 23:50:09','2020-06-25 23:50:09','2020-06-25 23:50:09'),(3441,32,NULL,'172.19.0.4','2020-06-25 23:50:12','2020-06-25 23:50:12','2020-06-25 23:50:12'),(3442,48,NULL,'172.19.0.4','2020-06-25 23:50:13','2020-06-25 23:50:13','2020-06-25 23:50:13'),(3443,44,NULL,'172.19.0.4','2020-06-25 23:50:14','2020-06-25 23:50:14','2020-06-25 23:50:14'),(3444,117,NULL,'172.19.0.4','2020-06-25 23:50:15','2020-06-25 23:50:15','2020-06-25 23:50:15'),(3445,106,NULL,'172.19.0.4','2020-06-25 23:50:17','2020-06-25 23:50:17','2020-06-25 23:50:17'),(3446,100,NULL,'172.19.0.4','2020-06-25 23:50:18','2020-06-25 23:50:18','2020-06-25 23:50:18'),(3447,36,NULL,'172.19.0.4','2020-06-25 23:50:19','2020-06-25 23:50:19','2020-06-25 23:50:19'),(3448,96,NULL,'172.19.0.4','2020-06-25 23:50:21','2020-06-25 23:50:21','2020-06-25 23:50:21'),(3449,104,NULL,'172.19.0.4','2020-06-25 23:50:23','2020-06-25 23:50:23','2020-06-25 23:50:23'),(3450,121,NULL,'172.19.0.4','2020-06-25 23:50:24','2020-06-25 23:50:24','2020-06-25 23:50:24'),(3451,88,NULL,'172.19.0.4','2020-06-26 00:43:31','2020-06-26 00:43:31','2020-06-26 00:43:31'),(3452,47,NULL,'172.19.0.4','2020-06-26 03:43:31','2020-06-26 03:43:31','2020-06-26 03:43:31'),(3453,99,NULL,'172.19.0.4','2020-06-26 04:28:27','2020-06-26 04:28:27','2020-06-26 04:28:27'),(3454,104,NULL,'172.19.0.4','2020-06-26 06:36:41','2020-06-26 06:36:41','2020-06-26 06:36:41'),(3455,108,NULL,'172.19.0.4','2020-06-26 06:47:28','2020-06-26 06:47:28','2020-06-26 06:47:28'),(3456,122,NULL,'172.19.0.4','2020-06-26 07:12:09','2020-06-26 07:12:09','2020-06-26 07:12:09'),(3457,119,NULL,'172.19.0.4','2020-06-26 07:50:12','2020-06-26 07:50:12','2020-06-26 07:50:12'),(3458,14,NULL,'172.19.0.4','2020-06-26 13:17:13','2020-06-26 13:17:13','2020-06-26 13:17:13'),(3459,32,NULL,'172.19.0.4','2020-06-26 13:20:46','2020-06-26 13:20:46','2020-06-26 13:20:46'),(3460,14,NULL,'172.19.0.4','2020-06-26 18:18:21','2020-06-26 18:18:22','2020-06-26 18:18:22'),(3461,126,NULL,'172.19.0.4','2020-06-26 18:18:23','2020-06-26 18:18:23','2020-06-26 18:18:23'),(3462,52,NULL,'172.19.0.4','2020-06-26 20:51:49','2020-06-26 20:51:49','2020-06-26 20:51:49'),(3463,33,NULL,'172.19.0.4','2020-06-26 21:54:46','2020-06-26 21:54:46','2020-06-26 21:54:46'),(3464,14,NULL,'172.19.0.4','2020-06-27 02:36:16','2020-06-27 02:36:16','2020-06-27 02:36:16'),(3465,90,NULL,'172.19.0.4','2020-06-27 11:50:22','2020-06-27 11:50:22','2020-06-27 11:50:22'),(3466,121,NULL,'172.19.0.4','2020-06-27 13:36:50','2020-06-27 13:36:50','2020-06-27 13:36:50'),(3467,23,NULL,'172.19.0.4','2020-06-27 17:44:31','2020-06-27 17:44:31','2020-06-27 17:44:31'),(3468,117,NULL,'172.19.0.4','2020-06-27 18:13:43','2020-06-27 18:13:43','2020-06-27 18:13:43'),(3469,97,NULL,'172.19.0.4','2020-06-27 22:57:14','2020-06-27 22:57:14','2020-06-27 22:57:14'),(3470,14,NULL,'172.19.0.4','2020-06-27 23:22:46','2020-06-27 23:22:46','2020-06-27 23:22:46'),(3471,105,NULL,'172.19.0.4','2020-06-27 23:49:57','2020-06-27 23:49:57','2020-06-27 23:49:57'),(3472,105,NULL,'172.19.0.4','2020-06-28 00:05:50','2020-06-28 00:05:50','2020-06-28 00:05:50'),(3473,95,NULL,'172.19.0.4','2020-06-28 01:56:15','2020-06-28 01:56:15','2020-06-28 01:56:15'),(3474,48,NULL,'123.125.71.128','2020-06-28 02:45:01','2020-06-28 02:45:01','2020-06-28 02:45:01'),(3475,107,NULL,'172.19.0.4','2020-06-28 03:37:16','2020-06-28 03:37:17','2020-06-28 03:37:17'),(3476,120,NULL,'172.19.0.4','2020-06-28 04:21:49','2020-06-28 04:21:50','2020-06-28 04:21:50'),(3477,116,NULL,'172.19.0.4','2020-06-28 07:07:00','2020-06-28 07:07:00','2020-06-28 07:07:00'),(3478,65,NULL,'172.19.0.4','2020-06-28 07:09:04','2020-06-28 07:09:05','2020-06-28 07:09:05'),(3479,52,NULL,'172.19.0.4','2020-06-28 08:28:27','2020-06-28 08:28:27','2020-06-28 08:28:27'),(3480,14,NULL,'172.19.0.4','2020-06-28 08:28:30','2020-06-28 08:28:30','2020-06-28 08:28:30'),(3481,105,NULL,'172.19.0.4','2020-06-28 08:28:35','2020-06-28 08:28:35','2020-06-28 08:28:35'),(3482,131,NULL,'172.19.0.4','2020-06-28 08:28:37','2020-06-28 08:28:37','2020-06-28 08:28:37'),(3483,130,NULL,'172.19.0.4','2020-06-28 08:28:38','2020-06-28 08:28:38','2020-06-28 08:28:38'),(3484,128,NULL,'172.19.0.4','2020-06-28 08:28:38','2020-06-28 08:28:38','2020-06-28 08:28:38'),(3485,129,NULL,'172.19.0.4','2020-06-28 08:28:39','2020-06-28 08:28:39','2020-06-28 08:28:39'),(3486,125,NULL,'172.19.0.4','2020-06-28 08:28:40','2020-06-28 08:28:40','2020-06-28 08:28:40'),(3487,127,NULL,'172.19.0.4','2020-06-28 08:28:40','2020-06-28 08:28:40','2020-06-28 08:28:40'),(3488,126,NULL,'172.19.0.4','2020-06-28 08:28:40','2020-06-28 08:28:40','2020-06-28 08:28:40'),(3489,35,NULL,'172.19.0.4','2020-06-28 08:29:12','2020-06-28 08:29:12','2020-06-28 08:29:12'),(3490,113,NULL,'172.19.0.4','2020-06-28 08:29:12','2020-06-28 08:29:12','2020-06-28 08:29:12'),(3491,46,NULL,'172.19.0.4','2020-06-28 08:29:13','2020-06-28 08:29:13','2020-06-28 08:29:13'),(3492,93,NULL,'172.19.0.4','2020-06-28 08:29:14','2020-06-28 08:29:14','2020-06-28 08:29:14'),(3493,65,NULL,'172.19.0.4','2020-06-28 08:29:14','2020-06-28 08:29:14','2020-06-28 08:29:14'),(3494,106,NULL,'172.19.0.4','2020-06-28 08:29:18','2020-06-28 08:29:18','2020-06-28 08:29:18'),(3495,109,NULL,'172.19.0.4','2020-06-28 08:29:21','2020-06-28 08:29:21','2020-06-28 08:29:21'),(3496,45,NULL,'172.19.0.4','2020-06-28 08:29:21','2020-06-28 08:29:21','2020-06-28 08:29:21'),(3497,107,NULL,'172.19.0.4','2020-06-28 08:29:24','2020-06-28 08:29:24','2020-06-28 08:29:24'),(3498,116,NULL,'172.19.0.4','2020-06-28 12:52:49','2020-06-28 12:52:49','2020-06-28 12:52:49'),(3499,14,NULL,'172.19.0.4','2020-06-28 16:09:10','2020-06-28 16:09:10','2020-06-28 16:09:10'),(3500,105,NULL,'172.19.0.4','2020-06-28 18:57:58','2020-06-28 18:57:58','2020-06-28 18:57:58'),(3501,35,NULL,'172.19.0.4','2020-06-28 20:07:24','2020-06-28 20:07:24','2020-06-28 20:07:24'),(3502,14,NULL,'172.19.0.4','2020-06-28 22:13:46','2020-06-28 22:13:46','2020-06-28 22:13:46'),(3503,115,NULL,'172.19.0.4','2020-06-28 22:32:44','2020-06-28 22:32:44','2020-06-28 22:32:44'),(3504,125,NULL,'172.19.0.4','2020-06-29 00:19:06','2020-06-29 00:19:06','2020-06-29 00:19:06'),(3505,93,NULL,'172.19.0.4','2020-06-29 00:44:18','2020-06-29 00:44:18','2020-06-29 00:44:18'),(3506,14,NULL,'172.19.0.4','2020-06-29 01:16:22','2020-06-29 01:16:22','2020-06-29 01:16:22'),(3507,14,NULL,'172.19.0.4','2020-06-29 02:37:57','2020-06-29 02:37:57','2020-06-29 02:37:57'),(3508,130,NULL,'172.19.0.4','2020-06-29 04:30:48','2020-06-29 04:30:48','2020-06-29 04:30:48'),(3509,28,NULL,'172.19.0.4','2020-06-29 08:24:07','2020-06-29 08:24:07','2020-06-29 08:24:07'),(3510,48,NULL,'172.19.0.4','2020-06-29 08:42:31','2020-06-29 08:42:31','2020-06-29 08:42:31'),(3511,119,NULL,'172.19.0.4','2020-06-29 12:03:14','2020-06-29 12:03:15','2020-06-29 12:03:15'),(3512,14,NULL,'172.19.0.4','2020-06-29 12:56:19','2020-06-29 12:56:24','2020-06-29 12:56:24'),(3513,14,NULL,'172.19.0.6','2020-06-29 17:05:56','2020-06-29 17:05:56','2020-06-29 17:05:56'),(3514,65,NULL,'172.19.0.6','2020-06-29 20:09:56','2020-06-29 20:09:56','2020-06-29 20:09:56'),(3515,14,NULL,'172.19.0.6','2020-06-29 20:54:07','2020-06-29 20:54:07','2020-06-29 20:54:07'),(3516,14,NULL,'172.19.0.6','2020-06-30 00:21:37','2020-06-30 00:21:37','2020-06-30 00:21:37'),(3517,23,NULL,'172.19.0.6','2020-06-30 01:20:22','2020-06-30 01:20:22','2020-06-30 01:20:22'),(3518,52,NULL,'172.19.0.6','2020-06-30 04:33:20','2020-06-30 04:33:20','2020-06-30 04:33:20'),(3519,14,NULL,'172.19.0.6','2020-06-30 07:06:01','2020-06-30 07:06:01','2020-06-30 07:06:01'),(3520,14,NULL,'172.19.0.6','2020-06-30 12:56:44','2020-06-30 12:56:44','2020-06-30 12:56:44'),(3521,129,NULL,'172.19.0.6','2020-06-30 13:21:54','2020-06-30 13:21:54','2020-06-30 13:21:54'),(3522,52,NULL,'172.19.0.6','2020-06-30 17:15:20','2020-06-30 17:15:20','2020-06-30 17:15:20'),(3523,14,NULL,'172.19.0.6','2020-06-30 17:15:20','2020-06-30 17:15:21','2020-06-30 17:15:21'),(3524,105,NULL,'172.19.0.6','2020-06-30 17:15:28','2020-06-30 17:15:28','2020-06-30 17:15:28'),(3525,131,NULL,'172.19.0.6','2020-06-30 17:15:29','2020-06-30 17:15:29','2020-06-30 17:15:29'),(3526,130,NULL,'172.19.0.6','2020-06-30 17:15:30','2020-06-30 17:15:30','2020-06-30 17:15:30'),(3527,128,NULL,'172.19.0.6','2020-06-30 17:15:33','2020-06-30 17:15:33','2020-06-30 17:15:33'),(3528,129,NULL,'172.19.0.6','2020-06-30 17:15:34','2020-06-30 17:15:34','2020-06-30 17:15:34'),(3529,127,NULL,'172.19.0.6','2020-06-30 17:15:34','2020-06-30 17:15:34','2020-06-30 17:15:34'),(3530,125,NULL,'172.19.0.6','2020-06-30 17:15:35','2020-06-30 17:15:35','2020-06-30 17:15:35'),(3531,126,NULL,'172.19.0.6','2020-06-30 17:15:35','2020-06-30 17:15:35','2020-06-30 17:15:35'),(3532,50,NULL,'172.19.0.6','2020-06-30 17:16:03','2020-06-30 17:16:03','2020-06-30 17:16:03'),(3533,65,NULL,'172.19.0.6','2020-06-30 17:16:04','2020-06-30 17:16:04','2020-06-30 17:16:04'),(3534,99,NULL,'172.19.0.6','2020-06-30 17:16:05','2020-06-30 17:16:05','2020-06-30 17:16:05'),(3535,97,NULL,'172.19.0.6','2020-06-30 17:16:06','2020-06-30 17:16:06','2020-06-30 17:16:06'),(3536,32,NULL,'172.19.0.6','2020-06-30 17:16:09','2020-06-30 17:16:09','2020-06-30 17:16:09'),(3537,110,NULL,'172.19.0.6','2020-06-30 17:16:11','2020-06-30 17:16:11','2020-06-30 17:16:11'),(3538,128,NULL,'172.19.0.6','2020-06-30 21:45:19','2020-06-30 21:45:19','2020-06-30 21:45:19'),(3539,23,NULL,'172.19.0.6','2020-06-30 22:20:39','2020-06-30 22:20:39','2020-06-30 22:20:39'),(3540,1,NULL,'172.19.0.6','2020-07-01 07:51:29','2020-07-01 07:51:29','2020-07-01 07:51:29'),(3541,33,NULL,'172.19.0.6','2020-07-01 10:34:27','2020-07-01 10:34:27','2020-07-01 10:34:27'),(3542,96,NULL,'172.19.0.6','2020-07-01 10:36:53','2020-07-01 10:36:53','2020-07-01 10:36:53'),(3543,44,NULL,'172.19.0.6','2020-07-01 11:08:04','2020-07-01 11:08:04','2020-07-01 11:08:04'),(3544,72,NULL,'172.19.0.6','2020-07-01 12:02:07','2020-07-01 12:02:07','2020-07-01 12:02:07'),(3545,46,NULL,'172.19.0.6','2020-07-01 14:13:08','2020-07-01 14:13:08','2020-07-01 14:13:08'),(3546,52,NULL,'172.19.0.6','2020-07-01 14:59:26','2020-07-01 14:59:26','2020-07-01 14:59:26'),(3547,129,NULL,'172.19.0.6','2020-07-01 15:14:30','2020-07-01 15:14:30','2020-07-01 15:14:30'),(3548,88,NULL,'172.19.0.6','2020-07-01 16:08:53','2020-07-01 16:08:53','2020-07-01 16:08:53'),(3549,14,NULL,'172.19.0.6','2020-07-01 17:14:02','2020-07-01 17:14:02','2020-07-01 17:14:02'),(3550,101,NULL,'172.19.0.6','2020-07-01 17:15:45','2020-07-01 17:15:45','2020-07-01 17:15:45'),(3551,72,NULL,'172.19.0.6','2020-07-01 22:23:35','2020-07-01 22:23:35','2020-07-01 22:23:35'),(3552,23,NULL,'172.19.0.6','2020-07-01 23:02:35','2020-07-01 23:02:35','2020-07-01 23:02:35'),(3553,108,NULL,'172.19.0.6','2020-07-01 23:05:15','2020-07-01 23:05:15','2020-07-01 23:05:15'),(3554,14,NULL,'172.19.0.6','2020-07-01 23:31:37','2020-07-01 23:31:37','2020-07-01 23:31:37'),(3555,123,NULL,'172.19.0.6','2020-07-01 23:51:54','2020-07-01 23:51:54','2020-07-01 23:51:54'),(3556,105,NULL,'172.19.0.6','2020-07-01 23:59:00','2020-07-01 23:59:00','2020-07-01 23:59:00'),(3557,14,NULL,'172.19.0.6','2020-07-02 01:54:41','2020-07-02 01:54:41','2020-07-02 01:54:41'),(3558,27,NULL,'172.19.0.6','2020-07-02 02:50:52','2020-07-02 02:50:52','2020-07-02 02:50:52'),(3559,126,NULL,'172.19.0.6','2020-07-02 05:16:10','2020-07-02 05:16:10','2020-07-02 05:16:10'),(3560,42,NULL,'172.19.0.6','2020-07-02 05:19:34','2020-07-02 05:19:34','2020-07-02 05:19:34'),(3561,89,NULL,'172.19.0.6','2020-07-02 05:33:51','2020-07-02 05:33:51','2020-07-02 05:33:51'),(3562,112,NULL,'172.19.0.6','2020-07-02 06:14:02','2020-07-02 06:14:02','2020-07-02 06:14:02'),(3563,93,NULL,'172.19.0.6','2020-07-02 07:22:08','2020-07-02 07:22:08','2020-07-02 07:22:08'),(3564,14,NULL,'172.19.0.6','2020-07-02 07:25:44','2020-07-02 07:25:44','2020-07-02 07:25:44'),(3565,115,NULL,'172.19.0.6','2020-07-02 07:29:19','2020-07-02 07:29:19','2020-07-02 07:29:19'),(3566,122,NULL,'172.19.0.6','2020-07-02 08:05:15','2020-07-02 08:05:15','2020-07-02 08:05:15'),(3567,28,NULL,'172.19.0.6','2020-07-02 08:41:10','2020-07-02 08:41:10','2020-07-02 08:41:10'),(3568,113,NULL,'172.19.0.6','2020-07-02 10:11:10','2020-07-02 10:11:10','2020-07-02 10:11:10'),(3569,65,NULL,'172.19.0.6','2020-07-02 11:41:10','2020-07-02 11:41:10','2020-07-02 11:41:10'),(3570,91,NULL,'172.19.0.6','2020-07-02 13:11:10','2020-07-02 13:11:10','2020-07-02 13:11:10'),(3571,98,NULL,'172.19.0.6','2020-07-02 15:05:18','2020-07-02 15:05:18','2020-07-02 15:05:18'),(3572,96,NULL,'172.19.0.6','2020-07-02 15:17:44','2020-07-02 15:17:44','2020-07-02 15:17:44'),(3573,115,NULL,'172.19.0.6','2020-07-02 15:48:36','2020-07-02 15:48:36','2020-07-02 15:48:36'),(3574,117,NULL,'172.19.0.6','2020-07-02 18:39:09','2020-07-02 18:39:09','2020-07-02 18:39:09'),(3575,14,NULL,'172.19.0.6','2020-07-02 19:24:09','2020-07-02 19:24:09','2020-07-02 19:24:09'),(3576,114,NULL,'172.19.0.6','2020-07-02 19:24:09','2020-07-02 19:24:09','2020-07-02 19:24:09'),(3577,128,NULL,'172.19.0.6','2020-07-03 01:08:47','2020-07-03 01:08:47','2020-07-03 01:08:47'),(3578,14,NULL,'172.19.0.6','2020-07-03 02:29:03','2020-07-03 02:29:03','2020-07-03 02:29:03'),(3579,52,NULL,'172.19.0.6','2020-07-03 02:29:03','2020-07-03 02:29:03','2020-07-03 02:29:03'),(3580,131,NULL,'172.19.0.6','2020-07-03 02:29:18','2020-07-03 02:29:19','2020-07-03 02:29:19'),(3581,105,NULL,'172.19.0.6','2020-07-03 02:29:20','2020-07-03 02:29:20','2020-07-03 02:29:20'),(3582,130,NULL,'172.19.0.6','2020-07-03 02:29:20','2020-07-03 02:29:20','2020-07-03 02:29:20'),(3583,129,NULL,'172.19.0.6','2020-07-03 02:29:20','2020-07-03 02:29:20','2020-07-03 02:29:20'),(3584,128,NULL,'172.19.0.6','2020-07-03 02:29:22','2020-07-03 02:29:22','2020-07-03 02:29:22'),(3585,127,NULL,'172.19.0.6','2020-07-03 02:29:26','2020-07-03 02:29:26','2020-07-03 02:29:26'),(3586,126,NULL,'172.19.0.6','2020-07-03 02:29:26','2020-07-03 02:29:26','2020-07-03 02:29:26'),(3587,125,NULL,'172.19.0.6','2020-07-03 02:29:26','2020-07-03 02:29:26','2020-07-03 02:29:26'),(3588,31,NULL,'172.19.0.6','2020-07-03 02:30:06','2020-07-03 02:30:06','2020-07-03 02:30:06'),(3589,97,NULL,'172.19.0.6','2020-07-03 02:30:06','2020-07-03 02:30:06','2020-07-03 02:30:06'),(3590,33,NULL,'172.19.0.6','2020-07-03 02:30:10','2020-07-03 02:30:10','2020-07-03 02:30:10'),(3591,28,NULL,'172.19.0.6','2020-07-03 02:30:11','2020-07-03 02:30:11','2020-07-03 02:30:11'),(3592,88,NULL,'172.19.0.6','2020-07-03 02:30:15','2020-07-03 02:30:15','2020-07-03 02:30:15'),(3593,123,NULL,'172.19.0.6','2020-07-03 02:30:16','2020-07-03 02:30:16','2020-07-03 02:30:16'),(3594,110,NULL,'172.19.0.6','2020-07-03 02:30:16','2020-07-03 02:30:16','2020-07-03 02:30:16'),(3595,100,NULL,'172.19.0.6','2020-07-03 02:30:16','2020-07-03 02:30:16','2020-07-03 02:30:16'),(3596,52,NULL,'172.19.0.6','2020-07-03 04:46:39','2020-07-03 04:46:39','2020-07-03 04:46:39'),(3597,21,NULL,'172.19.0.6','2020-07-03 04:57:20','2020-07-03 04:57:20','2020-07-03 04:57:20'),(3598,127,NULL,'172.19.0.6','2020-07-03 06:52:04','2020-07-03 06:52:04','2020-07-03 06:52:04'),(3599,14,NULL,'172.19.0.6','2020-07-03 08:22:04','2020-07-03 08:22:04','2020-07-03 08:22:04'),(3600,91,NULL,'172.19.0.6','2020-07-03 09:52:04','2020-07-03 09:52:04','2020-07-03 09:52:04'),(3601,36,NULL,'172.19.0.6','2020-07-03 10:53:27','2020-07-03 10:53:27','2020-07-03 10:53:27'),(3602,28,NULL,'172.19.0.6','2020-07-03 11:19:57','2020-07-03 11:19:57','2020-07-03 11:19:57'),(3603,46,NULL,'172.19.0.6','2020-07-03 11:46:28','2020-07-03 11:46:28','2020-07-03 11:46:28'),(3604,31,NULL,'172.19.0.6','2020-07-03 12:12:59','2020-07-03 12:12:59','2020-07-03 12:12:59'),(3605,43,NULL,'172.19.0.6','2020-07-03 17:35:52','2020-07-03 17:35:52','2020-07-03 17:35:52'),(3606,128,NULL,'172.19.0.6','2020-07-03 20:26:06','2020-07-03 20:26:06','2020-07-03 20:26:06'),(3607,36,NULL,'172.19.0.6','2020-07-03 20:32:58','2020-07-03 20:32:58','2020-07-03 20:32:58'),(3608,126,NULL,'172.19.0.6','2020-07-03 20:35:22','2020-07-03 20:35:22','2020-07-03 20:35:22'),(3609,124,NULL,'172.19.0.6','2020-07-03 20:39:55','2020-07-03 20:39:55','2020-07-03 20:39:55'),(3610,52,NULL,'172.19.0.6','2020-07-03 20:41:56','2020-07-03 20:41:56','2020-07-03 20:41:56'),(3611,120,NULL,'172.19.0.6','2020-07-03 20:44:02','2020-07-03 20:44:02','2020-07-03 20:44:02'),(3612,131,NULL,'172.19.0.6','2020-07-03 20:47:52','2020-07-03 20:47:52','2020-07-03 20:47:52'),(3613,94,NULL,'172.19.0.6','2020-07-03 21:24:08','2020-07-03 21:24:08','2020-07-03 21:24:08'),(3614,105,NULL,'172.19.0.6','2020-07-03 21:27:15','2020-07-03 21:27:15','2020-07-03 21:27:15'),(3615,35,NULL,'172.19.0.6','2020-07-03 21:31:05','2020-07-03 21:31:05','2020-07-03 21:31:05'),(3616,116,NULL,'172.19.0.6','2020-07-03 21:31:55','2020-07-03 21:31:55','2020-07-03 21:31:55'),(3617,129,NULL,'172.19.0.6','2020-07-03 21:32:46','2020-07-03 21:32:46','2020-07-03 21:32:46'),(3618,96,NULL,'172.19.0.6','2020-07-03 21:33:33','2020-07-03 21:33:33','2020-07-03 21:33:33'),(3619,127,NULL,'172.19.0.6','2020-07-03 21:34:18','2020-07-03 21:34:18','2020-07-03 21:34:18'),(3620,125,NULL,'172.19.0.6','2020-07-03 21:35:58','2020-07-03 21:35:58','2020-07-03 21:35:58'),(3621,37,NULL,'172.19.0.6','2020-07-03 21:38:43','2020-07-03 21:38:43','2020-07-03 21:38:43'),(3622,130,NULL,'172.19.0.6','2020-07-03 21:46:42','2020-07-03 21:46:42','2020-07-03 21:46:42'),(3623,47,NULL,'172.19.0.6','2020-07-03 21:50:24','2020-07-03 21:50:24','2020-07-03 21:50:24'),(3624,14,NULL,'172.19.0.6','2020-07-03 22:13:18','2020-07-03 22:13:18','2020-07-03 22:13:18'),(3625,116,NULL,'172.19.0.6','2020-07-03 23:55:52','2020-07-03 23:55:52','2020-07-03 23:55:52'),(3626,112,NULL,'172.19.0.6','2020-07-04 00:41:18','2020-07-04 00:41:18','2020-07-04 00:41:18'),(3627,21,NULL,'172.19.0.6','2020-07-04 01:22:03','2020-07-04 01:22:03','2020-07-04 01:22:03'),(3628,48,NULL,'172.19.0.6','2020-07-04 01:22:53','2020-07-04 01:22:53','2020-07-04 01:22:53'),(3629,128,NULL,'172.19.0.6','2020-07-04 05:51:26','2020-07-04 05:51:26','2020-07-04 05:51:26'),(3630,48,NULL,'172.19.0.6','2020-07-04 12:53:25','2020-07-04 12:53:25','2020-07-04 12:53:25'),(3631,127,NULL,'172.19.0.6','2020-07-04 14:53:25','2020-07-04 14:53:25','2020-07-04 14:53:25'),(3632,122,NULL,'172.19.0.6','2020-07-04 16:48:59','2020-07-04 16:48:59','2020-07-04 16:48:59'),(3633,14,NULL,'172.19.0.6','2020-07-04 17:42:11','2020-07-04 17:42:11','2020-07-04 17:42:11'),(3634,113,NULL,'172.19.0.6','2020-07-04 17:47:02','2020-07-04 17:47:02','2020-07-04 17:47:02'),(3635,91,NULL,'172.19.0.6','2020-07-04 18:35:24','2020-07-04 18:35:24','2020-07-04 18:35:24'),(3636,14,NULL,'172.19.0.6','2020-07-04 22:35:09','2020-07-04 22:35:09','2020-07-04 22:35:09'),(3637,52,NULL,'172.19.0.6','2020-07-04 22:35:10','2020-07-04 22:35:10','2020-07-04 22:35:10'),(3638,93,NULL,'172.19.0.6','2020-07-05 01:22:27','2020-07-05 01:22:27','2020-07-05 01:22:27'),(3639,130,NULL,'172.19.0.6','2020-07-05 01:35:30','2020-07-05 01:35:30','2020-07-05 01:35:30'),(3640,117,NULL,'172.19.0.6','2020-07-05 01:38:26','2020-07-05 01:38:26','2020-07-05 01:38:26'),(3641,119,NULL,'172.19.0.6','2020-07-05 03:03:13','2020-07-05 03:03:13','2020-07-05 03:03:13'),(3642,93,NULL,'172.19.0.6','2020-07-05 03:09:32','2020-07-05 03:09:32','2020-07-05 03:09:32'),(3643,96,NULL,'172.19.0.6','2020-07-05 03:39:32','2020-07-05 03:39:32','2020-07-05 03:39:32'),(3644,125,NULL,'172.19.0.6','2020-07-05 03:41:41','2020-07-05 03:41:41','2020-07-05 03:41:41'),(3645,93,NULL,'172.19.0.6','2020-07-05 04:06:44','2020-07-05 04:06:44','2020-07-05 04:06:44'),(3646,28,NULL,'172.19.0.6','2020-07-05 04:09:32','2020-07-05 04:09:32','2020-07-05 04:09:32'),(3647,14,NULL,'172.19.0.6','2020-07-05 04:26:29','2020-07-05 04:26:29','2020-07-05 04:26:29'),(3648,14,NULL,'172.19.0.6','2020-07-05 04:26:32','2020-07-05 04:26:32','2020-07-05 04:26:32'),(3649,21,NULL,'172.19.0.6','2020-07-05 04:26:36','2020-07-05 04:26:36','2020-07-05 04:26:36'),(3650,21,NULL,'172.19.0.6','2020-07-05 04:26:37','2020-07-05 04:26:37','2020-07-05 04:26:37'),(3651,31,NULL,'172.19.0.6','2020-07-05 04:39:32','2020-07-05 04:39:32','2020-07-05 04:39:32'),(3652,52,NULL,'172.19.0.6','2020-07-05 04:56:42','2020-07-05 04:56:42','2020-07-05 04:56:42'),(3653,14,NULL,'172.19.0.6','2020-07-05 04:56:47','2020-07-05 04:56:47','2020-07-05 04:56:47'),(3654,52,NULL,'172.19.0.6','2020-07-05 04:57:06','2020-07-05 04:57:06','2020-07-05 04:57:06'),(3655,14,NULL,'172.19.0.6','2020-07-05 04:57:17','2020-07-05 04:57:17','2020-07-05 04:57:17'),(3656,105,NULL,'172.19.0.6','2020-07-05 04:57:19','2020-07-05 04:57:19','2020-07-05 04:57:19'),(3657,105,NULL,'172.19.0.6','2020-07-05 04:57:24','2020-07-05 04:57:24','2020-07-05 04:57:24'),(3658,131,NULL,'172.19.0.6','2020-07-05 04:57:39','2020-07-05 04:57:39','2020-07-05 04:57:39'),(3659,131,NULL,'172.19.0.6','2020-07-05 04:57:54','2020-07-05 04:57:54','2020-07-05 04:57:54'),(3660,130,NULL,'172.19.0.6','2020-07-05 04:57:58','2020-07-05 04:57:58','2020-07-05 04:57:58'),(3661,130,NULL,'172.19.0.6','2020-07-05 04:58:03','2020-07-05 04:58:03','2020-07-05 04:58:03'),(3662,129,NULL,'172.19.0.6','2020-07-05 04:58:08','2020-07-05 04:58:08','2020-07-05 04:58:08'),(3663,129,NULL,'172.19.0.6','2020-07-05 04:58:11','2020-07-05 04:58:11','2020-07-05 04:58:11'),(3664,128,NULL,'172.19.0.6','2020-07-05 04:58:20','2020-07-05 04:58:20','2020-07-05 04:58:20'),(3665,128,NULL,'172.19.0.6','2020-07-05 04:58:26','2020-07-05 04:58:26','2020-07-05 04:58:26'),(3666,127,NULL,'172.19.0.6','2020-07-05 04:58:31','2020-07-05 04:58:31','2020-07-05 04:58:31'),(3667,127,NULL,'172.19.0.6','2020-07-05 04:58:36','2020-07-05 04:58:36','2020-07-05 04:58:36'),(3668,126,NULL,'172.19.0.6','2020-07-05 04:58:42','2020-07-05 04:58:42','2020-07-05 04:58:42'),(3669,126,NULL,'172.19.0.6','2020-07-05 04:58:46','2020-07-05 04:58:46','2020-07-05 04:58:46'),(3670,125,NULL,'172.19.0.6','2020-07-05 04:58:54','2020-07-05 04:58:54','2020-07-05 04:58:54'),(3671,125,NULL,'172.19.0.6','2020-07-05 04:59:07','2020-07-05 04:59:07','2020-07-05 04:59:07'),(3672,123,NULL,'172.19.0.6','2020-07-05 05:00:41','2020-07-05 05:00:41','2020-07-05 05:00:41'),(3673,46,NULL,'172.19.0.6','2020-07-05 05:00:55','2020-07-05 05:00:55','2020-07-05 05:00:55'),(3674,72,NULL,'172.19.0.6','2020-07-05 05:00:58','2020-07-05 05:00:58','2020-07-05 05:00:58'),(3675,111,NULL,'172.19.0.6','2020-07-05 05:01:00','2020-07-05 05:01:00','2020-07-05 05:01:00'),(3676,120,NULL,'172.19.0.6','2020-07-05 05:01:05','2020-07-05 05:01:05','2020-07-05 05:01:05'),(3677,110,NULL,'172.19.0.6','2020-07-05 05:01:08','2020-07-05 05:01:08','2020-07-05 05:01:08'),(3678,41,NULL,'172.19.0.6','2020-07-05 05:01:18','2020-07-05 05:01:18','2020-07-05 05:01:18'),(3679,37,NULL,'172.19.0.6','2020-07-05 05:01:31','2020-07-05 05:01:31','2020-07-05 05:01:31'),(3680,65,NULL,'172.19.0.6','2020-07-05 05:01:36','2020-07-05 05:01:36','2020-07-05 05:01:36'),(3681,114,NULL,'172.19.0.6','2020-07-05 05:02:02','2020-07-05 05:02:02','2020-07-05 05:02:02'),(3682,95,NULL,'172.19.0.6','2020-07-05 05:02:12','2020-07-05 05:02:13','2020-07-05 05:02:13'),(3683,28,NULL,'172.19.0.6','2020-07-05 05:02:23','2020-07-05 05:02:23','2020-07-05 05:02:23'),(3684,108,NULL,'172.19.0.6','2020-07-05 05:02:30','2020-07-05 05:02:30','2020-07-05 05:02:30'),(3685,49,NULL,'172.19.0.6','2020-07-05 05:02:43','2020-07-05 05:02:43','2020-07-05 05:02:43'),(3686,35,NULL,'172.19.0.6','2020-07-05 05:02:48','2020-07-05 05:02:48','2020-07-05 05:02:48'),(3687,47,NULL,'172.19.0.6','2020-07-05 05:02:54','2020-07-05 05:02:54','2020-07-05 05:02:54'),(3688,106,NULL,'172.19.0.6','2020-07-05 05:03:04','2020-07-05 05:03:04','2020-07-05 05:03:04'),(3689,116,NULL,'172.19.0.6','2020-07-05 05:03:08','2020-07-05 05:03:08','2020-07-05 05:03:08'),(3690,27,NULL,'172.19.0.6','2020-07-05 05:03:12','2020-07-05 05:03:12','2020-07-05 05:03:12'),(3691,33,NULL,'172.19.0.6','2020-07-05 05:03:19','2020-07-05 05:03:19','2020-07-05 05:03:19'),(3692,88,NULL,'172.19.0.6','2020-07-05 05:03:22','2020-07-05 05:03:22','2020-07-05 05:03:22'),(3693,45,NULL,'172.19.0.6','2020-07-05 05:03:26','2020-07-05 05:03:26','2020-07-05 05:03:26'),(3694,119,NULL,'172.19.0.6','2020-07-05 05:03:33','2020-07-05 05:03:33','2020-07-05 05:03:33'),(3695,113,NULL,'172.19.0.6','2020-07-05 05:03:40','2020-07-05 05:03:40','2020-07-05 05:03:40'),(3696,99,NULL,'172.19.0.6','2020-07-05 05:03:45','2020-07-05 05:03:45','2020-07-05 05:03:45'),(3697,93,NULL,'172.19.0.6','2020-07-05 05:03:56','2020-07-05 05:03:56','2020-07-05 05:03:56'),(3698,124,NULL,'172.19.0.6','2020-07-05 05:04:00','2020-07-05 05:04:00','2020-07-05 05:04:00'),(3699,124,NULL,'172.19.0.6','2020-07-05 05:04:11','2020-07-05 05:04:11','2020-07-05 05:04:11'),(3700,123,NULL,'172.19.0.6','2020-07-05 05:04:13','2020-07-05 05:04:13','2020-07-05 05:04:13'),(3701,50,NULL,'172.19.0.6','2020-07-05 05:04:17','2020-07-05 05:04:17','2020-07-05 05:04:17'),(3702,112,NULL,'172.19.0.6','2020-07-05 05:04:20','2020-07-05 05:04:20','2020-07-05 05:04:20'),(3703,109,NULL,'172.19.0.6','2020-07-05 05:04:24','2020-07-05 05:04:24','2020-07-05 05:04:24'),(3704,117,NULL,'172.19.0.6','2020-07-05 05:04:40','2020-07-05 05:04:40','2020-07-05 05:04:40'),(3705,23,NULL,'172.19.0.6','2020-07-05 05:04:56','2020-07-05 05:04:56','2020-07-05 05:04:56'),(3706,23,NULL,'172.19.0.6','2020-07-05 05:05:13','2020-07-05 05:05:13','2020-07-05 05:05:13'),(3707,94,NULL,'172.19.0.6','2020-07-05 05:05:26','2020-07-05 05:05:26','2020-07-05 05:05:26'),(3708,15,NULL,'172.19.0.6','2020-07-05 05:05:34','2020-07-05 05:05:34','2020-07-05 05:05:34'),(3709,104,NULL,'172.19.0.6','2020-07-05 05:05:37','2020-07-05 05:05:37','2020-07-05 05:05:37'),(3710,93,NULL,'172.19.0.6','2020-07-05 05:05:53','2020-07-05 05:05:53','2020-07-05 05:05:53'),(3711,91,NULL,'172.19.0.6','2020-07-05 05:06:06','2020-07-05 05:06:06','2020-07-05 05:06:06'),(3712,91,NULL,'172.19.0.6','2020-07-05 05:06:13','2020-07-05 05:06:13','2020-07-05 05:06:13'),(3713,88,NULL,'172.19.0.6','2020-07-05 05:06:15','2020-07-05 05:06:15','2020-07-05 05:06:15'),(3714,72,NULL,'172.19.0.6','2020-07-05 05:06:26','2020-07-05 05:06:26','2020-07-05 05:06:26'),(3715,65,NULL,'172.19.0.6','2020-07-05 05:06:31','2020-07-05 05:06:31','2020-07-05 05:06:31'),(3716,44,NULL,'172.19.0.6','2020-07-05 05:06:40','2020-07-05 05:06:40','2020-07-05 05:06:40'),(3717,100,NULL,'172.19.0.6','2020-07-05 05:06:44','2020-07-05 05:06:44','2020-07-05 05:06:44'),(3718,122,NULL,'172.19.0.6','2020-07-05 05:06:47','2020-07-05 05:06:47','2020-07-05 05:06:47'),(3719,31,NULL,'172.19.0.6','2020-07-05 05:06:50','2020-07-05 05:06:50','2020-07-05 05:06:50'),(3720,89,NULL,'172.19.0.6','2020-07-05 05:06:53','2020-07-05 05:06:53','2020-07-05 05:06:53'),(3721,33,NULL,'172.19.0.6','2020-07-05 05:07:02','2020-07-05 05:07:02','2020-07-05 05:07:02'),(3722,42,NULL,'172.19.0.6','2020-07-05 05:07:07','2020-07-05 05:07:07','2020-07-05 05:07:07'),(3723,42,NULL,'172.19.0.6','2020-07-05 05:07:17','2020-07-05 05:07:17','2020-07-05 05:07:17'),(3724,43,NULL,'172.19.0.6','2020-07-05 05:07:23','2020-07-05 05:07:23','2020-07-05 05:07:23'),(3725,43,NULL,'172.19.0.6','2020-07-05 05:07:27','2020-07-05 05:07:27','2020-07-05 05:07:27'),(3726,48,NULL,'172.19.0.6','2020-07-05 05:07:30','2020-07-05 05:07:30','2020-07-05 05:07:30'),(3727,48,NULL,'172.19.0.6','2020-07-05 05:07:33','2020-07-05 05:07:33','2020-07-05 05:07:33'),(3728,32,NULL,'172.19.0.6','2020-07-05 05:07:39','2020-07-05 05:07:39','2020-07-05 05:07:39'),(3729,32,NULL,'172.19.0.6','2020-07-05 05:07:58','2020-07-05 05:07:58','2020-07-05 05:07:58'),(3730,50,NULL,'172.19.0.6','2020-07-05 05:08:13','2020-07-05 05:08:13','2020-07-05 05:08:13'),(3731,21,NULL,'172.19.0.6','2020-07-05 05:08:32','2020-07-05 05:08:32','2020-07-05 05:08:32'),(3732,98,NULL,'172.19.0.6','2020-07-05 05:08:47','2020-07-05 05:08:47','2020-07-05 05:08:47'),(3733,49,NULL,'172.19.0.6','2020-07-05 05:08:51','2020-07-05 05:08:51','2020-07-05 05:08:51'),(3734,45,NULL,'172.19.0.6','2020-07-05 05:08:56','2020-07-05 05:08:56','2020-07-05 05:08:56'),(3735,115,NULL,'172.19.0.6','2020-07-05 05:09:05','2020-07-05 05:09:05','2020-07-05 05:09:05'),(3736,97,NULL,'172.19.0.6','2020-07-05 05:09:08','2020-07-05 05:09:08','2020-07-05 05:09:08'),(3737,36,NULL,'172.19.0.6','2020-07-05 05:09:13','2020-07-05 05:09:13','2020-07-05 05:09:13'),(3738,96,NULL,'172.19.0.6','2020-07-05 05:09:28','2020-07-05 05:09:28','2020-07-05 05:09:28'),(3739,121,NULL,'172.19.0.6','2020-07-05 05:09:33','2020-07-05 05:09:33','2020-07-05 05:09:33'),(3740,1,NULL,'172.19.0.6','2020-07-05 05:09:38','2020-07-05 05:09:38','2020-07-05 05:09:38'),(3741,107,NULL,'172.19.0.6','2020-07-05 05:09:40','2020-07-05 05:09:40','2020-07-05 05:09:40'),(3742,114,NULL,'172.19.0.6','2020-07-05 05:09:50','2020-07-05 05:09:50','2020-07-05 05:09:50'),(3743,101,NULL,'172.19.0.6','2020-07-05 05:09:59','2020-07-05 05:09:59','2020-07-05 05:09:59'),(3744,90,NULL,'172.19.0.6','2020-07-05 05:10:05','2020-07-05 05:10:05','2020-07-05 05:10:05'),(3745,44,NULL,'172.19.0.6','2020-07-05 05:10:10','2020-07-05 05:10:10','2020-07-05 05:10:10'),(3746,37,NULL,'172.19.0.6','2020-07-05 05:10:22','2020-07-05 05:10:22','2020-07-05 05:10:22'),(3747,36,NULL,'172.19.0.6','2020-07-05 05:10:31','2020-07-05 05:10:31','2020-07-05 05:10:31'),(3748,21,NULL,'172.19.0.6','2020-07-05 05:10:37','2020-07-05 05:10:37','2020-07-05 05:10:37'),(3749,89,NULL,'172.19.0.6','2020-07-05 05:10:43','2020-07-05 05:10:43','2020-07-05 05:10:43'),(3750,15,NULL,'172.19.0.6','2020-07-05 05:10:48','2020-07-05 05:10:48','2020-07-05 05:10:48'),(3751,99,NULL,'172.19.0.6','2020-07-05 05:10:53','2020-07-05 05:10:53','2020-07-05 05:10:53'),(3752,98,NULL,'172.19.0.6','2020-07-05 05:10:57','2020-07-05 05:10:57','2020-07-05 05:10:57'),(3753,101,NULL,'172.19.0.6','2020-07-05 05:11:00','2020-07-05 05:11:00','2020-07-05 05:11:00'),(3754,100,NULL,'172.19.0.6','2020-07-05 05:11:03','2020-07-05 05:11:03','2020-07-05 05:11:03'),(3755,97,NULL,'172.19.0.6','2020-07-05 05:11:06','2020-07-05 05:11:06','2020-07-05 05:11:06'),(3756,95,NULL,'172.19.0.6','2020-07-05 05:11:10','2020-07-05 05:11:10','2020-07-05 05:11:10'),(3757,94,NULL,'172.19.0.6','2020-07-05 05:11:13','2020-07-05 05:11:13','2020-07-05 05:11:13'),(3758,109,NULL,'172.19.0.6','2020-07-05 05:11:16','2020-07-05 05:11:16','2020-07-05 05:11:16'),(3759,108,NULL,'172.19.0.6','2020-07-05 05:11:19','2020-07-05 05:11:19','2020-07-05 05:11:19'),(3760,107,NULL,'172.19.0.6','2020-07-05 05:11:22','2020-07-05 05:11:22','2020-07-05 05:11:22'),(3761,106,NULL,'172.19.0.6','2020-07-05 05:11:33','2020-07-05 05:11:33','2020-07-05 05:11:33'),(3762,122,NULL,'172.19.0.6','2020-07-05 05:11:34','2020-07-05 05:11:34','2020-07-05 05:11:34'),(3763,121,NULL,'172.19.0.6','2020-07-05 05:11:37','2020-07-05 05:11:37','2020-07-05 05:11:37'),(3764,120,NULL,'172.19.0.6','2020-07-05 05:11:41','2020-07-05 05:11:41','2020-07-05 05:11:41'),(3765,119,NULL,'172.19.0.6','2020-07-05 05:11:47','2020-07-05 05:11:47','2020-07-05 05:11:47'),(3766,117,NULL,'172.19.0.6','2020-07-05 05:11:57','2020-07-05 05:11:57','2020-07-05 05:11:57'),(3767,116,NULL,'172.19.0.6','2020-07-05 05:12:00','2020-07-05 05:12:00','2020-07-05 05:12:00'),(3768,115,NULL,'172.19.0.6','2020-07-05 05:12:05','2020-07-05 05:12:05','2020-07-05 05:12:05'),(3769,127,NULL,'172.19.0.6','2020-07-05 05:45:05','2020-07-05 05:45:05','2020-07-05 05:45:05'),(3770,131,NULL,'172.19.0.6','2020-07-05 07:45:21','2020-07-05 07:45:21','2020-07-05 07:45:21'),(3771,128,NULL,'172.19.0.6','2020-07-05 09:31:34','2020-07-05 09:31:34','2020-07-05 09:31:34'),(3772,36,NULL,'172.19.0.6','2020-07-05 09:32:02','2020-07-05 09:32:02','2020-07-05 09:32:02'),(3773,88,NULL,'172.19.0.6','2020-07-05 10:10:33','2020-07-05 10:10:33','2020-07-05 10:10:33'),(3774,93,NULL,'172.19.0.6','2020-07-05 10:42:10','2020-07-05 10:42:10','2020-07-05 10:42:10'),(3775,45,NULL,'172.19.0.6','2020-07-05 10:52:08','2020-07-05 10:52:08','2020-07-05 10:52:08'),(3776,52,NULL,'172.19.0.6','2020-07-05 11:22:49','2020-07-05 11:22:49','2020-07-05 11:22:49'),(3777,14,NULL,'172.19.0.6','2020-07-05 11:22:53','2020-07-05 11:22:53','2020-07-05 11:22:53'),(3778,105,NULL,'172.19.0.6','2020-07-05 11:23:00','2020-07-05 11:23:00','2020-07-05 11:23:00'),(3779,131,NULL,'172.19.0.6','2020-07-05 11:23:02','2020-07-05 11:23:03','2020-07-05 11:23:03'),(3780,130,NULL,'172.19.0.6','2020-07-05 11:23:03','2020-07-05 11:23:03','2020-07-05 11:23:03'),(3781,129,NULL,'172.19.0.6','2020-07-05 11:23:03','2020-07-05 11:23:03','2020-07-05 11:23:03'),(3782,128,NULL,'172.19.0.6','2020-07-05 11:23:06','2020-07-05 11:23:06','2020-07-05 11:23:06'),(3783,127,NULL,'172.19.0.6','2020-07-05 11:23:06','2020-07-05 11:23:06','2020-07-05 11:23:06'),(3784,126,NULL,'172.19.0.6','2020-07-05 11:23:10','2020-07-05 11:23:10','2020-07-05 11:23:10'),(3785,125,NULL,'172.19.0.6','2020-07-05 11:23:10','2020-07-05 11:23:10','2020-07-05 11:23:10'),(3786,98,NULL,'172.19.0.6','2020-07-05 11:23:52','2020-07-05 11:23:52','2020-07-05 11:23:52'),(3787,89,NULL,'172.19.0.6','2020-07-05 11:23:53','2020-07-05 11:23:53','2020-07-05 11:23:53'),(3788,113,NULL,'172.19.0.6','2020-07-05 11:23:55','2020-07-05 11:23:55','2020-07-05 11:23:55'),(3789,99,NULL,'172.19.0.6','2020-07-05 11:23:56','2020-07-05 11:23:56','2020-07-05 11:23:56'),(3790,100,NULL,'172.19.0.6','2020-07-05 11:23:57','2020-07-05 11:23:57','2020-07-05 11:23:57'),(3791,114,NULL,'172.19.0.6','2020-07-05 11:24:01','2020-07-05 11:24:01','2020-07-05 11:24:01'),(3792,50,NULL,'172.19.0.6','2020-07-05 11:24:04','2020-07-05 11:24:04','2020-07-05 11:24:04'),(3793,14,NULL,'172.19.0.6','2020-07-05 12:32:02','2020-07-05 12:32:02','2020-07-05 12:32:02'),(3794,127,NULL,'172.19.0.6','2020-07-05 14:02:02','2020-07-05 14:02:02','2020-07-05 14:02:02'),(3795,106,NULL,'172.19.0.6','2020-07-05 15:12:19','2020-07-05 15:12:19','2020-07-05 15:12:19'),(3796,125,NULL,'172.19.0.6','2020-07-05 16:05:22','2020-07-05 16:05:22','2020-07-05 16:05:22'),(3797,88,NULL,'172.19.0.6','2020-07-05 23:41:19','2020-07-05 23:41:19','2020-07-05 23:41:19'),(3798,27,NULL,'172.19.0.6','2020-07-06 00:32:09','2020-07-06 00:32:09','2020-07-06 00:32:09'),(3799,35,NULL,'172.19.0.6','2020-07-06 00:32:10','2020-07-06 00:32:10','2020-07-06 00:32:10'),(3800,52,NULL,'172.19.0.6','2020-07-06 00:32:13','2020-07-06 00:32:13','2020-07-06 00:32:13'),(3801,65,NULL,'172.19.0.6','2020-07-06 00:32:14','2020-07-06 00:32:14','2020-07-06 00:32:14'),(3802,65,NULL,'172.19.0.6','2020-07-06 00:32:16','2020-07-06 00:32:16','2020-07-06 00:32:16'),(3803,72,NULL,'172.19.0.6','2020-07-06 00:32:17','2020-07-06 00:32:17','2020-07-06 00:32:17'),(3804,105,NULL,'172.19.0.6','2020-07-06 00:32:28','2020-07-06 00:32:28','2020-07-06 00:32:28'),(3805,105,NULL,'172.19.0.6','2020-07-06 00:32:30','2020-07-06 00:32:30','2020-07-06 00:32:30'),(3806,106,NULL,'172.19.0.6','2020-07-06 00:32:36','2020-07-06 00:32:36','2020-07-06 00:32:36'),(3807,115,NULL,'172.19.0.6','2020-07-06 00:32:37','2020-07-06 00:32:37','2020-07-06 00:32:37'),(3808,122,NULL,'172.19.0.6','2020-07-06 00:32:43','2020-07-06 00:32:43','2020-07-06 00:32:43'),(3809,122,NULL,'172.19.0.6','2020-07-06 00:32:45','2020-07-06 00:32:45','2020-07-06 00:32:45'),(3810,125,NULL,'172.19.0.6','2020-07-06 00:32:48','2020-07-06 00:32:48','2020-07-06 00:32:48'),(3811,126,NULL,'172.19.0.6','2020-07-06 00:32:50','2020-07-06 00:32:50','2020-07-06 00:32:50'),(3812,127,NULL,'172.19.0.6','2020-07-06 00:32:51','2020-07-06 00:32:51','2020-07-06 00:32:51'),(3813,128,NULL,'172.19.0.6','2020-07-06 00:32:56','2020-07-06 00:32:56','2020-07-06 00:32:56'),(3814,129,NULL,'172.19.0.6','2020-07-06 00:32:57','2020-07-06 00:32:57','2020-07-06 00:32:57'),(3815,94,NULL,'172.19.0.6','2020-07-06 03:55:56','2020-07-06 03:55:56','2020-07-06 03:55:56'),(3816,130,NULL,'172.19.0.6','2020-07-06 05:42:49','2020-07-06 05:42:49','2020-07-06 05:42:49'),(3817,130,NULL,'172.19.0.6','2020-07-06 05:42:51','2020-07-06 05:42:51','2020-07-06 05:42:51'),(3818,131,NULL,'172.19.0.6','2020-07-06 05:42:54','2020-07-06 05:42:54','2020-07-06 05:42:54'),(3819,131,NULL,'172.19.0.6','2020-07-06 05:42:55','2020-07-06 05:42:55','2020-07-06 05:42:55'),(3820,15,NULL,'172.19.0.6','2020-07-06 05:43:23','2020-07-06 05:43:23','2020-07-06 05:43:23'),(3821,23,NULL,'172.19.0.6','2020-07-06 05:43:26','2020-07-06 05:43:26','2020-07-06 05:43:26'),(3822,23,NULL,'172.19.0.6','2020-07-06 05:43:30','2020-07-06 05:43:30','2020-07-06 05:43:30'),(3823,28,NULL,'172.19.0.6','2020-07-06 05:43:32','2020-07-06 05:43:32','2020-07-06 05:43:32'),(3824,31,NULL,'172.19.0.6','2020-07-06 05:43:34','2020-07-06 05:43:34','2020-07-06 05:43:34'),(3825,32,NULL,'172.19.0.6','2020-07-06 05:43:36','2020-07-06 05:43:36','2020-07-06 05:43:36'),(3826,33,NULL,'172.19.0.6','2020-07-06 05:43:38','2020-07-06 05:43:38','2020-07-06 05:43:38'),(3827,36,NULL,'172.19.0.6','2020-07-06 05:43:39','2020-07-06 05:43:39','2020-07-06 05:43:39'),(3828,36,NULL,'172.19.0.6','2020-07-06 05:43:43','2020-07-06 05:43:43','2020-07-06 05:43:43'),(3829,37,NULL,'172.19.0.6','2020-07-06 05:43:45','2020-07-06 05:43:45','2020-07-06 05:43:45'),(3830,37,NULL,'172.19.0.6','2020-07-06 05:43:48','2020-07-06 05:43:48','2020-07-06 05:43:48'),(3831,41,NULL,'172.19.0.6','2020-07-06 05:43:51','2020-07-06 05:43:51','2020-07-06 05:43:51'),(3832,106,NULL,'172.19.0.6','2020-07-06 09:24:10','2020-07-06 09:24:10','2020-07-06 09:24:10'),(3833,14,NULL,'172.19.0.6','2020-07-06 12:00:34','2020-07-06 12:00:34','2020-07-06 12:00:34'),(3834,127,NULL,'172.19.0.6','2020-07-06 15:45:34','2020-07-06 15:45:34','2020-07-06 15:45:34'),(3835,127,NULL,'172.19.0.6','2020-07-06 17:10:41','2020-07-06 17:10:41','2020-07-06 17:10:41'),(3836,14,NULL,'172.19.0.6','2020-07-06 19:29:15','2020-07-06 19:29:15','2020-07-06 19:29:15'),(3837,43,NULL,'172.19.0.6','2020-07-06 19:29:19','2020-07-06 19:29:19','2020-07-06 19:29:19'),(3838,45,NULL,'172.19.0.6','2020-07-06 19:29:24','2020-07-06 19:29:24','2020-07-06 19:29:24'),(3839,45,NULL,'172.19.0.6','2020-07-06 19:29:29','2020-07-06 19:29:29','2020-07-06 19:29:29'),(3840,52,NULL,'172.19.0.6','2020-07-06 19:29:31','2020-07-06 19:29:31','2020-07-06 19:29:31'),(3841,90,NULL,'172.19.0.6','2020-07-06 19:29:33','2020-07-06 19:29:33','2020-07-06 19:29:33'),(3842,94,NULL,'172.19.0.6','2020-07-06 19:29:36','2020-07-06 19:29:36','2020-07-06 19:29:36'),(3843,97,NULL,'172.19.0.6','2020-07-06 19:29:39','2020-07-06 19:29:39','2020-07-06 19:29:39'),(3844,97,NULL,'172.19.0.6','2020-07-06 19:29:45','2020-07-06 19:29:45','2020-07-06 19:29:45'),(3845,104,NULL,'172.19.0.6','2020-07-06 19:29:53','2020-07-06 19:29:53','2020-07-06 19:29:53'),(3846,105,NULL,'172.19.0.6','2020-07-06 19:29:58','2020-07-06 19:29:58','2020-07-06 19:29:58'),(3847,105,NULL,'172.19.0.6','2020-07-06 19:30:05','2020-07-06 19:30:05','2020-07-06 19:30:05'),(3848,107,NULL,'172.19.0.6','2020-07-06 19:30:15','2020-07-06 19:30:15','2020-07-06 19:30:15'),(3849,107,NULL,'172.19.0.6','2020-07-06 19:30:17','2020-07-06 19:30:17','2020-07-06 19:30:17'),(3850,110,NULL,'172.19.0.6','2020-07-06 19:30:23','2020-07-06 19:30:23','2020-07-06 19:30:23'),(3851,110,NULL,'172.19.0.6','2020-07-06 19:30:25','2020-07-06 19:30:25','2020-07-06 19:30:25'),(3852,113,NULL,'172.19.0.6','2020-07-06 19:30:30','2020-07-06 19:30:30','2020-07-06 19:30:30'),(3853,113,NULL,'172.19.0.6','2020-07-06 19:30:33','2020-07-06 19:30:33','2020-07-06 19:30:33'),(3854,125,NULL,'172.19.0.6','2020-07-06 19:30:36','2020-07-06 19:30:36','2020-07-06 19:30:36'),(3855,125,NULL,'172.19.0.6','2020-07-06 19:30:39','2020-07-06 19:30:39','2020-07-06 19:30:39'),(3856,126,NULL,'172.19.0.6','2020-07-06 19:30:44','2020-07-06 19:30:44','2020-07-06 19:30:44'),(3857,127,NULL,'172.19.0.6','2020-07-06 19:30:47','2020-07-06 19:30:47','2020-07-06 19:30:47'),(3858,127,NULL,'172.19.0.6','2020-07-06 19:30:52','2020-07-06 19:30:52','2020-07-06 19:30:52'),(3859,128,NULL,'172.19.0.6','2020-07-06 19:30:58','2020-07-06 19:30:58','2020-07-06 19:30:58'),(3860,128,NULL,'172.19.0.6','2020-07-06 19:31:00','2020-07-06 19:31:00','2020-07-06 19:31:00'),(3861,129,NULL,'172.19.0.6','2020-07-06 19:31:03','2020-07-06 19:31:03','2020-07-06 19:31:03'),(3862,129,NULL,'172.19.0.6','2020-07-06 19:31:07','2020-07-06 19:31:07','2020-07-06 19:31:07'),(3863,130,NULL,'172.19.0.6','2020-07-06 19:31:10','2020-07-06 19:31:10','2020-07-06 19:31:10'),(3864,131,NULL,'172.19.0.6','2020-07-06 19:31:12','2020-07-06 19:31:12','2020-07-06 19:31:12'),(3865,131,NULL,'172.19.0.6','2020-07-06 19:31:17','2020-07-06 19:31:17','2020-07-06 19:31:17'),(3866,120,NULL,'172.19.0.6','2020-07-07 01:59:28','2020-07-07 01:59:28','2020-07-07 01:59:28'),(3867,90,NULL,'172.19.0.6','2020-07-07 04:52:26','2020-07-07 04:52:26','2020-07-07 04:52:26'),(3868,1,NULL,'172.19.0.6','2020-07-07 06:37:06','2020-07-07 06:37:06','2020-07-07 06:37:06'),(3869,15,NULL,'172.19.0.6','2020-07-07 06:37:09','2020-07-07 06:37:09','2020-07-07 06:37:09'),(3870,15,NULL,'172.19.0.6','2020-07-07 06:37:14','2020-07-07 06:37:14','2020-07-07 06:37:14'),(3871,21,NULL,'172.19.0.6','2020-07-07 06:37:22','2020-07-07 06:37:22','2020-07-07 06:37:22'),(3872,21,NULL,'172.19.0.6','2020-07-07 06:37:25','2020-07-07 06:37:25','2020-07-07 06:37:25'),(3873,23,NULL,'172.19.0.6','2020-07-07 06:37:29','2020-07-07 06:37:29','2020-07-07 06:37:29'),(3874,23,NULL,'172.19.0.6','2020-07-07 06:37:32','2020-07-07 06:37:32','2020-07-07 06:37:32'),(3875,27,NULL,'172.19.0.6','2020-07-07 06:37:39','2020-07-07 06:37:39','2020-07-07 06:37:39'),(3876,27,NULL,'172.19.0.6','2020-07-07 06:37:49','2020-07-07 06:37:49','2020-07-07 06:37:49'),(3877,28,NULL,'172.19.0.6','2020-07-07 06:37:55','2020-07-07 06:37:55','2020-07-07 06:37:55'),(3878,28,NULL,'172.19.0.6','2020-07-07 06:38:01','2020-07-07 06:38:01','2020-07-07 06:38:01'),(3879,130,NULL,'172.19.0.6','2020-07-07 16:57:15','2020-07-07 16:57:15','2020-07-07 16:57:15'),(3880,127,NULL,'172.19.0.6','2020-07-07 17:11:07','2020-07-07 17:11:07','2020-07-07 17:11:07'),(3881,14,NULL,'172.19.0.6','2020-07-07 18:16:48','2020-07-07 18:16:48','2020-07-07 18:16:48'),(3882,31,NULL,'172.19.0.6','2020-07-07 19:01:52','2020-07-07 19:01:52','2020-07-07 19:01:52'),(3883,32,NULL,'172.19.0.6','2020-07-07 19:01:54','2020-07-07 19:01:54','2020-07-07 19:01:54'),(3884,32,NULL,'172.19.0.6','2020-07-07 19:01:55','2020-07-07 19:01:55','2020-07-07 19:01:55'),(3885,33,NULL,'172.19.0.6','2020-07-07 19:02:03','2020-07-07 19:02:03','2020-07-07 19:02:03'),(3886,35,NULL,'172.19.0.6','2020-07-07 19:02:04','2020-07-07 19:02:04','2020-07-07 19:02:04'),(3887,35,NULL,'172.19.0.6','2020-07-07 19:02:10','2020-07-07 19:02:10','2020-07-07 19:02:10'),(3888,36,NULL,'172.19.0.6','2020-07-07 19:02:12','2020-07-07 19:02:12','2020-07-07 19:02:12'),(3889,37,NULL,'172.19.0.6','2020-07-07 19:02:18','2020-07-07 19:02:18','2020-07-07 19:02:18'),(3890,41,NULL,'172.19.0.6','2020-07-07 19:02:21','2020-07-07 19:02:21','2020-07-07 19:02:21'),(3891,42,NULL,'172.19.0.6','2020-07-07 19:02:23','2020-07-07 19:02:23','2020-07-07 19:02:23'),(3892,44,NULL,'172.19.0.6','2020-07-07 19:02:25','2020-07-07 19:02:25','2020-07-07 19:02:25'),(3893,46,NULL,'172.19.0.6','2020-07-07 19:02:28','2020-07-07 19:02:28','2020-07-07 19:02:28'),(3894,107,NULL,'172.19.0.6','2020-07-07 19:19:38','2020-07-07 19:19:38','2020-07-07 19:19:38'),(3895,14,NULL,'172.19.0.6','2020-07-07 20:16:01','2020-07-07 20:16:01','2020-07-07 20:16:01'),(3896,126,NULL,'172.19.0.6','2020-07-07 23:13:17','2020-07-07 23:13:17','2020-07-07 23:13:17'),(3897,47,NULL,'172.19.0.6','2020-07-07 23:45:02','2020-07-07 23:45:02','2020-07-07 23:45:02'),(3898,48,NULL,'172.19.0.6','2020-07-07 23:45:06','2020-07-07 23:45:06','2020-07-07 23:45:06'),(3899,49,NULL,'172.19.0.6','2020-07-07 23:45:08','2020-07-07 23:45:08','2020-07-07 23:45:08'),(3900,50,NULL,'172.19.0.6','2020-07-07 23:45:11','2020-07-07 23:45:11','2020-07-07 23:45:11'),(3901,50,NULL,'172.19.0.6','2020-07-07 23:45:13','2020-07-07 23:45:13','2020-07-07 23:45:13'),(3902,65,NULL,'172.19.0.6','2020-07-07 23:45:16','2020-07-07 23:45:16','2020-07-07 23:45:16'),(3903,72,NULL,'172.19.0.6','2020-07-07 23:45:18','2020-07-07 23:45:18','2020-07-07 23:45:18'),(3904,72,NULL,'172.19.0.6','2020-07-07 23:45:22','2020-07-07 23:45:22','2020-07-07 23:45:22'),(3905,88,NULL,'172.19.0.6','2020-07-07 23:45:25','2020-07-07 23:45:25','2020-07-07 23:45:25'),(3906,89,NULL,'172.19.0.6','2020-07-07 23:45:29','2020-07-07 23:45:29','2020-07-07 23:45:29'),(3907,89,NULL,'172.19.0.6','2020-07-07 23:45:34','2020-07-07 23:45:34','2020-07-07 23:45:34'),(3908,91,NULL,'172.19.0.6','2020-07-07 23:45:37','2020-07-07 23:45:37','2020-07-07 23:45:37'),(3909,93,NULL,'172.19.0.6','2020-07-07 23:45:42','2020-07-07 23:45:42','2020-07-07 23:45:42'),(3910,93,NULL,'172.19.0.6','2020-07-07 23:45:47','2020-07-07 23:45:47','2020-07-07 23:45:47'),(3911,95,NULL,'172.19.0.6','2020-07-08 01:46:22','2020-07-08 01:46:22','2020-07-08 01:46:22'),(3912,96,NULL,'172.19.0.6','2020-07-08 01:46:23','2020-07-08 01:46:23','2020-07-08 01:46:23'),(3913,98,NULL,'172.19.0.6','2020-07-08 01:46:29','2020-07-08 01:46:29','2020-07-08 01:46:29'),(3914,99,NULL,'172.19.0.6','2020-07-08 01:46:31','2020-07-08 01:46:31','2020-07-08 01:46:31'),(3915,100,NULL,'172.19.0.6','2020-07-08 01:46:35','2020-07-08 01:46:35','2020-07-08 01:46:35'),(3916,101,NULL,'172.19.0.6','2020-07-08 01:46:37','2020-07-08 01:46:37','2020-07-08 01:46:37'),(3917,106,NULL,'172.19.0.6','2020-07-08 01:46:41','2020-07-08 01:46:41','2020-07-08 01:46:41'),(3918,106,NULL,'172.19.0.6','2020-07-08 01:46:43','2020-07-08 01:46:43','2020-07-08 01:46:43'),(3919,108,NULL,'172.19.0.6','2020-07-08 01:46:45','2020-07-08 01:46:45','2020-07-08 01:46:45'),(3920,109,NULL,'172.19.0.6','2020-07-08 01:46:47','2020-07-08 01:46:47','2020-07-08 01:46:47'),(3921,111,NULL,'172.19.0.6','2020-07-08 01:46:50','2020-07-08 01:46:50','2020-07-08 01:46:50'),(3922,111,NULL,'172.19.0.6','2020-07-08 01:46:53','2020-07-08 01:46:53','2020-07-08 01:46:53'),(3923,43,NULL,'172.19.0.6','2020-07-08 04:23:38','2020-07-08 04:23:38','2020-07-08 04:23:38'),(3924,43,NULL,'106.11.155.50','2020-07-08 04:27:42','2020-07-08 04:27:42','2020-07-08 04:27:42'),(3925,93,NULL,'172.19.0.6','2020-07-08 05:54:15','2020-07-08 05:54:15','2020-07-08 05:54:15'),(3926,44,NULL,'172.19.0.6','2020-07-08 08:04:21','2020-07-08 08:04:21','2020-07-08 08:04:21'),(3927,112,NULL,'172.19.0.6','2020-07-08 10:09:39','2020-07-08 10:09:39','2020-07-08 10:09:39'),(3928,114,NULL,'172.19.0.6','2020-07-08 10:09:42','2020-07-08 10:09:42','2020-07-08 10:09:42'),(3929,114,NULL,'172.19.0.6','2020-07-08 10:09:45','2020-07-08 10:09:45','2020-07-08 10:09:45'),(3930,115,NULL,'172.19.0.6','2020-07-08 10:09:50','2020-07-08 10:09:50','2020-07-08 10:09:50'),(3931,115,NULL,'172.19.0.6','2020-07-08 10:09:53','2020-07-08 10:09:53','2020-07-08 10:09:53'),(3932,116,NULL,'172.19.0.6','2020-07-08 10:10:00','2020-07-08 10:10:00','2020-07-08 10:10:00'),(3933,117,NULL,'172.19.0.6','2020-07-08 10:10:03','2020-07-08 10:10:03','2020-07-08 10:10:03'),(3934,119,NULL,'172.19.0.6','2020-07-08 10:10:05','2020-07-08 10:10:05','2020-07-08 10:10:05'),(3935,119,NULL,'172.19.0.6','2020-07-08 10:10:12','2020-07-08 10:10:12','2020-07-08 10:10:12'),(3936,120,NULL,'172.19.0.6','2020-07-08 10:10:13','2020-07-08 10:10:13','2020-07-08 10:10:13'),(3937,120,NULL,'172.19.0.6','2020-07-08 10:10:17','2020-07-08 10:10:17','2020-07-08 10:10:17'),(3938,121,NULL,'172.19.0.6','2020-07-08 10:10:19','2020-07-08 10:10:19','2020-07-08 10:10:19'),(3939,122,NULL,'172.19.0.6','2020-07-08 10:10:21','2020-07-08 10:10:21','2020-07-08 10:10:21'),(3940,122,NULL,'172.19.0.6','2020-07-08 10:10:24','2020-07-08 10:10:24','2020-07-08 10:10:24'),(3941,123,NULL,'172.19.0.6','2020-07-08 10:10:27','2020-07-08 10:10:27','2020-07-08 10:10:27'),(3942,37,NULL,'172.19.0.6','2020-07-08 15:04:21','2020-07-08 15:04:21','2020-07-08 15:04:21'),(3943,127,NULL,'172.19.0.6','2020-07-08 15:04:25','2020-07-08 15:04:25','2020-07-08 15:04:25'),(3944,14,NULL,'172.19.0.6','2020-07-08 16:35:39','2020-07-08 16:35:39','2020-07-08 16:35:39'),(3945,14,NULL,'172.19.0.6','2020-07-08 20:02:18','2020-07-08 20:02:18','2020-07-08 20:02:18'),(3946,14,NULL,'172.19.0.6','2020-07-08 22:08:08','2020-07-08 22:08:08','2020-07-08 22:08:08'),(3947,45,NULL,'172.19.0.6','2020-07-08 22:53:48','2020-07-08 22:53:48','2020-07-08 22:53:48'),(3948,127,NULL,'172.19.0.6','2020-07-08 23:07:48','2020-07-08 23:07:48','2020-07-08 23:07:48'),(3949,126,NULL,'172.19.0.6','2020-07-09 00:10:51','2020-07-09 00:10:51','2020-07-09 00:10:51'),(3950,14,NULL,'172.19.0.6','2020-07-09 01:38:55','2020-07-09 01:38:55','2020-07-09 01:38:55'),(3951,129,NULL,'172.19.0.6','2020-07-09 04:40:52','2020-07-09 04:40:52','2020-07-09 04:40:52'),(3952,94,NULL,'172.19.0.6','2020-07-09 07:19:10','2020-07-09 07:19:10','2020-07-09 07:19:10'),(3953,49,NULL,'106.11.154.83','2020-07-09 07:56:08','2020-07-09 07:56:08','2020-07-09 07:56:08'),(3954,124,NULL,'172.19.0.6','2020-07-09 08:42:51','2020-07-09 08:42:51','2020-07-09 08:42:51'),(3955,127,NULL,'172.19.0.6','2020-07-09 11:05:38','2020-07-09 11:05:38','2020-07-09 11:05:38'),(3956,14,NULL,'172.19.0.6','2020-07-09 12:26:35','2020-07-09 12:26:35','2020-07-09 12:26:35'),(3957,14,NULL,'172.19.0.6','2020-07-09 12:46:25','2020-07-09 12:46:25','2020-07-09 12:46:25'),(3958,94,NULL,'172.19.0.6','2020-07-09 15:53:16','2020-07-09 15:53:16','2020-07-09 15:53:16'),(3959,127,NULL,'172.19.0.6','2020-07-09 19:15:14','2020-07-09 19:15:14','2020-07-09 19:15:14'),(3960,127,NULL,'172.19.0.6','2020-07-09 20:26:39','2020-07-09 20:26:39','2020-07-09 20:26:39'),(3961,14,NULL,'172.19.0.6','2020-07-09 22:07:25','2020-07-09 22:07:25','2020-07-09 22:07:25'),(3962,14,NULL,'172.19.0.6','2020-07-09 22:47:41','2020-07-09 22:47:41','2020-07-09 22:47:41'),(3963,52,NULL,'172.19.0.6','2020-07-10 04:38:00','2020-07-10 04:38:01','2020-07-10 04:38:01'),(3964,88,NULL,'172.19.0.6','2020-07-10 04:47:40','2020-07-10 04:47:40','2020-07-10 04:47:40'),(3965,52,NULL,'172.19.0.6','2020-07-10 05:24:25','2020-07-10 05:24:25','2020-07-10 05:24:25'),(3966,14,NULL,'172.19.0.6','2020-07-10 05:24:34','2020-07-10 05:24:34','2020-07-10 05:24:34'),(3967,131,NULL,'172.19.0.6','2020-07-10 05:24:38','2020-07-10 05:24:38','2020-07-10 05:24:38'),(3968,130,NULL,'172.19.0.6','2020-07-10 05:24:38','2020-07-10 05:24:38','2020-07-10 05:24:38'),(3969,129,NULL,'172.19.0.6','2020-07-10 05:24:39','2020-07-10 05:24:39','2020-07-10 05:24:39'),(3970,127,NULL,'172.19.0.6','2020-07-10 05:24:43','2020-07-10 05:24:43','2020-07-10 05:24:43'),(3971,128,NULL,'172.19.0.6','2020-07-10 05:24:44','2020-07-10 05:24:44','2020-07-10 05:24:44'),(3972,126,NULL,'172.19.0.6','2020-07-10 05:24:47','2020-07-10 05:24:47','2020-07-10 05:24:47'),(3973,125,NULL,'172.19.0.6','2020-07-10 05:24:51','2020-07-10 05:24:51','2020-07-10 05:24:51'),(3974,124,NULL,'172.19.0.6','2020-07-10 05:24:52','2020-07-10 05:24:52','2020-07-10 05:24:52'),(3975,121,NULL,'172.19.0.6','2020-07-10 05:25:23','2020-07-10 05:25:23','2020-07-10 05:25:23'),(3976,94,NULL,'172.19.0.6','2020-07-10 05:25:23','2020-07-10 05:25:24','2020-07-10 05:25:24'),(3977,119,NULL,'172.19.0.6','2020-07-10 05:25:23','2020-07-10 05:25:24','2020-07-10 05:25:24'),(3978,97,NULL,'172.19.0.6','2020-07-10 05:25:25','2020-07-10 05:25:25','2020-07-10 05:25:25'),(3979,50,NULL,'172.19.0.6','2020-07-10 05:25:27','2020-07-10 05:25:27','2020-07-10 05:25:27'),(3980,98,NULL,'172.19.0.6','2020-07-10 05:25:30','2020-07-10 05:25:30','2020-07-10 05:25:30'),(3981,37,NULL,'172.19.0.6','2020-07-10 05:25:33','2020-07-10 05:25:33','2020-07-10 05:25:33'),(3982,109,NULL,'172.19.0.6','2020-07-10 05:25:39','2020-07-10 05:25:39','2020-07-10 05:25:39'),(3983,37,NULL,'106.11.155.34','2020-07-10 05:44:38','2020-07-10 05:44:38','2020-07-10 05:44:38'),(3984,35,NULL,'172.19.0.6','2020-07-10 05:45:43','2020-07-10 05:45:43','2020-07-10 05:45:43'),(3985,31,NULL,'172.19.0.6','2020-07-10 05:45:43','2020-07-10 05:45:43','2020-07-10 05:45:43'),(3986,36,NULL,'172.19.0.6','2020-07-10 05:45:43','2020-07-10 05:45:43','2020-07-10 05:45:43'),(3987,72,NULL,'172.19.0.6','2020-07-10 05:45:43','2020-07-10 05:45:43','2020-07-10 05:45:43'),(3988,49,NULL,'172.19.0.6','2020-07-10 05:45:46','2020-07-10 05:45:46','2020-07-10 05:45:46'),(3989,112,NULL,'172.19.0.6','2020-07-10 05:45:50','2020-07-10 05:45:50','2020-07-10 05:45:50'),(3990,115,NULL,'172.19.0.6','2020-07-10 05:45:57','2020-07-10 05:45:57','2020-07-10 05:45:57'),(3991,48,NULL,'172.19.0.6','2020-07-10 05:46:03','2020-07-10 05:46:03','2020-07-10 05:46:03'),(3992,45,NULL,'172.19.0.6','2020-07-10 05:46:03','2020-07-10 05:46:03','2020-07-10 05:46:03'),(3993,33,NULL,'172.19.0.6','2020-07-10 05:46:05','2020-07-10 05:46:05','2020-07-10 05:46:05'),(3994,107,NULL,'172.19.0.6','2020-07-10 05:46:05','2020-07-10 05:46:06','2020-07-10 05:46:06'),(3995,15,NULL,'172.19.0.6','2020-07-10 05:46:13','2020-07-10 05:46:13','2020-07-10 05:46:13'),(3996,90,NULL,'172.19.0.6','2020-07-10 05:46:13','2020-07-10 05:46:13','2020-07-10 05:46:13'),(3997,120,NULL,'172.19.0.6','2020-07-10 05:46:13','2020-07-10 05:46:13','2020-07-10 05:46:13'),(3998,43,NULL,'172.19.0.6','2020-07-10 05:46:15','2020-07-10 05:46:15','2020-07-10 05:46:15'),(3999,113,NULL,'172.19.0.6','2020-07-10 05:46:21','2020-07-10 05:46:21','2020-07-10 05:46:21'),(4000,93,NULL,'172.19.0.6','2020-07-10 05:46:24','2020-07-10 05:46:24','2020-07-10 05:46:24'),(4001,91,NULL,'172.19.0.6','2020-07-10 05:46:27','2020-07-10 05:46:27','2020-07-10 05:46:27'),(4002,88,NULL,'172.19.0.6','2020-07-10 05:46:28','2020-07-10 05:46:29','2020-07-10 05:46:29'),(4003,65,NULL,'172.19.0.6','2020-07-10 05:46:33','2020-07-10 05:46:33','2020-07-10 05:46:33'),(4004,123,NULL,'172.19.0.6','2020-07-10 05:46:37','2020-07-10 05:46:37','2020-07-10 05:46:37'),(4005,95,NULL,'172.19.0.6','2020-07-10 05:46:43','2020-07-10 05:46:43','2020-07-10 05:46:43'),(4006,101,NULL,'172.19.0.6','2020-07-10 05:46:43','2020-07-10 05:46:43','2020-07-10 05:46:43'),(4007,106,NULL,'172.19.0.6','2020-07-10 05:46:44','2020-07-10 05:46:44','2020-07-10 05:46:44'),(4008,100,NULL,'172.19.0.6','2020-07-10 05:46:44','2020-07-10 05:46:44','2020-07-10 05:46:44'),(4009,46,NULL,'172.19.0.6','2020-07-10 05:46:45','2020-07-10 05:46:45','2020-07-10 05:46:45'),(4010,21,NULL,'172.19.0.6','2020-07-10 05:46:46','2020-07-10 05:46:46','2020-07-10 05:46:46'),(4011,114,NULL,'172.19.0.6','2020-07-10 05:46:51','2020-07-10 05:46:51','2020-07-10 05:46:51'),(4012,23,NULL,'172.19.0.6','2020-07-10 05:46:56','2020-07-10 05:46:56','2020-07-10 05:46:56'),(4013,32,NULL,'172.19.0.6','2020-07-10 05:47:04','2020-07-10 05:47:04','2020-07-10 05:47:04'),(4014,116,NULL,'172.19.0.6','2020-07-10 05:47:06','2020-07-10 05:47:06','2020-07-10 05:47:06'),(4015,108,NULL,'172.19.0.6','2020-07-10 05:47:12','2020-07-10 05:47:12','2020-07-10 05:47:12'),(4016,96,NULL,'172.19.0.6','2020-07-10 05:47:13','2020-07-10 05:47:13','2020-07-10 05:47:13'),(4017,44,NULL,'172.19.0.6','2020-07-10 05:47:13','2020-07-10 05:47:13','2020-07-10 05:47:13'),(4018,111,NULL,'172.19.0.6','2020-07-10 05:47:14','2020-07-10 05:47:14','2020-07-10 05:47:14'),(4019,122,NULL,'172.19.0.6','2020-07-10 05:47:17','2020-07-10 05:47:17','2020-07-10 05:47:17'),(4020,117,NULL,'172.19.0.6','2020-07-10 05:47:19','2020-07-10 05:47:19','2020-07-10 05:47:19'),(4021,110,NULL,'172.19.0.6','2020-07-10 05:47:23','2020-07-10 05:47:23','2020-07-10 05:47:23'),(4022,28,NULL,'172.19.0.6','2020-07-10 05:47:25','2020-07-10 05:47:25','2020-07-10 05:47:25'),(4023,41,NULL,'172.19.0.6','2020-07-10 05:47:33','2020-07-10 05:47:33','2020-07-10 05:47:33'),(4024,1,NULL,'172.19.0.6','2020-07-10 05:47:36','2020-07-10 05:47:36','2020-07-10 05:47:36'),(4025,89,NULL,'172.19.0.6','2020-07-10 05:47:36','2020-07-10 05:47:36','2020-07-10 05:47:36'),(4026,99,NULL,'172.19.0.6','2020-07-10 05:47:39','2020-07-10 05:47:39','2020-07-10 05:47:39'),(4027,104,NULL,'172.19.0.6','2020-07-10 05:47:40','2020-07-10 05:47:40','2020-07-10 05:47:40'),(4028,27,NULL,'172.19.0.6','2020-07-10 05:47:43','2020-07-10 05:47:43','2020-07-10 05:47:43'),(4029,72,NULL,'172.19.0.6','2020-07-10 08:32:07','2020-07-10 08:32:07','2020-07-10 08:32:07'),(4030,116,NULL,'172.19.0.6','2020-07-10 09:07:37','2020-07-10 09:07:37','2020-07-10 09:07:37'),(4031,124,NULL,'172.19.0.6','2020-07-10 09:30:29','2020-07-10 09:30:29','2020-07-10 09:30:29'),(4032,127,NULL,'172.19.0.6','2020-07-10 10:50:53','2020-07-10 10:50:53','2020-07-10 10:50:53'),(4033,127,NULL,'172.19.0.6','2020-07-10 12:01:26','2020-07-10 12:01:26','2020-07-10 12:01:26'),(4034,14,NULL,'172.19.0.6','2020-07-10 12:42:15','2020-07-10 12:42:15','2020-07-10 12:42:15'),(4035,14,NULL,'172.19.0.6','2020-07-10 13:02:39','2020-07-10 13:02:39','2020-07-10 13:02:39'),(4036,128,NULL,'172.19.0.6','2020-07-10 16:11:07','2020-07-10 16:11:07','2020-07-10 16:11:07'),(4037,127,NULL,'172.19.0.6','2020-07-10 23:15:07','2020-07-10 23:15:07','2020-07-10 23:15:07'),(4038,14,NULL,'172.19.0.6','2020-07-10 23:25:01','2020-07-10 23:25:01','2020-07-10 23:25:01'),(4039,14,NULL,'172.19.0.6','2020-07-11 01:16:03','2020-07-11 01:16:03','2020-07-11 01:16:03'),(4040,27,NULL,'172.19.0.6','2020-07-11 03:56:51','2020-07-11 03:56:51','2020-07-11 03:56:51'),(4041,14,NULL,'172.19.0.6','2020-07-11 08:33:50','2020-07-11 08:33:50','2020-07-11 08:33:50'),(4042,127,NULL,'172.19.0.6','2020-07-11 09:10:38','2020-07-11 09:10:38','2020-07-11 09:10:38'),(4043,32,NULL,'172.19.0.6','2020-07-11 11:33:50','2020-07-11 11:33:50','2020-07-11 11:33:50'),(4044,124,NULL,'172.19.0.6','2020-07-11 13:19:07','2020-07-11 13:19:07','2020-07-11 13:19:07'),(4045,42,NULL,'172.19.0.6','2020-07-11 14:05:24','2020-07-11 14:05:28','2020-07-11 14:05:28'),(4046,42,NULL,'172.19.0.6','2020-07-11 17:51:00','2020-07-11 17:51:06','2020-07-11 17:51:06'),(4047,127,NULL,'172.19.0.6','2020-07-11 19:14:09','2020-07-11 19:14:10','2020-07-11 19:14:10'),(4048,98,NULL,'172.19.0.6','2020-07-13 10:50:14','2020-07-13 10:50:15','2020-07-13 10:50:15'),(4049,109,NULL,'172.19.0.6','2020-07-13 11:29:44','2020-07-13 11:29:44','2020-07-13 11:29:44'),(4050,23,NULL,'172.19.0.6','2020-07-13 12:02:30','2020-07-13 12:02:30','2020-07-13 12:02:30'),(4051,106,NULL,'172.19.0.6','2020-07-13 12:26:35','2020-07-13 12:26:35','2020-07-13 12:26:35'),(4052,50,NULL,'172.19.0.6','2020-07-13 12:39:53','2020-07-13 12:39:53','2020-07-13 12:39:53'),(4053,46,NULL,'172.19.0.6','2020-07-13 12:53:11','2020-07-13 12:53:11','2020-07-13 12:53:11'),(4054,126,NULL,'172.19.0.6','2020-07-13 13:06:28','2020-07-13 13:06:28','2020-07-13 13:06:28'),(4055,107,NULL,'172.19.0.6','2020-07-13 13:06:28','2020-07-13 13:06:28','2020-07-13 13:06:28'),(4056,109,NULL,'172.19.0.6','2020-07-13 13:21:06','2020-07-13 13:21:06','2020-07-13 13:21:06'),(4057,129,NULL,'172.19.0.6','2020-07-13 13:29:09','2020-07-13 13:29:09','2020-07-13 13:29:09'),(4058,108,NULL,'172.19.0.6','2020-07-13 13:34:24','2020-07-13 13:34:24','2020-07-13 13:34:24'),(4059,129,NULL,'172.19.0.6','2020-07-13 13:35:13','2020-07-13 13:35:13','2020-07-13 13:35:13'),(4060,110,NULL,'172.19.0.6','2020-07-13 14:48:31','2020-07-13 14:48:31','2020-07-13 14:48:31'),(4061,113,NULL,'172.19.0.6','2020-07-13 15:52:48','2020-07-13 15:52:48','2020-07-13 15:52:48'),(4062,126,NULL,'172.19.0.6','2020-07-13 15:54:06','2020-07-13 15:54:06','2020-07-13 15:54:06'),(4063,52,NULL,'172.19.0.6','2020-07-14 01:14:30','2020-07-14 01:14:30','2020-07-14 01:14:30'),(4064,31,NULL,'172.19.0.6','2020-07-14 01:15:02','2020-07-14 01:15:02','2020-07-14 01:15:02'),(4065,127,NULL,'172.19.0.6','2020-07-14 03:15:19','2020-07-14 03:15:19','2020-07-14 03:15:19'),(4066,127,NULL,'172.19.0.6','2020-07-14 03:16:19','2020-07-14 03:16:19','2020-07-14 03:16:19'),(4067,23,NULL,'172.19.0.6','2020-07-14 05:44:16','2020-07-14 05:44:16','2020-07-14 05:44:16'),(4068,14,NULL,'172.19.0.6','2020-07-14 05:48:27','2020-07-14 05:48:27','2020-07-14 05:48:27'),(4069,14,NULL,'172.19.0.6','2020-07-14 05:49:26','2020-07-14 05:49:26','2020-07-14 05:49:26'),(4070,52,NULL,'172.19.0.6','2020-07-14 06:28:32','2020-07-14 06:28:32','2020-07-14 06:28:32'),(4071,126,NULL,'172.19.0.6','2020-07-14 08:46:13','2020-07-14 08:46:13','2020-07-14 08:46:13'),(4072,128,NULL,'172.19.0.6','2020-07-14 09:52:53','2020-07-14 09:52:53','2020-07-14 09:52:53'),(4073,33,NULL,'172.19.0.6','2020-07-15 08:09:28','2020-07-15 08:09:29','2020-07-15 08:09:29'),(4074,43,NULL,'172.19.0.6','2020-07-15 09:37:12','2020-07-15 09:37:12','2020-07-15 09:37:12'),(4075,132,NULL,'172.19.0.6','2020-07-15 10:06:21','2020-07-15 10:06:21','2020-07-15 10:06:21'),(4076,126,NULL,'172.19.0.6','2020-07-15 10:13:45','2020-07-15 10:13:45','2020-07-15 10:13:45'),(4077,106,NULL,'172.19.0.6','2020-07-15 10:22:08','2020-07-15 10:22:08','2020-07-15 10:22:08'),(4078,131,NULL,'172.19.0.6','2020-07-15 16:36:06','2020-07-15 16:36:06','2020-07-15 16:36:06'),(4079,27,NULL,'172.19.0.6','2020-07-15 16:39:39','2020-07-15 16:39:39','2020-07-15 16:39:39'),(4080,88,NULL,'172.19.0.6','2020-07-15 17:42:37','2020-07-15 17:42:37','2020-07-15 17:42:37'),(4081,132,NULL,'172.19.0.6','2020-07-15 18:44:55','2020-07-15 18:44:55','2020-07-15 18:44:55'),(4082,14,NULL,'172.19.0.6','2020-07-15 19:27:35','2020-07-15 19:27:35','2020-07-15 19:27:35'),(4083,98,NULL,'172.19.0.6','2020-07-15 20:29:39','2020-07-15 20:29:39','2020-07-15 20:29:39'),(4084,125,NULL,'172.19.0.6','2020-07-15 22:32:17','2020-07-15 22:32:17','2020-07-15 22:32:17'),(4085,90,NULL,'172.19.0.6','2020-07-15 23:48:44','2020-07-15 23:48:44','2020-07-15 23:48:44'),(4086,93,NULL,'172.19.0.6','2020-07-16 00:47:58','2020-07-16 00:47:58','2020-07-16 00:47:58'),(4087,129,NULL,'172.19.0.6','2020-07-16 00:49:23','2020-07-16 00:49:23','2020-07-16 00:49:23'),(4088,52,NULL,'172.19.0.6','2020-07-16 05:59:18','2020-07-16 05:59:18','2020-07-16 05:59:18'),(4089,27,NULL,'172.19.0.6','2020-07-16 06:52:19','2020-07-16 06:52:19','2020-07-16 06:52:19'),(4090,91,NULL,'172.19.0.6','2020-07-16 06:55:01','2020-07-16 06:55:01','2020-07-16 06:55:01'),(4091,52,NULL,'172.19.0.2','2020-07-18 18:11:25','2020-07-18 18:11:25','2020-07-18 18:11:25'),(4092,52,NULL,'172.19.0.2','2020-07-18 18:38:50','2020-07-18 18:38:50','2020-07-18 18:38:50'),(4093,89,NULL,'172.19.0.2','2020-07-18 18:38:54','2020-07-18 18:38:55','2020-07-18 18:38:55'),(4094,23,NULL,'172.19.0.2','2020-07-18 20:51:38','2020-07-18 20:51:38','2020-07-18 20:51:38'),(4095,89,NULL,'172.19.0.2','2020-07-18 21:34:19','2020-07-18 21:34:19','2020-07-18 21:34:19'),(4096,107,NULL,'172.19.0.2','2020-07-18 21:53:11','2020-07-18 21:53:11','2020-07-18 21:53:11'),(4097,106,NULL,'172.19.0.2','2020-07-19 07:26:32','2020-07-19 07:26:33','2020-07-19 07:26:33'),(4098,126,NULL,'172.19.0.2','2020-07-19 07:59:51','2020-07-19 07:59:51','2020-07-19 07:59:51'),(4099,126,NULL,'172.19.0.2','2020-07-19 09:06:31','2020-07-19 09:06:31','2020-07-19 09:06:31'),(4100,126,NULL,'172.19.0.2','2020-07-19 09:07:31','2020-07-19 09:07:31','2020-07-19 09:07:31'),(4101,14,NULL,'172.19.0.2','2020-07-19 09:29:13','2020-07-19 09:29:13','2020-07-19 09:29:13'),(4102,14,NULL,'172.19.0.2','2020-07-19 09:29:22','2020-07-19 09:29:22','2020-07-19 09:29:22'),(4103,21,NULL,'172.19.0.2','2020-07-19 09:29:44','2020-07-19 09:29:45','2020-07-19 09:29:45'),(4104,21,NULL,'172.19.0.2','2020-07-19 09:29:52','2020-07-19 09:29:52','2020-07-19 09:29:52'),(4105,47,NULL,'172.19.0.2','2020-07-19 09:30:28','2020-07-19 09:30:28','2020-07-19 09:30:28'),(4106,47,NULL,'172.19.0.2','2020-07-19 09:30:50','2020-07-19 09:30:50','2020-07-19 09:30:50'),(4107,52,NULL,'172.19.0.2','2020-07-19 09:31:44','2020-07-19 09:31:44','2020-07-19 09:31:44'),(4108,89,NULL,'172.19.0.2','2020-07-19 09:32:11','2020-07-19 09:32:11','2020-07-19 09:32:11'),(4109,94,NULL,'172.19.0.2','2020-07-19 09:32:46','2020-07-19 09:32:46','2020-07-19 09:32:46'),(4110,94,NULL,'172.19.0.2','2020-07-19 09:32:48','2020-07-19 09:32:48','2020-07-19 09:32:48'),(4111,101,NULL,'172.19.0.2','2020-07-19 09:33:10','2020-07-19 09:33:10','2020-07-19 09:33:10'),(4112,108,NULL,'172.19.0.2','2020-07-19 09:33:33','2020-07-19 09:33:33','2020-07-19 09:33:33'),(4113,113,NULL,'172.19.0.2','2020-07-19 09:33:57','2020-07-19 09:33:57','2020-07-19 09:33:57'),(4114,117,NULL,'172.19.0.2','2020-07-19 09:34:46','2020-07-19 09:34:47','2020-07-19 09:34:47'),(4115,122,NULL,'172.19.0.2','2020-07-19 09:35:08','2020-07-19 09:35:08','2020-07-19 09:35:08'),(4116,125,NULL,'172.19.0.2','2020-07-19 09:59:52','2020-07-19 09:59:52','2020-07-19 09:59:52'),(4117,126,NULL,'172.19.0.2','2020-07-19 10:00:00','2020-07-19 10:00:00','2020-07-19 10:00:00'),(4118,127,NULL,'172.19.0.2','2020-07-19 10:00:06','2020-07-19 10:00:06','2020-07-19 10:00:06'),(4119,128,NULL,'172.19.0.2','2020-07-19 10:00:14','2020-07-19 10:00:14','2020-07-19 10:00:14'),(4120,129,NULL,'172.19.0.2','2020-07-19 10:00:23','2020-07-19 10:00:23','2020-07-19 10:00:23'),(4121,130,NULL,'172.19.0.2','2020-07-19 10:00:30','2020-07-19 10:00:30','2020-07-19 10:00:30'),(4122,131,NULL,'172.19.0.2','2020-07-19 10:00:36','2020-07-19 10:00:36','2020-07-19 10:00:36'),(4123,132,NULL,'172.19.0.2','2020-07-19 10:00:43','2020-07-19 10:00:43','2020-07-19 10:00:43'),(4124,15,NULL,'172.19.0.2','2020-07-19 10:02:02','2020-07-19 10:02:02','2020-07-19 10:02:02'),(4125,23,NULL,'172.19.0.2','2020-07-19 10:02:11','2020-07-19 10:02:11','2020-07-19 10:02:11'),(4126,27,NULL,'172.19.0.2','2020-07-19 10:02:21','2020-07-19 10:02:21','2020-07-19 10:02:21'),(4127,28,NULL,'172.19.0.2','2020-07-19 10:02:33','2020-07-19 10:02:33','2020-07-19 10:02:33'),(4128,31,NULL,'172.19.0.2','2020-07-19 10:02:50','2020-07-19 10:02:50','2020-07-19 10:02:50'),(4129,32,NULL,'172.19.0.2','2020-07-19 10:03:04','2020-07-19 10:03:04','2020-07-19 10:03:04'),(4130,32,NULL,'172.19.0.2','2020-07-19 10:03:07','2020-07-19 10:03:07','2020-07-19 10:03:07'),(4131,33,NULL,'172.19.0.2','2020-07-19 10:03:15','2020-07-19 10:03:15','2020-07-19 10:03:15'),(4132,35,NULL,'172.19.0.2','2020-07-19 10:03:27','2020-07-19 10:03:27','2020-07-19 10:03:27'),(4133,126,NULL,'172.19.0.2','2020-07-19 10:13:11','2020-07-19 10:13:11','2020-07-19 10:13:11'),(4134,36,NULL,'172.19.0.2','2020-07-19 10:36:37','2020-07-19 10:36:37','2020-07-19 10:36:37'),(4135,37,NULL,'172.19.0.2','2020-07-19 10:36:45','2020-07-19 10:36:45','2020-07-19 10:36:45'),(4136,41,NULL,'172.19.0.2','2020-07-19 10:36:53','2020-07-19 10:36:53','2020-07-19 10:36:53'),(4137,41,NULL,'172.19.0.2','2020-07-19 10:36:55','2020-07-19 10:36:55','2020-07-19 10:36:55'),(4138,42,NULL,'172.19.0.2','2020-07-19 10:37:02','2020-07-19 10:37:02','2020-07-19 10:37:02'),(4139,43,NULL,'172.19.0.2','2020-07-19 10:37:09','2020-07-19 10:37:09','2020-07-19 10:37:09'),(4140,44,NULL,'172.19.0.2','2020-07-19 10:37:18','2020-07-19 10:37:18','2020-07-19 10:37:18'),(4141,45,NULL,'172.19.0.2','2020-07-19 10:37:27','2020-07-19 10:37:27','2020-07-19 10:37:27'),(4142,46,NULL,'172.19.0.2','2020-07-19 10:37:34','2020-07-19 10:37:34','2020-07-19 10:37:34'),(4143,48,NULL,'172.19.0.2','2020-07-19 10:37:42','2020-07-19 10:37:42','2020-07-19 10:37:42'),(4144,48,NULL,'172.19.0.2','2020-07-19 10:37:43','2020-07-19 10:37:43','2020-07-19 10:37:43'),(4145,49,NULL,'172.19.0.2','2020-07-19 10:37:47','2020-07-19 10:37:47','2020-07-19 10:37:47'),(4146,49,NULL,'172.19.0.2','2020-07-19 10:37:48','2020-07-19 10:37:48','2020-07-19 10:37:48'),(4147,50,NULL,'172.19.0.2','2020-07-19 10:37:58','2020-07-19 10:37:58','2020-07-19 10:37:58'),(4148,65,NULL,'172.19.0.2','2020-07-19 10:38:05','2020-07-19 10:38:05','2020-07-19 10:38:05'),(4149,72,NULL,'172.19.0.2','2020-07-19 10:38:12','2020-07-19 10:38:12','2020-07-19 10:38:12'),(4150,88,NULL,'172.19.0.2','2020-07-19 10:38:19','2020-07-19 10:38:19','2020-07-19 10:38:19'),(4151,90,NULL,'172.19.0.2','2020-07-19 10:38:25','2020-07-19 10:38:25','2020-07-19 10:38:25'),(4152,91,NULL,'172.19.0.2','2020-07-19 10:38:33','2020-07-19 10:38:33','2020-07-19 10:38:33'),(4153,93,NULL,'172.19.0.2','2020-07-19 10:38:39','2020-07-19 10:38:39','2020-07-19 10:38:39'),(4154,95,NULL,'172.19.0.2','2020-07-19 10:38:50','2020-07-19 10:38:50','2020-07-19 10:38:50'),(4155,96,NULL,'172.19.0.2','2020-07-19 10:38:56','2020-07-19 10:38:56','2020-07-19 10:38:56'),(4156,97,NULL,'172.19.0.2','2020-07-19 10:39:02','2020-07-19 10:39:02','2020-07-19 10:39:02'),(4157,98,NULL,'172.19.0.2','2020-07-19 11:13:21','2020-07-19 11:13:21','2020-07-19 11:13:21'),(4158,98,NULL,'172.19.0.2','2020-07-19 11:13:23','2020-07-19 11:13:23','2020-07-19 11:13:23'),(4159,99,NULL,'172.19.0.2','2020-07-19 11:13:30','2020-07-19 11:13:30','2020-07-19 11:13:30'),(4160,99,NULL,'172.19.0.2','2020-07-19 11:13:34','2020-07-19 11:13:34','2020-07-19 11:13:34'),(4161,100,NULL,'172.19.0.2','2020-07-19 11:13:45','2020-07-19 11:13:45','2020-07-19 11:13:45'),(4162,100,NULL,'172.19.0.2','2020-07-19 11:13:46','2020-07-19 11:13:47','2020-07-19 11:13:47'),(4163,104,NULL,'172.19.0.2','2020-07-19 11:13:58','2020-07-19 11:13:58','2020-07-19 11:13:58'),(4164,106,NULL,'172.19.0.2','2020-07-19 11:14:05','2020-07-19 11:14:05','2020-07-19 11:14:05'),(4165,107,NULL,'172.19.0.2','2020-07-19 11:14:13','2020-07-19 11:14:13','2020-07-19 11:14:13'),(4166,109,NULL,'172.19.0.2','2020-07-19 11:14:20','2020-07-19 11:14:20','2020-07-19 11:14:20'),(4167,110,NULL,'172.19.0.2','2020-07-19 11:14:28','2020-07-19 11:14:28','2020-07-19 11:14:28'),(4168,111,NULL,'172.19.0.2','2020-07-19 11:14:34','2020-07-19 11:14:34','2020-07-19 11:14:34'),(4169,112,NULL,'172.19.0.2','2020-07-19 11:14:43','2020-07-19 11:14:43','2020-07-19 11:14:43'),(4170,114,NULL,'172.19.0.2','2020-07-19 11:14:49','2020-07-19 11:14:49','2020-07-19 11:14:49'),(4171,115,NULL,'172.19.0.2','2020-07-19 11:14:56','2020-07-19 11:14:56','2020-07-19 11:14:56'),(4172,116,NULL,'172.19.0.2','2020-07-19 11:15:07','2020-07-19 11:15:07','2020-07-19 11:15:07'),(4173,119,NULL,'172.19.0.2','2020-07-19 11:15:17','2020-07-19 11:15:17','2020-07-19 11:15:17'),(4174,120,NULL,'172.19.0.2','2020-07-19 11:15:25','2020-07-19 11:15:25','2020-07-19 11:15:25'),(4175,121,NULL,'172.19.0.2','2020-07-19 11:15:33','2020-07-19 11:15:33','2020-07-19 11:15:33'),(4176,123,NULL,'172.19.0.2','2020-07-19 11:15:44','2020-07-19 11:15:44','2020-07-19 11:15:44'),(4177,123,NULL,'172.19.0.2','2020-07-19 11:15:50','2020-07-19 11:15:50','2020-07-19 11:15:50'),(4178,124,NULL,'172.19.0.2','2020-07-19 11:16:05','2020-07-19 11:16:05','2020-07-19 11:16:05'),(4179,1,NULL,'172.19.0.2','2020-07-19 11:59:28','2020-07-19 11:59:28','2020-07-19 11:59:28'),(4180,50,NULL,'172.19.0.2','2020-07-19 12:35:16','2020-07-19 12:35:17','2020-07-19 12:35:17'),(4181,132,NULL,'172.19.0.2','2020-07-19 12:44:50','2020-07-19 12:44:50','2020-07-19 12:44:50'),(4182,132,NULL,'172.19.0.2','2020-07-19 12:50:29','2020-07-19 12:50:29','2020-07-19 12:50:29'),(4183,42,NULL,'172.19.0.2','2020-07-19 16:07:18','2020-07-19 16:07:18','2020-07-19 16:07:18'),(4184,14,NULL,'172.19.0.2','2020-07-19 16:45:24','2020-07-19 16:45:24','2020-07-19 16:45:24'),(4185,42,NULL,'172.19.0.2','2020-07-19 19:01:55','2020-07-19 19:01:55','2020-07-19 19:01:55'),(4186,107,NULL,'172.19.0.2','2020-07-19 19:05:21','2020-07-19 19:05:21','2020-07-19 19:05:21'),(4187,100,NULL,'172.19.0.2','2020-07-19 19:06:45','2020-07-19 19:06:45','2020-07-19 19:06:45'),(4188,14,NULL,'172.19.0.2','2020-07-19 19:14:03','2020-07-19 19:14:03','2020-07-19 19:14:03'),(4189,106,NULL,'172.19.0.2','2020-07-19 23:15:04','2020-07-19 23:15:04','2020-07-19 23:15:04'),(4190,99,NULL,'172.19.0.2','2020-07-19 23:15:05','2020-07-19 23:15:05','2020-07-19 23:15:05'),(4191,105,NULL,'172.19.0.2','2020-07-19 23:32:31','2020-07-19 23:32:31','2020-07-19 23:32:31'),(4192,105,NULL,'172.19.0.2','2020-07-20 00:39:11','2020-07-20 00:39:11','2020-07-20 00:39:11'),(4193,50,NULL,'172.19.0.2','2020-07-20 01:52:29','2020-07-20 01:52:29','2020-07-20 01:52:29'),(4194,65,NULL,'172.19.0.2','2020-07-20 04:37:13','2020-07-20 04:37:13','2020-07-20 04:37:13'),(4195,96,NULL,'172.19.0.2','2020-07-20 04:37:41','2020-07-20 04:37:41','2020-07-20 04:37:41'),(4196,14,NULL,'172.19.0.2','2020-07-20 05:19:52','2020-07-20 05:19:52','2020-07-20 05:19:52'),(4197,117,NULL,'172.19.0.2','2020-07-20 06:26:37','2020-07-20 06:26:37','2020-07-20 06:26:37'),(4198,52,NULL,'172.19.0.2','2020-07-20 07:28:47','2020-07-20 07:28:47','2020-07-20 07:28:47'),(4199,52,NULL,'172.19.0.2','2020-07-20 08:35:27','2020-07-20 08:35:27','2020-07-20 08:35:27'),(4200,88,NULL,'172.19.0.2','2020-07-20 08:59:16','2020-07-20 08:59:16','2020-07-20 08:59:16'),(4201,72,NULL,'172.19.0.2','2020-07-20 09:08:58','2020-07-20 09:08:58','2020-07-20 09:08:58'),(4202,105,NULL,'172.19.0.2','2020-07-20 11:35:27','2020-07-20 11:35:27','2020-07-20 11:35:27'),(4203,50,NULL,'172.19.0.2','2020-07-20 12:26:15','2020-07-20 12:26:15','2020-07-20 12:26:15'),(4204,52,NULL,'172.19.0.2','2020-07-20 14:53:17','2020-07-20 14:53:17','2020-07-20 14:53:17'),(4205,14,NULL,'172.19.0.2','2020-07-20 14:53:21','2020-07-20 14:53:21','2020-07-20 14:53:21'),(4206,52,NULL,'172.19.0.2','2020-07-20 14:53:31','2020-07-20 14:53:31','2020-07-20 14:53:31'),(4207,14,NULL,'172.19.0.2','2020-07-20 14:53:38','2020-07-20 14:53:39','2020-07-20 14:53:39'),(4208,132,NULL,'172.19.0.2','2020-07-20 14:53:49','2020-07-20 14:53:49','2020-07-20 14:53:49'),(4209,132,NULL,'172.19.0.2','2020-07-20 14:53:52','2020-07-20 14:53:52','2020-07-20 14:53:52'),(4210,131,NULL,'172.19.0.2','2020-07-20 14:53:55','2020-07-20 14:53:55','2020-07-20 14:53:55'),(4211,131,NULL,'172.19.0.2','2020-07-20 14:54:01','2020-07-20 14:54:01','2020-07-20 14:54:01'),(4212,130,NULL,'172.19.0.2','2020-07-20 14:54:06','2020-07-20 14:54:07','2020-07-20 14:54:07'),(4213,130,NULL,'172.19.0.2','2020-07-20 14:54:14','2020-07-20 14:54:14','2020-07-20 14:54:14'),(4214,129,NULL,'172.19.0.2','2020-07-20 14:54:20','2020-07-20 14:54:20','2020-07-20 14:54:20'),(4215,129,NULL,'172.19.0.2','2020-07-20 14:54:28','2020-07-20 14:54:28','2020-07-20 14:54:28'),(4216,128,NULL,'172.19.0.2','2020-07-20 14:54:33','2020-07-20 14:54:33','2020-07-20 14:54:33'),(4217,128,NULL,'172.19.0.2','2020-07-20 14:54:39','2020-07-20 14:54:39','2020-07-20 14:54:39'),(4218,127,NULL,'172.19.0.2','2020-07-20 14:54:45','2020-07-20 14:54:45','2020-07-20 14:54:45'),(4219,127,NULL,'172.19.0.2','2020-07-20 14:54:51','2020-07-20 14:54:51','2020-07-20 14:54:51'),(4220,126,NULL,'172.19.0.2','2020-07-20 14:54:56','2020-07-20 14:54:56','2020-07-20 14:54:56'),(4221,126,NULL,'172.19.0.2','2020-07-20 14:55:03','2020-07-20 14:55:03','2020-07-20 14:55:03'),(4222,125,NULL,'172.19.0.2','2020-07-20 14:55:09','2020-07-20 14:55:09','2020-07-20 14:55:09'),(4223,125,NULL,'172.19.0.2','2020-07-20 14:55:12','2020-07-20 14:55:12','2020-07-20 14:55:12'),(4224,72,NULL,'172.19.0.2','2020-07-20 14:56:53','2020-07-20 14:56:53','2020-07-20 14:56:53'),(4225,47,NULL,'172.19.0.2','2020-07-20 14:56:55','2020-07-20 14:56:55','2020-07-20 14:56:55'),(4226,101,NULL,'172.19.0.2','2020-07-20 14:56:57','2020-07-20 14:56:57','2020-07-20 14:56:57'),(4227,124,NULL,'172.19.0.2','2020-07-20 14:56:59','2020-07-20 14:56:59','2020-07-20 14:56:59'),(4228,32,NULL,'172.19.0.2','2020-07-20 14:57:01','2020-07-20 14:57:01','2020-07-20 14:57:01'),(4229,96,NULL,'172.19.0.2','2020-07-20 14:57:04','2020-07-20 14:57:04','2020-07-20 14:57:04'),(4230,95,NULL,'172.19.0.2','2020-07-20 14:57:08','2020-07-20 14:57:08','2020-07-20 14:57:08'),(4231,108,NULL,'172.19.0.2','2020-07-20 14:57:12','2020-07-20 14:57:12','2020-07-20 14:57:12'),(4232,93,NULL,'172.19.0.2','2020-07-20 14:57:14','2020-07-20 14:57:14','2020-07-20 14:57:14'),(4233,33,NULL,'172.19.0.2','2020-07-20 14:57:16','2020-07-20 14:57:16','2020-07-20 14:57:16'),(4234,120,NULL,'172.19.0.2','2020-07-20 14:57:37','2020-07-20 14:57:37','2020-07-20 14:57:37'),(4235,41,NULL,'172.19.0.2','2020-07-20 14:57:40','2020-07-20 14:57:40','2020-07-20 14:57:40'),(4236,48,NULL,'172.19.0.2','2020-07-20 14:57:44','2020-07-20 14:57:44','2020-07-20 14:57:44'),(4237,111,NULL,'172.19.0.2','2020-07-20 14:57:49','2020-07-20 14:57:49','2020-07-20 14:57:49'),(4238,43,NULL,'172.19.0.2','2020-07-20 14:57:55','2020-07-20 14:57:55','2020-07-20 14:57:55'),(4239,97,NULL,'172.19.0.2','2020-07-20 14:57:57','2020-07-20 14:57:57','2020-07-20 14:57:57'),(4240,113,NULL,'172.19.0.2','2020-07-20 14:57:59','2020-07-20 14:57:59','2020-07-20 14:57:59'),(4241,110,NULL,'172.19.0.2','2020-07-20 14:58:02','2020-07-20 14:58:02','2020-07-20 14:58:02'),(4242,99,NULL,'172.19.0.2','2020-07-20 14:58:04','2020-07-20 14:58:04','2020-07-20 14:58:04'),(4243,100,NULL,'172.19.0.2','2020-07-20 14:58:08','2020-07-20 14:58:08','2020-07-20 14:58:08'),(4244,107,NULL,'172.19.0.2','2020-07-20 14:58:10','2020-07-20 14:58:10','2020-07-20 14:58:10'),(4245,116,NULL,'172.19.0.2','2020-07-20 14:58:13','2020-07-20 14:58:13','2020-07-20 14:58:13'),(4246,27,NULL,'172.19.0.2','2020-07-20 14:58:15','2020-07-20 14:58:15','2020-07-20 14:58:15'),(4247,46,NULL,'172.19.0.2','2020-07-20 14:58:17','2020-07-20 14:58:17','2020-07-20 14:58:17'),(4248,28,NULL,'172.19.0.2','2020-07-20 14:58:18','2020-07-20 14:58:18','2020-07-20 14:58:18'),(4249,44,NULL,'172.19.0.2','2020-07-20 14:58:20','2020-07-20 14:58:20','2020-07-20 14:58:20'),(4250,49,NULL,'172.19.0.2','2020-07-20 14:58:23','2020-07-20 14:58:23','2020-07-20 14:58:23'),(4251,36,NULL,'172.19.0.2','2020-07-20 14:58:25','2020-07-20 14:58:25','2020-07-20 14:58:25'),(4252,114,NULL,'172.19.0.2','2020-07-20 14:58:27','2020-07-20 14:58:27','2020-07-20 14:58:27'),(4253,106,NULL,'172.19.0.2','2020-07-20 14:58:29','2020-07-20 14:58:29','2020-07-20 14:58:29'),(4254,42,NULL,'172.19.0.2','2020-07-20 14:58:31','2020-07-20 14:58:31','2020-07-20 14:58:31'),(4255,88,NULL,'172.19.0.2','2020-07-20 14:58:33','2020-07-20 14:58:33','2020-07-20 14:58:33'),(4256,15,NULL,'172.19.0.2','2020-07-20 14:58:36','2020-07-20 14:58:36','2020-07-20 14:58:36'),(4257,23,NULL,'172.19.0.2','2020-07-20 14:58:38','2020-07-20 14:58:38','2020-07-20 14:58:38'),(4258,23,NULL,'172.19.0.2','2020-07-20 14:58:40','2020-07-20 14:58:40','2020-07-20 14:58:40'),(4259,33,NULL,'172.19.0.2','2020-07-20 14:58:42','2020-07-20 14:58:42','2020-07-20 14:58:42'),(4260,42,NULL,'172.19.0.2','2020-07-20 14:58:44','2020-07-20 14:58:44','2020-07-20 14:58:44'),(4261,32,NULL,'172.19.0.2','2020-07-20 14:58:46','2020-07-20 14:58:46','2020-07-20 14:58:46'),(4262,43,NULL,'172.19.0.2','2020-07-20 14:58:47','2020-07-20 14:58:47','2020-07-20 14:58:47'),(4263,48,NULL,'172.19.0.2','2020-07-20 14:58:50','2020-07-20 14:58:50','2020-07-20 14:58:50'),(4264,50,NULL,'172.19.0.2','2020-07-20 14:58:51','2020-07-20 14:58:51','2020-07-20 14:58:51'),(4265,50,NULL,'172.19.0.2','2020-07-20 14:58:53','2020-07-20 14:58:53','2020-07-20 14:58:53'),(4266,21,NULL,'172.19.0.2','2020-07-20 14:58:55','2020-07-20 14:58:55','2020-07-20 14:58:55'),(4267,21,NULL,'172.19.0.2','2020-07-20 14:58:57','2020-07-20 14:58:57','2020-07-20 14:58:57'),(4268,31,NULL,'172.19.0.2','2020-07-20 14:58:59','2020-07-20 14:58:59','2020-07-20 14:58:59'),(4269,117,NULL,'172.19.0.2','2020-07-20 14:59:00','2020-07-20 14:59:00','2020-07-20 14:59:00'),(4270,45,NULL,'172.19.0.2','2020-07-20 14:59:02','2020-07-20 14:59:02','2020-07-20 14:59:02'),(4271,35,NULL,'172.19.0.2','2020-07-20 14:59:04','2020-07-20 14:59:04','2020-07-20 14:59:04'),(4272,122,NULL,'172.19.0.2','2020-07-20 14:59:07','2020-07-20 14:59:07','2020-07-20 14:59:07'),(4273,37,NULL,'172.19.0.2','2020-07-20 14:59:08','2020-07-20 14:59:08','2020-07-20 14:59:08'),(4274,119,NULL,'172.19.0.2','2020-07-20 14:59:11','2020-07-20 14:59:11','2020-07-20 14:59:11'),(4275,98,NULL,'172.19.0.2','2020-07-20 14:59:13','2020-07-20 14:59:13','2020-07-20 14:59:13'),(4276,109,NULL,'172.19.0.2','2020-07-20 14:59:15','2020-07-20 14:59:15','2020-07-20 14:59:15'),(4277,89,NULL,'172.19.0.2','2020-07-20 14:59:16','2020-07-20 14:59:16','2020-07-20 14:59:16'),(4278,94,NULL,'172.19.0.2','2020-07-20 14:59:19','2020-07-20 14:59:19','2020-07-20 14:59:19'),(4279,112,NULL,'172.19.0.2','2020-07-20 14:59:20','2020-07-20 14:59:20','2020-07-20 14:59:20'),(4280,121,NULL,'172.19.0.2','2020-07-20 14:59:23','2020-07-20 14:59:23','2020-07-20 14:59:23'),(4281,65,NULL,'172.19.0.2','2020-07-20 14:59:25','2020-07-20 14:59:25','2020-07-20 14:59:25'),(4282,104,NULL,'172.19.0.2','2020-07-20 14:59:26','2020-07-20 14:59:26','2020-07-20 14:59:26'),(4283,123,NULL,'172.19.0.2','2020-07-20 14:59:29','2020-07-20 14:59:29','2020-07-20 14:59:29'),(4284,91,NULL,'172.19.0.2','2020-07-20 14:59:32','2020-07-20 14:59:32','2020-07-20 14:59:32'),(4285,115,NULL,'172.19.0.2','2020-07-20 14:59:35','2020-07-20 14:59:35','2020-07-20 14:59:35'),(4286,31,NULL,'172.19.0.2','2020-07-20 14:59:39','2020-07-20 14:59:39','2020-07-20 14:59:39'),(4287,96,NULL,'172.19.0.2','2020-07-20 14:59:41','2020-07-20 14:59:41','2020-07-20 14:59:41'),(4288,46,NULL,'172.19.0.2','2020-07-20 14:59:42','2020-07-20 14:59:42','2020-07-20 14:59:42'),(4289,35,NULL,'172.19.0.2','2020-07-20 14:59:45','2020-07-20 14:59:45','2020-07-20 14:59:45'),(4290,123,NULL,'172.19.0.2','2020-07-20 14:59:48','2020-07-20 14:59:48','2020-07-20 14:59:48'),(4291,28,NULL,'172.19.0.2','2020-07-20 14:59:51','2020-07-20 14:59:51','2020-07-20 14:59:51'),(4292,124,NULL,'172.19.0.2','2020-07-20 14:59:57','2020-07-20 14:59:57','2020-07-20 14:59:57'),(4293,110,NULL,'172.19.0.2','2020-07-20 15:00:00','2020-07-20 15:00:00','2020-07-20 15:00:00'),(4294,104,NULL,'172.19.0.2','2020-07-20 15:00:05','2020-07-20 15:00:05','2020-07-20 15:00:05'),(4295,90,NULL,'172.19.0.2','2020-07-20 15:00:09','2020-07-20 15:00:09','2020-07-20 15:00:09'),(4296,90,NULL,'172.19.0.2','2020-07-20 15:00:12','2020-07-20 15:00:12','2020-07-20 15:00:12'),(4297,49,NULL,'172.19.0.2','2020-07-20 15:00:14','2020-07-20 15:00:14','2020-07-20 15:00:14'),(4298,47,NULL,'172.19.0.2','2020-07-20 15:00:16','2020-07-20 15:00:16','2020-07-20 15:00:16'),(4299,45,NULL,'172.19.0.2','2020-07-20 15:00:18','2020-07-20 15:00:18','2020-07-20 15:00:18'),(4300,41,NULL,'172.19.0.2','2020-07-20 15:00:20','2020-07-20 15:00:20','2020-07-20 15:00:20'),(4301,44,NULL,'172.19.0.2','2020-07-20 15:00:23','2020-07-20 15:00:23','2020-07-20 15:00:23'),(4302,37,NULL,'172.19.0.2','2020-07-20 15:00:26','2020-07-20 15:00:26','2020-07-20 15:00:26'),(4303,36,NULL,'172.19.0.2','2020-07-20 15:00:29','2020-07-20 15:00:29','2020-07-20 15:00:29'),(4304,93,NULL,'172.19.0.2','2020-07-20 15:00:34','2020-07-20 15:00:34','2020-07-20 15:00:34'),(4305,91,NULL,'172.19.0.2','2020-07-20 15:00:36','2020-07-20 15:00:36','2020-07-20 15:00:36'),(4306,88,NULL,'172.19.0.2','2020-07-20 15:00:38','2020-07-20 15:00:38','2020-07-20 15:00:38'),(4307,72,NULL,'172.19.0.2','2020-07-20 15:00:39','2020-07-20 15:00:39','2020-07-20 15:00:39'),(4308,65,NULL,'172.19.0.2','2020-07-20 15:00:41','2020-07-20 15:00:41','2020-07-20 15:00:41'),(4309,52,NULL,'172.19.0.2','2020-07-20 16:19:44','2020-07-20 16:19:44','2020-07-20 16:19:44'),(4310,48,NULL,'172.19.0.2','2020-07-20 16:53:04','2020-07-20 16:53:04','2020-07-20 16:53:04'),(4311,108,NULL,'172.19.0.2','2020-07-20 19:56:57','2020-07-20 19:56:57','2020-07-20 19:56:57'),(4312,104,NULL,'172.19.0.2','2020-07-20 20:28:11','2020-07-20 20:28:11','2020-07-20 20:28:11'),(4313,132,NULL,'172.19.0.2','2020-07-20 21:32:56','2020-07-20 21:32:56','2020-07-20 21:32:56'),(4314,132,NULL,'172.19.0.2','2020-07-20 21:52:42','2020-07-20 21:52:42','2020-07-20 21:52:42'),(4315,46,NULL,'172.19.0.2','2020-07-20 22:44:56','2020-07-20 22:44:56','2020-07-20 22:44:56'),(4316,132,NULL,'172.19.0.2','2020-07-21 01:58:42','2020-07-21 01:58:42','2020-07-21 01:58:42'),(4317,90,NULL,'172.19.0.2','2020-07-21 02:32:23','2020-07-21 02:32:23','2020-07-21 02:32:23'),(4318,109,NULL,'172.19.0.2','2020-07-21 04:07:41','2020-07-21 04:07:41','2020-07-21 04:07:41'),(4319,124,NULL,'172.19.0.2','2020-07-21 08:14:21','2020-07-21 08:14:21','2020-07-21 08:14:21'),(4320,105,NULL,'172.19.0.2','2020-07-21 08:47:41','2020-07-21 08:47:41','2020-07-21 08:47:41'),(4321,131,NULL,'172.19.0.2','2020-07-21 10:17:41','2020-07-21 10:17:41','2020-07-21 10:17:41'),(4322,90,NULL,'172.19.0.2','2020-07-21 10:58:59','2020-07-21 10:58:59','2020-07-21 10:58:59'),(4323,94,NULL,'172.19.0.2','2020-07-21 11:09:56','2020-07-21 11:09:56','2020-07-21 11:09:56'),(4324,98,NULL,'172.19.0.2','2020-07-21 11:16:20','2020-07-21 11:16:20','2020-07-21 11:16:20'),(4325,23,NULL,'172.19.0.2','2020-07-21 12:42:00','2020-07-21 12:42:00','2020-07-21 12:42:00'),(4326,124,NULL,'172.19.0.2','2020-07-21 13:00:41','2020-07-21 13:00:41','2020-07-21 13:00:41'),(4327,90,NULL,'172.19.0.2','2020-07-21 13:26:25','2020-07-21 13:26:25','2020-07-21 13:26:25'),(4328,90,NULL,'172.19.0.2','2020-07-21 13:41:04','2020-07-21 13:41:04','2020-07-21 13:41:04'),(4329,33,NULL,'172.19.0.2','2020-07-21 14:47:41','2020-07-21 14:47:41','2020-07-21 14:47:41'),(4330,97,NULL,'172.19.0.2','2020-07-21 15:48:01','2020-07-21 15:48:01','2020-07-21 15:48:01'),(4331,50,NULL,'172.19.0.2','2020-07-21 15:53:58','2020-07-21 15:53:58','2020-07-21 15:53:58'),(4332,130,NULL,'172.19.0.2','2020-07-21 17:47:41','2020-07-21 17:47:41','2020-07-21 17:47:41'),(4333,129,NULL,'172.19.0.2','2020-07-21 18:21:01','2020-07-21 18:21:01','2020-07-21 18:21:01'),(4334,115,NULL,'172.19.0.2','2020-07-21 18:54:21','2020-07-21 18:54:21','2020-07-21 18:54:21'),(4335,43,NULL,'172.19.0.2','2020-07-21 19:39:21','2020-07-21 19:39:21','2020-07-21 19:39:21'),(4336,23,NULL,'172.19.0.2','2020-07-21 20:01:51','2020-07-21 20:01:51','2020-07-21 20:01:51'),(4337,42,NULL,'172.19.0.2','2020-07-21 20:24:21','2020-07-21 20:24:21','2020-07-21 20:24:21'),(4338,14,NULL,'172.19.0.2','2020-07-21 22:13:22','2020-07-21 22:13:22','2020-07-21 22:13:22'),(4339,42,NULL,'172.19.0.2','2020-07-21 22:26:51','2020-07-21 22:26:51','2020-07-21 22:26:51'),(4340,47,NULL,'172.19.0.2','2020-07-21 23:38:51','2020-07-21 23:38:51','2020-07-21 23:38:51'),(4341,21,NULL,'172.19.0.2','2020-07-22 02:18:21','2020-07-22 02:18:21','2020-07-22 02:18:21'),(4342,47,NULL,'172.19.0.2','2020-07-22 02:42:24','2020-07-22 02:42:24','2020-07-22 02:42:24'),(4343,120,NULL,'172.19.0.2','2020-07-22 04:35:01','2020-07-22 04:35:01','2020-07-22 04:35:01'),(4344,120,NULL,'172.19.0.2','2020-07-22 05:53:48','2020-07-22 05:53:48','2020-07-22 05:53:48'),(4345,46,NULL,'172.19.0.2','2020-07-22 06:15:49','2020-07-22 06:15:49','2020-07-22 06:15:49'),(4346,127,NULL,'172.19.0.2','2020-07-22 06:33:12','2020-07-22 06:33:12','2020-07-22 06:33:12'),(4347,32,NULL,'172.19.0.2','2020-07-22 10:33:12','2020-07-22 10:33:12','2020-07-22 10:33:12'),(4348,31,NULL,'172.19.0.2','2020-07-22 13:33:12','2020-07-22 13:33:12','2020-07-22 13:33:12'),(4349,88,NULL,'172.19.0.2','2020-07-22 13:55:17','2020-07-22 13:55:17','2020-07-22 13:55:17'),(4350,105,NULL,'172.19.0.2','2020-07-22 14:09:12','2020-07-22 14:09:12','2020-07-22 14:09:12'),(4351,117,NULL,'172.19.0.2','2020-07-22 14:45:12','2020-07-22 14:45:12','2020-07-22 14:45:12'),(4352,14,NULL,'172.19.0.2','2020-07-22 19:42:46','2020-07-22 19:42:46','2020-07-22 19:42:46'),(4353,15,NULL,'172.19.0.2','2020-07-22 19:42:54','2020-07-22 19:42:54','2020-07-22 19:42:54'),(4354,52,NULL,'172.19.0.2','2020-07-22 19:43:01','2020-07-22 19:43:01','2020-07-22 19:43:01'),(4355,89,NULL,'172.19.0.2','2020-07-22 19:43:09','2020-07-22 19:43:09','2020-07-22 19:43:09'),(4356,93,NULL,'172.19.0.2','2020-07-22 19:43:19','2020-07-22 19:43:19','2020-07-22 19:43:19'),(4357,97,NULL,'172.19.0.2','2020-07-22 19:43:27','2020-07-22 19:43:27','2020-07-22 19:43:27'),(4358,101,NULL,'172.19.0.2','2020-07-22 19:43:40','2020-07-22 19:43:40','2020-07-22 19:43:40'),(4359,114,NULL,'172.19.0.2','2020-07-22 19:43:49','2020-07-22 19:43:49','2020-07-22 19:43:49'),(4360,115,NULL,'172.19.0.2','2020-07-22 19:43:56','2020-07-22 19:43:56','2020-07-22 19:43:56'),(4361,115,NULL,'172.19.0.2','2020-07-22 19:44:03','2020-07-22 19:44:03','2020-07-22 19:44:03'),(4362,122,NULL,'172.19.0.2','2020-07-22 19:44:20','2020-07-22 19:44:20','2020-07-22 19:44:20'),(4363,122,NULL,'172.19.0.2','2020-07-22 19:44:23','2020-07-22 19:44:23','2020-07-22 19:44:23'),(4364,124,NULL,'172.19.0.2','2020-07-22 19:44:33','2020-07-22 19:44:33','2020-07-22 19:44:33'),(4365,124,NULL,'172.19.0.2','2020-07-22 19:44:36','2020-07-22 19:44:36','2020-07-22 19:44:36'),(4366,132,NULL,'172.19.0.2','2020-07-22 19:49:49','2020-07-22 19:49:49','2020-07-22 19:49:49'),(4367,42,NULL,'172.19.0.2','2020-07-22 20:00:49','2020-07-22 20:00:49','2020-07-22 20:00:49'),(4368,49,NULL,'172.19.0.2','2020-07-22 20:45:12','2020-07-22 20:45:12','2020-07-22 20:45:12'),(4369,99,NULL,'172.19.0.2','2020-07-22 21:03:40','2020-07-22 21:03:40','2020-07-22 21:03:40'),(4370,125,NULL,'172.19.0.2','2020-07-22 21:14:31','2020-07-22 21:14:31','2020-07-22 21:14:31'),(4371,125,NULL,'172.19.0.2','2020-07-22 21:14:33','2020-07-22 21:14:33','2020-07-22 21:14:33'),(4372,126,NULL,'172.19.0.2','2020-07-22 21:14:45','2020-07-22 21:14:45','2020-07-22 21:14:45'),(4373,126,NULL,'172.19.0.2','2020-07-22 21:14:47','2020-07-22 21:14:47','2020-07-22 21:14:47'),(4374,127,NULL,'172.19.0.2','2020-07-22 21:14:58','2020-07-22 21:14:58','2020-07-22 21:14:58'),(4375,128,NULL,'172.19.0.2','2020-07-22 21:15:08','2020-07-22 21:15:08','2020-07-22 21:15:08'),(4376,129,NULL,'172.19.0.2','2020-07-22 21:15:28','2020-07-22 21:15:28','2020-07-22 21:15:28'),(4377,130,NULL,'172.19.0.2','2020-07-22 21:15:42','2020-07-22 21:15:42','2020-07-22 21:15:42'),(4378,131,NULL,'172.19.0.2','2020-07-22 21:15:49','2020-07-22 21:15:49','2020-07-22 21:15:49'),(4379,132,NULL,'172.19.0.2','2020-07-22 21:16:00','2020-07-22 21:16:00','2020-07-22 21:16:00'),(4380,21,NULL,'172.19.0.2','2020-07-22 21:16:49','2020-07-22 21:16:49','2020-07-22 21:16:49'),(4381,23,NULL,'172.19.0.2','2020-07-22 21:17:00','2020-07-22 21:17:00','2020-07-22 21:17:00'),(4382,27,NULL,'172.19.0.2','2020-07-22 21:17:10','2020-07-22 21:17:10','2020-07-22 21:17:10'),(4383,27,NULL,'172.19.0.2','2020-07-22 21:17:16','2020-07-22 21:17:17','2020-07-22 21:17:17'),(4384,28,NULL,'172.19.0.2','2020-07-22 21:17:34','2020-07-22 21:17:34','2020-07-22 21:17:34'),(4385,31,NULL,'172.19.0.2','2020-07-22 21:17:41','2020-07-22 21:17:41','2020-07-22 21:17:41'),(4386,32,NULL,'172.19.0.2','2020-07-22 21:17:49','2020-07-22 21:17:49','2020-07-22 21:17:49'),(4387,32,NULL,'172.19.0.2','2020-07-22 21:17:54','2020-07-22 21:17:54','2020-07-22 21:17:54'),(4388,33,NULL,'172.19.0.2','2020-07-22 21:18:03','2020-07-22 21:18:03','2020-07-22 21:18:03'),(4389,35,NULL,'172.19.0.2','2020-07-22 21:18:11','2020-07-22 21:18:11','2020-07-22 21:18:11'),(4390,119,NULL,'172.19.0.2','2020-07-22 21:21:12','2020-07-22 21:21:12','2020-07-22 21:21:12'),(4391,128,NULL,'172.19.0.2','2020-07-22 22:33:12','2020-07-22 22:33:12','2020-07-22 22:33:12'),(4392,128,NULL,'172.19.0.2','2020-07-22 23:48:48','2020-07-22 23:48:48','2020-07-22 23:48:48'),(4393,105,NULL,'172.19.0.2','2020-07-22 23:56:27','2020-07-22 23:56:27','2020-07-22 23:56:27'),(4394,96,NULL,'172.19.0.2','2020-07-23 00:24:48','2020-07-23 00:24:48','2020-07-23 00:24:48'),(4395,15,NULL,'172.19.0.2','2020-07-23 01:36:48','2020-07-23 01:36:48','2020-07-23 01:36:48'),(4396,36,NULL,'172.19.0.2','2020-07-23 02:36:50','2020-07-23 02:36:50','2020-07-23 02:36:50'),(4397,37,NULL,'172.19.0.2','2020-07-23 02:37:07','2020-07-23 02:37:08','2020-07-23 02:37:08'),(4398,41,NULL,'172.19.0.2','2020-07-23 02:37:18','2020-07-23 02:37:18','2020-07-23 02:37:18'),(4399,41,NULL,'172.19.0.2','2020-07-23 02:37:20','2020-07-23 02:37:21','2020-07-23 02:37:21'),(4400,42,NULL,'172.19.0.2','2020-07-23 02:37:33','2020-07-23 02:37:33','2020-07-23 02:37:33'),(4401,43,NULL,'172.19.0.2','2020-07-23 02:38:00','2020-07-23 02:38:00','2020-07-23 02:38:00'),(4402,44,NULL,'172.19.0.2','2020-07-23 02:38:21','2020-07-23 02:38:22','2020-07-23 02:38:22'),(4403,44,NULL,'172.19.0.2','2020-07-23 02:38:36','2020-07-23 02:38:36','2020-07-23 02:38:36'),(4404,45,NULL,'172.19.0.2','2020-07-23 02:38:45','2020-07-23 02:38:45','2020-07-23 02:38:45'),(4405,45,NULL,'172.19.0.2','2020-07-23 02:38:57','2020-07-23 02:38:57','2020-07-23 02:38:57'),(4406,46,NULL,'172.19.0.2','2020-07-23 02:39:14','2020-07-23 02:39:14','2020-07-23 02:39:14'),(4407,47,NULL,'172.19.0.2','2020-07-23 02:39:30','2020-07-23 02:39:30','2020-07-23 02:39:30'),(4408,48,NULL,'172.19.0.2','2020-07-23 02:39:43','2020-07-23 02:39:43','2020-07-23 02:39:43'),(4409,48,NULL,'172.19.0.2','2020-07-23 02:39:48','2020-07-23 02:39:48','2020-07-23 02:39:48'),(4410,49,NULL,'172.19.0.2','2020-07-23 02:40:05','2020-07-23 02:40:05','2020-07-23 02:40:05'),(4411,50,NULL,'172.19.0.2','2020-07-23 02:40:19','2020-07-23 02:40:19','2020-07-23 02:40:19'),(4412,65,NULL,'172.19.0.2','2020-07-23 02:40:33','2020-07-23 02:40:33','2020-07-23 02:40:33'),(4413,72,NULL,'172.19.0.2','2020-07-23 02:40:46','2020-07-23 02:40:46','2020-07-23 02:40:46'),(4414,88,NULL,'172.19.0.2','2020-07-23 02:40:59','2020-07-23 02:40:59','2020-07-23 02:40:59'),(4415,90,NULL,'172.19.0.2','2020-07-23 02:41:08','2020-07-23 02:41:08','2020-07-23 02:41:08'),(4416,91,NULL,'172.19.0.2','2020-07-23 02:41:16','2020-07-23 02:41:16','2020-07-23 02:41:16'),(4417,94,NULL,'172.19.0.2','2020-07-23 02:41:27','2020-07-23 02:41:27','2020-07-23 02:41:27'),(4418,94,NULL,'172.19.0.2','2020-07-23 02:41:30','2020-07-23 02:41:30','2020-07-23 02:41:30'),(4419,95,NULL,'172.19.0.2','2020-07-23 02:41:40','2020-07-23 02:41:40','2020-07-23 02:41:40'),(4420,96,NULL,'172.19.0.2','2020-07-23 02:41:47','2020-07-23 02:41:47','2020-07-23 02:41:47'),(4421,98,NULL,'172.19.0.2','2020-07-23 02:55:36','2020-07-23 02:55:36','2020-07-23 02:55:36'),(4422,99,NULL,'172.19.0.2','2020-07-23 02:55:44','2020-07-23 02:55:44','2020-07-23 02:55:44'),(4423,99,NULL,'172.19.0.2','2020-07-23 02:55:48','2020-07-23 02:55:48','2020-07-23 02:55:48'),(4424,100,NULL,'172.19.0.2','2020-07-23 02:55:51','2020-07-23 02:55:51','2020-07-23 02:55:51'),(4425,104,NULL,'172.19.0.2','2020-07-23 02:55:57','2020-07-23 02:55:57','2020-07-23 02:55:57'),(4426,106,NULL,'172.19.0.2','2020-07-23 02:56:07','2020-07-23 02:56:07','2020-07-23 02:56:07'),(4427,106,NULL,'172.19.0.2','2020-07-23 02:56:10','2020-07-23 02:56:10','2020-07-23 02:56:10'),(4428,107,NULL,'172.19.0.2','2020-07-23 02:56:19','2020-07-23 02:56:19','2020-07-23 02:56:19'),(4429,108,NULL,'172.19.0.2','2020-07-23 02:56:27','2020-07-23 02:56:27','2020-07-23 02:56:27'),(4430,109,NULL,'172.19.0.2','2020-07-23 02:56:35','2020-07-23 02:56:35','2020-07-23 02:56:35'),(4431,110,NULL,'172.19.0.2','2020-07-23 02:56:44','2020-07-23 02:56:44','2020-07-23 02:56:44'),(4432,110,NULL,'172.19.0.2','2020-07-23 02:56:47','2020-07-23 02:56:47','2020-07-23 02:56:47'),(4433,111,NULL,'172.19.0.2','2020-07-23 02:56:53','2020-07-23 02:56:54','2020-07-23 02:56:54'),(4434,111,NULL,'172.19.0.2','2020-07-23 02:57:02','2020-07-23 02:57:02','2020-07-23 02:57:02'),(4435,112,NULL,'172.19.0.2','2020-07-23 02:57:13','2020-07-23 02:57:13','2020-07-23 02:57:13'),(4436,113,NULL,'172.19.0.2','2020-07-23 02:57:20','2020-07-23 02:57:20','2020-07-23 02:57:20'),(4437,116,NULL,'172.19.0.2','2020-07-23 02:57:29','2020-07-23 02:57:29','2020-07-23 02:57:29'),(4438,117,NULL,'172.19.0.2','2020-07-23 02:57:37','2020-07-23 02:57:37','2020-07-23 02:57:37'),(4439,117,NULL,'172.19.0.2','2020-07-23 02:57:38','2020-07-23 02:57:38','2020-07-23 02:57:38'),(4440,119,NULL,'172.19.0.2','2020-07-23 02:57:54','2020-07-23 02:57:54','2020-07-23 02:57:54'),(4441,120,NULL,'172.19.0.2','2020-07-23 02:58:01','2020-07-23 02:58:01','2020-07-23 02:58:01'),(4442,121,NULL,'172.19.0.2','2020-07-23 02:58:12','2020-07-23 02:58:12','2020-07-23 02:58:12'),(4443,123,NULL,'172.19.0.2','2020-07-23 02:58:24','2020-07-23 02:58:24','2020-07-23 02:58:24'),(4444,123,NULL,'172.19.0.2','2020-07-23 02:58:37','2020-07-23 02:58:37','2020-07-23 02:58:37'),(4445,97,NULL,'172.19.0.2','2020-07-23 04:06:50','2020-07-23 04:06:50','2020-07-23 04:06:50'),(4446,113,NULL,'172.19.0.2','2020-07-23 04:47:54','2020-07-23 04:47:54','2020-07-23 04:47:54'),(4447,113,NULL,'172.19.0.2','2020-07-23 04:48:55','2020-07-23 04:48:55','2020-07-23 04:48:55'),(4448,50,NULL,'172.19.0.2','2020-07-23 05:54:38','2020-07-23 05:54:38','2020-07-23 05:54:38'),(4449,105,NULL,'172.19.0.2','2020-07-23 11:14:31','2020-07-23 11:14:31','2020-07-23 11:14:31'),(4450,124,NULL,'172.19.0.2','2020-07-23 13:39:52','2020-07-23 13:39:52','2020-07-23 13:39:52'),(4451,126,NULL,'172.19.0.2','2020-07-23 14:00:54','2020-07-23 14:00:54','2020-07-23 14:00:54'),(4452,126,NULL,'172.19.0.2','2020-07-23 15:07:34','2020-07-23 15:07:34','2020-07-23 15:07:34'),(4453,45,NULL,'172.19.0.2','2020-07-23 15:07:34','2020-07-23 15:07:34','2020-07-23 15:07:34'),(4454,88,NULL,'172.19.0.2','2020-07-23 15:14:14','2020-07-23 15:14:14','2020-07-23 15:14:14'),(4455,14,NULL,'172.19.0.2','2020-07-23 16:19:55','2020-07-23 16:19:55','2020-07-23 16:19:55'),(4456,88,NULL,'172.19.0.2','2020-07-23 16:34:30','2020-07-23 16:34:30','2020-07-23 16:34:30'),(4457,105,NULL,'172.19.0.2','2020-07-23 16:41:51','2020-07-23 16:41:51','2020-07-23 16:41:51'),(4458,88,NULL,'172.19.0.2','2020-07-23 16:54:22','2020-07-23 16:54:22','2020-07-23 16:54:22'),(4459,65,NULL,'172.19.0.2','2020-07-23 18:40:46','2020-07-23 18:40:46','2020-07-23 18:40:46'),(4460,132,NULL,'172.19.0.2','2020-07-23 20:29:35','2020-07-23 20:29:35','2020-07-23 20:29:35'),(4461,88,NULL,'172.19.0.2','2020-07-23 20:34:58','2020-07-23 20:34:58','2020-07-23 20:34:58'),(4462,97,NULL,'172.19.0.2','2020-07-23 20:41:37','2020-07-23 20:41:37','2020-07-23 20:41:37'),(4463,50,NULL,'172.19.0.2','2020-07-23 21:15:47','2020-07-23 21:15:47','2020-07-23 21:15:47'),(4464,95,NULL,'172.19.0.2','2020-07-23 22:11:37','2020-07-23 22:11:37','2020-07-23 22:11:37'),(4465,14,NULL,'172.19.0.2','2020-07-23 23:24:21','2020-07-23 23:24:21','2020-07-23 23:24:21'),(4466,14,NULL,'172.19.0.2','2020-07-23 23:25:19','2020-07-23 23:25:19','2020-07-23 23:25:19'),(4467,36,NULL,'172.19.0.2','2020-07-23 23:25:48','2020-07-23 23:25:48','2020-07-23 23:25:48'),(4468,41,NULL,'172.19.0.2','2020-07-23 23:26:13','2020-07-23 23:26:13','2020-07-23 23:26:13'),(4469,47,NULL,'172.19.0.2','2020-07-23 23:26:38','2020-07-23 23:26:38','2020-07-23 23:26:38'),(4470,50,NULL,'172.19.0.2','2020-07-23 23:27:02','2020-07-23 23:27:02','2020-07-23 23:27:02'),(4471,52,NULL,'172.19.0.2','2020-07-24 00:40:00','2020-07-24 00:40:00','2020-07-24 00:40:00'),(4472,90,NULL,'172.19.0.2','2020-07-24 00:40:26','2020-07-24 00:40:26','2020-07-24 00:40:26'),(4473,90,NULL,'172.19.0.2','2020-07-24 00:41:25','2020-07-24 00:41:25','2020-07-24 00:41:25'),(4474,97,NULL,'172.19.0.2','2020-07-24 00:41:43','2020-07-24 00:41:43','2020-07-24 00:41:43'),(4475,97,NULL,'172.19.0.2','2020-07-24 00:41:45','2020-07-24 00:41:45','2020-07-24 00:41:45'),(4476,108,NULL,'172.19.0.2','2020-07-24 00:42:30','2020-07-24 00:42:30','2020-07-24 00:42:30'),(4477,113,NULL,'172.19.0.2','2020-07-24 00:42:55','2020-07-24 00:42:55','2020-07-24 00:42:55'),(4478,123,NULL,'172.19.0.2','2020-07-24 00:43:25','2020-07-24 00:43:25','2020-07-24 00:43:25'),(4479,125,NULL,'172.19.0.2','2020-07-24 00:43:52','2020-07-24 00:43:52','2020-07-24 00:43:52'),(4480,126,NULL,'172.19.0.2','2020-07-24 00:44:17','2020-07-24 00:44:17','2020-07-24 00:44:17'),(4481,127,NULL,'172.19.0.2','2020-07-24 00:44:39','2020-07-24 00:44:39','2020-07-24 00:44:39'),(4482,128,NULL,'172.19.0.2','2020-07-24 00:54:31','2020-07-24 00:54:31','2020-07-24 00:54:31'),(4483,129,NULL,'172.19.0.2','2020-07-24 00:54:51','2020-07-24 00:54:51','2020-07-24 00:54:51'),(4484,129,NULL,'172.19.0.2','2020-07-24 00:55:02','2020-07-24 00:55:02','2020-07-24 00:55:02'),(4485,130,NULL,'172.19.0.2','2020-07-24 00:55:20','2020-07-24 00:55:20','2020-07-24 00:55:20'),(4486,131,NULL,'172.19.0.2','2020-07-24 00:55:39','2020-07-24 00:55:39','2020-07-24 00:55:39'),(4487,132,NULL,'172.19.0.2','2020-07-24 00:56:00','2020-07-24 00:56:00','2020-07-24 00:56:00'),(4488,15,NULL,'172.19.0.2','2020-07-24 00:57:31','2020-07-24 00:57:31','2020-07-24 00:57:31'),(4489,124,NULL,'172.19.0.2','2020-07-24 01:04:16','2020-07-24 01:04:16','2020-07-24 01:04:16'),(4490,97,NULL,'172.19.0.2','2020-07-24 01:11:37','2020-07-24 01:11:37','2020-07-24 01:11:37'),(4491,21,NULL,'172.19.0.2','2020-07-24 01:11:46','2020-07-24 01:11:46','2020-07-24 01:11:46'),(4492,23,NULL,'172.19.0.2','2020-07-24 01:12:16','2020-07-24 01:12:16','2020-07-24 01:12:16'),(4493,28,NULL,'172.19.0.2','2020-07-24 01:12:33','2020-07-24 01:12:33','2020-07-24 01:12:33'),(4494,31,NULL,'172.19.0.2','2020-07-24 01:12:51','2020-07-24 01:12:51','2020-07-24 01:12:51'),(4495,32,NULL,'172.19.0.2','2020-07-24 01:13:25','2020-07-24 01:13:25','2020-07-24 01:13:25'),(4496,33,NULL,'172.19.0.2','2020-07-24 01:13:33','2020-07-24 01:13:33','2020-07-24 01:13:33'),(4497,35,NULL,'172.19.0.2','2020-07-24 01:13:51','2020-07-24 01:13:51','2020-07-24 01:13:51'),(4498,37,NULL,'172.19.0.2','2020-07-24 01:14:09','2020-07-24 01:14:09','2020-07-24 01:14:09'),(4499,42,NULL,'172.19.0.2','2020-07-24 01:14:28','2020-07-24 01:14:28','2020-07-24 01:14:28'),(4500,43,NULL,'172.19.0.2','2020-07-24 01:14:44','2020-07-24 01:14:44','2020-07-24 01:14:44'),(4501,43,NULL,'172.19.0.2','2020-07-24 01:23:10','2020-07-24 01:23:10','2020-07-24 01:23:10'),(4502,44,NULL,'172.19.0.2','2020-07-24 01:23:35','2020-07-24 01:23:35','2020-07-24 01:23:35'),(4503,45,NULL,'172.19.0.2','2020-07-24 01:24:01','2020-07-24 01:24:01','2020-07-24 01:24:01'),(4504,46,NULL,'172.19.0.2','2020-07-24 01:24:31','2020-07-24 01:24:31','2020-07-24 01:24:31'),(4505,48,NULL,'172.19.0.2','2020-07-24 01:24:58','2020-07-24 01:24:58','2020-07-24 01:24:58'),(4506,49,NULL,'172.19.0.2','2020-07-24 01:25:21','2020-07-24 01:25:21','2020-07-24 01:25:21'),(4507,65,NULL,'172.19.0.2','2020-07-24 01:25:42','2020-07-24 01:25:42','2020-07-24 01:25:42'),(4508,72,NULL,'172.19.0.2','2020-07-24 01:26:14','2020-07-24 01:26:14','2020-07-24 01:26:14'),(4509,88,NULL,'172.19.0.2','2020-07-24 01:26:36','2020-07-24 01:26:36','2020-07-24 01:26:36'),(4510,89,NULL,'172.19.0.2','2020-07-24 01:27:03','2020-07-24 01:27:03','2020-07-24 01:27:03'),(4511,91,NULL,'172.19.0.2','2020-07-24 01:27:25','2020-07-24 01:27:25','2020-07-24 01:27:25'),(4512,94,NULL,'172.19.0.2','2020-07-24 01:27:44','2020-07-24 01:27:44','2020-07-24 01:27:44'),(4513,96,NULL,'172.19.0.2','2020-07-24 01:28:12','2020-07-24 01:28:12','2020-07-24 01:28:12'),(4514,98,NULL,'172.19.0.2','2020-07-24 01:28:34','2020-07-24 01:28:34','2020-07-24 01:28:34'),(4515,99,NULL,'172.19.0.2','2020-07-24 01:29:06','2020-07-24 01:29:06','2020-07-24 01:29:06'),(4516,104,NULL,'172.19.0.2','2020-07-24 01:29:27','2020-07-24 01:29:27','2020-07-24 01:29:27'),(4517,106,NULL,'172.19.0.2','2020-07-24 01:29:49','2020-07-24 01:29:49','2020-07-24 01:29:49'),(4518,107,NULL,'172.19.0.2','2020-07-24 01:37:02','2020-07-24 01:37:02','2020-07-24 01:37:02'),(4519,107,NULL,'172.19.0.2','2020-07-24 01:37:38','2020-07-24 01:37:38','2020-07-24 01:37:38'),(4520,109,NULL,'172.19.0.2','2020-07-24 01:38:48','2020-07-24 01:38:48','2020-07-24 01:38:48'),(4521,110,NULL,'172.19.0.2','2020-07-24 01:39:43','2020-07-24 01:39:43','2020-07-24 01:39:43'),(4522,110,NULL,'172.19.0.2','2020-07-24 01:39:53','2020-07-24 01:39:53','2020-07-24 01:39:53'),(4523,111,NULL,'172.19.0.2','2020-07-24 01:40:53','2020-07-24 01:40:53','2020-07-24 01:40:53'),(4524,111,NULL,'172.19.0.2','2020-07-24 01:41:16','2020-07-24 01:41:16','2020-07-24 01:41:16'),(4525,112,NULL,'172.19.0.2','2020-07-24 01:42:22','2020-07-24 01:42:22','2020-07-24 01:42:22'),(4526,114,NULL,'172.19.0.2','2020-07-24 01:42:46','2020-07-24 01:42:46','2020-07-24 01:42:46'),(4527,114,NULL,'172.19.0.2','2020-07-24 01:43:42','2020-07-24 01:43:42','2020-07-24 01:43:42'),(4528,115,NULL,'172.19.0.2','2020-07-24 01:44:08','2020-07-24 01:44:08','2020-07-24 01:44:08'),(4529,115,NULL,'172.19.0.2','2020-07-24 01:44:34','2020-07-24 01:44:34','2020-07-24 01:44:34'),(4530,116,NULL,'172.19.0.2','2020-07-24 01:45:41','2020-07-24 01:45:41','2020-07-24 01:45:41'),(4531,119,NULL,'172.19.0.2','2020-07-24 01:46:11','2020-07-24 01:46:11','2020-07-24 01:46:11'),(4532,120,NULL,'172.19.0.2','2020-07-24 01:46:34','2020-07-24 01:46:34','2020-07-24 01:46:34'),(4533,122,NULL,'172.19.0.2','2020-07-24 01:46:59','2020-07-24 01:46:59','2020-07-24 01:46:59'),(4534,124,NULL,'172.19.0.2','2020-07-24 01:47:20','2020-07-24 01:47:20','2020-07-24 01:47:20'),(4535,27,NULL,'172.19.0.2','2020-07-24 01:47:45','2020-07-24 01:47:45','2020-07-24 01:47:45'),(4536,93,NULL,'172.19.0.2','2020-07-24 01:48:03','2020-07-24 01:48:03','2020-07-24 01:48:03'),(4537,95,NULL,'172.19.0.2','2020-07-24 01:48:21','2020-07-24 01:48:21','2020-07-24 01:48:21'),(4538,95,NULL,'172.19.0.2','2020-07-24 01:48:24','2020-07-24 01:48:24','2020-07-24 01:48:24'),(4539,100,NULL,'172.19.0.2','2020-07-24 01:48:30','2020-07-24 01:48:30','2020-07-24 01:48:30'),(4540,101,NULL,'172.19.0.2','2020-07-24 01:48:48','2020-07-24 01:48:48','2020-07-24 01:48:48'),(4541,117,NULL,'172.19.0.2','2020-07-24 01:49:06','2020-07-24 01:49:06','2020-07-24 01:49:06'),(4542,121,NULL,'172.19.0.2','2020-07-24 01:49:26','2020-07-24 01:49:26','2020-07-24 01:49:26'),(4543,1,NULL,'172.19.0.2','2020-07-24 01:50:01','2020-07-24 01:50:02','2020-07-24 01:50:02'),(4544,1,NULL,'172.19.0.2','2020-07-24 01:50:04','2020-07-24 01:50:05','2020-07-24 01:50:05'),(4545,105,NULL,'172.19.0.2','2020-07-24 01:50:18','2020-07-24 01:50:18','2020-07-24 01:50:18'),(4546,94,NULL,'172.19.0.2','2020-07-24 02:41:37','2020-07-24 02:41:37','2020-07-24 02:41:37'),(4547,112,NULL,'172.19.0.2','2020-07-24 04:11:37','2020-07-24 04:11:37','2020-07-24 04:11:37'),(4548,14,NULL,'172.19.0.2','2020-07-24 06:26:55','2020-07-24 06:26:55','2020-07-24 06:26:55'),(4549,101,NULL,'172.19.0.2','2020-07-24 09:12:08','2020-07-24 09:12:08','2020-07-24 09:12:08'),(4550,124,NULL,'172.19.0.2','2020-07-24 11:39:23','2020-07-24 11:39:23','2020-07-24 11:39:23'),(4551,99,NULL,'172.19.0.2','2020-07-24 12:06:59','2020-07-24 12:06:59','2020-07-24 12:06:59'),(4552,125,NULL,'172.19.0.2','2020-07-24 12:45:28','2020-07-24 12:45:28','2020-07-24 12:45:28'),(4553,105,NULL,'172.19.0.2','2020-07-24 13:45:28','2020-07-24 13:45:28','2020-07-24 13:45:28'),(4554,109,NULL,'172.19.0.2','2020-07-24 13:58:25','2020-07-24 13:58:25','2020-07-24 13:58:25'),(4555,37,NULL,'172.19.0.2','2020-07-24 14:45:28','2020-07-24 14:45:28','2020-07-24 14:45:28'),(4556,90,NULL,'172.19.0.2','2020-07-24 15:45:28','2020-07-24 15:45:28','2020-07-24 15:45:28'),(4557,89,NULL,'172.19.0.2','2020-07-24 16:45:28','2020-07-24 16:45:28','2020-07-24 16:45:28'),(4558,14,NULL,'172.19.0.2','2020-07-24 17:01:28','2020-07-24 17:01:28','2020-07-24 17:01:28'),(4559,111,NULL,'172.19.0.2','2020-07-24 18:46:19','2020-07-24 18:46:19','2020-07-24 18:46:19'),(4560,101,NULL,'172.19.0.2','2020-07-24 18:51:34','2020-07-24 18:51:34','2020-07-24 18:51:34'),(4561,101,NULL,'172.19.0.2','2020-07-24 18:51:35','2020-07-24 18:51:35','2020-07-24 18:51:35'),(4562,101,NULL,'172.19.0.2','2020-07-24 18:51:38','2020-07-24 18:51:38','2020-07-24 18:51:38'),(4563,101,NULL,'172.19.0.2','2020-07-24 18:51:44','2020-07-24 18:51:44','2020-07-24 18:51:44'),(4564,101,NULL,'172.19.0.2','2020-07-24 18:51:46','2020-07-24 18:51:46','2020-07-24 18:51:46'),(4565,35,NULL,'172.19.0.2','2020-07-24 19:38:24','2020-07-24 19:38:24','2020-07-24 19:38:24'),(4566,90,NULL,'172.19.0.2','2020-07-24 19:38:39','2020-07-24 19:38:39','2020-07-24 19:38:39'),(4567,14,NULL,'172.19.0.2','2020-07-24 20:26:38','2020-07-24 20:26:38','2020-07-24 20:26:38'),(4568,124,NULL,'172.19.0.2','2020-07-25 00:38:25','2020-07-25 00:38:25','2020-07-25 00:38:25'),(4569,49,NULL,'172.19.0.2','2020-07-25 03:41:52','2020-07-25 03:41:52','2020-07-25 03:41:52'),(4570,98,NULL,'172.19.0.2','2020-07-25 04:58:11','2020-07-25 04:58:11','2020-07-25 04:58:11'),(4571,35,NULL,'172.19.0.2','2020-07-25 05:56:46','2020-07-25 05:56:46','2020-07-25 05:56:46'),(4572,105,NULL,'172.19.0.2','2020-07-25 06:26:03','2020-07-25 06:26:04','2020-07-25 06:26:04'),(4573,72,NULL,'172.19.0.2','2020-07-25 06:26:04','2020-07-25 06:26:04','2020-07-25 06:26:04'),(4574,42,NULL,'172.19.0.2','2020-07-25 06:26:46','2020-07-25 06:26:46','2020-07-25 06:26:46'),(4575,121,NULL,'172.19.0.2','2020-07-25 06:28:11','2020-07-25 06:28:11','2020-07-25 06:28:11'),(4576,14,NULL,'172.19.0.2','2020-07-25 06:29:13','2020-07-25 06:29:13','2020-07-25 06:29:13'),(4577,14,NULL,'172.19.0.2','2020-07-25 07:11:45','2020-07-25 07:11:45','2020-07-25 07:11:45'),(4578,28,NULL,'172.19.0.2','2020-07-25 07:12:29','2020-07-25 07:12:29','2020-07-25 07:12:29'),(4579,14,NULL,'172.19.0.2','2020-07-25 07:17:12','2020-07-25 07:17:12','2020-07-25 07:17:12'),(4580,14,NULL,'172.19.0.2','2020-07-25 07:17:15','2020-07-25 07:17:15','2020-07-25 07:17:15'),(4581,28,NULL,'172.19.0.2','2020-07-25 07:17:22','2020-07-25 07:17:22','2020-07-25 07:17:22'),(4582,48,NULL,'172.19.0.2','2020-07-25 07:17:42','2020-07-25 07:17:42','2020-07-25 07:17:42'),(4583,50,NULL,'172.19.0.2','2020-07-25 07:17:56','2020-07-25 07:17:56','2020-07-25 07:17:56'),(4584,50,NULL,'172.19.0.2','2020-07-25 07:18:03','2020-07-25 07:18:03','2020-07-25 07:18:03'),(4585,52,NULL,'172.19.0.2','2020-07-25 07:18:13','2020-07-25 07:18:13','2020-07-25 07:18:13'),(4586,52,NULL,'172.19.0.2','2020-07-25 07:18:14','2020-07-25 07:18:14','2020-07-25 07:18:14'),(4587,65,NULL,'172.19.0.2','2020-07-25 07:18:33','2020-07-25 07:18:33','2020-07-25 07:18:33'),(4588,72,NULL,'172.19.0.2','2020-07-25 07:24:34','2020-07-25 07:24:34','2020-07-25 07:24:34'),(4589,88,NULL,'172.19.0.2','2020-07-25 07:24:55','2020-07-25 07:24:55','2020-07-25 07:24:55'),(4590,88,NULL,'172.19.0.2','2020-07-25 07:24:56','2020-07-25 07:24:56','2020-07-25 07:24:56'),(4591,91,NULL,'172.19.0.2','2020-07-25 07:25:16','2020-07-25 07:25:16','2020-07-25 07:25:16'),(4592,91,NULL,'172.19.0.2','2020-07-25 07:25:17','2020-07-25 07:25:17','2020-07-25 07:25:17'),(4593,123,NULL,'172.19.0.2','2020-07-25 07:25:54','2020-07-25 07:25:54','2020-07-25 07:25:54'),(4594,123,NULL,'172.19.0.2','2020-07-25 07:25:57','2020-07-25 07:25:57','2020-07-25 07:25:57'),(4595,125,NULL,'172.19.0.2','2020-07-25 07:26:11','2020-07-25 07:26:11','2020-07-25 07:26:11'),(4596,125,NULL,'172.19.0.2','2020-07-25 07:26:13','2020-07-25 07:26:13','2020-07-25 07:26:13'),(4597,126,NULL,'172.19.0.2','2020-07-25 07:26:29','2020-07-25 07:26:29','2020-07-25 07:26:29'),(4598,126,NULL,'172.19.0.2','2020-07-25 07:26:39','2020-07-25 07:26:39','2020-07-25 07:26:39'),(4599,127,NULL,'172.19.0.2','2020-07-25 07:26:51','2020-07-25 07:26:51','2020-07-25 07:26:51'),(4600,127,NULL,'172.19.0.2','2020-07-25 07:27:08','2020-07-25 07:27:08','2020-07-25 07:27:08'),(4601,128,NULL,'172.19.0.2','2020-07-25 07:27:20','2020-07-25 07:27:20','2020-07-25 07:27:20'),(4602,128,NULL,'172.19.0.2','2020-07-25 07:27:24','2020-07-25 07:27:24','2020-07-25 07:27:24'),(4603,129,NULL,'172.19.0.2','2020-07-25 07:27:52','2020-07-25 07:27:52','2020-07-25 07:27:52'),(4604,129,NULL,'172.19.0.2','2020-07-25 07:27:54','2020-07-25 07:27:54','2020-07-25 07:27:54'),(4605,130,NULL,'172.19.0.2','2020-07-25 07:28:14','2020-07-25 07:28:14','2020-07-25 07:28:14'),(4606,130,NULL,'172.19.0.2','2020-07-25 07:28:20','2020-07-25 07:28:20','2020-07-25 07:28:20'),(4607,131,NULL,'172.19.0.2','2020-07-25 07:28:31','2020-07-25 07:28:31','2020-07-25 07:28:31'),(4608,132,NULL,'172.19.0.2','2020-07-25 07:28:48','2020-07-25 07:28:48','2020-07-25 07:28:48'),(4609,15,NULL,'172.19.0.2','2020-07-25 07:30:20','2020-07-25 07:30:20','2020-07-25 07:30:20'),(4610,104,NULL,'172.19.0.2','2020-07-25 07:31:38','2020-07-25 07:31:38','2020-07-25 07:31:38'),(4611,99,NULL,'172.19.0.2','2020-07-25 07:52:47','2020-07-25 07:52:47','2020-07-25 07:52:47'),(4612,21,NULL,'172.19.0.2','2020-07-25 08:12:49','2020-07-25 08:12:49','2020-07-25 08:12:49'),(4613,23,NULL,'172.19.0.2','2020-07-25 08:13:07','2020-07-25 08:13:07','2020-07-25 08:13:07'),(4614,27,NULL,'172.19.0.2','2020-07-25 08:13:26','2020-07-25 08:13:26','2020-07-25 08:13:26'),(4615,27,NULL,'172.19.0.2','2020-07-25 08:13:27','2020-07-25 08:13:27','2020-07-25 08:13:27'),(4616,31,NULL,'172.19.0.2','2020-07-25 08:13:35','2020-07-25 08:13:35','2020-07-25 08:13:35'),(4617,31,NULL,'172.19.0.2','2020-07-25 08:13:37','2020-07-25 08:13:37','2020-07-25 08:13:37'),(4618,32,NULL,'172.19.0.2','2020-07-25 08:13:53','2020-07-25 08:13:53','2020-07-25 08:13:53'),(4619,33,NULL,'172.19.0.2','2020-07-25 08:14:09','2020-07-25 08:14:09','2020-07-25 08:14:09'),(4620,33,NULL,'172.19.0.2','2020-07-25 08:14:13','2020-07-25 08:14:13','2020-07-25 08:14:13'),(4621,35,NULL,'172.19.0.2','2020-07-25 08:14:33','2020-07-25 08:14:33','2020-07-25 08:14:33'),(4622,36,NULL,'172.19.0.2','2020-07-25 08:14:54','2020-07-25 08:14:54','2020-07-25 08:14:54'),(4623,36,NULL,'172.19.0.2','2020-07-25 08:14:58','2020-07-25 08:14:58','2020-07-25 08:14:58'),(4624,37,NULL,'172.19.0.2','2020-07-25 08:15:06','2020-07-25 08:15:06','2020-07-25 08:15:06'),(4625,41,NULL,'172.19.0.2','2020-07-25 08:15:29','2020-07-25 08:15:29','2020-07-25 08:15:29'),(4626,42,NULL,'172.19.0.2','2020-07-25 08:15:48','2020-07-25 08:15:48','2020-07-25 08:15:48'),(4627,43,NULL,'172.19.0.2','2020-07-25 08:46:07','2020-07-25 08:46:07','2020-07-25 08:46:07'),(4628,44,NULL,'172.19.0.2','2020-07-25 08:46:30','2020-07-25 08:46:30','2020-07-25 08:46:30'),(4629,45,NULL,'172.19.0.2','2020-07-25 08:46:43','2020-07-25 08:46:43','2020-07-25 08:46:43'),(4630,46,NULL,'172.19.0.2','2020-07-25 08:46:55','2020-07-25 08:46:55','2020-07-25 08:46:55'),(4631,47,NULL,'172.19.0.2','2020-07-25 08:47:20','2020-07-25 08:47:20','2020-07-25 08:47:20'),(4632,49,NULL,'172.19.0.2','2020-07-25 08:47:31','2020-07-25 08:47:31','2020-07-25 08:47:31'),(4633,89,NULL,'172.19.0.2','2020-07-25 08:47:47','2020-07-25 08:47:47','2020-07-25 08:47:47'),(4634,89,NULL,'172.19.0.2','2020-07-25 08:47:48','2020-07-25 08:47:48','2020-07-25 08:47:48'),(4635,90,NULL,'172.19.0.2','2020-07-25 08:47:56','2020-07-25 08:47:56','2020-07-25 08:47:56'),(4636,93,NULL,'172.19.0.2','2020-07-25 08:48:08','2020-07-25 08:48:08','2020-07-25 08:48:08'),(4637,93,NULL,'172.19.0.2','2020-07-25 08:48:13','2020-07-25 08:48:13','2020-07-25 08:48:13'),(4638,94,NULL,'172.19.0.2','2020-07-25 08:48:22','2020-07-25 08:48:22','2020-07-25 08:48:22'),(4639,94,NULL,'172.19.0.2','2020-07-25 08:48:25','2020-07-25 08:48:25','2020-07-25 08:48:25'),(4640,95,NULL,'172.19.0.2','2020-07-25 08:48:33','2020-07-25 08:48:33','2020-07-25 08:48:33'),(4641,96,NULL,'172.19.0.2','2020-07-25 08:49:06','2020-07-25 08:49:06','2020-07-25 08:49:06'),(4642,96,NULL,'172.19.0.2','2020-07-25 09:05:01','2020-07-25 09:05:01','2020-07-25 09:05:01'),(4643,96,NULL,'172.19.0.2','2020-07-25 09:06:03','2020-07-25 09:06:03','2020-07-25 09:06:03'),(4644,97,NULL,'172.19.0.2','2020-07-25 09:06:25','2020-07-25 09:06:25','2020-07-25 09:06:25'),(4645,98,NULL,'172.19.0.2','2020-07-25 09:06:36','2020-07-25 09:06:36','2020-07-25 09:06:36'),(4646,99,NULL,'172.19.0.2','2020-07-25 09:06:51','2020-07-25 09:06:51','2020-07-25 09:06:51'),(4647,100,NULL,'172.19.0.2','2020-07-25 09:07:04','2020-07-25 09:07:04','2020-07-25 09:07:04'),(4648,101,NULL,'172.19.0.2','2020-07-25 09:07:22','2020-07-25 09:07:22','2020-07-25 09:07:22'),(4649,104,NULL,'172.19.0.2','2020-07-25 09:07:36','2020-07-25 09:07:36','2020-07-25 09:07:36'),(4650,104,NULL,'172.19.0.2','2020-07-25 09:07:38','2020-07-25 09:07:38','2020-07-25 09:07:38'),(4651,106,NULL,'172.19.0.2','2020-07-25 09:07:45','2020-07-25 09:07:45','2020-07-25 09:07:45'),(4652,107,NULL,'172.19.0.2','2020-07-25 09:07:56','2020-07-25 09:07:56','2020-07-25 09:07:56'),(4653,108,NULL,'172.19.0.2','2020-07-25 09:08:10','2020-07-25 09:08:10','2020-07-25 09:08:10'),(4654,108,NULL,'172.19.0.2','2020-07-25 09:08:13','2020-07-25 09:08:13','2020-07-25 09:08:13'),(4655,109,NULL,'172.19.0.2','2020-07-25 09:08:31','2020-07-25 09:08:31','2020-07-25 09:08:31'),(4656,109,NULL,'172.19.0.2','2020-07-25 09:08:36','2020-07-25 09:08:36','2020-07-25 09:08:36'),(4657,110,NULL,'172.19.0.2','2020-07-25 09:08:46','2020-07-25 09:08:46','2020-07-25 09:08:46'),(4658,111,NULL,'172.19.0.2','2020-07-25 09:09:04','2020-07-25 09:09:04','2020-07-25 09:09:04'),(4659,111,NULL,'172.19.0.2','2020-07-25 09:09:08','2020-07-25 09:09:08','2020-07-25 09:09:08'),(4660,112,NULL,'172.19.0.2','2020-07-25 09:09:18','2020-07-25 09:09:18','2020-07-25 09:09:18'),(4661,113,NULL,'172.19.0.2','2020-07-25 09:09:28','2020-07-25 09:09:28','2020-07-25 09:09:28'),(4662,113,NULL,'172.19.0.2','2020-07-25 09:09:37','2020-07-25 09:09:37','2020-07-25 09:09:37'),(4663,114,NULL,'172.19.0.2','2020-07-25 09:09:44','2020-07-25 09:09:44','2020-07-25 09:09:44'),(4664,115,NULL,'172.19.0.2','2020-07-25 09:10:02','2020-07-25 09:10:02','2020-07-25 09:10:02'),(4665,115,NULL,'172.19.0.2','2020-07-25 09:10:05','2020-07-25 09:10:05','2020-07-25 09:10:05'),(4666,116,NULL,'172.19.0.2','2020-07-25 09:10:24','2020-07-25 09:10:24','2020-07-25 09:10:24'),(4667,116,NULL,'172.19.0.2','2020-07-25 09:10:27','2020-07-25 09:10:27','2020-07-25 09:10:27'),(4668,117,NULL,'172.19.0.2','2020-07-25 09:10:37','2020-07-25 09:10:37','2020-07-25 09:10:37'),(4669,119,NULL,'172.19.0.2','2020-07-25 09:10:47','2020-07-25 09:10:47','2020-07-25 09:10:47'),(4670,119,NULL,'172.19.0.2','2020-07-25 09:10:51','2020-07-25 09:10:51','2020-07-25 09:10:51'),(4671,120,NULL,'172.19.0.2','2020-07-25 09:10:58','2020-07-25 09:10:58','2020-07-25 09:10:58'),(4672,120,NULL,'172.19.0.2','2020-07-25 09:11:00','2020-07-25 09:11:00','2020-07-25 09:11:00'),(4673,121,NULL,'172.19.0.2','2020-07-25 09:11:09','2020-07-25 09:11:09','2020-07-25 09:11:09'),(4674,121,NULL,'172.19.0.2','2020-07-25 09:11:17','2020-07-25 09:11:17','2020-07-25 09:11:17'),(4675,122,NULL,'172.19.0.2','2020-07-25 09:11:32','2020-07-25 09:11:32','2020-07-25 09:11:32'),(4676,122,NULL,'172.19.0.2','2020-07-25 09:11:33','2020-07-25 09:11:33','2020-07-25 09:11:33'),(4677,124,NULL,'172.19.0.2','2020-07-25 09:11:46','2020-07-25 09:11:46','2020-07-25 09:11:46'),(4678,100,NULL,'172.19.0.2','2020-07-25 09:18:41','2020-07-25 09:18:41','2020-07-25 09:18:41'),(4679,104,NULL,'172.19.0.2','2020-07-25 18:54:45','2020-07-25 18:54:45','2020-07-25 18:54:45'),(4680,88,NULL,'172.19.0.2','2020-07-25 18:58:39','2020-07-25 18:58:39','2020-07-25 18:58:39'),(4681,89,NULL,'172.19.0.2','2020-07-25 19:01:51','2020-07-25 19:01:51','2020-07-25 19:01:51'),(4682,96,NULL,'172.19.0.2','2020-07-25 19:44:34','2020-07-25 19:44:34','2020-07-25 19:44:34'),(4683,122,NULL,'172.19.0.2','2020-07-25 19:48:36','2020-07-25 19:48:36','2020-07-25 19:48:36'),(4684,91,NULL,'172.19.0.2','2020-07-25 20:42:27','2020-07-25 20:42:27','2020-07-25 20:42:27'),(4685,44,NULL,'172.19.0.2','2020-07-25 22:12:27','2020-07-25 22:12:27','2020-07-25 22:12:27'),(4686,28,NULL,'172.19.0.2','2020-07-25 22:42:27','2020-07-25 22:42:27','2020-07-25 22:42:27'),(4687,52,NULL,'172.19.0.2','2020-07-25 23:54:06','2020-07-25 23:54:06','2020-07-25 23:54:06'),(4688,14,NULL,'172.19.0.2','2020-07-25 23:55:08','2020-07-25 23:55:08','2020-07-25 23:55:08'),(4689,131,NULL,'172.19.0.2','2020-07-25 23:55:30','2020-07-25 23:55:30','2020-07-25 23:55:30'),(4690,130,NULL,'172.19.0.2','2020-07-25 23:55:33','2020-07-25 23:55:33','2020-07-25 23:55:33'),(4691,129,NULL,'172.19.0.2','2020-07-25 23:55:35','2020-07-25 23:55:35','2020-07-25 23:55:35'),(4692,128,NULL,'172.19.0.2','2020-07-25 23:55:50','2020-07-25 23:55:50','2020-07-25 23:55:50'),(4693,127,NULL,'172.19.0.2','2020-07-25 23:55:56','2020-07-25 23:55:56','2020-07-25 23:55:56'),(4694,126,NULL,'172.19.0.2','2020-07-25 23:56:00','2020-07-25 23:56:00','2020-07-25 23:56:00'),(4695,99,NULL,'172.19.0.2','2020-07-25 23:56:07','2020-07-25 23:56:07','2020-07-25 23:56:07'),(4696,98,NULL,'172.19.0.2','2020-07-25 23:58:56','2020-07-25 23:58:56','2020-07-25 23:58:56'),(4697,97,NULL,'172.19.0.2','2020-07-25 23:59:17','2020-07-25 23:59:17','2020-07-25 23:59:17'),(4698,96,NULL,'172.19.0.2','2020-07-25 23:59:28','2020-07-25 23:59:28','2020-07-25 23:59:28'),(4699,46,NULL,'172.19.0.2','2020-07-25 23:59:37','2020-07-25 23:59:37','2020-07-25 23:59:37'),(4700,45,NULL,'172.19.0.2','2020-07-26 00:00:16','2020-07-26 00:00:16','2020-07-26 00:00:16'),(4701,124,NULL,'172.19.0.2','2020-07-26 00:01:37','2020-07-26 00:01:37','2020-07-26 00:01:37'),(4702,123,NULL,'172.19.0.2','2020-07-26 00:02:33','2020-07-26 00:02:33','2020-07-26 00:02:33'),(4703,132,NULL,'172.19.0.2','2020-07-26 00:04:30','2020-07-26 00:04:30','2020-07-26 00:04:30'),(4704,1,NULL,'172.19.0.2','2020-07-26 00:04:33','2020-07-26 00:04:33','2020-07-26 00:04:33'),(4705,23,NULL,'172.19.0.2','2020-07-26 00:04:34','2020-07-26 00:04:34','2020-07-26 00:04:34'),(4706,44,NULL,'172.19.0.2','2020-07-26 00:04:48','2020-07-26 00:04:48','2020-07-26 00:04:48'),(4707,37,NULL,'172.19.0.2','2020-07-26 00:05:22','2020-07-26 00:05:22','2020-07-26 00:05:22'),(4708,36,NULL,'172.19.0.2','2020-07-26 00:05:50','2020-07-26 00:05:50','2020-07-26 00:05:50'),(4709,35,NULL,'172.19.0.2','2020-07-26 00:05:53','2020-07-26 00:05:53','2020-07-26 00:05:53'),(4710,33,NULL,'172.19.0.2','2020-07-26 00:05:56','2020-07-26 00:05:56','2020-07-26 00:05:56'),(4711,42,NULL,'172.19.0.2','2020-07-26 00:05:58','2020-07-26 00:05:58','2020-07-26 00:05:58'),(4712,41,NULL,'172.19.0.2','2020-07-26 00:06:00','2020-07-26 00:06:00','2020-07-26 00:06:00'),(4713,43,NULL,'172.19.0.2','2020-07-26 00:06:03','2020-07-26 00:06:03','2020-07-26 00:06:03'),(4714,32,NULL,'172.19.0.2','2020-07-26 00:06:06','2020-07-26 00:06:06','2020-07-26 00:06:06'),(4715,31,NULL,'172.19.0.2','2020-07-26 00:06:09','2020-07-26 00:06:09','2020-07-26 00:06:09'),(4716,93,NULL,'172.19.0.2','2020-07-26 00:06:16','2020-07-26 00:06:16','2020-07-26 00:06:16'),(4717,101,NULL,'172.19.0.2','2020-07-26 00:07:03','2020-07-26 00:07:03','2020-07-26 00:07:03'),(4718,50,NULL,'172.19.0.2','2020-07-26 00:07:44','2020-07-26 00:07:44','2020-07-26 00:07:44'),(4719,49,NULL,'172.19.0.2','2020-07-26 00:07:46','2020-07-26 00:07:46','2020-07-26 00:07:46'),(4720,48,NULL,'172.19.0.2','2020-07-26 00:07:49','2020-07-26 00:07:49','2020-07-26 00:07:49'),(4721,47,NULL,'172.19.0.2','2020-07-26 00:08:04','2020-07-26 00:08:04','2020-07-26 00:08:04'),(4722,110,NULL,'172.19.0.2','2020-07-26 00:08:07','2020-07-26 00:08:07','2020-07-26 00:08:07'),(4723,109,NULL,'172.19.0.2','2020-07-26 00:08:12','2020-07-26 00:08:12','2020-07-26 00:08:12'),(4724,125,NULL,'172.19.0.2','2020-07-26 00:11:39','2020-07-26 00:11:39','2020-07-26 00:11:39'),(4725,123,NULL,'172.19.0.2','2020-07-26 00:25:19','2020-07-26 00:25:19','2020-07-26 00:25:19'),(4726,110,NULL,'172.19.0.2','2020-07-26 02:12:39','2020-07-26 02:12:39','2020-07-26 02:12:39'),(4727,41,NULL,'172.19.0.2','2020-07-26 02:50:09','2020-07-26 02:50:09','2020-07-26 02:50:09'),(4728,41,NULL,'172.19.0.2','2020-07-26 03:35:24','2020-07-26 03:35:25','2020-07-26 03:35:25'),(4729,14,NULL,'172.19.0.2','2020-07-26 03:41:50','2020-07-26 03:41:50','2020-07-26 03:41:50'),(4730,41,NULL,'172.19.0.2','2020-07-26 03:42:04','2020-07-26 03:42:04','2020-07-26 03:42:04'),(4731,14,NULL,'172.19.0.2','2020-07-26 03:43:36','2020-07-26 03:43:36','2020-07-26 03:43:36'),(4732,41,NULL,'172.19.0.2','2020-07-26 03:43:49','2020-07-26 03:43:49','2020-07-26 03:43:49'),(4733,43,NULL,'172.19.0.2','2020-07-26 03:44:05','2020-07-26 03:44:05','2020-07-26 03:44:05'),(4734,44,NULL,'172.19.0.2','2020-07-26 03:44:23','2020-07-26 03:44:23','2020-07-26 03:44:23'),(4735,49,NULL,'172.19.0.2','2020-07-26 03:44:48','2020-07-26 03:44:48','2020-07-26 03:44:48'),(4736,52,NULL,'172.19.0.2','2020-07-26 03:45:05','2020-07-26 03:45:05','2020-07-26 03:45:05'),(4737,106,NULL,'172.19.0.2','2020-07-26 03:45:35','2020-07-26 03:45:35','2020-07-26 03:45:35'),(4738,125,NULL,'172.19.0.2','2020-07-26 03:45:45','2020-07-26 03:45:45','2020-07-26 03:45:45'),(4739,49,NULL,'172.19.0.2','2020-07-26 03:45:53','2020-07-26 03:45:53','2020-07-26 03:45:53'),(4740,126,NULL,'172.19.0.2','2020-07-26 03:45:59','2020-07-26 03:45:59','2020-07-26 03:45:59'),(4741,126,NULL,'172.19.0.2','2020-07-26 03:46:01','2020-07-26 03:46:01','2020-07-26 03:46:01'),(4742,52,NULL,'172.19.0.2','2020-07-26 03:46:05','2020-07-26 03:46:05','2020-07-26 03:46:05'),(4743,127,NULL,'172.19.0.2','2020-07-26 03:46:16','2020-07-26 03:46:16','2020-07-26 03:46:16'),(4744,127,NULL,'172.19.0.2','2020-07-26 03:46:18','2020-07-26 03:46:18','2020-07-26 03:46:18'),(4745,128,NULL,'172.19.0.2','2020-07-26 03:46:26','2020-07-26 03:46:26','2020-07-26 03:46:26'),(4746,106,NULL,'172.19.0.2','2020-07-26 03:46:38','2020-07-26 03:46:38','2020-07-26 03:46:38'),(4747,129,NULL,'172.19.0.2','2020-07-26 03:49:36','2020-07-26 03:49:36','2020-07-26 03:49:36'),(4748,130,NULL,'172.19.0.2','2020-07-26 03:49:48','2020-07-26 03:49:48','2020-07-26 03:49:48'),(4749,131,NULL,'172.19.0.2','2020-07-26 03:50:02','2020-07-26 03:50:02','2020-07-26 03:50:02'),(4750,131,NULL,'172.19.0.2','2020-07-26 03:50:05','2020-07-26 03:50:05','2020-07-26 03:50:05'),(4751,132,NULL,'172.19.0.2','2020-07-26 03:50:20','2020-07-26 03:50:20','2020-07-26 03:50:20'),(4752,15,NULL,'172.19.0.2','2020-07-26 03:51:37','2020-07-26 03:51:37','2020-07-26 03:51:37'),(4753,15,NULL,'172.19.0.2','2020-07-26 03:51:40','2020-07-26 03:51:40','2020-07-26 03:51:40'),(4754,21,NULL,'172.19.0.2','2020-07-26 03:52:00','2020-07-26 03:52:00','2020-07-26 03:52:00'),(4755,23,NULL,'172.19.0.2','2020-07-26 03:52:14','2020-07-26 03:52:14','2020-07-26 03:52:14'),(4756,96,NULL,'172.19.0.2','2020-07-26 03:52:27','2020-07-26 03:52:27','2020-07-26 03:52:27'),(4757,27,NULL,'172.19.0.2','2020-07-26 03:52:30','2020-07-26 03:52:30','2020-07-26 03:52:30'),(4758,27,NULL,'172.19.0.2','2020-07-26 03:52:34','2020-07-26 03:52:34','2020-07-26 03:52:34'),(4759,28,NULL,'172.19.0.2','2020-07-26 03:52:49','2020-07-26 03:52:49','2020-07-26 03:52:49'),(4760,31,NULL,'172.19.0.2','2020-07-26 03:53:03','2020-07-26 03:53:03','2020-07-26 03:53:03'),(4761,32,NULL,'172.19.0.2','2020-07-26 03:53:13','2020-07-26 03:53:13','2020-07-26 03:53:13'),(4762,33,NULL,'172.19.0.2','2020-07-26 03:53:22','2020-07-26 03:53:22','2020-07-26 03:53:22'),(4763,35,NULL,'172.19.0.2','2020-07-26 03:53:32','2020-07-26 03:53:32','2020-07-26 03:53:32'),(4764,36,NULL,'172.19.0.2','2020-07-26 03:53:44','2020-07-26 03:53:44','2020-07-26 03:53:44'),(4765,88,NULL,'172.19.0.2','2020-07-26 03:53:47','2020-07-26 03:53:47','2020-07-26 03:53:47'),(4766,37,NULL,'172.19.0.2','2020-07-26 03:53:57','2020-07-26 03:53:57','2020-07-26 03:53:57'),(4767,42,NULL,'172.19.0.2','2020-07-26 03:54:07','2020-07-26 03:54:07','2020-07-26 03:54:07'),(4768,45,NULL,'172.19.0.2','2020-07-26 03:54:23','2020-07-26 03:54:23','2020-07-26 03:54:23'),(4769,46,NULL,'172.19.0.2','2020-07-26 03:54:36','2020-07-26 03:54:36','2020-07-26 03:54:36'),(4770,47,NULL,'172.19.0.2','2020-07-26 03:54:45','2020-07-26 03:54:45','2020-07-26 03:54:45'),(4771,48,NULL,'172.19.0.2','2020-07-26 03:54:57','2020-07-26 03:54:57','2020-07-26 03:54:57'),(4772,50,NULL,'172.19.0.2','2020-07-26 03:55:11','2020-07-26 03:55:11','2020-07-26 03:55:11'),(4773,65,NULL,'172.19.0.2','2020-07-26 03:55:21','2020-07-26 03:55:21','2020-07-26 03:55:21'),(4774,65,NULL,'172.19.0.2','2020-07-26 03:55:22','2020-07-26 03:55:22','2020-07-26 03:55:22'),(4775,72,NULL,'172.19.0.2','2020-07-26 03:55:33','2020-07-26 03:55:33','2020-07-26 03:55:33'),(4776,88,NULL,'172.19.0.2','2020-07-26 03:55:49','2020-07-26 03:55:49','2020-07-26 03:55:49'),(4777,88,NULL,'172.19.0.2','2020-07-26 03:55:50','2020-07-26 03:55:50','2020-07-26 03:55:50'),(4778,89,NULL,'172.19.0.2','2020-07-26 03:58:52','2020-07-26 03:58:52','2020-07-26 03:58:52'),(4779,89,NULL,'172.19.0.2','2020-07-26 03:58:53','2020-07-26 03:58:53','2020-07-26 03:58:53'),(4780,90,NULL,'172.19.0.2','2020-07-26 03:59:05','2020-07-26 03:59:05','2020-07-26 03:59:05'),(4781,91,NULL,'172.19.0.2','2020-07-26 03:59:22','2020-07-26 03:59:22','2020-07-26 03:59:22'),(4782,93,NULL,'172.19.0.2','2020-07-26 03:59:35','2020-07-26 03:59:35','2020-07-26 03:59:35'),(4783,94,NULL,'172.19.0.2','2020-07-26 03:59:49','2020-07-26 03:59:49','2020-07-26 03:59:49'),(4784,95,NULL,'172.19.0.2','2020-07-26 03:59:59','2020-07-26 03:59:59','2020-07-26 03:59:59'),(4785,96,NULL,'172.19.0.2','2020-07-26 04:00:17','2020-07-26 04:00:17','2020-07-26 04:00:17'),(4786,96,NULL,'172.19.0.2','2020-07-26 04:00:18','2020-07-26 04:00:18','2020-07-26 04:00:18'),(4787,97,NULL,'172.19.0.2','2020-07-26 04:00:27','2020-07-26 04:00:27','2020-07-26 04:00:27'),(4788,98,NULL,'172.19.0.2','2020-07-26 04:00:36','2020-07-26 04:00:36','2020-07-26 04:00:36'),(4789,99,NULL,'172.19.0.2','2020-07-26 04:00:48','2020-07-26 04:00:48','2020-07-26 04:00:48'),(4790,100,NULL,'172.19.0.2','2020-07-26 04:00:58','2020-07-26 04:00:58','2020-07-26 04:00:58'),(4791,101,NULL,'172.19.0.2','2020-07-26 04:01:09','2020-07-26 04:01:09','2020-07-26 04:01:09'),(4792,104,NULL,'172.19.0.2','2020-07-26 04:01:24','2020-07-26 04:01:24','2020-07-26 04:01:24'),(4793,107,NULL,'172.19.0.2','2020-07-26 04:01:35','2020-07-26 04:01:35','2020-07-26 04:01:35'),(4794,108,NULL,'172.19.0.2','2020-07-26 04:01:50','2020-07-26 04:01:50','2020-07-26 04:01:50'),(4795,108,NULL,'172.19.0.2','2020-07-26 04:01:51','2020-07-26 04:01:51','2020-07-26 04:01:51'),(4796,109,NULL,'172.19.0.2','2020-07-26 04:02:03','2020-07-26 04:02:03','2020-07-26 04:02:03'),(4797,110,NULL,'172.19.0.2','2020-07-26 04:02:12','2020-07-26 04:02:12','2020-07-26 04:02:12'),(4798,111,NULL,'172.19.0.2','2020-07-26 04:02:21','2020-07-26 04:02:21','2020-07-26 04:02:21'),(4799,112,NULL,'172.19.0.2','2020-07-26 04:02:38','2020-07-26 04:02:38','2020-07-26 04:02:38'),(4800,113,NULL,'172.19.0.2','2020-07-26 04:02:57','2020-07-26 04:02:57','2020-07-26 04:02:57'),(4801,114,NULL,'172.19.0.2','2020-07-26 04:03:11','2020-07-26 04:03:11','2020-07-26 04:03:11'),(4802,115,NULL,'172.19.0.2','2020-07-26 04:03:19','2020-07-26 04:03:19','2020-07-26 04:03:19'),(4803,116,NULL,'172.19.0.2','2020-07-26 04:03:32','2020-07-26 04:03:32','2020-07-26 04:03:32'),(4804,116,NULL,'172.19.0.2','2020-07-26 04:03:34','2020-07-26 04:03:34','2020-07-26 04:03:34'),(4805,117,NULL,'172.19.0.2','2020-07-26 04:03:40','2020-07-26 04:03:40','2020-07-26 04:03:40'),(4806,119,NULL,'172.19.0.2','2020-07-26 04:03:55','2020-07-26 04:03:55','2020-07-26 04:03:55'),(4807,120,NULL,'172.19.0.2','2020-07-26 04:04:04','2020-07-26 04:04:04','2020-07-26 04:04:04'),(4808,121,NULL,'172.19.0.2','2020-07-26 04:04:16','2020-07-26 04:04:16','2020-07-26 04:04:16'),(4809,122,NULL,'172.19.0.2','2020-07-26 04:04:24','2020-07-26 04:04:24','2020-07-26 04:04:24'),(4810,123,NULL,'172.19.0.2','2020-07-26 04:04:33','2020-07-26 04:04:33','2020-07-26 04:04:33'),(4811,123,NULL,'172.19.0.2','2020-07-26 04:04:38','2020-07-26 04:04:38','2020-07-26 04:04:38'),(4812,124,NULL,'172.19.0.2','2020-07-26 04:04:50','2020-07-26 04:04:50','2020-07-26 04:04:50'),(4813,1,NULL,'172.19.0.2','2020-07-26 04:09:50','2020-07-26 04:09:50','2020-07-26 04:09:50'),(4814,105,NULL,'172.19.0.2','2020-07-26 04:09:56','2020-07-26 04:09:56','2020-07-26 04:09:56'),(4815,116,NULL,'172.19.0.2','2020-07-26 08:44:12','2020-07-26 08:44:12','2020-07-26 08:44:12'),(4816,14,NULL,'172.19.0.2','2020-07-26 10:27:18','2020-07-26 10:27:18','2020-07-26 10:27:18'),(4817,14,NULL,'172.19.0.2','2020-07-26 10:27:25','2020-07-26 10:27:25','2020-07-26 10:27:25'),(4818,37,NULL,'172.19.0.2','2020-07-26 10:27:35','2020-07-26 10:27:35','2020-07-26 10:27:35'),(4819,37,NULL,'172.19.0.2','2020-07-26 10:27:39','2020-07-26 10:27:39','2020-07-26 10:27:39'),(4820,52,NULL,'172.19.0.2','2020-07-26 10:27:54','2020-07-26 10:27:54','2020-07-26 10:27:54'),(4821,52,NULL,'172.19.0.2','2020-07-26 10:27:59','2020-07-26 10:27:59','2020-07-26 10:27:59'),(4822,65,NULL,'172.19.0.2','2020-07-26 10:29:06','2020-07-26 10:29:06','2020-07-26 10:29:06'),(4823,89,NULL,'172.19.0.2','2020-07-26 10:29:18','2020-07-26 10:29:18','2020-07-26 10:29:18'),(4824,94,NULL,'172.19.0.2','2020-07-26 10:29:37','2020-07-26 10:29:37','2020-07-26 10:29:37'),(4825,101,NULL,'172.19.0.2','2020-07-26 10:29:58','2020-07-26 10:29:58','2020-07-26 10:29:58'),(4826,114,NULL,'172.19.0.2','2020-07-26 10:30:07','2020-07-26 10:30:07','2020-07-26 10:30:07'),(4827,119,NULL,'172.19.0.2','2020-07-26 10:30:18','2020-07-26 10:30:18','2020-07-26 10:30:18'),(4828,123,NULL,'172.19.0.2','2020-07-26 10:30:29','2020-07-26 10:30:29','2020-07-26 10:30:29'),(4829,123,NULL,'172.19.0.2','2020-07-26 10:30:56','2020-07-26 10:30:56','2020-07-26 10:30:56'),(4830,125,NULL,'172.19.0.2','2020-07-26 10:31:22','2020-07-26 10:31:22','2020-07-26 10:31:22'),(4831,126,NULL,'172.19.0.2','2020-07-26 10:31:34','2020-07-26 10:31:34','2020-07-26 10:31:34'),(4832,127,NULL,'172.19.0.2','2020-07-26 10:31:51','2020-07-26 10:31:51','2020-07-26 10:31:51'),(4833,94,NULL,'172.19.0.2','2020-07-26 10:32:00','2020-07-26 10:32:00','2020-07-26 10:32:00'),(4834,94,NULL,'172.19.0.2','2020-07-26 10:32:04','2020-07-26 10:32:04','2020-07-26 10:32:04'),(4835,101,NULL,'172.19.0.2','2020-07-26 10:32:29','2020-07-26 10:32:29','2020-07-26 10:32:29'),(4836,114,NULL,'172.19.0.2','2020-07-26 10:32:50','2020-07-26 10:32:50','2020-07-26 10:32:50'),(4837,127,NULL,'172.19.0.2','2020-07-26 10:32:51','2020-07-26 10:32:51','2020-07-26 10:32:51'),(4838,128,NULL,'172.19.0.2','2020-07-26 10:33:04','2020-07-26 10:33:04','2020-07-26 10:33:04'),(4839,128,NULL,'172.19.0.2','2020-07-26 10:33:07','2020-07-26 10:33:07','2020-07-26 10:33:07'),(4840,119,NULL,'172.19.0.2','2020-07-26 10:33:09','2020-07-26 10:33:10','2020-07-26 10:33:10'),(4841,129,NULL,'172.19.0.2','2020-07-26 10:33:17','2020-07-26 10:33:17','2020-07-26 10:33:17'),(4842,123,NULL,'172.19.0.2','2020-07-26 10:33:28','2020-07-26 10:33:28','2020-07-26 10:33:28'),(4843,130,NULL,'172.19.0.2','2020-07-26 10:33:37','2020-07-26 10:33:37','2020-07-26 10:33:37'),(4844,131,NULL,'172.19.0.2','2020-07-26 10:33:50','2020-07-26 10:33:50','2020-07-26 10:33:50'),(4845,131,NULL,'172.19.0.2','2020-07-26 10:33:57','2020-07-26 10:33:57','2020-07-26 10:33:57'),(4846,125,NULL,'172.19.0.2','2020-07-26 10:34:02','2020-07-26 10:34:02','2020-07-26 10:34:02'),(4847,132,NULL,'172.19.0.2','2020-07-26 10:34:05','2020-07-26 10:34:05','2020-07-26 10:34:05'),(4848,132,NULL,'172.19.0.2','2020-07-26 10:34:12','2020-07-26 10:34:12','2020-07-26 10:34:12'),(4849,126,NULL,'172.19.0.2','2020-07-26 10:34:12','2020-07-26 10:34:12','2020-07-26 10:34:12'),(4850,127,NULL,'172.19.0.2','2020-07-26 10:34:29','2020-07-26 10:34:29','2020-07-26 10:34:29'),(4851,128,NULL,'172.19.0.2','2020-07-26 10:34:43','2020-07-26 10:34:43','2020-07-26 10:34:43'),(4852,128,NULL,'172.19.0.2','2020-07-26 10:34:50','2020-07-26 10:34:50','2020-07-26 10:34:50'),(4853,129,NULL,'172.19.0.2','2020-07-26 10:35:18','2020-07-26 10:35:18','2020-07-26 10:35:18'),(4854,129,NULL,'172.19.0.2','2020-07-26 10:35:19','2020-07-26 10:35:19','2020-07-26 10:35:19'),(4855,130,NULL,'172.19.0.2','2020-07-26 10:35:36','2020-07-26 10:35:36','2020-07-26 10:35:36'),(4856,131,NULL,'172.19.0.2','2020-07-26 10:35:45','2020-07-26 10:35:45','2020-07-26 10:35:45'),(4857,132,NULL,'172.19.0.2','2020-07-26 10:35:59','2020-07-26 10:35:59','2020-07-26 10:35:59'),(4858,47,NULL,'172.19.0.2','2020-07-26 10:40:36','2020-07-26 10:40:36','2020-07-26 10:40:36'),(4859,1,NULL,'172.19.0.2','2020-07-26 10:42:11','2020-07-26 10:42:12','2020-07-26 10:42:12'),(4860,15,NULL,'172.19.0.2','2020-07-26 10:42:19','2020-07-26 10:42:19','2020-07-26 10:42:19'),(4861,21,NULL,'172.19.0.2','2020-07-26 10:42:31','2020-07-26 10:42:31','2020-07-26 10:42:31'),(4862,23,NULL,'172.19.0.2','2020-07-26 10:43:00','2020-07-26 10:43:00','2020-07-26 10:43:00'),(4863,23,NULL,'172.19.0.2','2020-07-26 10:43:05','2020-07-26 10:43:05','2020-07-26 10:43:05'),(4864,27,NULL,'172.19.0.2','2020-07-26 10:43:23','2020-07-26 10:43:23','2020-07-26 10:43:23'),(4865,28,NULL,'172.19.0.2','2020-07-26 10:43:37','2020-07-26 10:43:37','2020-07-26 10:43:37'),(4866,28,NULL,'172.19.0.2','2020-07-26 10:43:43','2020-07-26 10:43:43','2020-07-26 10:43:43'),(4867,31,NULL,'172.19.0.2','2020-07-26 10:43:57','2020-07-26 10:43:57','2020-07-26 10:43:57'),(4868,32,NULL,'172.19.0.2','2020-07-26 10:44:06','2020-07-26 10:44:06','2020-07-26 10:44:06'),(4869,32,NULL,'172.19.0.2','2020-07-26 10:44:12','2020-07-26 10:44:12','2020-07-26 10:44:12'),(4870,33,NULL,'172.19.0.2','2020-07-26 10:44:20','2020-07-26 10:44:20','2020-07-26 10:44:20'),(4871,35,NULL,'172.19.0.2','2020-07-26 10:44:34','2020-07-26 10:44:34','2020-07-26 10:44:34'),(4872,36,NULL,'172.19.0.2','2020-07-26 10:44:45','2020-07-26 10:44:45','2020-07-26 10:44:45'),(4873,41,NULL,'172.19.0.2','2020-07-26 10:45:03','2020-07-26 10:45:03','2020-07-26 10:45:03'),(4874,42,NULL,'172.19.0.2','2020-07-26 10:45:20','2020-07-26 10:45:20','2020-07-26 10:45:20'),(4875,43,NULL,'172.19.0.2','2020-07-26 10:45:56','2020-07-26 10:45:56','2020-07-26 10:45:56'),(4876,44,NULL,'172.19.0.2','2020-07-26 10:46:11','2020-07-26 10:46:11','2020-07-26 10:46:11'),(4877,44,NULL,'172.19.0.2','2020-07-26 10:46:15','2020-07-26 10:46:15','2020-07-26 10:46:15'),(4878,45,NULL,'172.19.0.2','2020-07-26 10:46:25','2020-07-26 10:46:25','2020-07-26 10:46:25'),(4879,46,NULL,'172.19.0.2','2020-07-26 10:46:34','2020-07-26 10:46:34','2020-07-26 10:46:34'),(4880,47,NULL,'172.19.0.2','2020-07-26 10:46:45','2020-07-26 10:46:45','2020-07-26 10:46:45'),(4881,47,NULL,'172.19.0.2','2020-07-26 10:46:48','2020-07-26 10:46:48','2020-07-26 10:46:48'),(4882,48,NULL,'172.19.0.2','2020-07-26 10:46:56','2020-07-26 10:46:56','2020-07-26 10:46:56'),(4883,49,NULL,'172.19.0.2','2020-07-26 10:47:05','2020-07-26 10:47:05','2020-07-26 10:47:05'),(4884,50,NULL,'172.19.0.2','2020-07-26 10:47:16','2020-07-26 10:47:16','2020-07-26 10:47:16'),(4885,72,NULL,'172.19.0.2','2020-07-26 10:47:28','2020-07-26 10:47:28','2020-07-26 10:47:28'),(4886,88,NULL,'172.19.0.2','2020-07-26 10:47:38','2020-07-26 10:47:38','2020-07-26 10:47:38'),(4887,90,NULL,'172.19.0.2','2020-07-26 10:47:47','2020-07-26 10:47:47','2020-07-26 10:47:47'),(4888,91,NULL,'172.19.0.2','2020-07-26 10:47:56','2020-07-26 10:47:56','2020-07-26 10:47:56'),(4889,93,NULL,'172.19.0.2','2020-07-26 10:48:04','2020-07-26 10:48:04','2020-07-26 10:48:04'),(4890,95,NULL,'172.19.0.2','2020-07-26 10:48:13','2020-07-26 10:48:13','2020-07-26 10:48:13'),(4891,96,NULL,'172.19.0.2','2020-07-26 10:52:58','2020-07-26 10:52:58','2020-07-26 10:52:58'),(4892,97,NULL,'172.19.0.2','2020-07-26 10:53:11','2020-07-26 10:53:11','2020-07-26 10:53:11'),(4893,98,NULL,'172.19.0.2','2020-07-26 10:53:22','2020-07-26 10:53:22','2020-07-26 10:53:22'),(4894,98,NULL,'172.19.0.2','2020-07-26 10:53:24','2020-07-26 10:53:24','2020-07-26 10:53:24'),(4895,99,NULL,'172.19.0.2','2020-07-26 10:53:30','2020-07-26 10:53:30','2020-07-26 10:53:30'),(4896,99,NULL,'172.19.0.2','2020-07-26 10:53:33','2020-07-26 10:53:33','2020-07-26 10:53:33'),(4897,100,NULL,'172.19.0.2','2020-07-26 10:53:40','2020-07-26 10:53:40','2020-07-26 10:53:40'),(4898,104,NULL,'172.19.0.2','2020-07-26 10:53:48','2020-07-26 10:53:48','2020-07-26 10:53:48'),(4899,105,NULL,'172.19.0.2','2020-07-26 10:54:01','2020-07-26 10:54:01','2020-07-26 10:54:01'),(4900,106,NULL,'172.19.0.2','2020-07-26 10:54:09','2020-07-26 10:54:09','2020-07-26 10:54:09'),(4901,107,NULL,'172.19.0.2','2020-07-26 10:54:18','2020-07-26 10:54:18','2020-07-26 10:54:18'),(4902,107,NULL,'172.19.0.2','2020-07-26 10:54:21','2020-07-26 10:54:21','2020-07-26 10:54:21'),(4903,108,NULL,'172.19.0.2','2020-07-26 10:54:34','2020-07-26 10:54:34','2020-07-26 10:54:34'),(4904,109,NULL,'172.19.0.2','2020-07-26 10:54:47','2020-07-26 10:54:47','2020-07-26 10:54:47'),(4905,110,NULL,'172.19.0.2','2020-07-26 10:55:10','2020-07-26 10:55:10','2020-07-26 10:55:10'),(4906,110,NULL,'172.19.0.2','2020-07-26 10:55:12','2020-07-26 10:55:12','2020-07-26 10:55:12'),(4907,111,NULL,'172.19.0.2','2020-07-26 10:55:21','2020-07-26 10:55:21','2020-07-26 10:55:21'),(4908,112,NULL,'172.19.0.2','2020-07-26 10:55:38','2020-07-26 10:55:38','2020-07-26 10:55:38'),(4909,113,NULL,'172.19.0.2','2020-07-26 10:55:49','2020-07-26 10:55:49','2020-07-26 10:55:49'),(4910,115,NULL,'172.19.0.2','2020-07-26 10:56:08','2020-07-26 10:56:08','2020-07-26 10:56:08'),(4911,116,NULL,'172.19.0.2','2020-07-26 10:56:21','2020-07-26 10:56:21','2020-07-26 10:56:21'),(4912,117,NULL,'172.19.0.2','2020-07-26 10:56:31','2020-07-26 10:56:31','2020-07-26 10:56:31'),(4913,120,NULL,'172.19.0.2','2020-07-26 10:56:41','2020-07-26 10:56:41','2020-07-26 10:56:41'),(4914,121,NULL,'172.19.0.2','2020-07-26 10:56:50','2020-07-26 10:56:50','2020-07-26 10:56:50'),(4915,122,NULL,'172.19.0.2','2020-07-26 10:57:00','2020-07-26 10:57:00','2020-07-26 10:57:00'),(4916,124,NULL,'172.19.0.2','2020-07-26 10:57:09','2020-07-26 10:57:09','2020-07-26 10:57:09'),(4917,52,NULL,'172.19.0.2','2020-07-26 15:23:29','2020-07-26 15:23:29','2020-07-26 15:23:29'),(4918,96,NULL,'172.19.0.2','2020-07-26 15:37:49','2020-07-26 15:37:49','2020-07-26 15:37:49'),(4919,42,NULL,'172.19.0.2','2020-07-26 17:08:45','2020-07-26 17:08:45','2020-07-26 17:08:45'),(4920,126,NULL,'172.19.0.2','2020-07-26 17:49:46','2020-07-26 17:49:46','2020-07-26 17:49:46'),(4921,47,NULL,'172.19.0.2','2020-07-26 19:49:31','2020-07-26 19:49:31','2020-07-26 19:49:31'),(4922,96,NULL,'172.19.0.2','2020-07-26 20:18:56','2020-07-26 20:18:56','2020-07-26 20:18:56'),(4923,42,NULL,'172.19.0.2','2020-07-26 20:54:05','2020-07-26 20:54:05','2020-07-26 20:54:05'),(4924,113,NULL,'172.19.0.2','2020-07-27 04:38:17','2020-07-27 04:38:17','2020-07-27 04:38:17'),(4925,14,NULL,'172.19.0.2','2020-07-27 06:59:33','2020-07-27 06:59:33','2020-07-27 06:59:33'),(4926,14,NULL,'172.19.0.2','2020-07-27 07:00:07','2020-07-27 07:00:07','2020-07-27 07:00:07'),(4927,36,NULL,'172.19.0.2','2020-07-27 07:00:24','2020-07-27 07:00:24','2020-07-27 07:00:24'),(4928,36,NULL,'172.19.0.2','2020-07-27 07:12:31','2020-07-27 07:12:31','2020-07-27 07:12:31'),(4929,36,NULL,'172.19.0.2','2020-07-27 07:12:52','2020-07-27 07:12:52','2020-07-27 07:12:52'),(4930,44,NULL,'172.19.0.2','2020-07-27 07:13:53','2020-07-27 07:13:53','2020-07-27 07:13:53'),(4931,44,NULL,'172.19.0.2','2020-07-27 07:14:26','2020-07-27 07:14:26','2020-07-27 07:14:26'),(4932,50,NULL,'172.19.0.2','2020-07-27 07:14:33','2020-07-27 07:14:33','2020-07-27 07:14:33'),(4933,52,NULL,'172.19.0.2','2020-07-27 07:14:50','2020-07-27 07:14:50','2020-07-27 07:14:50'),(4934,89,NULL,'172.19.0.2','2020-07-27 07:15:15','2020-07-27 07:15:15','2020-07-27 07:15:15'),(4935,93,NULL,'172.19.0.2','2020-07-27 07:15:35','2020-07-27 07:15:35','2020-07-27 07:15:35'),(4936,100,NULL,'172.19.0.2','2020-07-27 07:16:25','2020-07-27 07:16:25','2020-07-27 07:16:25'),(4937,108,NULL,'172.19.0.2','2020-07-27 07:17:22','2020-07-27 07:17:22','2020-07-27 07:17:22'),(4938,108,NULL,'172.19.0.2','2020-07-27 07:18:22','2020-07-27 07:18:22','2020-07-27 07:18:22'),(4939,114,NULL,'172.19.0.2','2020-07-27 07:19:09','2020-07-27 07:19:09','2020-07-27 07:19:09'),(4940,114,NULL,'172.19.0.2','2020-07-27 07:19:51','2020-07-27 07:19:51','2020-07-27 07:19:51'),(4941,122,NULL,'172.19.0.2','2020-07-27 07:20:44','2020-07-27 07:20:44','2020-07-27 07:20:44'),(4942,125,NULL,'172.19.0.2','2020-07-27 07:21:19','2020-07-27 07:21:19','2020-07-27 07:21:19'),(4943,126,NULL,'172.19.0.2','2020-07-27 07:21:48','2020-07-27 07:21:48','2020-07-27 07:21:48'),(4944,127,NULL,'172.19.0.2','2020-07-27 07:22:31','2020-07-27 07:22:32','2020-07-27 07:22:32'),(4945,127,NULL,'172.19.0.2','2020-07-27 07:22:58','2020-07-27 07:22:58','2020-07-27 07:22:58'),(4946,128,NULL,'172.19.0.2','2020-07-27 07:23:43','2020-07-27 07:23:43','2020-07-27 07:23:43'),(4947,129,NULL,'172.19.0.2','2020-07-27 07:24:49','2020-07-27 07:24:49','2020-07-27 07:24:49'),(4948,130,NULL,'172.19.0.2','2020-07-27 07:25:16','2020-07-27 07:25:16','2020-07-27 07:25:16'),(4949,131,NULL,'172.19.0.2','2020-07-27 07:25:52','2020-07-27 07:25:52','2020-07-27 07:25:52'),(4950,132,NULL,'172.19.0.2','2020-07-27 07:26:55','2020-07-27 07:26:55','2020-07-27 07:26:55'),(4951,132,NULL,'172.19.0.2','2020-07-27 07:27:54','2020-07-27 07:27:54','2020-07-27 07:27:54'),(4952,132,NULL,'172.19.0.2','2020-07-27 07:28:27','2020-07-27 07:28:27','2020-07-27 07:28:27'),(4953,132,NULL,'172.19.0.2','2020-07-27 07:28:49','2020-07-27 07:28:49','2020-07-27 07:28:49'),(4954,1,NULL,'172.19.0.2','2020-07-27 07:48:38','2020-07-27 07:48:38','2020-07-27 07:48:38'),(4955,15,NULL,'172.19.0.2','2020-07-27 07:48:46','2020-07-27 07:48:46','2020-07-27 07:48:46'),(4956,21,NULL,'172.19.0.2','2020-07-27 07:49:06','2020-07-27 07:49:06','2020-07-27 07:49:06'),(4957,23,NULL,'172.19.0.2','2020-07-27 07:49:28','2020-07-27 07:49:28','2020-07-27 07:49:28'),(4958,23,NULL,'172.19.0.2','2020-07-27 07:49:34','2020-07-27 07:49:34','2020-07-27 07:49:34'),(4959,27,NULL,'172.19.0.2','2020-07-27 07:49:48','2020-07-27 07:49:48','2020-07-27 07:49:48'),(4960,28,NULL,'172.19.0.2','2020-07-27 07:50:12','2020-07-27 07:50:12','2020-07-27 07:50:12'),(4961,31,NULL,'172.19.0.2','2020-07-27 07:50:41','2020-07-27 07:50:41','2020-07-27 07:50:41'),(4962,32,NULL,'172.19.0.2','2020-07-27 07:51:07','2020-07-27 07:51:07','2020-07-27 07:51:07'),(4963,33,NULL,'172.19.0.2','2020-07-27 07:51:34','2020-07-27 07:51:34','2020-07-27 07:51:34'),(4964,35,NULL,'172.19.0.2','2020-07-27 07:52:00','2020-07-27 07:52:00','2020-07-27 07:52:00'),(4965,35,NULL,'172.19.0.2','2020-07-27 07:52:10','2020-07-27 07:52:10','2020-07-27 07:52:10'),(4966,37,NULL,'172.19.0.2','2020-07-27 07:52:28','2020-07-27 07:52:28','2020-07-27 07:52:28'),(4967,37,NULL,'172.19.0.2','2020-07-27 08:05:13','2020-07-27 08:05:13','2020-07-27 08:05:13'),(4968,37,NULL,'172.19.0.2','2020-07-27 08:06:16','2020-07-27 08:06:16','2020-07-27 08:06:16'),(4969,41,NULL,'172.19.0.2','2020-07-27 08:07:24','2020-07-27 08:07:24','2020-07-27 08:07:24'),(4970,41,NULL,'172.19.0.2','2020-07-27 08:08:18','2020-07-27 08:08:18','2020-07-27 08:08:18'),(4971,42,NULL,'172.19.0.2','2020-07-27 08:08:29','2020-07-27 08:08:29','2020-07-27 08:08:29'),(4972,43,NULL,'172.19.0.2','2020-07-27 08:09:04','2020-07-27 08:09:04','2020-07-27 08:09:04'),(4973,43,NULL,'172.19.0.2','2020-07-27 08:10:00','2020-07-27 08:10:00','2020-07-27 08:10:00'),(4974,45,NULL,'172.19.0.2','2020-07-27 08:10:59','2020-07-27 08:10:59','2020-07-27 08:10:59'),(4975,46,NULL,'172.19.0.2','2020-07-27 08:11:10','2020-07-27 08:11:10','2020-07-27 08:11:10'),(4976,47,NULL,'172.19.0.2','2020-07-27 08:11:40','2020-07-27 08:11:40','2020-07-27 08:11:40'),(4977,47,NULL,'172.19.0.2','2020-07-27 08:12:40','2020-07-27 08:12:40','2020-07-27 08:12:40'),(4978,48,NULL,'172.19.0.2','2020-07-27 08:13:49','2020-07-27 08:13:49','2020-07-27 08:13:49'),(4979,49,NULL,'172.19.0.2','2020-07-27 08:14:12','2020-07-27 08:14:12','2020-07-27 08:14:12'),(4980,49,NULL,'172.19.0.2','2020-07-27 08:15:12','2020-07-27 08:15:12','2020-07-27 08:15:12'),(4981,65,NULL,'172.19.0.2','2020-07-27 08:15:38','2020-07-27 08:15:38','2020-07-27 08:15:38'),(4982,72,NULL,'172.19.0.2','2020-07-27 08:16:01','2020-07-27 08:16:01','2020-07-27 08:16:01'),(4983,88,NULL,'172.19.0.2','2020-07-27 08:17:03','2020-07-27 08:17:03','2020-07-27 08:17:03'),(4984,88,NULL,'172.19.0.2','2020-07-27 08:17:22','2020-07-27 08:17:22','2020-07-27 08:17:22'),(4985,90,NULL,'172.19.0.2','2020-07-27 08:17:40','2020-07-27 08:17:40','2020-07-27 08:17:40'),(4986,91,NULL,'172.19.0.2','2020-07-27 08:19:19','2020-07-27 08:19:19','2020-07-27 08:19:19'),(4987,94,NULL,'172.19.0.2','2020-07-27 08:20:18','2020-07-27 08:20:18','2020-07-27 08:20:18'),(4988,95,NULL,'172.19.0.2','2020-07-27 08:21:52','2020-07-27 08:21:52','2020-07-27 08:21:52'),(4989,96,NULL,'172.19.0.2','2020-07-27 08:22:32','2020-07-27 08:22:32','2020-07-27 08:22:32'),(4990,97,NULL,'172.19.0.2','2020-07-27 08:22:52','2020-07-27 08:22:52','2020-07-27 08:22:52'),(4991,98,NULL,'172.19.0.2','2020-07-27 08:23:09','2020-07-27 08:23:09','2020-07-27 08:23:09'),(4992,99,NULL,'172.19.0.2','2020-07-27 08:23:48','2020-07-27 08:23:48','2020-07-27 08:23:48'),(4993,101,NULL,'172.19.0.2','2020-07-27 08:24:29','2020-07-27 08:24:29','2020-07-27 08:24:29'),(4994,104,NULL,'172.19.0.2','2020-07-27 08:25:25','2020-07-27 08:25:25','2020-07-27 08:25:25'),(4995,104,NULL,'172.19.0.2','2020-07-27 08:26:22','2020-07-27 08:26:22','2020-07-27 08:26:22'),(4996,105,NULL,'172.19.0.2','2020-07-27 08:27:18','2020-07-27 08:27:18','2020-07-27 08:27:18'),(4997,106,NULL,'172.19.0.2','2020-07-27 08:27:37','2020-07-27 08:27:37','2020-07-27 08:27:37'),(4998,107,NULL,'172.19.0.2','2020-07-27 08:27:53','2020-07-27 08:27:53','2020-07-27 08:27:53'),(4999,107,NULL,'172.19.0.2','2020-07-27 08:28:54','2020-07-27 08:28:54','2020-07-27 08:28:54'),(5000,107,NULL,'172.19.0.2','2020-07-27 08:29:04','2020-07-27 08:29:04','2020-07-27 08:29:04'),(5001,109,NULL,'172.19.0.2','2020-07-27 08:29:59','2020-07-27 08:29:59','2020-07-27 08:29:59'),(5002,109,NULL,'172.19.0.2','2020-07-27 08:30:08','2020-07-27 08:30:08','2020-07-27 08:30:08'),(5003,110,NULL,'172.19.0.2','2020-07-27 08:30:35','2020-07-27 08:30:35','2020-07-27 08:30:35'),(5004,111,NULL,'172.19.0.2','2020-07-27 08:31:03','2020-07-27 08:31:03','2020-07-27 08:31:03'),(5005,109,NULL,'172.19.0.2','2020-07-27 08:31:08','2020-07-27 08:31:08','2020-07-27 08:31:08'),(5006,110,NULL,'172.19.0.2','2020-07-27 08:31:35','2020-07-27 08:31:35','2020-07-27 08:31:35'),(5007,112,NULL,'172.19.0.2','2020-07-27 08:32:09','2020-07-27 08:32:09','2020-07-27 08:32:09'),(5008,110,NULL,'172.19.0.2','2020-07-27 08:32:34','2020-07-27 08:32:34','2020-07-27 08:32:34'),(5009,111,NULL,'172.19.0.2','2020-07-27 08:32:55','2020-07-27 08:32:55','2020-07-27 08:32:55'),(5010,112,NULL,'172.19.0.2','2020-07-27 08:33:11','2020-07-27 08:33:12','2020-07-27 08:33:12'),(5011,111,NULL,'172.19.0.2','2020-07-27 08:33:56','2020-07-27 08:33:56','2020-07-27 08:33:56'),(5012,113,NULL,'172.19.0.2','2020-07-27 08:34:10','2020-07-27 08:34:10','2020-07-27 08:34:10'),(5013,112,NULL,'172.19.0.2','2020-07-27 08:35:01','2020-07-27 08:35:01','2020-07-27 08:35:01'),(5014,113,NULL,'172.19.0.2','2020-07-27 08:35:14','2020-07-27 08:35:14','2020-07-27 08:35:14'),(5015,113,NULL,'172.19.0.2','2020-07-27 08:35:22','2020-07-27 08:35:22','2020-07-27 08:35:22'),(5016,113,NULL,'172.19.0.2','2020-07-27 08:36:22','2020-07-27 08:36:22','2020-07-27 08:36:22'),(5017,115,NULL,'172.19.0.2','2020-07-27 08:37:29','2020-07-27 08:37:29','2020-07-27 08:37:29'),(5018,116,NULL,'172.19.0.2','2020-07-27 08:38:35','2020-07-27 08:38:35','2020-07-27 08:38:35'),(5019,117,NULL,'172.19.0.2','2020-07-27 08:39:01','2020-07-27 08:39:01','2020-07-27 08:39:01'),(5020,117,NULL,'172.19.0.2','2020-07-27 08:40:03','2020-07-27 08:40:03','2020-07-27 08:40:03'),(5021,119,NULL,'172.19.0.2','2020-07-27 08:41:06','2020-07-27 08:41:06','2020-07-27 08:41:06'),(5022,119,NULL,'172.19.0.2','2020-07-27 08:42:06','2020-07-27 08:42:06','2020-07-27 08:42:06'),(5023,120,NULL,'172.19.0.2','2020-07-27 08:43:16','2020-07-27 08:43:16','2020-07-27 08:43:16'),(5024,121,NULL,'172.19.0.2','2020-07-27 08:43:46','2020-07-27 08:43:46','2020-07-27 08:43:46'),(5025,121,NULL,'172.19.0.2','2020-07-27 08:43:58','2020-07-27 08:43:58','2020-07-27 08:43:58'),(5026,121,NULL,'172.19.0.2','2020-07-27 09:11:13','2020-07-27 09:11:13','2020-07-27 09:11:13'),(5027,123,NULL,'172.19.0.2','2020-07-27 09:11:38','2020-07-27 09:11:38','2020-07-27 09:11:38'),(5028,124,NULL,'172.19.0.2','2020-07-27 09:13:13','2020-07-27 09:13:13','2020-07-27 09:13:13'),(5029,15,NULL,'172.19.0.2','2020-07-27 09:53:22','2020-07-27 09:53:22','2020-07-27 09:53:22'),(5030,126,NULL,'172.19.0.2','2020-07-27 11:07:53','2020-07-27 11:07:53','2020-07-27 11:07:53'),(5031,47,NULL,'172.19.0.2','2020-07-27 13:15:53','2020-07-27 13:15:53','2020-07-27 13:15:53'),(5032,101,NULL,'172.19.0.2','2020-07-27 14:45:53','2020-07-27 14:45:53','2020-07-27 14:45:53'),(5033,93,NULL,'172.19.0.2','2020-07-27 16:15:53','2020-07-27 16:15:53','2020-07-27 16:15:53'),(5034,126,NULL,'172.19.0.2','2020-07-27 17:00:53','2020-07-27 17:00:53','2020-07-27 17:00:53'),(5035,112,NULL,'172.19.0.2','2020-07-27 18:30:53','2020-07-27 18:30:53','2020-07-27 18:30:53'),(5036,47,NULL,'172.19.0.2','2020-07-27 18:36:53','2020-07-27 18:36:53','2020-07-27 18:36:53'),(5037,105,NULL,'172.19.0.2','2020-07-27 21:30:53','2020-07-27 21:30:53','2020-07-27 21:30:53'),(5038,41,NULL,'106.11.159.71','2020-07-27 21:44:05','2020-07-27 21:44:05','2020-07-27 21:44:05'),(5039,47,NULL,'172.19.0.2','2020-07-27 23:00:53','2020-07-27 23:00:53','2020-07-27 23:00:53'),(5040,88,NULL,'172.19.0.2','2020-07-28 02:00:53','2020-07-28 02:00:53','2020-07-28 02:00:53'),(5041,126,NULL,'172.19.0.2','2020-07-28 03:30:53','2020-07-28 03:30:53','2020-07-28 03:30:53'),(5042,95,NULL,'172.19.0.2','2020-07-28 03:30:55','2020-07-28 03:30:56','2020-07-28 03:30:56'),(5043,94,NULL,'172.19.0.2','2020-07-28 03:34:29','2020-07-28 03:34:29','2020-07-28 03:34:29'),(5044,14,NULL,'172.19.0.2','2020-07-28 04:10:29','2020-07-28 04:10:29','2020-07-28 04:10:29'),(5045,45,NULL,'172.19.0.2','2020-07-28 04:46:29','2020-07-28 04:46:29','2020-07-28 04:46:29'),(5046,114,NULL,'172.19.0.2','2020-07-28 05:31:29','2020-07-28 05:31:29','2020-07-28 05:31:29'),(5047,125,NULL,'172.19.0.2','2020-07-28 06:16:29','2020-07-28 06:16:29','2020-07-28 06:16:29'),(5048,97,NULL,'172.19.0.2','2020-07-28 07:01:29','2020-07-28 07:01:29','2020-07-28 07:01:29'),(5049,47,NULL,'172.19.0.2','2020-07-28 09:25:06','2020-07-28 09:25:06','2020-07-28 09:25:06'),(5050,126,NULL,'172.19.0.2','2020-07-28 10:01:29','2020-07-28 10:01:29','2020-07-28 10:01:29'),(5051,106,NULL,'172.19.0.2','2020-07-28 10:04:19','2020-07-28 10:04:19','2020-07-28 10:04:19'),(5052,65,NULL,'172.19.0.2','2020-07-28 11:01:29','2020-07-28 11:01:29','2020-07-28 11:01:29'),(5053,37,NULL,'172.19.0.2','2020-07-28 13:34:02','2020-07-28 13:34:02','2020-07-28 13:34:02'),(5054,99,NULL,'172.19.0.2','2020-07-28 14:01:29','2020-07-28 14:01:29','2020-07-28 14:01:29'),(5055,113,NULL,'172.19.0.2','2020-07-28 15:31:29','2020-07-28 15:31:29','2020-07-28 15:31:29'),(5056,15,NULL,'172.19.0.2','2020-07-28 16:38:09','2020-07-28 16:38:09','2020-07-28 16:38:09'),(5057,89,NULL,'172.19.0.2','2020-07-28 17:14:09','2020-07-28 17:14:10','2020-07-28 17:14:10'),(5058,37,NULL,'172.19.0.2','2020-07-28 18:10:28','2020-07-28 18:10:28','2020-07-28 18:10:28'),(5059,90,NULL,'172.19.0.2','2020-07-28 19:09:18','2020-07-28 19:09:18','2020-07-28 19:09:18'),(5060,126,NULL,'172.19.0.2','2020-07-28 19:49:18','2020-07-28 19:49:18','2020-07-28 19:49:18'),(5061,109,NULL,'172.19.0.2','2020-07-29 00:29:12','2020-07-29 00:29:12','2020-07-29 00:29:12'),(5062,47,NULL,'172.19.0.2','2020-07-29 01:26:58','2020-07-29 01:26:58','2020-07-29 01:26:58'),(5063,98,NULL,'172.19.0.2','2020-07-29 02:38:59','2020-07-29 02:38:59','2020-07-29 02:38:59'),(5064,121,NULL,'172.19.0.2','2020-07-29 02:58:58','2020-07-29 02:58:58','2020-07-29 02:58:58'),(5065,122,NULL,'172.19.0.2','2020-07-29 03:18:58','2020-07-29 03:18:58','2020-07-29 03:18:58'),(5066,52,NULL,'172.19.0.2','2020-07-29 03:38:59','2020-07-29 03:38:59','2020-07-29 03:38:59'),(5067,35,NULL,'172.19.0.2','2020-07-29 04:21:43','2020-07-29 04:21:43','2020-07-29 04:21:43'),(5068,130,NULL,'172.19.0.2','2020-07-29 06:06:47','2020-07-29 06:06:47','2020-07-29 06:06:47'),(5069,111,NULL,'172.19.0.2','2020-07-29 06:21:43','2020-07-29 06:21:43','2020-07-29 06:21:43'),(5070,100,NULL,'172.19.0.2','2020-07-29 07:21:43','2020-07-29 07:21:43','2020-07-29 07:21:43'),(5071,104,NULL,'172.19.0.2','2020-07-29 10:03:43','2020-07-29 10:03:43','2020-07-29 10:03:43'),(5072,72,NULL,'172.19.0.2','2020-07-29 10:39:43','2020-07-29 10:39:43','2020-07-29 10:39:43'),(5073,126,NULL,'172.19.0.2','2020-07-29 11:15:43','2020-07-29 11:15:43','2020-07-29 11:15:43'),(5074,37,NULL,'172.19.0.2','2020-07-29 11:15:43','2020-07-29 11:15:44','2020-07-29 11:15:44'),(5075,42,NULL,'172.19.0.2','2020-07-29 11:55:19','2020-07-29 11:55:19','2020-07-29 11:55:19'),(5076,42,NULL,'172.19.0.2','2020-07-29 12:47:38','2020-07-29 12:47:38','2020-07-29 12:47:38'),(5077,47,NULL,'172.19.0.2','2020-07-29 18:48:57','2020-07-29 18:48:57','2020-07-29 18:48:57'),(5078,32,NULL,'172.19.0.2','2020-07-29 19:06:39','2020-07-29 19:06:39','2020-07-29 19:06:39'),(5079,21,NULL,'172.19.0.2','2020-07-29 19:07:01','2020-07-29 19:07:01','2020-07-29 19:07:01'),(5080,52,NULL,'172.19.0.2','2020-07-29 20:53:11','2020-07-29 20:53:11','2020-07-29 20:53:11'),(5081,36,NULL,'172.19.0.2','2020-07-29 21:15:38','2020-07-29 21:15:38','2020-07-29 21:15:38'),(5082,15,NULL,'172.19.0.2','2020-07-29 21:15:52','2020-07-29 21:15:52','2020-07-29 21:15:52'),(5083,41,NULL,'172.19.0.2','2020-07-29 21:16:10','2020-07-29 21:16:10','2020-07-29 21:16:10'),(5084,33,NULL,'172.19.0.2','2020-07-29 21:16:52','2020-07-29 21:16:52','2020-07-29 21:16:52'),(5085,127,NULL,'172.19.0.2','2020-07-29 21:48:57','2020-07-29 21:48:57','2020-07-29 21:48:57'),(5086,126,NULL,'172.19.0.2','2020-07-29 22:06:15','2020-07-29 22:06:15','2020-07-29 22:06:15'),(5087,27,NULL,'172.19.0.2','2020-07-29 22:34:21','2020-07-29 22:34:21','2020-07-29 22:34:21'),(5088,44,NULL,'172.19.0.2','2020-07-29 23:15:11','2020-07-29 23:15:11','2020-07-29 23:15:11'),(5089,43,NULL,'172.19.0.2','2020-07-29 23:18:57','2020-07-29 23:18:57','2020-07-29 23:18:57'),(5090,27,NULL,'172.19.0.2','2020-07-30 05:04:21','2020-07-30 05:04:22','2020-07-30 05:04:22'),(5091,104,NULL,'172.19.0.2','2020-07-30 06:57:23','2020-07-30 06:57:23','2020-07-30 06:57:23'),(5092,47,NULL,'172.19.0.2','2020-07-30 11:43:54','2020-07-30 11:43:54','2020-07-30 11:43:54'),(5093,47,NULL,'172.19.0.2','2020-07-30 12:49:00','2020-07-30 12:49:00','2020-07-30 12:49:00'),(5094,115,NULL,'172.19.0.2','2020-07-30 12:58:55','2020-07-30 12:58:55','2020-07-30 12:58:55'),(5095,126,NULL,'172.19.0.2','2020-07-30 13:28:55','2020-07-30 13:28:55','2020-07-30 13:28:55'),(5096,14,NULL,'172.19.0.2','2020-07-30 17:34:21','2020-07-30 17:34:21','2020-07-30 17:34:21'),(5097,104,NULL,'172.19.0.2','2020-07-30 17:45:49','2020-07-30 17:45:49','2020-07-30 17:45:49'),(5098,50,NULL,'172.19.0.2','2020-07-30 19:05:01','2020-07-30 19:05:01','2020-07-30 19:05:01'),(5099,126,NULL,'172.19.0.2','2020-07-31 06:23:01','2020-07-31 06:23:01','2020-07-31 06:23:01'),(5100,32,NULL,'172.19.0.2','2020-07-31 08:55:34','2020-07-31 08:55:34','2020-07-31 08:55:34'),(5101,132,NULL,'172.19.0.2','2020-07-31 10:35:33','2020-07-31 10:35:33','2020-07-31 10:35:33'),(5102,14,NULL,'172.19.0.2','2020-07-31 12:12:33','2020-07-31 12:12:33','2020-07-31 12:12:33'),(5103,14,NULL,'172.19.0.2','2020-07-31 12:12:35','2020-07-31 12:12:36','2020-07-31 12:12:36'),(5104,33,NULL,'172.19.0.2','2020-07-31 12:40:50','2020-07-31 12:40:50','2020-07-31 12:40:50'),(5105,14,NULL,'172.19.0.2','2020-07-31 15:45:01','2020-07-31 15:45:01','2020-07-31 15:45:01'),(5106,114,NULL,'172.19.0.2','2020-07-31 16:51:41','2020-07-31 16:51:41','2020-07-31 16:51:41'),(5107,105,NULL,'172.19.0.2','2020-07-31 19:31:57','2020-07-31 19:31:57','2020-07-31 19:31:57'),(5108,31,NULL,'172.19.0.2','2020-07-31 22:47:49','2020-07-31 22:47:49','2020-07-31 22:47:49'),(5109,125,NULL,'172.19.0.2','2020-07-31 23:21:14','2020-07-31 23:21:14','2020-07-31 23:21:14'),(5110,23,NULL,'172.19.0.2','2020-08-01 01:56:24','2020-08-01 01:56:24','2020-08-01 01:56:24'),(5111,108,NULL,'172.19.0.2','2020-08-01 02:38:37','2020-08-01 02:38:37','2020-08-01 02:38:37'),(5112,27,NULL,'172.19.0.2','2020-08-01 08:34:16','2020-08-01 08:34:16','2020-08-01 08:34:16'),(5113,89,NULL,'172.19.0.2','2020-08-01 10:27:43','2020-08-01 10:27:43','2020-08-01 10:27:43'),(5114,90,NULL,'172.19.0.2','2020-08-01 10:28:25','2020-08-01 10:28:25','2020-08-01 10:28:25'),(5115,91,NULL,'172.19.0.2','2020-08-01 10:29:38','2020-08-01 10:29:38','2020-08-01 10:29:38'),(5116,93,NULL,'172.19.0.2','2020-08-01 10:30:20','2020-08-01 10:30:20','2020-08-01 10:30:20'),(5117,94,NULL,'172.19.0.2','2020-08-01 10:31:02','2020-08-01 10:31:02','2020-08-01 10:31:02'),(5118,48,NULL,'172.19.0.2','2020-08-01 14:55:19','2020-08-01 14:55:19','2020-08-01 14:55:19'),(5119,105,NULL,'172.19.0.2','2020-08-01 17:41:59','2020-08-01 17:41:59','2020-08-01 17:41:59'),(5120,104,NULL,'172.19.0.2','2020-08-01 18:48:39','2020-08-01 18:48:39','2020-08-01 18:48:39'),(5121,14,NULL,'172.19.0.2','2020-08-01 22:42:08','2020-08-01 22:42:08','2020-08-01 22:42:08'),(5122,14,NULL,'172.19.0.2','2020-08-01 23:14:09','2020-08-01 23:14:09','2020-08-01 23:14:09'),(5123,116,NULL,'172.19.0.2','2020-08-01 23:24:43','2020-08-01 23:24:43','2020-08-01 23:24:43'),(5124,93,NULL,'172.19.0.2','2020-08-01 23:27:28','2020-08-01 23:27:28','2020-08-01 23:27:28'),(5125,132,NULL,'172.19.0.2','2020-08-01 23:27:46','2020-08-01 23:27:46','2020-08-01 23:27:46'),(5126,52,NULL,'172.19.0.2','2020-08-02 00:20:49','2020-08-02 00:20:49','2020-08-02 00:20:49'),(5127,41,NULL,'172.19.0.2','2020-08-02 00:45:26','2020-08-02 00:45:26','2020-08-02 00:45:26'),(5128,105,NULL,'172.19.0.2','2020-08-02 08:32:36','2020-08-02 08:32:36','2020-08-02 08:32:36'),(5129,99,NULL,'172.19.0.2','2020-08-02 10:10:25','2020-08-02 10:10:25','2020-08-02 10:10:25'),(5130,105,NULL,'172.19.0.2','2020-08-03 07:28:25','2020-08-03 07:28:25','2020-08-03 07:28:25'),(5131,127,NULL,'172.19.0.2','2020-08-03 14:41:43','2020-08-03 14:41:43','2020-08-03 14:41:43'),(5132,104,NULL,'172.19.0.2','2020-08-03 22:50:29','2020-08-03 22:50:29','2020-08-03 22:50:29'),(5133,90,NULL,'172.19.0.2','2020-08-03 22:52:40','2020-08-03 22:52:40','2020-08-03 22:52:40'),(5134,100,NULL,'172.19.0.2','2020-08-03 22:53:34','2020-08-03 22:53:34','2020-08-03 22:53:34'),(5135,36,NULL,'172.19.0.2','2020-08-04 00:00:26','2020-08-04 00:00:26','2020-08-04 00:00:26'),(5136,33,NULL,'172.19.0.2','2020-08-04 00:18:25','2020-08-04 00:18:25','2020-08-04 00:18:25'),(5137,43,NULL,'172.19.0.2','2020-08-04 05:00:26','2020-08-04 05:00:26','2020-08-04 05:00:26'),(5138,43,NULL,'172.19.0.2','2020-08-04 05:01:43','2020-08-04 05:01:44','2020-08-04 05:01:44'),(5139,43,NULL,'172.19.0.2','2020-08-04 08:00:26','2020-08-04 08:00:26','2020-08-04 08:00:26'),(5140,104,NULL,'172.19.0.2','2020-08-04 13:23:33','2020-08-04 13:23:33','2020-08-04 13:23:33'),(5141,106,NULL,'172.19.0.2','2020-08-04 13:25:17','2020-08-04 13:25:17','2020-08-04 13:25:17'),(5142,128,NULL,'172.19.0.2','2020-08-04 13:33:46','2020-08-04 13:33:46','2020-08-04 13:33:46'),(5143,52,NULL,'172.19.0.2','2020-08-04 15:46:52','2020-08-04 15:46:52','2020-08-04 15:46:52'),(5144,52,NULL,'172.19.0.2','2020-08-04 16:33:46','2020-08-04 16:33:46','2020-08-04 16:33:46'),(5145,108,NULL,'172.19.0.2','2020-08-04 19:13:25','2020-08-04 19:13:25','2020-08-04 19:13:25'),(5146,72,NULL,'172.19.0.2','2020-08-04 19:13:38','2020-08-04 19:13:38','2020-08-04 19:13:38'),(5147,42,NULL,'172.19.0.2','2020-08-04 20:53:17','2020-08-04 20:53:17','2020-08-04 20:53:17'),(5148,94,NULL,'172.19.0.2','2020-08-05 03:11:09','2020-08-05 03:11:09','2020-08-05 03:11:09'),(5149,14,NULL,'172.19.0.2','2020-08-05 05:17:09','2020-08-05 05:17:09','2020-08-05 05:17:09'),(5150,14,NULL,'172.19.0.2','2020-08-05 05:18:14','2020-08-05 05:18:14','2020-08-05 05:18:14'),(5151,14,NULL,'172.19.0.2','2020-08-05 06:23:49','2020-08-05 06:23:49','2020-08-05 06:23:49'),(5152,14,NULL,'172.19.0.2','2020-08-05 06:24:49','2020-08-05 06:24:49','2020-08-05 06:24:49'),(5153,14,NULL,'172.19.0.2','2020-08-05 07:53:49','2020-08-05 07:53:49','2020-08-05 07:53:49'),(5154,14,NULL,'172.19.0.2','2020-08-05 07:54:49','2020-08-05 07:54:51','2020-08-05 07:54:51'),(5155,14,NULL,'172.19.0.2','2020-08-05 10:08:49','2020-08-05 10:08:49','2020-08-05 10:08:49'),(5156,107,NULL,'172.19.0.2','2020-08-05 17:31:51','2020-08-05 17:31:51','2020-08-05 17:31:51'),(5157,14,NULL,'172.19.0.2','2020-08-05 19:47:15','2020-08-05 19:47:15','2020-08-05 19:47:15'),(5158,126,NULL,'172.19.0.2','2020-08-05 19:49:49','2020-08-05 19:49:49','2020-08-05 19:49:49'),(5159,45,NULL,'172.19.0.2','2020-08-05 21:26:29','2020-08-05 21:26:29','2020-08-05 21:26:29'),(5160,131,NULL,'172.19.0.2','2020-08-06 00:00:55','2020-08-06 00:00:55','2020-08-06 00:00:55'),(5161,33,NULL,'172.19.0.2','2020-08-06 05:21:49','2020-08-06 05:21:50','2020-08-06 05:21:50'),(5162,126,NULL,'172.19.0.2','2020-08-06 07:37:31','2020-08-06 07:37:31','2020-08-06 07:37:31'),(5163,42,NULL,'172.19.0.2','2020-08-06 10:19:35','2020-08-06 10:19:35','2020-08-06 10:19:35'),(5164,65,NULL,'172.19.0.2','2020-08-06 12:17:07','2020-08-06 12:17:07','2020-08-06 12:17:07'),(5165,104,NULL,'172.19.0.2','2020-08-06 12:17:28','2020-08-06 12:17:28','2020-08-06 12:17:28'),(5166,125,NULL,'172.19.0.2','2020-08-06 18:46:17','2020-08-06 18:46:17','2020-08-06 18:46:17'),(5167,130,NULL,'172.19.0.2','2020-08-06 19:52:57','2020-08-06 19:52:57','2020-08-06 19:52:57'),(5168,32,NULL,'172.19.0.2','2020-08-06 21:02:33','2020-08-06 21:02:33','2020-08-06 21:02:33'),(5169,48,NULL,'172.19.0.2','2020-08-07 00:17:36','2020-08-07 00:17:36','2020-08-07 00:17:36'),(5170,14,NULL,'172.19.0.2','2020-08-07 01:46:45','2020-08-07 01:46:45','2020-08-07 01:46:45'),(5171,128,NULL,'172.19.0.2','2020-08-07 02:15:34','2020-08-07 02:15:34','2020-08-07 02:15:34'),(5172,129,NULL,'172.19.0.2','2020-08-07 03:50:57','2020-08-07 03:50:57','2020-08-07 03:50:57'),(5173,72,NULL,'172.19.0.2','2020-08-07 09:32:54','2020-08-07 09:32:54','2020-08-07 09:32:54'),(5174,88,NULL,'172.19.0.2','2020-08-07 09:35:32','2020-08-07 09:35:32','2020-08-07 09:35:32'),(5175,91,NULL,'172.19.0.2','2020-08-07 09:35:35','2020-08-07 09:35:36','2020-08-07 09:35:36'),(5176,99,NULL,'172.19.0.2','2020-08-07 09:35:38','2020-08-07 09:35:38','2020-08-07 09:35:38'),(5177,23,NULL,'172.19.0.2','2020-08-07 11:37:33','2020-08-07 11:37:33','2020-08-07 11:37:33'),(5178,97,NULL,'172.19.0.2','2020-08-07 11:43:25','2020-08-07 11:43:25','2020-08-07 11:43:25'),(5179,52,NULL,'172.19.0.2','2020-08-07 13:05:12','2020-08-07 13:05:12','2020-08-07 13:05:12'),(5180,132,NULL,'172.19.0.2','2020-08-07 15:23:43','2020-08-07 15:23:43','2020-08-07 15:23:43'),(5181,32,NULL,'172.19.0.2','2020-08-07 15:52:33','2020-08-07 15:52:33','2020-08-07 15:52:33'),(5182,32,NULL,'172.19.0.2','2020-08-07 15:52:39','2020-08-07 15:52:39','2020-08-07 15:52:39'),(5183,32,NULL,'172.19.0.2','2020-08-07 15:52:42','2020-08-07 15:52:42','2020-08-07 15:52:42'),(5184,124,NULL,'172.19.0.2','2020-08-07 17:57:49','2020-08-07 17:57:49','2020-08-07 17:57:49'),(5185,23,NULL,'172.19.0.2','2020-08-07 21:22:51','2020-08-07 21:22:51','2020-08-07 21:22:51'),(5186,42,NULL,'172.19.0.2','2020-08-07 22:25:38','2020-08-07 22:25:38','2020-08-07 22:25:38'),(5187,14,NULL,'172.19.0.2','2020-08-07 23:12:04','2020-08-07 23:12:04','2020-08-07 23:12:04'),(5188,128,NULL,'172.19.0.2','2020-08-08 00:37:30','2020-08-08 00:37:30','2020-08-08 00:37:30'),(5189,42,NULL,'172.19.0.2','2020-08-08 09:52:24','2020-08-08 09:52:24','2020-08-08 09:52:24'),(5190,129,NULL,'172.19.0.2','2020-08-08 09:54:35','2020-08-08 09:54:36','2020-08-08 09:54:36'),(5191,129,NULL,'172.19.0.2','2020-08-08 10:09:28','2020-08-08 10:09:28','2020-08-08 10:09:28'),(5192,96,NULL,'172.19.0.2','2020-08-08 10:10:51','2020-08-08 10:10:51','2020-08-08 10:10:51'),(5193,100,NULL,'172.19.0.2','2020-08-08 15:58:08','2020-08-08 15:58:08','2020-08-08 15:58:08'),(5194,101,NULL,'172.19.0.2','2020-08-08 15:58:14','2020-08-08 15:58:14','2020-08-08 15:58:14'),(5195,104,NULL,'172.19.0.2','2020-08-08 15:58:19','2020-08-08 15:58:19','2020-08-08 15:58:19'),(5196,105,NULL,'172.19.0.2','2020-08-08 15:58:25','2020-08-08 15:58:25','2020-08-08 15:58:25'),(5197,106,NULL,'172.19.0.2','2020-08-08 15:58:29','2020-08-08 15:58:29','2020-08-08 15:58:29'),(5198,95,NULL,'172.19.0.2','2020-08-08 15:58:33','2020-08-08 15:58:33','2020-08-08 15:58:33'),(5199,96,NULL,'172.19.0.2','2020-08-08 15:58:36','2020-08-08 15:58:36','2020-08-08 15:58:36'),(5200,97,NULL,'172.19.0.2','2020-08-08 15:58:40','2020-08-08 15:58:40','2020-08-08 15:58:40'),(5201,98,NULL,'172.19.0.2','2020-08-08 15:58:44','2020-08-08 15:58:44','2020-08-08 15:58:44'),(5202,99,NULL,'172.19.0.2','2020-08-08 15:58:47','2020-08-08 15:58:47','2020-08-08 15:58:47'),(5203,131,NULL,'172.19.0.2','2020-08-08 21:26:17','2020-08-08 21:26:17','2020-08-08 21:26:17'),(5204,43,NULL,'172.19.0.2','2020-08-08 21:59:36','2020-08-08 21:59:36','2020-08-08 21:59:36'),(5205,32,NULL,'172.19.0.2','2020-08-09 23:15:18','2020-08-09 23:15:18','2020-08-09 23:15:18'),(5206,43,NULL,'106.11.154.107','2020-08-10 02:53:30','2020-08-10 02:53:30','2020-08-10 02:53:30'),(5207,97,NULL,'172.19.0.2','2020-08-10 06:05:16','2020-08-10 06:05:16','2020-08-10 06:05:16'),(5208,128,NULL,'172.19.0.2','2020-08-10 06:52:31','2020-08-10 06:52:31','2020-08-10 06:52:31'),(5209,128,NULL,'172.19.0.2','2020-08-10 07:33:23','2020-08-10 07:33:23','2020-08-10 07:33:23'),(5210,128,NULL,'172.19.0.2','2020-08-10 07:34:23','2020-08-10 07:34:23','2020-08-10 07:34:23'),(5211,128,NULL,'172.19.0.2','2020-08-10 11:40:01','2020-08-10 11:40:01','2020-08-10 11:40:01'),(5212,93,NULL,'172.19.0.2','2020-08-10 12:21:37','2020-08-10 12:21:37','2020-08-10 12:21:37'),(5213,127,NULL,'172.19.0.2','2020-08-10 17:40:01','2020-08-10 17:40:01','2020-08-10 17:40:01'),(5214,107,NULL,'172.19.0.2','2020-08-10 22:40:01','2020-08-10 22:40:01','2020-08-10 22:40:01'),(5215,49,NULL,'106.11.152.90','2020-08-11 00:46:28','2020-08-11 00:46:28','2020-08-11 00:46:28'),(5216,91,NULL,'172.19.0.2','2020-08-11 04:54:30','2020-08-11 04:54:30','2020-08-11 04:54:30'),(5217,109,NULL,'172.19.0.2','2020-08-11 04:54:40','2020-08-11 04:54:40','2020-08-11 04:54:40'),(5218,108,NULL,'172.19.0.2','2020-08-11 04:54:45','2020-08-11 04:54:45','2020-08-11 04:54:45'),(5219,132,NULL,'172.19.0.2','2020-08-11 04:54:54','2020-08-11 04:54:54','2020-08-11 04:54:54'),(5220,131,NULL,'172.19.0.2','2020-08-11 04:54:59','2020-08-11 04:54:59','2020-08-11 04:54:59'),(5221,130,NULL,'172.19.0.2','2020-08-11 04:55:02','2020-08-11 04:55:02','2020-08-11 04:55:02'),(5222,27,NULL,'172.19.0.2','2020-08-11 04:55:28','2020-08-11 04:55:28','2020-08-11 04:55:28'),(5223,129,NULL,'172.19.0.2','2020-08-11 04:55:36','2020-08-11 04:55:36','2020-08-11 04:55:36'),(5224,128,NULL,'172.19.0.2','2020-08-11 04:55:39','2020-08-11 04:55:39','2020-08-11 04:55:39'),(5225,127,NULL,'172.19.0.2','2020-08-11 04:55:41','2020-08-11 04:55:41','2020-08-11 04:55:41'),(5226,126,NULL,'172.19.0.2','2020-08-11 04:55:46','2020-08-11 04:55:46','2020-08-11 04:55:46'),(5227,125,NULL,'172.19.0.2','2020-08-11 04:55:51','2020-08-11 04:55:51','2020-08-11 04:55:51'),(5228,124,NULL,'172.19.0.2','2020-08-11 04:55:54','2020-08-11 04:55:54','2020-08-11 04:55:54'),(5229,123,NULL,'172.19.0.2','2020-08-11 04:55:57','2020-08-11 04:55:57','2020-08-11 04:55:57'),(5230,120,NULL,'172.19.0.2','2020-08-11 04:56:14','2020-08-11 04:56:14','2020-08-11 04:56:14'),(5231,14,NULL,'172.19.0.2','2020-08-11 04:56:35','2020-08-11 04:56:35','2020-08-11 04:56:35'),(5232,52,NULL,'172.19.0.2','2020-08-11 04:56:43','2020-08-11 04:56:43','2020-08-11 04:56:43'),(5233,111,NULL,'172.19.0.2','2020-08-11 04:56:59','2020-08-11 04:56:59','2020-08-11 04:56:59'),(5234,37,NULL,'172.19.0.2','2020-08-11 04:57:11','2020-08-11 04:57:11','2020-08-11 04:57:11'),(5235,36,NULL,'172.19.0.2','2020-08-11 04:57:14','2020-08-11 04:57:14','2020-08-11 04:57:14'),(5236,35,NULL,'172.19.0.2','2020-08-11 04:57:17','2020-08-11 04:57:17','2020-08-11 04:57:17'),(5237,110,NULL,'172.19.0.2','2020-08-11 04:57:21','2020-08-11 04:57:21','2020-08-11 04:57:21'),(5238,28,NULL,'172.19.0.2','2020-08-11 04:57:23','2020-08-11 04:57:23','2020-08-11 04:57:23'),(5239,93,NULL,'172.19.0.2','2020-08-11 04:57:26','2020-08-11 04:57:26','2020-08-11 04:57:26'),(5240,45,NULL,'172.19.0.2','2020-08-11 04:57:28','2020-08-11 04:57:28','2020-08-11 04:57:28'),(5241,41,NULL,'172.19.0.2','2020-08-11 04:57:31','2020-08-11 04:57:31','2020-08-11 04:57:31'),(5242,121,NULL,'172.19.0.2','2020-08-11 04:57:34','2020-08-11 04:57:34','2020-08-11 04:57:34'),(5243,90,NULL,'172.19.0.2','2020-08-11 04:57:36','2020-08-11 04:57:36','2020-08-11 04:57:36'),(5244,50,NULL,'172.19.0.2','2020-08-11 04:57:38','2020-08-11 04:57:38','2020-08-11 04:57:38'),(5245,89,NULL,'172.19.0.2','2020-08-11 04:57:41','2020-08-11 04:57:42','2020-08-11 04:57:42'),(5246,88,NULL,'172.19.0.2','2020-08-11 04:57:44','2020-08-11 04:57:44','2020-08-11 04:57:44'),(5247,115,NULL,'172.19.0.2','2020-08-11 04:57:46','2020-08-11 04:57:46','2020-08-11 04:57:46'),(5248,48,NULL,'172.19.0.2','2020-08-11 04:57:52','2020-08-11 04:57:52','2020-08-11 04:57:52'),(5249,47,NULL,'172.19.0.2','2020-08-11 04:57:56','2020-08-11 04:57:56','2020-08-11 04:57:56'),(5250,44,NULL,'172.19.0.2','2020-08-11 04:57:59','2020-08-11 04:57:59','2020-08-11 04:57:59'),(5251,43,NULL,'172.19.0.2','2020-08-11 04:58:05','2020-08-11 04:58:06','2020-08-11 04:58:06'),(5252,42,NULL,'172.19.0.2','2020-08-11 04:58:11','2020-08-11 04:58:11','2020-08-11 04:58:11'),(5253,72,NULL,'172.19.0.2','2020-08-11 04:58:13','2020-08-11 04:58:13','2020-08-11 04:58:13'),(5254,33,NULL,'172.19.0.2','2020-08-11 04:58:18','2020-08-11 04:58:18','2020-08-11 04:58:18'),(5255,32,NULL,'172.19.0.2','2020-08-11 04:58:21','2020-08-11 04:58:21','2020-08-11 04:58:21'),(5256,65,NULL,'172.19.0.2','2020-08-11 04:58:24','2020-08-11 04:58:24','2020-08-11 04:58:24'),(5257,23,NULL,'172.19.0.2','2020-08-11 04:58:27','2020-08-11 04:58:27','2020-08-11 04:58:27'),(5258,31,NULL,'172.19.0.2','2020-08-11 04:58:29','2020-08-11 04:58:29','2020-08-11 04:58:29'),(5259,116,NULL,'172.19.0.2','2020-08-11 04:58:31','2020-08-11 04:58:31','2020-08-11 04:58:31'),(5260,98,NULL,'172.19.0.2','2020-08-11 04:58:34','2020-08-11 04:58:34','2020-08-11 04:58:34'),(5261,107,NULL,'172.19.0.2','2020-08-11 04:58:38','2020-08-11 04:58:38','2020-08-11 04:58:38'),(5262,97,NULL,'172.19.0.2','2020-08-11 04:58:41','2020-08-11 04:58:41','2020-08-11 04:58:41'),(5263,106,NULL,'172.19.0.2','2020-08-11 04:58:44','2020-08-11 04:58:44','2020-08-11 04:58:44'),(5264,101,NULL,'172.19.0.2','2020-08-11 04:58:46','2020-08-11 04:58:46','2020-08-11 04:58:46'),(5265,21,NULL,'172.19.0.2','2020-08-11 04:58:51','2020-08-11 04:58:51','2020-08-11 04:58:51'),(5266,117,NULL,'172.19.0.2','2020-08-11 04:58:54','2020-08-11 04:58:54','2020-08-11 04:58:54'),(5267,114,NULL,'172.19.0.2','2020-08-11 04:58:56','2020-08-11 04:58:56','2020-08-11 04:58:56'),(5268,113,NULL,'172.19.0.2','2020-08-11 04:58:58','2020-08-11 04:58:58','2020-08-11 04:58:58'),(5269,112,NULL,'172.19.0.2','2020-08-11 04:59:03','2020-08-11 04:59:03','2020-08-11 04:59:03'),(5270,104,NULL,'172.19.0.2','2020-08-11 04:59:07','2020-08-11 04:59:07','2020-08-11 04:59:07'),(5271,100,NULL,'172.19.0.2','2020-08-11 04:59:11','2020-08-11 04:59:11','2020-08-11 04:59:11'),(5272,15,NULL,'172.19.0.2','2020-08-11 04:59:13','2020-08-11 04:59:13','2020-08-11 04:59:13'),(5273,99,NULL,'172.19.0.2','2020-08-11 04:59:15','2020-08-11 04:59:15','2020-08-11 04:59:15'),(5274,122,NULL,'172.19.0.2','2020-08-11 04:59:19','2020-08-11 04:59:19','2020-08-11 04:59:19'),(5275,96,NULL,'172.19.0.2','2020-08-11 04:59:22','2020-08-11 04:59:22','2020-08-11 04:59:22'),(5276,95,NULL,'172.19.0.2','2020-08-11 04:59:25','2020-08-11 04:59:25','2020-08-11 04:59:25'),(5277,94,NULL,'172.19.0.2','2020-08-11 04:59:27','2020-08-11 04:59:27','2020-08-11 04:59:27'),(5278,49,NULL,'172.19.0.2','2020-08-11 04:59:29','2020-08-11 04:59:29','2020-08-11 04:59:29'),(5279,46,NULL,'172.19.0.2','2020-08-11 04:59:31','2020-08-11 04:59:31','2020-08-11 04:59:31'),(5280,119,NULL,'172.19.0.2','2020-08-11 04:59:35','2020-08-11 04:59:35','2020-08-11 04:59:35'),(5281,1,NULL,'172.19.0.2','2020-08-11 04:59:40','2020-08-11 04:59:40','2020-08-11 04:59:40'),(5282,52,NULL,'172.19.0.2','2020-08-11 06:06:13','2020-08-11 06:06:13','2020-08-11 06:06:13'),(5283,127,NULL,'172.19.0.2','2020-08-11 06:07:39','2020-08-11 06:07:39','2020-08-11 06:07:39'),(5284,125,NULL,'172.19.0.2','2020-08-11 06:10:34','2020-08-11 06:10:34','2020-08-11 06:10:34'),(5285,128,NULL,'172.19.0.2','2020-08-11 06:16:45','2020-08-11 06:16:45','2020-08-11 06:16:45'),(5286,108,NULL,'172.19.0.2','2020-08-11 06:22:32','2020-08-11 06:22:32','2020-08-11 06:22:32'),(5287,50,NULL,'172.19.0.2','2020-08-11 06:22:33','2020-08-11 06:22:33','2020-08-11 06:22:33'),(5288,109,NULL,'172.19.0.2','2020-08-11 06:28:27','2020-08-11 06:28:28','2020-08-11 06:28:28'),(5289,123,NULL,'172.19.0.2','2020-08-11 06:50:06','2020-08-11 06:50:06','2020-08-11 06:50:06'),(5290,132,NULL,'172.19.0.2','2020-08-11 06:50:19','2020-08-11 06:50:19','2020-08-11 06:50:19'),(5291,106,NULL,'172.19.0.2','2020-08-11 10:58:01','2020-08-11 10:58:01','2020-08-11 10:58:01'),(5292,93,NULL,'172.19.0.2','2020-08-11 11:03:32','2020-08-11 11:03:32','2020-08-11 11:03:32'),(5293,72,NULL,'172.19.0.2','2020-08-11 11:03:43','2020-08-11 11:03:43','2020-08-11 11:03:43'),(5294,65,NULL,'172.19.0.2','2020-08-11 11:04:13','2020-08-11 11:04:13','2020-08-11 11:04:13'),(5295,65,NULL,'172.19.0.2','2020-08-11 11:07:29','2020-08-11 11:07:29','2020-08-11 11:07:29'),(5296,72,NULL,'172.19.0.2','2020-08-11 11:07:45','2020-08-11 11:07:45','2020-08-11 11:07:45'),(5297,88,NULL,'172.19.0.2','2020-08-11 11:07:55','2020-08-11 11:07:55','2020-08-11 11:07:55'),(5298,21,NULL,'172.19.0.2','2020-08-11 15:28:34','2020-08-11 15:28:34','2020-08-11 15:28:34'),(5299,14,NULL,'172.19.0.2','2020-08-11 17:05:15','2020-08-11 17:05:15','2020-08-11 17:05:15'),(5300,14,NULL,'172.19.0.2','2020-08-11 17:09:50','2020-08-11 17:09:50','2020-08-11 17:09:50'),(5301,131,NULL,'172.19.0.2','2020-08-11 22:43:02','2020-08-11 22:43:02','2020-08-11 22:43:02'),(5302,48,NULL,'172.19.0.2','2020-08-12 00:34:41','2020-08-12 00:34:41','2020-08-12 00:34:41'),(5303,130,NULL,'172.19.0.2','2020-08-12 02:34:41','2020-08-12 02:34:41','2020-08-12 02:34:41'),(5304,37,NULL,'42.156.137.43','2020-08-12 02:37:37','2020-08-12 02:37:38','2020-08-12 02:37:38'),(5305,129,NULL,'172.19.0.2','2020-08-12 06:24:53','2020-08-12 06:24:53','2020-08-12 06:24:53'),(5306,95,NULL,'172.19.0.2','2020-08-12 09:42:44','2020-08-12 09:42:44','2020-08-12 09:42:44'),(5307,101,NULL,'172.19.0.2','2020-08-12 09:42:49','2020-08-12 09:42:49','2020-08-12 09:42:49'),(5308,107,NULL,'172.19.0.2','2020-08-12 10:51:20','2020-08-12 10:51:20','2020-08-12 10:51:20'),(5309,108,NULL,'172.19.0.2','2020-08-12 10:52:08','2020-08-12 10:52:08','2020-08-12 10:52:08'),(5310,109,NULL,'172.19.0.2','2020-08-12 10:52:39','2020-08-12 10:52:39','2020-08-12 10:52:39'),(5311,14,NULL,'172.19.0.2','2020-08-12 10:53:16','2020-08-12 10:53:16','2020-08-12 10:53:16'),(5312,31,NULL,'172.19.0.2','2020-08-12 10:54:30','2020-08-12 10:54:30','2020-08-12 10:54:30'),(5313,32,NULL,'172.19.0.2','2020-08-12 10:55:04','2020-08-12 10:55:04','2020-08-12 10:55:04'),(5314,33,NULL,'172.19.0.2','2020-08-12 10:55:32','2020-08-12 10:55:32','2020-08-12 10:55:32'),(5315,35,NULL,'172.19.0.2','2020-08-12 10:55:58','2020-08-12 10:55:58','2020-08-12 10:55:58'),(5316,36,NULL,'172.19.0.2','2020-08-12 10:56:44','2020-08-12 10:56:44','2020-08-12 10:56:44'),(5317,42,NULL,'172.19.0.2','2020-08-12 10:57:16','2020-08-12 10:57:16','2020-08-12 10:57:16'),(5318,43,NULL,'172.19.0.2','2020-08-12 10:57:43','2020-08-12 10:57:43','2020-08-12 10:57:43'),(5319,44,NULL,'172.19.0.2','2020-08-12 10:58:21','2020-08-12 10:58:21','2020-08-12 10:58:21'),(5320,45,NULL,'172.19.0.2','2020-08-12 10:59:06','2020-08-12 10:59:06','2020-08-12 10:59:06'),(5321,46,NULL,'172.19.0.2','2020-08-12 10:59:33','2020-08-12 10:59:33','2020-08-12 10:59:33'),(5322,47,NULL,'172.19.0.2','2020-08-12 11:00:03','2020-08-12 11:00:03','2020-08-12 11:00:03'),(5323,48,NULL,'172.19.0.2','2020-08-12 11:00:29','2020-08-12 11:00:29','2020-08-12 11:00:29'),(5324,49,NULL,'172.19.0.2','2020-08-12 11:00:58','2020-08-12 11:00:58','2020-08-12 11:00:58'),(5325,50,NULL,'172.19.0.2','2020-08-12 11:01:23','2020-08-12 11:01:23','2020-08-12 11:01:23'),(5326,52,NULL,'172.19.0.2','2020-08-12 11:01:57','2020-08-12 11:01:57','2020-08-12 11:01:57');
/*!40000 ALTER TABLE `biz_article_look` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `biz_article_love`
--

DROP TABLE IF EXISTS `biz_article_love`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `biz_article_love` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `article_id` bigint(20) unsigned NOT NULL COMMENT '文章ID',
  `user_id` bigint(20) unsigned DEFAULT NULL COMMENT '已登录用户ID',
  `user_ip` varchar(50) DEFAULT NULL COMMENT '用户IP',
  `love_time` datetime DEFAULT NULL COMMENT '浏览时间',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `biz_article_love`
--

LOCK TABLES `biz_article_love` WRITE;
/*!40000 ALTER TABLE `biz_article_love` DISABLE KEYS */;
INSERT INTO `biz_article_love` VALUES (4,23,NULL,'117.157.99.114','2019-09-19 15:44:05','2019-09-19 15:44:05','2019-09-19 15:44:05'),(5,33,NULL,'117.157.99.114','2019-09-24 21:12:37','2019-09-24 21:12:37','2019-09-24 21:12:37'),(6,32,NULL,'171.221.254.148','2019-10-02 12:52:44','2019-10-02 12:52:44','2019-10-02 12:52:44'),(7,37,NULL,'117.157.99.114','2019-10-31 17:34:05','2019-10-31 17:34:05','2019-10-31 17:34:05'),(8,52,NULL,'117.157.99.114','2020-01-06 10:09:51','2020-01-06 10:09:51','2020-01-06 10:09:51'),(9,14,NULL,'172.19.0.5','2020-01-07 19:55:25','2020-01-07 19:55:25','2020-01-07 19:55:25'),(10,52,NULL,'172.19.0.5','2020-01-08 15:45:45','2020-01-08 15:45:45','2020-01-08 15:45:45');
/*!40000 ALTER TABLE `biz_article_love` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `biz_article_tags`
--

DROP TABLE IF EXISTS `biz_article_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `biz_article_tags` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `tag_id` bigint(20) unsigned NOT NULL COMMENT '标签表主键',
  `article_id` bigint(20) unsigned NOT NULL COMMENT '文章ID',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=249 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `biz_article_tags`
--

LOCK TABLES `biz_article_tags` WRITE;
/*!40000 ALTER TABLE `biz_article_tags` DISABLE KEYS */;
INSERT INTO `biz_article_tags` VALUES (18,1,14,'2019-09-18 09:02:18','2019-09-18 09:02:18'),(46,5,27,'2019-09-19 19:42:52','2019-09-19 19:42:52'),(57,5,33,'2019-09-26 11:58:31','2019-09-26 11:58:31'),(59,5,1,'2019-10-24 20:52:58','2019-10-24 20:52:58'),(60,2,35,'2019-10-30 16:46:39','2019-10-30 16:46:39'),(62,8,36,'2019-10-30 17:22:57','2019-10-30 17:22:57'),(63,8,37,'2019-10-31 17:33:06','2019-10-31 17:33:06'),(69,5,41,'2019-11-01 15:56:40','2019-11-01 15:56:40'),(71,4,42,'2019-11-01 16:03:53','2019-11-01 16:03:53'),(76,8,44,'2019-11-02 10:59:17','2019-11-02 10:59:17'),(77,2,43,'2019-11-02 12:38:40','2019-11-02 12:38:40'),(79,5,45,'2019-11-07 16:02:32','2019-11-07 16:02:32'),(83,5,47,'2019-12-25 11:24:02','2019-12-25 11:24:02'),(85,5,48,'2019-12-25 11:28:51','2019-12-25 11:28:51'),(87,5,49,'2019-12-25 11:30:42','2019-12-25 11:30:42'),(89,5,50,'2019-12-25 12:41:45','2019-12-25 12:41:45'),(94,8,32,'2020-01-15 17:17:16','2020-01-15 17:17:16'),(95,1,31,'2020-01-15 17:18:01','2020-01-15 17:18:01'),(96,4,28,'2020-01-15 17:18:45','2020-01-15 17:18:45'),(97,9,23,'2020-01-15 17:20:45','2020-01-15 17:20:45'),(98,8,21,'2020-01-15 17:21:56','2020-01-15 17:21:56'),(99,10,15,'2020-01-15 17:23:11','2020-01-15 17:23:11'),(100,2,46,'2020-01-15 17:25:17','2020-01-15 17:25:17'),(101,11,53,'2020-03-11 15:44:41','2020-03-11 15:44:41'),(102,11,54,'2020-03-12 15:40:51','2020-03-12 15:40:51'),(103,11,55,'2020-03-12 15:40:51','2020-03-12 15:40:51'),(113,11,65,'2020-03-13 07:50:56','2020-03-13 07:50:56'),(120,11,72,'2020-03-13 17:37:08','2020-03-13 17:37:08'),(136,11,88,'2020-03-14 09:41:53','2020-03-14 09:41:53'),(138,10,89,'2020-04-09 19:32:15','2020-04-09 19:32:15'),(140,5,90,'2020-04-09 20:07:43','2020-04-09 20:07:43'),(141,11,91,'2020-04-16 19:32:03','2020-04-16 19:32:03'),(143,11,93,'2020-04-16 20:03:42','2020-04-16 20:03:42'),(162,14,52,'2020-05-14 16:18:31','2020-05-14 16:18:31'),(163,13,101,'2020-05-14 16:22:17','2020-05-14 16:22:17'),(164,13,100,'2020-05-14 16:22:38','2020-05-14 16:22:38'),(165,15,97,'2020-05-14 16:25:12','2020-05-14 16:25:12'),(167,16,95,'2020-05-14 16:27:09','2020-05-14 16:27:09'),(169,16,94,'2020-05-14 16:28:07','2020-05-14 16:28:07'),(175,5,104,'2020-05-16 17:05:54','2020-05-16 17:05:54'),(181,17,106,'2020-05-17 16:22:08','2020-05-17 16:22:08'),(182,12,99,'2020-05-18 09:48:16','2020-05-18 09:48:16'),(183,12,98,'2020-05-18 09:48:37','2020-05-18 09:48:37'),(184,2,96,'2020-05-18 09:48:59','2020-05-18 09:48:59'),(189,17,108,'2020-05-21 17:08:05','2020-05-21 17:08:05'),(191,17,109,'2020-05-21 17:12:45','2020-05-21 17:12:45'),(193,17,107,'2020-05-21 17:17:43','2020-05-21 17:17:43'),(195,5,110,'2020-05-26 10:53:53','2020-05-26 10:53:53'),(209,18,122,'2020-05-27 22:00:21','2020-05-27 22:00:21'),(210,18,121,'2020-05-27 22:01:04','2020-05-27 22:01:04'),(211,18,120,'2020-05-27 22:01:38','2020-05-27 22:01:38'),(213,18,119,'2020-05-27 22:02:43','2020-05-27 22:02:43'),(214,18,117,'2020-05-27 22:03:15','2020-05-27 22:03:15'),(215,18,116,'2020-05-27 22:03:48','2020-05-27 22:03:48'),(216,18,115,'2020-05-27 22:04:28','2020-05-27 22:04:28'),(217,18,114,'2020-05-27 22:05:06','2020-05-27 22:05:06'),(218,18,113,'2020-05-27 22:05:42','2020-05-27 22:05:42'),(219,18,112,'2020-05-27 22:06:19','2020-05-27 22:06:19'),(220,18,111,'2020-05-27 22:06:56','2020-05-27 22:06:56'),(221,4,123,'2020-05-30 10:26:18','2020-05-30 10:26:18'),(223,5,124,'2020-05-31 10:50:38','2020-05-31 10:50:38'),(225,18,125,'2020-06-02 15:38:38','2020-06-02 15:38:38'),(229,18,126,'2020-06-02 16:34:09','2020-06-02 16:34:09'),(230,12,126,'2020-06-02 16:34:09','2020-06-02 16:34:09'),(233,19,127,'2020-06-03 17:50:42','2020-06-03 17:50:42'),(234,18,127,'2020-06-03 17:50:42','2020-06-03 17:50:42'),(236,19,128,'2020-06-05 09:48:33','2020-06-05 09:48:33'),(242,1,129,'2020-06-05 16:51:59','2020-06-05 16:51:59'),(243,1,131,'2020-06-05 16:52:29','2020-06-05 16:52:29'),(244,1,130,'2020-06-05 16:53:07','2020-06-05 16:53:07'),(246,5,105,'2020-07-09 16:55:04','2020-07-09 16:55:04'),(248,15,132,'2020-07-15 10:06:06','2020-07-15 10:06:06');
/*!40000 ALTER TABLE `biz_article_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `biz_comment`
--

DROP TABLE IF EXISTS `biz_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `biz_comment` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `sid` bigint(20) DEFAULT NULL COMMENT '被评论的文章或者页面的ID',
  `user_id` bigint(20) unsigned DEFAULT NULL COMMENT '评论人的ID',
  `pid` bigint(20) unsigned DEFAULT NULL COMMENT '父级评论的id',
  `qq` varchar(13) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论人的QQ（未登录用户）',
  `nickname` varchar(13) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论人的昵称（未登录用户）',
  `avatar` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论人的头像地址',
  `email` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论人的邮箱地址（未登录用户）',
  `url` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论人的网站地址（未登录用户）',
  `status` enum('VERIFYING','APPROVED','REJECT','DELETED') COLLATE utf8mb4_unicode_ci DEFAULT 'VERIFYING' COMMENT '评论的状态',
  `ip` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论时的ip',
  `lng` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '经度',
  `lat` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '纬度',
  `address` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论时的地址',
  `os` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论时的系统类型',
  `os_short_name` varchar(10) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论时的系统的简称',
  `browser` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论时的浏览器类型',
  `browser_short_name` varchar(10) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论时的浏览器的简称',
  `content` varchar(2000) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '评论的内容',
  `remark` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '备注（审核不通过时添加）',
  `support` int(10) unsigned DEFAULT '0' COMMENT '支持（赞）',
  `oppose` int(10) unsigned DEFAULT '0' COMMENT '反对（踩）',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `biz_comment`
--

LOCK TABLES `biz_comment` WRITE;
/*!40000 ALTER TABLE `biz_comment` DISABLE KEYS */;
INSERT INTO `biz_comment` VALUES (3,-1,NULL,0,'','匿名','https://www.lcools.cn:8443/img/random/user/1.jpg','','','APPROVED','117.157.99.114','103.81687262','36.05802646','甘肃省兰州市','Windows 10',NULL,'Chrome 78.0.3904.97',NULL,'<p>test</p>','',0,0,'2019-12-30 10:21:59','2019-12-30 10:23:51'),(4,-1,1,3,'1432678620','超级管理员','https://lcools.cn/static/imgs/favicon.ico','1432678620@qq.com','','APPROVED','117.157.99.114','103.81687262','36.05802646','甘肃省兰州市','Windows 10',NULL,'Chrome 78.0.3904.97',NULL,'rettest','',0,0,'2019-12-30 10:23:52','2019-12-30 10:23:52'),(5,-1,NULL,0,'','匿名','https://www.lcools.cn:8443/img/random/user/10.jpg','','','APPROVED','117.157.99.114','103.81687262','36.05802646','甘肃省兰州市','Windows 10',NULL,'Chrome 78.0.3904.97',NULL,'<p>添加友链</p>','',0,0,'2019-12-30 10:47:59','2019-12-30 10:48:58'),(6,-1,1,5,'1432678620','超级管理员','https://lcools.cn/static/imgs/favicon.ico','1432678620@qq.com','','APPROVED','117.157.99.114','103.81687262','36.05802646','甘肃省兰州市','Windows 10',NULL,'Chrome 78.0.3904.97',NULL,'ok','',0,0,'2019-12-30 10:48:58','2019-12-30 10:48:58'),(8,-1,NULL,0,'','水','https://www.lcools.cn:8443/img/random/user/16.jpg','','','APPROVED','172.19.0.5','0.00000000','-0.00000003','未知','Windows 10',NULL,'Microsoft Edge 17.17134',NULL,'<p>帅的一匹</p>','',0,0,'2020-01-06 11:46:53','2020-01-06 13:39:13'),(9,-1,1,8,'1432678620','超级管理员','https://lcools.cn/static/imgs/favicon.ico','1432678620@qq.com','','APPROVED','117.157.99.114','103.81687262','36.05802646','甘肃省兰州市','Windows 10',NULL,'Chrome 78.0.3904.97',NULL,'水总，赞赞赞。','',0,0,'2020-01-06 13:39:13','2020-01-06 13:39:13');
/*!40000 ALTER TABLE `biz_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `biz_file`
--

DROP TABLE IF EXISTS `biz_file`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `biz_file` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned DEFAULT NULL,
  `storage_type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `original_file_name` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `size` bigint(20) unsigned DEFAULT NULL,
  `suffix` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `width` int(10) unsigned DEFAULT NULL,
  `height` int(10) unsigned DEFAULT NULL,
  `file_path` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `full_file_path` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `file_hash` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `upload_type` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `upload_start_time` datetime DEFAULT NULL,
  `upload_end_time` datetime DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `biz_file`
--

LOCK TABLES `biz_file` WRITE;
/*!40000 ALTER TABLE `biz_file` DISABLE KEYS */;
INSERT INTO `biz_file` VALUES (2,1,'aliyun','11.png',737007,'.png',935,704,'oneblog/qrcode/20190910154718156.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190910154718156.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/qrcode/','2019-09-10 15:47:18','2019-09-10 15:47:24','2019-09-10 15:47:24','2019-09-10 15:47:24'),(3,1,'aliyun','wx_reward_code.png',112105,'.png',1152,1152,'oneblog/qrcode/20190916105033396.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190916105033396.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/qrcode/','2019-09-16 10:50:33','2019-09-16 10:50:34','2019-09-16 10:50:34','2019-09-16 10:50:34'),(4,1,'aliyun','zfb_code.png',114584,'.png',414,562,'oneblog/qrcode/20190916105034545.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190916105034545.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/qrcode/','2019-09-16 10:50:35','2019-09-16 10:50:35','2019-09-16 10:50:35','2019-09-16 10:50:35'),(12,2,'aliyun','111.png',73398,'.png',201,197,'oneblog/20190916180258906.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20190916180258906.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/','2019-09-16 18:02:59','2019-09-16 18:02:59','2019-09-16 18:03:00','2019-09-16 18:03:00'),(20,1,'aliyun','image.png',150748,'.png',1880,1044,'oneblog/article/20190924155720183.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190924155720183.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/article/','2019-09-24 15:57:20','2019-09-24 15:57:21','2019-09-24 15:57:21','2019-09-24 15:57:21'),(21,1,'aliyun','image.png',134307,'.png',1920,1034,'oneblog/article/20190924155948243.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190924155948243.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/article/','2019-09-24 15:59:48','2019-09-24 15:59:49','2019-09-24 15:59:49','2019-09-24 15:59:49'),(23,1,'aliyun','image.png',138955,'.png',1920,1034,'oneblog/article/20190924210848237.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190924210848237.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/article/','2019-09-24 21:08:48','2019-09-24 21:08:49','2019-09-24 21:08:49','2019-09-24 21:08:49'),(24,1,'aliyun','image.png',144243,'.png',1920,1034,'oneblog/article/20190924210939996.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190924210939996.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/article/','2019-09-24 21:09:40','2019-09-24 21:09:40','2019-09-24 21:09:41','2019-09-24 21:09:41'),(25,1,'aliyun','image.png',124053,'.png',1920,1034,'oneblog/article/20190926115612431.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20190926115612431.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/article/','2019-09-26 11:56:12','2019-09-26 11:56:13','2019-09-26 11:56:13','2019-09-26 11:56:13'),(29,1,'aliyun','微信图片_20191031172812.jpg',120093,'.jpg',1280,278,'oneblog/20191031172938644.jpg','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20191031172938644.jpg','d41d8cd98f00b204e9800998ecf8427e','oneblog/','2019-10-31 17:29:39','2019-10-31 17:29:39','2019-10-31 17:29:39','2019-10-31 17:29:39'),(30,1,'aliyun','微信图片_20191031173015.jpg',37876,'.jpg',1080,197,'oneblog/20191031173053311.jpg','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20191031173053311.jpg','d41d8cd98f00b204e9800998ecf8427e','oneblog/','2019-10-31 17:30:53','2019-10-31 17:30:53','2019-10-31 17:30:53','2019-10-31 17:30:53'),(31,1,'aliyun','微信图片_20191102105608.jpg',34654,'.jpg',580,272,'oneblog/20191102105655407.jpg','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20191102105655407.jpg','d41d8cd98f00b204e9800998ecf8427e','oneblog/','2019-11-02 10:56:55','2019-11-02 10:56:56','2019-11-02 10:56:56','2019-11-02 10:56:56'),(34,1,'aliyun','20190910130350217.png',53317,'.png',1028,788,'oneblog/20200106095622199.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200106095622199.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/','2020-01-06 09:56:22','2020-01-06 09:56:22','2020-01-06 09:56:22','2020-01-06 09:56:22'),(35,1,'aliyun','image.png',156351,'.png',960,600,'oneblog/article/20200106095710643.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/article/20200106095710643.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/article/','2020-01-06 09:57:11','2020-01-06 09:57:11','2020-01-06 09:57:11','2020-01-06 09:57:11'),(36,1,'aliyun','20190910130142512.png',581701,'.png',985,831,'oneblog/20200106100506885.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200106100506885.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/','2020-01-06 10:05:07','2020-01-06 10:05:13','2020-01-06 10:05:13','2020-01-06 10:05:13'),(37,1,'aliyun','20190910130518780.png',339300,'.png',1148,744,'oneblog/20200106100631769.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200106100631769.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/','2020-01-06 10:06:32','2020-01-06 10:06:34','2020-01-06 10:06:34','2020-01-06 10:06:34'),(38,1,'aliyun','20190910130753133.png',53508,'.png',668,776,'oneblog/20200106100817102.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200106100817102.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/','2020-01-06 10:08:17','2020-01-06 10:08:17','2020-01-06 10:08:17','2020-01-06 10:08:17'),(39,1,'aliyun','j_thumb.gif',2495,'.gif',22,22,'oneblog/20200107160307951.gif','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200107160307951.gif','d41d8cd98f00b204e9800998ecf8427e','oneblog/','2020-01-07 16:03:08','2020-01-07 16:03:09','2020-01-07 16:03:09','2020-01-07 16:03:09'),(41,1,'aliyun','111.png',73398,'.png',201,197,'oneblog/20200517153339737.png','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/20200517153339737.png','d41d8cd98f00b204e9800998ecf8427e','oneblog/','2020-05-17 15:33:40','2020-05-17 15:33:40','2020-05-17 15:33:41','2020-05-17 15:33:41');
/*!40000 ALTER TABLE `biz_file` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `biz_tags`
--

DROP TABLE IF EXISTS `biz_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `biz_tags` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL COMMENT '书签名',
  `description` varchar(100) DEFAULT NULL COMMENT '描述',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `biz_tags`
--

LOCK TABLES `biz_tags` WRITE;
/*!40000 ALTER TABLE `biz_tags` DISABLE KEYS */;
INSERT INTO `biz_tags` VALUES (1,'Linux',NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(2,'Java',NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(3,'Spring',NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(4,'Spring Boot',NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(5,'其他',NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(6,'MyBatis','MyBatis','2019-09-19 10:35:49','2019-09-19 10:35:49'),(8,'Mysql','Mysql','2019-10-30 17:22:06','2019-10-30 17:22:21'),(9,'jQuery','jQuery','2020-01-15 17:20:06','2020-01-15 17:20:06'),(10,'算法','算法','2020-01-15 17:22:45','2020-01-15 17:22:45'),(11,'淘宝商品推荐','淘宝商品推荐','2020-03-11 15:41:08','2020-03-13 08:19:18'),(12,'Redis','Redis','2020-05-14 15:07:42','2020-05-14 15:07:42'),(13,'分布式事务','分布式事务','2020-05-14 16:14:49','2020-05-14 16:14:49'),(14,'IntelliJ IDEA','IntelliJ IDEA','2020-05-14 16:17:54','2020-05-14 16:17:54'),(15,'数据库','数据库','2020-05-14 16:24:47','2020-05-14 16:24:47'),(16,'消息队列','消息队列','2020-05-14 16:26:33','2020-05-14 16:26:33'),(17,'jvm','jvm','2020-05-17 16:21:26','2020-05-17 16:21:26'),(18,'面试必备','面试必备','2020-05-27 22:00:03','2020-05-27 22:00:03'),(19,'zookeeper','zookeeper','2020-06-03 17:49:49','2020-06-03 17:49:49');
/*!40000 ALTER TABLE `biz_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `biz_type`
--

DROP TABLE IF EXISTS `biz_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `biz_type` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `pid` bigint(20) unsigned DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL COMMENT '文章类型名',
  `description` varchar(200) DEFAULT NULL COMMENT '类型介绍',
  `sort` int(10) DEFAULT NULL COMMENT '排序',
  `icon` varchar(100) DEFAULT NULL COMMENT '图标',
  `available` tinyint(1) unsigned DEFAULT '1' COMMENT '是否可用',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `biz_type`
--

LOCK TABLES `biz_type` WRITE;
/*!40000 ALTER TABLE `biz_type` DISABLE KEYS */;
INSERT INTO `biz_type` VALUES (1,NULL,'前端技术','主要收集、整理的基础前端类文章，包括JS、jQuery和CSS等Web开发所需的基础的文章总结',2,'fa fa-css3',1,NULL,'2020-03-16 09:10:57'),(2,NULL,'后端技术','网站中记录的后端类文章，包括Java、SSM、MySQL和其他在日常工作学习中所用的后端技术',1,'fa fa-coffee',1,NULL,'2020-03-16 09:10:45'),(3,NULL,'其他文章','记录网站建设以及日常工作、学习中的闲言碎语和个人笔记等文章',3,'fa fa-folder-open-o',1,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(4,NULL,'生活记录','用文章记录生活',4,'fa fa-folder-open-o',1,'2020-01-15 09:59:33','2020-01-15 09:59:33'),(6,NULL,'淘宝商品推荐','淘宝商品推荐',2,'fa fa-folder-open-o',1,NULL,'2020-03-16 09:10:30');
/*!40000 ALTER TABLE `biz_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_config`
--

DROP TABLE IF EXISTS `sys_config`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_config` (
  `id` int(20) unsigned NOT NULL AUTO_INCREMENT,
  `config_key` varchar(50) DEFAULT NULL COMMENT '配置关键字',
  `config_value` text COMMENT '配置项内容',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=49 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_config`
--

LOCK TABLES `sys_config` WRITE;
/*!40000 ALTER TABLE `sys_config` DISABLE KEYS */;
INSERT INTO `sys_config` VALUES (1,'homeDesc','LCOOLS-文章记录','2019-09-06 01:21:57','2019-12-26 17:20:35'),(2,'homeKeywords','LCOOLS-文章记录','2019-09-06 01:21:57','2019-12-26 17:20:35'),(3,'domain','lcools.cn','2019-09-06 01:21:57','2020-01-06 10:44:58'),(4,'cmsUrl','https://www.lcools.cn:8085','2019-09-06 01:21:57','2020-01-06 10:44:58'),(5,'siteUrl','https://www.lcools.cn','2019-09-06 01:21:57','2020-01-06 10:44:58'),(6,'siteName','LCOOLS-文章记录','2019-09-06 01:21:57','2019-12-26 17:20:35'),(7,'siteDesc','文章记录人生历程','2019-09-06 01:21:57','2020-01-06 10:44:58'),(8,'siteFavicon','https://www.lcools.cn/img/favicon.ico','2019-09-06 01:21:57','2020-01-06 10:44:58'),(9,'staticWebSite','https://www.lcools.cn','2019-09-06 01:21:57','2020-01-06 10:44:58'),(10,'authorName','刘帅','2019-09-06 01:21:57','2019-09-17 15:22:44'),(11,'authorEmail','liushuailscool@126.com','2019-09-06 01:21:57','2019-09-17 15:22:44'),(12,'wxCode','https://www.lcools.cn/static/imgs/wechat_account.png','2019-09-06 01:21:57','2019-09-17 15:22:44'),(13,'qq','1432678620','2019-09-06 01:21:57','2019-09-17 15:22:44'),(14,'weibo','https://weibo.com/u/5546741029','2019-09-06 01:21:57','2019-09-17 15:22:44'),(15,'github','https://github.com/liushuai3','2019-09-06 01:21:57','2019-09-17 15:22:44'),(16,'maintenance','0','2019-09-06 01:21:57','2020-01-07 20:01:46'),(17,'maintenanceDate','2019-10-11 10:21:57','2019-09-06 01:21:57','2020-01-07 20:01:46'),(18,'comment','1','2019-09-06 01:21:57','2019-09-06 01:21:57'),(19,'qiniuBasePath',NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(20,'qiniuAccessKey',NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(21,'qiniuSecretKey',NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(22,'qiniuBucketName',NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(23,'baiduPushToken','pX04gsvdKgUiv5aN','2019-09-06 01:21:57','2019-12-26 17:20:35'),(24,'wxPraiseCode','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190916105033396.png','2019-09-06 01:21:57','2019-09-16 10:50:35'),(25,'zfbPraiseCode','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/oneblog/qrcode/20190916105034545.png','2019-09-06 01:21:57','2019-09-16 10:50:35'),(26,'baiduApiAk','NwHaYlGalDEpgxm46xBaC3T9','2019-09-06 01:21:57','2020-01-07 20:01:46'),(27,'spiderConfig','{\r\n            imooc: {\r\n                domain: \"www.imooc.com\",\r\n                titleRegex: \"//span[@class=js-title]/html()\",\r\n                authorRegex: \"//div[@class=name_con]/p[@class=name]/a[@class=nick]/html()\",\r\n                releaseDateRegex: \"//div[@class=\'dc-profile\']/div[@class=\'l\']/span[@class=\'spacer\']/text()\",\r\n                contentRegex: \"//div[@class=detail-content]/html()\",\r\n                targetLinksRegex: \"/article/[0-9]{1,10}\",\r\n                tagRegex: \"//div[@class=cat-box]/div[@class=cat-wrap]/a[@class=cat]/html()\",\r\n                header: [\r\n                    \"Host=www.imooc.com\",\r\n                    \"Referer=https://www.imooc.com\"\r\n                ],\r\n                entryUrls: \'https://www.imooc.com/u/{uid}/articles?page={curPage}\'\r\n            },\r\n            csdn: {\r\n                domain: \"blog.csdn.net\",\r\n                titleRegex: \"//h1[@class=title-article]/html()\",\r\n                authorRegex: \"//a[@class=follow-nickName]/html()\",\r\n                releaseDateRegex: \"//div[@class=\'article-bar-top\']/span[@class=\'time\']/text()\",\r\n                contentRegex: \"//div[@class=article_content]/html()\",\r\n                targetLinksRegex: \".*blog\\\\.csdn\\\\.net/{uid}/article/details/[0-9a-zA-Z]{1,15}\",\r\n                tagRegex: \"//span[@class=artic-tag-box]/a[@class=tag-link]/html()\",\r\n                header: [\r\n                    \"Host=blog.csdn.net\",\r\n                    \"Referer=https://blog.csdn.net/{uid}/article/list/1\"\r\n                ],\r\n                entryUrls: \'https://blog.csdn.net/{uid}/article/list/{curPage}\'\r\n            },\r\n            iteye: {\r\n                domain: \"{uid}.iteye.com\",\r\n                titleRegex: \"//div[@class=blog_title]/h3/a/html()\",\r\n                authorRegex: \"//div[@id=blog_owner_name]/html()\",\r\n                releaseDateRegex: \"//div[@class=blog_bottom]/ul/li/html()\",\r\n                contentRegex: \"//div[@class=blog_content]/html()\",\r\n                targetLinksRegex: \".*{uid}\\\\.iteye\\\\.com/blog/[0-9]+\",\r\n                tagRegex: \"//div[@class=news_tag]/a/html()\",\r\n                header: [\r\n                    \"Host={uid}.iteye.com\",\r\n                    \"Referer=http://{uid}.iteye.com/\"\r\n                ],\r\n                entryUrls: \'http://{uid}.iteye.com/?page={curPage}\'\r\n            },\r\n            csblogs: {\r\n                domain: \"www.cnblogs.com\",\r\n                titleRegex: \"//a[@id=cb_post_title_url]/html()\",\r\n                authorRegex: \"//div[@class=postDesc]/a[1]/html()\",\r\n                releaseDateRegex: \"//span[@id=post-date]/html()\",\r\n                contentRegex: \"//div[@id=cnblogs_post_body]/html()\",\r\n                targetLinksRegex: \".*www\\\\.cnblogs\\\\.com/{uid}/p/[\\\\w\\\\d]+\\\\.html\",\r\n                tagRegex: \"//div[@id=EntryTag]/a/html()\",\r\n                header: [\r\n                    \"Host=www.cnblogs.com\",\r\n                    \"Referer=https://www.cnblogs.com/\"\r\n                ],\r\n                entryUrls: \'https://www.cnblogs.com/{uid}/default.html?page={curPage}\'\r\n            }\r\n        }','2019-09-06 01:21:57','2019-09-06 01:21:57'),(28,'anonymous','1','2019-09-06 01:21:57','2019-09-06 01:21:57'),(29,'editorPlaceholder','说点什么吧','2019-09-06 01:21:57','2019-09-06 01:21:57'),(30,'editorAlert','讲文明、要和谐','2019-09-06 01:21:57','2019-09-06 01:21:57'),(31,'defaultUserAvatar','[\r\n	\"https://www.lcools.cn:8443/img/random/user/1.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/2.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/3.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/4.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/5.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/6.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/7.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/8.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/9.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/10.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/11.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/12.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/13.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/14.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/15.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/16.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/17.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/18.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/19.jpg\",\r\n	\"https://www.lcools.cn:8443/img/random/user/20.jpg\"\r\n]','2019-09-06 01:21:57','2019-09-06 01:21:57'),(32,'sessionTimeOut','5','2019-09-06 01:21:57','2019-09-06 01:21:57'),(33,'sessionTimeOutUnit','MINUTES','2019-09-06 01:21:57','2019-09-06 01:21:57'),(34,'loginRetryNum','5','2019-09-06 01:21:57','2019-09-06 01:21:57'),(35,'installdate','2019-09-19 01:21:57','2019-09-06 01:21:57','2020-01-06 10:44:58'),(36,'copyright','Copyright lcools.cn','2019-09-06 01:21:57','2020-01-06 10:44:58'),(37,'dynamicTitle','','2019-09-06 01:21:57','2020-01-07 20:01:46'),(38,'recordNumber','蜀ICP备18020043号-1','2019-09-08 10:55:37','2020-01-06 10:44:58'),(39,'lazyloadPath','https://www.lcools.cn/static/imgs/loading.gif','2019-09-08 10:55:37','2020-01-06 10:44:58'),(40,'storageType','aliyun','2019-09-10 15:46:54','2019-09-10 15:46:54'),(41,'aliyunBucketName','lcools-blog','2019-09-10 15:46:55','2019-09-10 15:46:55'),(42,'aliyunEndpoint','oss-cn-chengdu.aliyuncs.com','2019-09-10 15:46:55','2019-09-10 15:46:55'),(43,'aliyunFileUrl','https://lcools-blog.oss-cn-chengdu.aliyuncs.com/','2019-09-10 15:46:55','2019-09-10 15:46:55'),(44,'aliyunAccessKey','i3qbwoJswJeyijge','2019-09-10 15:46:55','2019-09-10 15:46:55'),(45,'aliyunAccessKeySecret','FFrg1WevavTyMwv9Nm6flsAQC9wdGP','2019-09-10 15:46:55','2019-09-10 15:46:55'),(46,'articleEditor','we','2019-09-16 10:48:13','2019-09-16 10:48:13'),(47,'maintenanceTime','20','2019-10-11 09:51:31','2020-01-07 20:01:46'),(48,'baiduPushCookie','PSTM=1574215874; BAIDUID=DA517BB291490023C26822EA65F0B79D:FG=1; BIDUPSID=36997102DBC4B01E9AD02D11A13868D5; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598; BDUSS=VuUFRGMzd2WlZvfld6ZUxWblF3YThNa0JXMG5oaXZMRjlZSm9FcTJrNmR4eWRlSUFBQUFBJCQAAAAAAAAAAAEAAADdLY44vrLLrs2kz-vI9MPOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ06AF6dOgBeem; SITEMAPSESSID=d6mtmv6f8463b8pbmclvjnqbc5; lastIdentity=PassUserIdentity; SITEMAPZHITONG={\"data\":\"e873a430e740b5592bf16bbca88cbf7aac7bd63c74351ed66ec1ee131aa7a27aa0c6a6393cb018e6f9fa1c471bee7b28c6f501a1ebe09c434a826617a574ddb02a0ca59e1f82d51907295693b9420fcd2f830bfa7abf3575b561397329c31ec683413ea7e4c180f82118b4858aff2f3a017eed5097a3f9741b890c68e61b924d\",\"key_id\":\"32\",\"sign\":\"2d1a5385\"}; Hm_lvt_6f6d5bc386878a651cb8c9e1b4a3379a=1577083710,1577083895; Hm_lpvt_6f6d5bc386878a651cb8c9e1b4a3379a=1577083895','2019-10-24 20:47:54','2019-12-26 17:20:35');
/*!40000 ALTER TABLE `sys_config` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_link`
--

DROP TABLE IF EXISTS `sys_link`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_link` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `url` varchar(200) NOT NULL COMMENT '链接地址',
  `name` varchar(50) DEFAULT NULL COMMENT '链接名',
  `description` varchar(300) DEFAULT NULL COMMENT '链接介绍',
  `email` varchar(100) DEFAULT NULL COMMENT '友链站长邮箱',
  `qq` varchar(13) DEFAULT NULL COMMENT '友链站长QQ',
  `favicon` varchar(255) DEFAULT NULL,
  `status` tinyint(1) unsigned DEFAULT '1' COMMENT '状态',
  `home_page_display` tinyint(1) unsigned DEFAULT '1' COMMENT '是否首页显示',
  `remark` varchar(100) DEFAULT NULL COMMENT '备注',
  `source` enum('ADMIN','AUTOMATIC') DEFAULT 'ADMIN' COMMENT '来源：管理员添加、自动申请',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_link`
--

LOCK TABLES `sys_link` WRITE;
/*!40000 ALTER TABLE `sys_link` DISABLE KEYS */;
INSERT INTO `sys_link` VALUES (3,'https://gitee.com/yadong.zhang/JustAuth','JustAuth','JustAuth','','','',1,1,'','ADMIN','2019-10-10 15:34:29','2019-12-26 17:23:38'),(4,'https://www.processon.com/','在线免费作图','在线免费作图','',NULL,'',1,0,NULL,'AUTOMATIC','2019-12-27 10:14:24','2019-12-27 10:14:24'),(5,'http://www.zhouhongxing.cn','克里斯周','AJavaCoder','961860916@qq.com','','',1,1,'','AUTOMATIC','2019-12-27 10:41:02','2019-12-27 10:46:26'),(7,'https://www.zhyd.me','张亚东博客','一个程序员的个人博客，心之所向，无所不能','','','https://static.zhyd.me/static/img/favicon.ico',1,1,'','ADMIN','2019-12-27 10:47:34','2019-12-27 10:47:34'),(8,'http://debuggg.top','Debuggg','Debuggg','','','http://debuggg.top/img/favicon.ico',1,1,'','ADMIN','2019-12-27 10:52:00','2019-12-27 10:52:00'),(9,'https://lingchen.xyz','Linn博客','自述编程之路','','','https://lingchen.xyz/img/favicon.ico',1,1,'','ADMIN','2019-12-27 11:11:06','2019-12-27 11:11:06'),(10,'https://hutool.cn/','Hutool','Hutool是一个小而全的Java工具类库，使Java拥有函数式语言般的优雅，让Java语言也可以“甜甜的”。','','','',1,1,'','ADMIN','2019-12-27 11:38:31','2019-12-27 11:39:45');
/*!40000 ALTER TABLE `sys_link` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_log`
--

DROP TABLE IF EXISTS `sys_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_log` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned DEFAULT NULL COMMENT '已登录用户ID',
  `type` enum('SYSTEM','VISIT','ERROR') NOT NULL DEFAULT 'SYSTEM' COMMENT '日志类型（系统操作日志，用户访问日志，异常记录日志）',
  `log_level` enum('ERROR','WARN','INFO') NOT NULL DEFAULT 'INFO' COMMENT '日志级别',
  `content` varchar(2000) DEFAULT NULL COMMENT '日志内容（业务操作）',
  `params` varchar(2000) DEFAULT NULL COMMENT '请求参数（业务操作）',
  `spider_type` varchar(20) DEFAULT NULL COMMENT '爬虫类型（当访问者被鉴定为爬虫时该字段表示爬虫的类型）',
  `ip` varchar(64) DEFAULT NULL COMMENT '操作用户的ip',
  `ua` varchar(500) DEFAULT NULL COMMENT '操作用户的user_agent',
  `os` varchar(64) DEFAULT NULL COMMENT '评论时的系统类型',
  `browser` varchar(64) DEFAULT NULL COMMENT '评论时的浏览器类型',
  `request_url` varchar(3000) DEFAULT NULL COMMENT '请求的路径',
  `referer` varchar(3000) DEFAULT NULL COMMENT '请求来源地址',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=71344 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_log`
--

LOCK TABLES `sys_log` WRITE;
/*!40000 ALTER TABLE `sys_log` DISABLE KEYS */;
INSERT INTO `sys_log` VALUES (70343,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','Windows XP','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:20:31','2020-08-12 10:20:31'),(70344,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:20:33','2020-08-12 10:20:33'),(70345,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:20:34','2020-08-12 10:20:34'),(70346,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:20:36','2020-08-12 10:20:36'),(70347,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:20:37','2020-08-12 10:20:37'),(70348,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:20:39','2020-08-12 10:20:39'),(70349,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Ubuntu','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:20:40','2020-08-12 10:20:40'),(70350,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:20:43','2020-08-12 10:20:43'),(70351,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:20:45','2020-08-12 10:20:45'),(70352,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:20:54','2020-08-12 10:20:54'),(70353,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:21:08','2020-08-12 10:21:08'),(70354,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:21:11','2020-08-12 10:21:11'),(70355,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:21:15','2020-08-12 10:21:15'),(70356,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:21:18','2020-08-12 10:21:18'),(70357,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:21:19','2020-08-12 10:21:19'),(70358,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 10:21:31','2020-08-12 10:21:31'),(70359,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Ubuntu','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:21:37','2020-08-12 10:21:37'),(70360,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 10:21:44','2020-08-12 10:21:44'),(70361,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:21:46','2020-08-12 10:21:46'),(70362,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:21:53','2020-08-12 10:21:53'),(70363,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:21:56','2020-08-12 10:21:56'),(70364,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:22:02','2020-08-12 10:22:02'),(70365,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','谷歌','172.19.0.2','Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)','Unknown','Robot/Spider','https://baracoero.com/',NULL,'2020-08-12 10:22:12','2020-08-12 10:22:12'),(70366,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:22:23','2020-08-12 10:22:23'),(70367,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0 Waterfox/56.2.14','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:22:29','2020-08-12 10:22:29'),(70368,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0','Windows 7','Firefox 12','https://baracoero.com/',NULL,'2020-08-12 10:22:38','2020-08-12 10:22:38'),(70369,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:24:00','2020-08-12 10:24:00'),(70370,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko','Windows 8.1','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 10:24:04','2020-08-12 10:24:04'),(70371,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:24:09','2020-08-12 10:24:09'),(70372,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:24:11','2020-08-12 10:24:11'),(70373,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:24:17','2020-08-12 10:24:17'),(70374,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:24:20','2020-08-12 10:24:20'),(70375,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:24:23','2020-08-12 10:24:23'),(70376,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:24:25','2020-08-12 10:24:25'),(70377,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:24:27','2020-08-12 10:24:27'),(70378,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]','Windows 2000','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 10:24:29','2020-08-12 10:24:29'),(70379,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0','Windows 7','Firefox 12','https://baracoero.com/',NULL,'2020-08-12 10:24:34','2020-08-12 10:24:34'),(70380,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:24:39','2020-08-12 10:24:39'),(70381,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:24:44','2020-08-12 10:24:44'),(70382,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:24:49','2020-08-12 10:24:49'),(70383,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:24:53','2020-08-12 10:24:53'),(70384,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/77.0.3865.90 Chrome/77.0.3865.90 Safari/537.36','Ubuntu','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:24:55','2020-08-12 10:24:55'),(70385,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3835.0 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:24:57','2020-08-12 10:24:57'),(70386,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:24:59','2020-08-12 10:24:59'),(70387,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1','Windows Vista','Chrome 13','https://baracoero.com/',NULL,'2020-08-12 10:25:03','2020-08-12 10:25:03'),(70388,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:25:05','2020-08-12 10:25:05'),(70389,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:25:06','2020-08-12 10:25:06'),(70390,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:25:09','2020-08-12 10:25:09'),(70391,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:25:14','2020-08-12 10:25:14'),(70392,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:26:36','2020-08-12 10:26:36'),(70393,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:26:36','2020-08-12 10:26:36'),(70394,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:26:39','2020-08-12 10:26:39'),(70395,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:26:41','2020-08-12 10:26:41'),(70396,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 10:26:46','2020-08-12 10:26:46'),(70397,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:26:48','2020-08-12 10:26:48'),(70398,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]','Windows 2000','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 10:26:51','2020-08-12 10:26:51'),(70399,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/18.17763','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:26:53','2020-08-12 10:26:53'),(70400,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:26:56','2020-08-12 10:26:56'),(70401,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:26:59','2020-08-12 10:26:59'),(70402,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:27:00','2020-08-12 10:27:00'),(70403,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36 OPR/63.0.3368.107','Windows 10','Opera','https://baracoero.com/',NULL,'2020-08-12 10:27:01','2020-08-12 10:27:01'),(70404,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:27:04','2020-08-12 10:27:04'),(70405,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:27:07','2020-08-12 10:27:07'),(70406,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:27:10','2020-08-12 10:27:10'),(70407,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:27:11','2020-08-12 10:27:11'),(70408,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 7','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:27:13','2020-08-12 10:27:13'),(70409,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:27:15','2020-08-12 10:27:15'),(70410,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Ubuntu','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:27:19','2020-08-12 10:27:19'),(70411,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:27:22','2020-08-12 10:27:22'),(70412,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:27:25','2020-08-12 10:27:25'),(70413,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:27:27','2020-08-12 10:27:27'),(70414,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 8.1','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:27:28','2020-08-12 10:27:28'),(70415,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 10:27:34','2020-08-12 10:27:34'),(70416,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:27:36','2020-08-12 10:27:36'),(70417,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:27:37','2020-08-12 10:27:37'),(70418,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:27:43','2020-08-12 10:27:43'),(70419,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:27:45','2020-08-12 10:27:45'),(70420,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:27:50','2020-08-12 10:27:50'),(70421,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','undefined','Unknown','Unknown','https://baracoero.com/',NULL,'2020-08-12 10:27:52','2020-08-12 10:27:52'),(70422,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:27:57','2020-08-12 10:27:57'),(70423,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:27:59','2020-08-12 10:27:59'),(70424,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:28:02','2020-08-12 10:28:02'),(70425,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:28:05','2020-08-12 10:28:05'),(70426,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 10:28:06','2020-08-12 10:28:06'),(70427,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:28:07','2020-08-12 10:28:07'),(70428,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:28:10','2020-08-12 10:28:10'),(70429,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:28:15','2020-08-12 10:28:15'),(70430,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:28:16','2020-08-12 10:28:16'),(70431,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:28:21','2020-08-12 10:28:21'),(70432,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.5.01003)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 10:28:22','2020-08-12 10:28:22'),(70433,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:28:24','2020-08-12 10:28:24'),(70434,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30','Android 4.x','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 10:28:27','2020-08-12 10:28:27'),(70435,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:28:30','2020-08-12 10:28:30'),(70436,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:28:33','2020-08-12 10:28:33'),(70437,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.5.01003)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 10:28:34','2020-08-12 10:28:34'),(70438,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (iPad; CPU OS 8_4_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H321 Safari/600.1.4','iOS 8.4 (iPad)','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 10:28:38','2020-08-12 10:28:38'),(70439,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1','Windows Vista','Chrome 13','https://baracoero.com/',NULL,'2020-08-12 10:28:39','2020-08-12 10:28:39'),(70440,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 10:28:43','2020-08-12 10:28:43'),(70441,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/77.0.3865.90 Chrome/77.0.3865.90 Safari/537.36','Ubuntu','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:28:47','2020-08-12 10:28:47'),(70442,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:28:49','2020-08-12 10:28:49'),(70443,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:28:52','2020-08-12 10:28:52'),(70444,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 7','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:28:56','2020-08-12 10:28:56'),(70445,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:28:58','2020-08-12 10:28:58'),(70446,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:00','2020-08-12 10:29:00'),(70447,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:05','2020-08-12 10:29:05'),(70448,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:29:07','2020-08-12 10:29:07'),(70449,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:29:10','2020-08-12 10:29:10'),(70450,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/18.17763','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:29:15','2020-08-12 10:29:15'),(70451,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:18','2020-08-12 10:29:18'),(70452,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/77.0.3865.90 Chrome/77.0.3865.90 Safari/537.36','Ubuntu','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:21','2020-08-12 10:29:21'),(70453,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 10:29:21','2020-08-12 10:29:21'),(70454,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:23','2020-08-12 10:29:23'),(70455,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:26','2020-08-12 10:29:26'),(70456,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:29:30','2020-08-12 10:29:30'),(70457,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:31','2020-08-12 10:29:31'),(70458,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1','Windows Vista','Chrome 13','https://baracoero.com/',NULL,'2020-08-12 10:29:36','2020-08-12 10:29:36'),(70459,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:37','2020-08-12 10:29:37'),(70460,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:41','2020-08-12 10:29:41'),(70461,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:43','2020-08-12 10:29:43'),(70462,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:45','2020-08-12 10:29:45'),(70463,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:48','2020-08-12 10:29:48'),(70464,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:49','2020-08-12 10:29:49'),(70465,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:29:53','2020-08-12 10:29:53'),(70466,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:53','2020-08-12 10:29:53'),(70467,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:57','2020-08-12 10:29:57'),(70468,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:29:57','2020-08-12 10:29:57'),(70469,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:29:59','2020-08-12 10:29:59'),(70470,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:30:02','2020-08-12 10:30:02'),(70471,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:30:02','2020-08-12 10:30:02'),(70472,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:04','2020-08-12 10:30:04'),(70473,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:04','2020-08-12 10:30:04'),(70474,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:30:07','2020-08-12 10:30:07'),(70475,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:09','2020-08-12 10:30:09'),(70476,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:10','2020-08-12 10:30:10'),(70477,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:30:12','2020-08-12 10:30:12'),(70478,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:12','2020-08-12 10:30:12'),(70479,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30','Android 4.x','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 10:30:14','2020-08-12 10:30:14'),(70480,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:18','2020-08-12 10:30:18'),(70481,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:19','2020-08-12 10:30:19'),(70482,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:20','2020-08-12 10:30:20'),(70483,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:30:22','2020-08-12 10:30:22'),(70484,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (iPad; CPU OS 8_4_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H321 Safari/600.1.4','iOS 8.4 (iPad)','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 10:30:24','2020-08-12 10:30:24'),(70485,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 10:30:25','2020-08-12 10:30:25'),(70486,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:26','2020-08-12 10:30:26'),(70487,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30','Android 4.x','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 10:30:28','2020-08-12 10:30:28'),(70488,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:30:29','2020-08-12 10:30:29'),(70489,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:32','2020-08-12 10:30:32'),(70490,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:32','2020-08-12 10:30:32'),(70491,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:33','2020-08-12 10:30:33'),(70492,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 YaBrowser/19.9.3.314 Yowser/2.5 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:37','2020-08-12 10:30:37'),(70493,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:30:38','2020-08-12 10:30:38'),(70494,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:30:39','2020-08-12 10:30:39'),(70495,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{\"XDEBUG_SESSION_START\":[\"phpstorm\"]}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36','Windows 10','Chrome','https://118.24.120.220/',NULL,'2020-08-12 10:39:27','2020-08-12 10:39:27'),(70496,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2',NULL,'Unknown','Unknown','https://118.24.120.220/',NULL,'2020-08-12 10:39:56','2020-08-12 10:39:56'),(70497,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','curl','172.19.0.2','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn/',NULL,'2020-08-12 10:40:02','2020-08-12 10:40:02'),(70498,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=12d05a7d-fe64-47ff-b735-2378d915ef7f',NULL,'2020-08-12 10:40:03','2020-08-12 10:40:03'),(70499,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2',NULL,'Unknown','Unknown','https://www.lcools.cn/',NULL,'2020-08-12 10:44:47','2020-08-12 10:44:47'),(70500,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','NetSystemsResearch studies the availability of various services across the internet. Our website is netsystemsresearch.com','Chrome OS','Unknown','https://www.lcools.cn/',NULL,'2020-08-12 10:47:42','2020-08-12 10:47:42'),(70501,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 查看robots','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/robots.txt',NULL,'2020-08-12 10:48:22','2020-08-12 10:48:22'),(70502,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入关于页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/about',NULL,'2020-08-12 10:49:17','2020-08-12 10:49:17'),(70503,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入归档目录页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/archives',NULL,'2020-08-12 10:49:54','2020-08-12 10:49:54'),(70504,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:50:33','2020-08-12 10:50:33'),(70505,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 7','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:50:34','2020-08-12 10:50:34'),(70506,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:50:37','2020-08-12 10:50:37'),(70507,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 10:50:39','2020-08-12 10:50:39'),(70508,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:50:43','2020-08-12 10:50:43'),(70509,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','Windows XP','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:50:49','2020-08-12 10:50:49'),(70510,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 10:50:56','2020-08-12 10:50:56'),(70511,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.5.01003)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 10:51:00','2020-08-12 10:51:00'),(70512,NULL,'VISIT','INFO','访客: [83.97.20.25] | 操作: 进入首页','{}',NULL,'83.97.20.25',NULL,'Unknown','Unknown','https://localhost:8443/',NULL,'2020-08-12 10:51:01','2020-08-12 10:51:01'),(70513,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 7','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:51:04','2020-08-12 10:51:04'),(70514,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:51:08','2020-08-12 10:51:08'),(70515,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0','Windows 7','Firefox 12','https://baracoero.com/',NULL,'2020-08-12 10:51:10','2020-08-12 10:51:10'),(70516,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 10:51:11','2020-08-12 10:51:11'),(70517,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','谷歌','172.19.0.2','Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)','Unknown','Robot/Spider','https://baracoero.com/',NULL,'2020-08-12 10:51:14','2020-08-12 10:51:14'),(70518,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 10:51:18','2020-08-12 10:51:18'),(70519,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:51:20','2020-08-12 10:51:20'),(70520,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[107]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/107',NULL,'2020-08-12 10:51:21','2020-08-12 10:51:21'),(70521,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/77.0.3865.90 Chrome/77.0.3865.90 Safari/537.36','Ubuntu','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:51:23','2020-08-12 10:51:23'),(70522,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:51:27','2020-08-12 10:51:27'),(70523,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:51:32','2020-08-12 10:51:32'),(70524,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:51:34','2020-08-12 10:51:34'),(70525,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:51:38','2020-08-12 10:51:38'),(70526,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:51:40','2020-08-12 10:51:40'),(70527,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:51:43','2020-08-12 10:51:43'),(70528,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:51:47','2020-08-12 10:51:47'),(70529,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[108]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/108',NULL,'2020-08-12 10:52:08','2020-08-12 10:52:08'),(70530,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[109]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/109',NULL,'2020-08-12 10:52:39','2020-08-12 10:52:39'),(70531,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:53:07','2020-08-12 10:53:07'),(70532,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:53:10','2020-08-12 10:53:10'),(70533,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.5.01003)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 10:53:12','2020-08-12 10:53:12'),(70534,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:53:14','2020-08-12 10:53:14'),(70535,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[14]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/14',NULL,'2020-08-12 10:53:16','2020-08-12 10:53:16'),(70536,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:53:20','2020-08-12 10:53:20'),(70537,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1','Windows Vista','Chrome 13','https://baracoero.com/',NULL,'2020-08-12 10:53:27','2020-08-12 10:53:27'),(70538,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:53:36','2020-08-12 10:53:36'),(70539,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:53:40','2020-08-12 10:53:40'),(70540,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 YaBrowser/19.9.3.314 Yowser/2.5 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:53:44','2020-08-12 10:53:44'),(70541,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:53:51','2020-08-12 10:53:51'),(70542,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:53:54','2020-08-12 10:53:54'),(70543,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:54:04','2020-08-12 10:54:04'),(70544,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:54:14','2020-08-12 10:54:14'),(70545,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:54:25','2020-08-12 10:54:25'),(70546,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[31]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/31',NULL,'2020-08-12 10:54:30','2020-08-12 10:54:30'),(70547,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[32]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/32',NULL,'2020-08-12 10:55:04','2020-08-12 10:55:04'),(70548,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[33]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/33',NULL,'2020-08-12 10:55:32','2020-08-12 10:55:32'),(70549,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:55:47','2020-08-12 10:55:47'),(70550,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:55:49','2020-08-12 10:55:49'),(70551,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36 OPR/63.0.3368.107','Windows 10','Opera','https://baracoero.com/',NULL,'2020-08-12 10:55:51','2020-08-12 10:55:51'),(70552,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0','Windows 7','Firefox 12','https://baracoero.com/',NULL,'2020-08-12 10:55:53','2020-08-12 10:55:53'),(70553,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[35]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/35',NULL,'2020-08-12 10:56:01','2020-08-12 10:56:01'),(70554,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:56:04','2020-08-12 10:56:04'),(70555,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 10:56:08','2020-08-12 10:56:08'),(70556,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:56:12','2020-08-12 10:56:12'),(70557,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:56:15','2020-08-12 10:56:15'),(70558,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:56:18','2020-08-12 10:56:18'),(70559,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 7','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 10:56:22','2020-08-12 10:56:22'),(70560,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:56:29','2020-08-12 10:56:29'),(70561,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 8.1','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:56:31','2020-08-12 10:56:31'),(70562,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:56:36','2020-08-12 10:56:36'),(70563,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:56:39','2020-08-12 10:56:39'),(70564,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 10:56:43','2020-08-12 10:56:43'),(70565,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[36]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/36',NULL,'2020-08-12 10:56:45','2020-08-12 10:56:45'),(70566,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 YaBrowser/19.9.3.314 Yowser/2.5 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:56:49','2020-08-12 10:56:49'),(70567,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:56:55','2020-08-12 10:56:55'),(70568,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; rv:60.0) Gecko/20100101 Firefox/60.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:56:58','2020-08-12 10:56:58'),(70569,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8','Ubuntu','Firefox 3','https://baracoero.com/',NULL,'2020-08-12 10:57:05','2020-08-12 10:57:05'),(70570,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[42]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/42',NULL,'2020-08-12 10:57:16','2020-08-12 10:57:16'),(70571,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:57:18','2020-08-12 10:57:18'),(70572,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:57:22','2020-08-12 10:57:22'),(70573,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:57:24','2020-08-12 10:57:24'),(70574,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:57:26','2020-08-12 10:57:26'),(70575,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:57:28','2020-08-12 10:57:28'),(70576,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:57:31','2020-08-12 10:57:31'),(70577,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:57:32','2020-08-12 10:57:32'),(70578,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:57:34','2020-08-12 10:57:34'),(70579,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:57:38','2020-08-12 10:57:38'),(70580,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:57:39','2020-08-12 10:57:39'),(70581,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[43]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/43',NULL,'2020-08-12 10:57:43','2020-08-12 10:57:43'),(70582,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (iPad; CPU OS 8_4_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H321 Safari/600.1.4','iOS 8.4 (iPad)','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 10:57:43','2020-08-12 10:57:43'),(70583,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:57:47','2020-08-12 10:57:47'),(70584,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:57:50','2020-08-12 10:57:50'),(70585,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:57:51','2020-08-12 10:57:51'),(70586,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:57:55','2020-08-12 10:57:55'),(70587,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:57:56','2020-08-12 10:57:56'),(70588,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 10:57:59','2020-08-12 10:57:59'),(70589,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:58:00','2020-08-12 10:58:00'),(70590,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:58:04','2020-08-12 10:58:04'),(70591,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 10:58:06','2020-08-12 10:58:06'),(70592,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 10:58:07','2020-08-12 10:58:07'),(70593,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 10:58:11','2020-08-12 10:58:11'),(70594,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (iPad; CPU OS 8_4_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H321 Safari/600.1.4','iOS 8.4 (iPad)','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 10:58:13','2020-08-12 10:58:13'),(70595,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 10:58:17','2020-08-12 10:58:17'),(70596,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:58:18','2020-08-12 10:58:18'),(70597,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[44]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/44',NULL,'2020-08-12 10:58:21','2020-08-12 10:58:21'),(70598,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:58:22','2020-08-12 10:58:22'),(70599,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 10:58:24','2020-08-12 10:58:24'),(70600,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 7','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 10:58:25','2020-08-12 10:58:25'),(70601,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 10:58:29','2020-08-12 10:58:29'),(70602,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:58:31','2020-08-12 10:58:31'),(70603,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:58:47','2020-08-12 10:58:47'),(70604,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8','Ubuntu','Firefox 3','https://baracoero.com/',NULL,'2020-08-12 10:58:50','2020-08-12 10:58:50'),(70605,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:58:54','2020-08-12 10:58:54'),(70606,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 10:58:57','2020-08-12 10:58:57'),(70607,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:58:59','2020-08-12 10:58:59'),(70608,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','Windows XP','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:59:05','2020-08-12 10:59:05'),(70609,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[45]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/45',NULL,'2020-08-12 10:59:07','2020-08-12 10:59:07'),(70610,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko','Windows 8.1','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 10:59:08','2020-08-12 10:59:08'),(70611,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:59:13','2020-08-12 10:59:13'),(70612,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:59:17','2020-08-12 10:59:17'),(70613,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:59:22','2020-08-12 10:59:22'),(70614,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','undefined','Unknown','Unknown','https://baracoero.com/',NULL,'2020-08-12 10:59:23','2020-08-12 10:59:23'),(70615,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3835.0 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:59:25','2020-08-12 10:59:25'),(70616,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:59:29','2020-08-12 10:59:29'),(70617,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:59:32','2020-08-12 10:59:32'),(70618,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[46]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/46',NULL,'2020-08-12 10:59:34','2020-08-12 10:59:34'),(70619,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:59:38','2020-08-12 10:59:38'),(70620,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:59:42','2020-08-12 10:59:42'),(70621,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:59:43','2020-08-12 10:59:43'),(70622,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 10:59:48','2020-08-12 10:59:48'),(70623,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 10:59:51','2020-08-12 10:59:51'),(70624,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','curl','172.19.0.2','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn/',NULL,'2020-08-12 11:00:02','2020-08-12 11:00:02'),(70625,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=b5f5d6ce-a704-4ff6-b14b-c79741766bfc',NULL,'2020-08-12 11:00:03','2020-08-12 11:00:03'),(70626,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[47]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/47',NULL,'2020-08-12 11:00:03','2020-08-12 11:00:03'),(70627,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[48]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/48',NULL,'2020-08-12 11:00:29','2020-08-12 11:00:29'),(70628,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[49]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/49',NULL,'2020-08-12 11:00:58','2020-08-12 11:00:58'),(70629,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:01:15','2020-08-12 11:01:15'),(70630,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:01:16','2020-08-12 11:01:16'),(70631,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:01:17','2020-08-12 11:01:17'),(70632,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[50]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/50',NULL,'2020-08-12 11:01:23','2020-08-12 11:01:23'),(70633,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0 Waterfox/56.2.14','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:01:32','2020-08-12 11:01:32'),(70634,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:01:33','2020-08-12 11:01:33'),(70635,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:01:36','2020-08-12 11:01:36'),(70636,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:01:41','2020-08-12 11:01:41'),(70637,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:01:43','2020-08-12 11:01:43'),(70638,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G570Y Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36','Android 6.x','Chrome Mobile','https://baracoero.com/',NULL,'2020-08-12 11:01:48','2020-08-12 11:01:48'),(70639,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 8.1','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:01:53','2020-08-12 11:01:53'),(70640,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:01:56','2020-08-12 11:01:56'),(70641,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章[52]详情页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/article/52',NULL,'2020-08-12 11:01:58','2020-08-12 11:01:58'),(70642,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:02:01','2020-08-12 11:02:01'),(70643,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/77.0.3865.90 Chrome/77.0.3865.90 Safari/537.36','Ubuntu','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:02:04','2020-08-12 11:02:04'),(70644,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:02:08','2020-08-12 11:02:08'),(70645,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:02:14','2020-08-12 11:02:14'),(70646,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:02:20','2020-08-12 11:02:20'),(70647,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:02:28','2020-08-12 11:02:28'),(70648,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入免责声明页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/disclaimer',NULL,'2020-08-12 11:02:28','2020-08-12 11:02:28'),(70649,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:02:29','2020-08-12 11:02:29'),(70650,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:02:33','2020-08-12 11:02:33'),(70651,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:02:35','2020-08-12 11:02:35'),(70652,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/18.17763','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 11:02:38','2020-08-12 11:02:38'),(70653,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:02:39','2020-08-12 11:02:39'),(70654,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:02:41','2020-08-12 11:02:41'),(70655,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:02:45','2020-08-12 11:02:45'),(70656,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','谷歌','172.19.0.2','Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)','Unknown','Robot/Spider','https://baracoero.com/',NULL,'2020-08-12 11:02:47','2020-08-12 11:02:47'),(70657,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:02:49','2020-08-12 11:02:49'),(70658,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:02:52','2020-08-12 11:02:52'),(70659,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 11:02:57','2020-08-12 11:02:57'),(70660,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36 OPR/63.0.3368.107','Windows 7','Opera','https://baracoero.com/',NULL,'2020-08-12 11:02:59','2020-08-12 11:02:59'),(70661,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:03:02','2020-08-12 11:03:02'),(70662,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:03:05','2020-08-12 11:03:05'),(70663,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入友情链接页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/links',NULL,'2020-08-12 11:03:07','2020-08-12 11:03:07'),(70664,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:03:07','2020-08-12 11:03:07'),(70665,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 11:03:12','2020-08-12 11:03:12'),(70666,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]','Windows 2000','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:03:14','2020-08-12 11:03:14'),(70667,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:03:16','2020-08-12 11:03:16'),(70668,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:03:19','2020-08-12 11:03:19'),(70669,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36 OPR/63.0.3368.107','Windows 7','Opera','https://baracoero.com/',NULL,'2020-08-12 11:03:22','2020-08-12 11:03:22'),(70670,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 11:03:24','2020-08-12 11:03:24'),(70671,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:03:28','2020-08-12 11:03:28'),(70672,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:03:29','2020-08-12 11:03:29'),(70673,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:03:31','2020-08-12 11:03:31'),(70674,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:03:34','2020-08-12 11:03:34'),(70675,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:03:36','2020-08-12 11:03:36'),(70676,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:03:38','2020-08-12 11:03:38'),(70677,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:03:39','2020-08-12 11:03:39'),(70678,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入站长推荐页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/recommended',NULL,'2020-08-12 11:03:41','2020-08-12 11:03:41'),(70679,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:03:43','2020-08-12 11:03:43'),(70680,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:03:46','2020-08-12 11:03:46'),(70681,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 查看sitemap.html','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/sitemap.html',NULL,'2020-08-12 11:04:47','2020-08-12 11:04:47'),(70682,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章标签[1]列表页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/tag/1',NULL,'2020-08-12 11:05:11','2020-08-12 11:05:11'),(70683,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:05:16','2020-08-12 11:05:16'),(70684,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:05:22','2020-08-12 11:05:22'),(70685,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (iPad; CPU OS 8_4_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H321 Safari/600.1.4','iOS 8.4 (iPad)','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 11:05:24','2020-08-12 11:05:24'),(70686,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 11:05:28','2020-08-12 11:05:28'),(70687,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:05:48','2020-08-12 11:05:48'),(70688,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章标签[10]列表页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/tag/10',NULL,'2020-08-12 11:05:48','2020-08-12 11:05:48'),(70689,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0','Windows 7','Firefox 12','https://baracoero.com/',NULL,'2020-08-12 11:05:55','2020-08-12 11:05:55'),(70690,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:05:56','2020-08-12 11:05:56'),(70691,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]','Windows 2000','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:06:00','2020-08-12 11:06:00'),(70692,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0 Waterfox/56.2.14','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:06:04','2020-08-12 11:06:04'),(70693,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章标签[2]列表页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/tag/2',NULL,'2020-08-12 11:06:07','2020-08-12 11:06:07'),(70694,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','Windows XP','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:06:08','2020-08-12 11:06:08'),(70695,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:06:10','2020-08-12 11:06:10'),(70696,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:06:13','2020-08-12 11:06:13'),(70697,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','谷歌','172.19.0.2','Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)','Unknown','Robot/Spider','https://baracoero.com/',NULL,'2020-08-12 11:06:15','2020-08-12 11:06:15'),(70698,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 11:06:17','2020-08-12 11:06:17'),(70699,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:06:19','2020-08-12 11:06:19'),(70700,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:06:21','2020-08-12 11:06:21'),(70701,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:06:24','2020-08-12 11:06:24'),(70702,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:06:27','2020-08-12 11:06:27'),(70703,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:06:29','2020-08-12 11:06:29'),(70704,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章标签[3]列表页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/tag/3',NULL,'2020-08-12 11:06:37','2020-08-12 11:06:37'),(70705,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章标签[4]列表页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/tag/4',NULL,'2020-08-12 11:07:38','2020-08-12 11:07:38'),(70706,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1','Windows Vista','Chrome 13','https://baracoero.com/',NULL,'2020-08-12 11:07:49','2020-08-12 11:07:49'),(70707,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:07:50','2020-08-12 11:07:50'),(70708,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1','Windows Vista','Chrome 13','https://baracoero.com/',NULL,'2020-08-12 11:07:53','2020-08-12 11:07:53'),(70709,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:07:55','2020-08-12 11:07:55'),(70710,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:07:55','2020-08-12 11:07:55'),(70711,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 7','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:07:59','2020-08-12 11:07:59'),(70712,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:07:59','2020-08-12 11:07:59'),(70713,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:03','2020-08-12 11:08:03'),(70714,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Ubuntu','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:08:07','2020-08-12 11:08:07'),(70715,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:11','2020-08-12 11:08:11'),(70716,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章标签[5]列表页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/tag/5',NULL,'2020-08-12 11:08:12','2020-08-12 11:08:12'),(70717,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:14','2020-08-12 11:08:14'),(70718,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:19','2020-08-12 11:08:19'),(70719,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8','Ubuntu','Firefox 3','https://baracoero.com/',NULL,'2020-08-12 11:08:20','2020-08-12 11:08:20'),(70720,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:08:22','2020-08-12 11:08:22'),(70721,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:24','2020-08-12 11:08:24'),(70722,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:29','2020-08-12 11:08:29'),(70723,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:32','2020-08-12 11:08:32'),(70724,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:08:34','2020-08-12 11:08:34'),(70725,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:08:39','2020-08-12 11:08:39'),(70726,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:40','2020-08-12 11:08:40'),(70727,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章标签[6]列表页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/tag/6',NULL,'2020-08-12 11:08:45','2020-08-12 11:08:45'),(70728,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','Windows XP','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:08:45','2020-08-12 11:08:45'),(70729,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:47','2020-08-12 11:08:47'),(70730,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/77.0.3865.90 Chrome/77.0.3865.90 Safari/537.36','Ubuntu','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:47','2020-08-12 11:08:47'),(70731,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:08:51','2020-08-12 11:08:51'),(70732,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 11:08:52','2020-08-12 11:08:52'),(70733,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:53','2020-08-12 11:08:53'),(70734,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:55','2020-08-12 11:08:55'),(70735,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:58','2020-08-12 11:08:58'),(70736,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:08:59','2020-08-12 11:08:59'),(70737,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','Windows XP','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:09:02','2020-08-12 11:09:02'),(70738,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:09:03','2020-08-12 11:09:03'),(70739,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/18.17763','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 11:09:04','2020-08-12 11:09:04'),(70740,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:09:06','2020-08-12 11:09:06'),(70741,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:09:07','2020-08-12 11:09:07'),(70742,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8','Ubuntu','Firefox 3','https://baracoero.com/',NULL,'2020-08-12 11:09:09','2020-08-12 11:09:09'),(70743,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:11','2020-08-12 11:09:11'),(70744,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:13','2020-08-12 11:09:13'),(70745,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章标签[8]列表页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/tag/8',NULL,'2020-08-12 11:09:17','2020-08-12 11:09:17'),(70746,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:27','2020-08-12 11:09:27'),(70747,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:28','2020-08-12 11:09:28'),(70748,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:31','2020-08-12 11:09:31'),(70749,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 11:09:34','2020-08-12 11:09:34'),(70750,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:09:36','2020-08-12 11:09:36'),(70751,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:37','2020-08-12 11:09:37'),(70752,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:39','2020-08-12 11:09:39'),(70753,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:40','2020-08-12 11:09:40'),(70754,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:44','2020-08-12 11:09:44'),(70755,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; rv:60.0) Gecko/20100101 Firefox/60.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:09:47','2020-08-12 11:09:47'),(70756,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:09:50','2020-08-12 11:09:50'),(70757,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:09:52','2020-08-12 11:09:52'),(70758,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:53','2020-08-12 11:09:53'),(70759,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:09:56','2020-08-12 11:09:56'),(70760,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:09:58','2020-08-12 11:09:58'),(70761,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','undefined','Unknown','Unknown','https://baracoero.com/',NULL,'2020-08-12 11:10:00','2020-08-12 11:10:00'),(70762,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:10:01','2020-08-12 11:10:01'),(70763,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 8.1','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:10:02','2020-08-12 11:10:02'),(70764,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:10:04','2020-08-12 11:10:04'),(70765,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:10:05','2020-08-12 11:10:05'),(70766,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:10:09','2020-08-12 11:10:09'),(70767,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:10:14','2020-08-12 11:10:14'),(70768,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:10:16','2020-08-12 11:10:16'),(70769,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Ubuntu','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:10:20','2020-08-12 11:10:20'),(70770,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','undefined','Unknown','Unknown','https://baracoero.com/',NULL,'2020-08-12 11:10:21','2020-08-12 11:10:21'),(70771,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:10:23','2020-08-12 11:10:23'),(70772,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:10:27','2020-08-12 11:10:27'),(70773,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入文章标签[9]列表页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/tag/9',NULL,'2020-08-12 11:10:28','2020-08-12 11:10:28'),(70774,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:10:29','2020-08-12 11:10:29'),(70775,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:10:30','2020-08-12 11:10:30'),(70776,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:10:31','2020-08-12 11:10:31'),(70777,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入更新记录页','{}','MJ12bot','172.19.0.2','Mozilla/5.0 (compatible; MJ12bot/v1.4.8; http://mj12bot.com/)','Unknown','Robot/Spider','https://www.lcools.cn/updateLog',NULL,'2020-08-12 11:10:57','2020-08-12 11:10:57'),(70778,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:14:38','2020-08-12 11:14:38'),(70779,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:14:39','2020-08-12 11:14:39'),(70780,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:14:41','2020-08-12 11:14:41'),(70781,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G570Y Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36','Android 6.x','Chrome Mobile','https://baracoero.com/',NULL,'2020-08-12 11:14:45','2020-08-12 11:14:45'),(70782,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:14:50','2020-08-12 11:14:50'),(70783,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:14:53','2020-08-12 11:14:53'),(70784,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:14:56','2020-08-12 11:14:56'),(70785,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:15:01','2020-08-12 11:15:01'),(70786,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:15:05','2020-08-12 11:15:05'),(70787,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G570Y Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36','Android 6.x','Chrome Mobile','https://baracoero.com/',NULL,'2020-08-12 11:15:07','2020-08-12 11:15:07'),(70788,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:15:12','2020-08-12 11:15:12'),(70789,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:15:14','2020-08-12 11:15:14'),(70790,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:15:16','2020-08-12 11:15:16'),(70791,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:15:19','2020-08-12 11:15:19'),(70792,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 8.1','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:15:23','2020-08-12 11:15:23'),(70793,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:15:26','2020-08-12 11:15:26'),(70794,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (iPad; CPU OS 8_4_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H321 Safari/600.1.4','iOS 8.4 (iPad)','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 11:15:27','2020-08-12 11:15:27'),(70795,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko','Windows 8.1','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:15:33','2020-08-12 11:15:33'),(70796,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:15:35','2020-08-12 11:15:35'),(70797,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:15:40','2020-08-12 11:15:40'),(70798,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:15:45','2020-08-12 11:15:45'),(70799,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:15:48','2020-08-12 11:15:48'),(70800,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:15:54','2020-08-12 11:15:54'),(70801,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 11:15:59','2020-08-12 11:15:59'),(70802,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Ubuntu','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:16:03','2020-08-12 11:16:03'),(70803,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:16:07','2020-08-12 11:16:07'),(70804,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:16:08','2020-08-12 11:16:08'),(70805,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:16:16','2020-08-12 11:16:16'),(70806,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','Windows XP','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:16:17','2020-08-12 11:16:17'),(70807,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:16:23','2020-08-12 11:16:23'),(70808,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:16:26','2020-08-12 11:16:26'),(70809,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:16:29','2020-08-12 11:16:29'),(70810,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:16:38','2020-08-12 11:16:38'),(70811,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:16:41','2020-08-12 11:16:41'),(70812,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 YaBrowser/19.9.3.314 Yowser/2.5 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:16:43','2020-08-12 11:16:43'),(70813,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:16:45','2020-08-12 11:16:45'),(70814,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8','Ubuntu','Firefox 3','https://baracoero.com/',NULL,'2020-08-12 11:16:51','2020-08-12 11:16:51'),(70815,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36 OPR/63.0.3368.107','Windows 7','Opera','https://baracoero.com/',NULL,'2020-08-12 11:16:54','2020-08-12 11:16:54'),(70816,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G570Y Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36','Android 6.x','Chrome Mobile','https://baracoero.com/',NULL,'2020-08-12 11:16:58','2020-08-12 11:16:58'),(70817,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:17:00','2020-08-12 11:17:00'),(70818,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:17:10','2020-08-12 11:17:10'),(70819,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:18:40','2020-08-12 11:18:40'),(70820,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:18:41','2020-08-12 11:18:41'),(70821,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:18:45','2020-08-12 11:18:45'),(70822,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:18:47','2020-08-12 11:18:47'),(70823,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/77.0.3865.90 Chrome/77.0.3865.90 Safari/537.36','Ubuntu','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:18:52','2020-08-12 11:18:52'),(70824,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Ubuntu','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:18:54','2020-08-12 11:18:54'),(70825,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:18:56','2020-08-12 11:18:56'),(70826,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:19:01','2020-08-12 11:19:01'),(70827,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Ubuntu','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:19:03','2020-08-12 11:19:03'),(70828,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:19:06','2020-08-12 11:19:06'),(70829,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:19:07','2020-08-12 11:19:07'),(70830,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 11:19:09','2020-08-12 11:19:09'),(70831,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:19:11','2020-08-12 11:19:11'),(70832,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:19:23','2020-08-12 11:19:23'),(70833,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:19:29','2020-08-12 11:19:29'),(70834,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G570Y Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36','Android 6.x','Chrome Mobile','https://baracoero.com/',NULL,'2020-08-12 11:19:33','2020-08-12 11:19:33'),(70835,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:19:38','2020-08-12 11:19:38'),(70836,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:19:47','2020-08-12 11:19:47'),(70837,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','curl','172.19.0.2','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn/',NULL,'2020-08-12 11:20:03','2020-08-12 11:20:03'),(70838,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=26e43353-9621-41d5-a74a-fe5210c1962e',NULL,'2020-08-12 11:20:06','2020-08-12 11:20:06'),(70839,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:21:16','2020-08-12 11:21:16'),(70840,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:21:22','2020-08-12 11:21:22'),(70841,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:21:26','2020-08-12 11:21:26'),(70842,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (iPad; CPU OS 8_4_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H321 Safari/600.1.4','iOS 8.4 (iPad)','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 11:21:32','2020-08-12 11:21:32'),(70843,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:21:37','2020-08-12 11:21:37'),(70844,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30','Android 4.x','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 11:21:41','2020-08-12 11:21:41'),(70845,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:21:48','2020-08-12 11:21:48'),(70846,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:21:53','2020-08-12 11:21:53'),(70847,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:21:59','2020-08-12 11:21:59'),(70848,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Ubuntu','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:22:06','2020-08-12 11:22:06'),(70849,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:22:18','2020-08-12 11:22:18'),(70850,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:22:22','2020-08-12 11:22:22'),(70851,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:22:28','2020-08-12 11:22:28'),(70852,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 11:23:53','2020-08-12 11:23:53'),(70853,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:23:55','2020-08-12 11:23:55'),(70854,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:23:59','2020-08-12 11:23:59'),(70855,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:24:06','2020-08-12 11:24:06'),(70856,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30','Android 4.x','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 11:24:10','2020-08-12 11:24:10'),(70857,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:24:16','2020-08-12 11:24:16'),(70858,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:24:19','2020-08-12 11:24:19'),(70859,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:24:22','2020-08-12 11:24:22'),(70860,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 11:24:26','2020-08-12 11:24:26'),(70861,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:24:33','2020-08-12 11:24:33'),(70862,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:24:35','2020-08-12 11:24:35'),(70863,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:24:40','2020-08-12 11:24:40'),(70864,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0 Waterfox/56.2.14','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:24:45','2020-08-12 11:24:45'),(70865,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:24:47','2020-08-12 11:24:47'),(70866,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 11:24:49','2020-08-12 11:24:49'),(70867,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30','Android 4.x','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 11:24:52','2020-08-12 11:24:52'),(70868,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:24:55','2020-08-12 11:24:55'),(70869,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:24:56','2020-08-12 11:24:56'),(70870,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:24:59','2020-08-12 11:24:59'),(70871,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0 Waterfox/56.2.14','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:25:02','2020-08-12 11:25:02'),(70872,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:25:03','2020-08-12 11:25:03'),(70873,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:25:06','2020-08-12 11:25:06'),(70874,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 YaBrowser/19.9.3.314 Yowser/2.5 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:25:07','2020-08-12 11:25:07'),(70875,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 11:25:09','2020-08-12 11:25:09'),(70876,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 11:27:52','2020-08-12 11:27:52'),(70877,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0','Windows 7','Firefox 12','https://baracoero.com/',NULL,'2020-08-12 11:27:55','2020-08-12 11:27:55'),(70878,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:27:57','2020-08-12 11:27:57'),(70879,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:28:02','2020-08-12 11:28:02'),(70880,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Ubuntu','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:28:06','2020-08-12 11:28:06'),(70881,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:28:10','2020-08-12 11:28:10'),(70882,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:28:15','2020-08-12 11:28:15'),(70883,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]','Windows 2000','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:28:23','2020-08-12 11:28:23'),(70884,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:28:32','2020-08-12 11:28:32'),(70885,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:28:35','2020-08-12 11:28:35'),(70886,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:28:37','2020-08-12 11:28:37'),(70887,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:28:44','2020-08-12 11:28:44'),(70888,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:28:48','2020-08-12 11:28:48'),(70889,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:28:51','2020-08-12 11:28:51'),(70890,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:28:55','2020-08-12 11:28:55'),(70891,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko','Windows 8.1','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:28:59','2020-08-12 11:28:59'),(70892,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','undefined','Unknown','Unknown','https://baracoero.com/',NULL,'2020-08-12 11:29:02','2020-08-12 11:29:02'),(70893,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.5.01003)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:29:06','2020-08-12 11:29:06'),(70894,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30','Android 4.x','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 11:29:10','2020-08-12 11:29:10'),(70895,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]','Windows 2000','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:29:12','2020-08-12 11:29:12'),(70896,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Ubuntu','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:29:15','2020-08-12 11:29:15'),(70897,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:29:20','2020-08-12 11:29:20'),(70898,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:29:25','2020-08-12 11:29:25'),(70899,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 7','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:29:28','2020-08-12 11:29:28'),(70900,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:29:30','2020-08-12 11:29:30'),(70901,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:29:36','2020-08-12 11:29:36'),(70902,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8','Ubuntu','Firefox 3','https://baracoero.com/',NULL,'2020-08-12 11:29:40','2020-08-12 11:29:40'),(70903,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 8.1','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:29:43','2020-08-12 11:29:43'),(70904,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:29:49','2020-08-12 11:29:49'),(70905,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:29:53','2020-08-12 11:29:53'),(70906,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:29:55','2020-08-12 11:29:55'),(70907,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:29:58','2020-08-12 11:29:58'),(70908,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:30:01','2020-08-12 11:30:01'),(70909,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:30:04','2020-08-12 11:30:04'),(70910,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:30:19','2020-08-12 11:30:19'),(70911,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36','Windows 10','Chrome','https://www.lcools.cn/',NULL,'2020-08-12 11:30:49','2020-08-12 11:30:49'),(70912,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1','Windows XP','Firefox 13','https://baracoero.com/',NULL,'2020-08-12 11:32:00','2020-08-12 11:32:00'),(70913,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:32:00','2020-08-12 11:32:00'),(70914,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Ubuntu','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:32:04','2020-08-12 11:32:04'),(70915,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:06','2020-08-12 11:32:06'),(70916,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:08','2020-08-12 11:32:08'),(70917,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:12','2020-08-12 11:32:12'),(70918,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 YaBrowser/19.9.3.314 Yowser/2.5 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:16','2020-08-12 11:32:16'),(70919,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:19','2020-08-12 11:32:19'),(70920,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:32:23','2020-08-12 11:32:23'),(70921,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:27','2020-08-12 11:32:27'),(70922,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:29','2020-08-12 11:32:29'),(70923,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0','Windows 7','Firefox 12','https://baracoero.com/',NULL,'2020-08-12 11:32:31','2020-08-12 11:32:31'),(70924,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:33','2020-08-12 11:32:33'),(70925,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:32:37','2020-08-12 11:32:37'),(70926,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:40','2020-08-12 11:32:40'),(70927,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:44','2020-08-12 11:32:44'),(70928,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:45','2020-08-12 11:32:45'),(70929,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:32:50','2020-08-12 11:32:50'),(70930,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:54','2020-08-12 11:32:54'),(70931,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:32:58','2020-08-12 11:32:58'),(70932,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:33:02','2020-08-12 11:33:02'),(70933,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/77.0.3865.90 Chrome/77.0.3865.90 Safari/537.36','Ubuntu','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:33:04','2020-08-12 11:33:04'),(70934,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:33:07','2020-08-12 11:33:07'),(70935,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:33:09','2020-08-12 11:33:09'),(70936,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:33:11','2020-08-12 11:33:11'),(70937,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (iPad; CPU OS 8_4_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H321 Safari/600.1.4','iOS 8.4 (iPad)','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 11:33:13','2020-08-12 11:33:13'),(70938,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:33:16','2020-08-12 11:33:16'),(70939,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:33:18','2020-08-12 11:33:18'),(70940,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:33:23','2020-08-12 11:33:23'),(70941,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 7','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:33:27','2020-08-12 11:33:27'),(70942,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:33:34','2020-08-12 11:33:34'),(70943,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3835.0 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:33:36','2020-08-12 11:33:36'),(70944,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:33:43','2020-08-12 11:33:43'),(70945,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3835.0 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:33:45','2020-08-12 11:33:45'),(70946,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 11:33:51','2020-08-12 11:33:51'),(70947,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:33:54','2020-08-12 11:33:54'),(70948,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8','Ubuntu','Firefox 3','https://baracoero.com/',NULL,'2020-08-12 11:34:01','2020-08-12 11:34:01'),(70949,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:34:08','2020-08-12 11:34:08'),(70950,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.5.01003)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:34:10','2020-08-12 11:34:10'),(70951,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:34:16','2020-08-12 11:34:16'),(70952,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; rv:60.0) Gecko/20100101 Firefox/60.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:34:18','2020-08-12 11:34:18'),(70953,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:34:24','2020-08-12 11:34:24'),(70954,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:34:28','2020-08-12 11:34:28'),(70955,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','Windows XP','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:34:29','2020-08-12 11:34:29'),(70956,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:34:31','2020-08-12 11:34:31'),(70957,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:34:33','2020-08-12 11:34:33'),(70958,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 11:34:35','2020-08-12 11:34:35'),(70959,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; rv:60.0) Gecko/20100101 Firefox/60.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:34:38','2020-08-12 11:34:38'),(70960,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:34:40','2020-08-12 11:34:40'),(70961,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:34:41','2020-08-12 11:34:41'),(70962,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:34:44','2020-08-12 11:34:44'),(70963,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:34:46','2020-08-12 11:34:46'),(70964,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:34:48','2020-08-12 11:34:48'),(70965,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:34:51','2020-08-12 11:34:51'),(70966,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Ubuntu','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:34:52','2020-08-12 11:34:52'),(70967,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.5.01003)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:34:55','2020-08-12 11:34:55'),(70968,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:34:56','2020-08-12 11:34:56'),(70969,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 8.1','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:34:58','2020-08-12 11:34:58'),(70970,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:35:01','2020-08-12 11:35:01'),(70971,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G570Y Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36','Android 6.x','Chrome Mobile','https://baracoero.com/',NULL,'2020-08-12 11:35:02','2020-08-12 11:35:02'),(70972,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:02','2020-08-12 11:35:02'),(70973,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:35:05','2020-08-12 11:35:05'),(70974,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:35:06','2020-08-12 11:35:06'),(70975,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','谷歌','172.19.0.2','Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.92 Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)','Android 6.x','Chrome Mobile','https://www.lcools.cn/',NULL,'2020-08-12 11:35:07','2020-08-12 11:35:07'),(70976,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:35:10','2020-08-12 11:35:10'),(70977,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:12','2020-08-12 11:35:12'),(70978,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:47.0) Gecko/20100101 Firefox/47.0','Mac OS X','Firefox 47','https://118.24.120.220/',NULL,'2020-08-12 11:35:13','2020-08-12 11:35:13'),(70979,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:14','2020-08-12 11:35:14'),(70980,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:35:16','2020-08-12 11:35:16'),(70981,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:35:19','2020-08-12 11:35:19'),(70982,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:35:20','2020-08-12 11:35:20'),(70983,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:21','2020-08-12 11:35:21'),(70984,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:24','2020-08-12 11:35:24'),(70985,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:25','2020-08-12 11:35:25'),(70986,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:35:27','2020-08-12 11:35:27'),(70987,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:35:29','2020-08-12 11:35:29'),(70988,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:29','2020-08-12 11:35:29'),(70989,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1','Windows Vista','Chrome 13','https://baracoero.com/',NULL,'2020-08-12 11:35:32','2020-08-12 11:35:32'),(70990,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:35:33','2020-08-12 11:35:33'),(70991,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1','Windows XP','Firefox 13','https://baracoero.com/',NULL,'2020-08-12 11:35:35','2020-08-12 11:35:35'),(70992,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:37','2020-08-12 11:35:37'),(70993,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:38','2020-08-12 11:35:38'),(70994,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:40','2020-08-12 11:35:40'),(70995,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:42','2020-08-12 11:35:42'),(70996,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:35:43','2020-08-12 11:35:43'),(70997,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:35:47','2020-08-12 11:35:47'),(70998,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:35:49','2020-08-12 11:35:49'),(70999,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:35:51','2020-08-12 11:35:51'),(71000,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 11:35:52','2020-08-12 11:35:52'),(71001,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:35:54','2020-08-12 11:35:54'),(71002,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:35:55','2020-08-12 11:35:55'),(71003,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:35:57','2020-08-12 11:35:57'),(71004,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','curl','172.19.0.2','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn/',NULL,'2020-08-12 11:40:04','2020-08-12 11:40:04'),(71005,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=3e8d9880-9385-418f-b820-c7cd48325afb',NULL,'2020-08-12 11:40:12','2020-08-12 11:40:12'),(71006,NULL,'VISIT','INFO','访客: [209.17.97.18] | 操作: 进入首页','{}','Nimbostratus-Bot','209.17.97.18','Mozilla/5.0 (compatible; Nimbostratus-Bot/v1.3.2; http://cloudsystemnetworks.com)','Unknown','Robot/Spider','https://www.lcools.cn/',NULL,'2020-08-12 11:44:06','2020-08-12 11:44:06'),(71007,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:46:35','2020-08-12 11:46:35'),(71008,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 8.1','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:46:38','2020-08-12 11:46:38'),(71009,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 7','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:46:47','2020-08-12 11:46:47'),(71010,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 11:46:55','2020-08-12 11:46:55'),(71011,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','undefined','Unknown','Unknown','https://baracoero.com/',NULL,'2020-08-12 11:46:59','2020-08-12 11:46:59'),(71012,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:47:04','2020-08-12 11:47:04'),(71013,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:47:08','2020-08-12 11:47:08'),(71014,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','百度','172.19.0.2','Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)','Unknown','Robot/Spider','https://www.lcools.cn/',NULL,'2020-08-12 11:47:12','2020-08-12 11:47:12'),(71015,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:47:17','2020-08-12 11:47:17'),(71016,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1','Windows XP','Firefox 13','https://baracoero.com/',NULL,'2020-08-12 11:47:24','2020-08-12 11:47:24'),(71017,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:47:33','2020-08-12 11:47:33'),(71018,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 11:47:37','2020-08-12 11:47:37'),(71019,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:47:46','2020-08-12 11:47:46'),(71020,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:47:48','2020-08-12 11:47:48'),(71021,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:47:53','2020-08-12 11:47:53'),(71022,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:47:56','2020-08-12 11:47:56'),(71023,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:47:59','2020-08-12 11:47:59'),(71024,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 11:48:04','2020-08-12 11:48:04'),(71025,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:48:07','2020-08-12 11:48:07'),(71026,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:48:14','2020-08-12 11:48:14'),(71027,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:48:20','2020-08-12 11:48:20'),(71028,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:48:26','2020-08-12 11:48:26'),(71029,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:48:31','2020-08-12 11:48:31'),(71030,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:48:34','2020-08-12 11:48:34'),(71031,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:48:36','2020-08-12 11:48:36'),(71032,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','Windows XP','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:48:40','2020-08-12 11:48:40'),(71033,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:48:44','2020-08-12 11:48:44'),(71034,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','谷歌','172.19.0.2','Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)','Unknown','Robot/Spider','https://baracoero.com/',NULL,'2020-08-12 11:48:49','2020-08-12 11:48:49'),(71035,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:48:55','2020-08-12 11:48:55'),(71036,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:48:57','2020-08-12 11:48:57'),(71037,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:49:00','2020-08-12 11:49:00'),(71038,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:49:03','2020-08-12 11:49:03'),(71039,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393','Windows 10','Microsoft Edge 14','https://baracoero.com/',NULL,'2020-08-12 11:49:22','2020-08-12 11:49:22'),(71040,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:49:30','2020-08-12 11:49:30'),(71041,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:49:35','2020-08-12 11:49:35'),(71042,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:49:35','2020-08-12 11:49:35'),(71043,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 YaBrowser/19.9.3.314 Yowser/2.5 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:49:38','2020-08-12 11:49:38'),(71044,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:49:41','2020-08-12 11:49:41'),(71045,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:49:43','2020-08-12 11:49:43'),(71046,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:49:47','2020-08-12 11:49:47'),(71047,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:49:48','2020-08-12 11:49:48'),(71048,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:49:51','2020-08-12 11:49:51'),(71049,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 11:49:52','2020-08-12 11:49:52'),(71050,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:49:57','2020-08-12 11:49:57'),(71051,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:50:02','2020-08-12 11:50:02'),(71052,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:50:03','2020-08-12 11:50:03'),(71053,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:50:08','2020-08-12 11:50:08'),(71054,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:50:13','2020-08-12 11:50:13'),(71055,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:50:13','2020-08-12 11:50:13'),(71056,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:50:20','2020-08-12 11:50:20'),(71057,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3835.0 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:50:26','2020-08-12 11:50:26'),(71058,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:50:29','2020-08-12 11:50:29'),(71059,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1','Windows Vista','Chrome 13','https://baracoero.com/',NULL,'2020-08-12 11:50:34','2020-08-12 11:50:34'),(71060,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.87 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:50:41','2020-08-12 11:50:41'),(71061,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:50:42','2020-08-12 11:50:42'),(71062,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:50:45','2020-08-12 11:50:45'),(71063,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)','Windows XP','Internet Explorer 7','https://baracoero.com/',NULL,'2020-08-12 11:50:48','2020-08-12 11:50:48'),(71064,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:50:52','2020-08-12 11:50:52'),(71065,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:50:55','2020-08-12 11:50:55'),(71066,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:50:56','2020-08-12 11:50:56'),(71067,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:00','2020-08-12 11:51:00'),(71068,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0','Windows XP','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:51:03','2020-08-12 11:51:03'),(71069,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:05','2020-08-12 11:51:05'),(71070,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:07','2020-08-12 11:51:07'),(71071,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:51:10','2020-08-12 11:51:10'),(71072,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:11','2020-08-12 11:51:11'),(71073,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:51:13','2020-08-12 11:51:13'),(71074,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:51:17','2020-08-12 11:51:17'),(71075,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:17','2020-08-12 11:51:17'),(71076,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:24','2020-08-12 11:51:24'),(71077,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:25','2020-08-12 11:51:25'),(71078,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:27','2020-08-12 11:51:27'),(71079,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:28','2020-08-12 11:51:28'),(71080,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:51:31','2020-08-12 11:51:31'),(71081,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 11:51:33','2020-08-12 11:51:33'),(71082,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:34','2020-08-12 11:51:34'),(71083,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Ubuntu','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:51:37','2020-08-12 11:51:37'),(71084,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 11:51:39','2020-08-12 11:51:39'),(71085,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:42','2020-08-12 11:51:42'),(71086,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:51:46','2020-08-12 11:51:46'),(71087,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 11:51:47','2020-08-12 11:51:47'),(71088,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 7','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:51:51','2020-08-12 11:51:51'),(71089,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:70.0) Gecko/20100101 Firefox/70.0','Mac OS X','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:51:52','2020-08-12 11:51:52'),(71090,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:51:53','2020-08-12 11:51:53'),(71091,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)','Windows XP','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:53:19','2020-08-12 11:53:19'),(71092,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:53:22','2020-08-12 11:53:22'),(71093,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:53:27','2020-08-12 11:53:27'),(71094,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:53:28','2020-08-12 11:53:28'),(71095,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:53:32','2020-08-12 11:53:32'),(71096,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:53:36','2020-08-12 11:53:36'),(71097,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (iPad; CPU OS 8_4_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H321 Safari/600.1.4','iOS 8.4 (iPad)','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 11:53:39','2020-08-12 11:53:39'),(71098,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:53:44','2020-08-12 11:53:44'),(71099,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:53:55','2020-08-12 11:53:55'),(71100,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:54:04','2020-08-12 11:54:04'),(71101,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:54:11','2020-08-12 11:54:11'),(71102,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:54:14','2020-08-12 11:54:14'),(71103,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:54:19','2020-08-12 11:54:19'),(71104,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:54:22','2020-08-12 11:54:22'),(71105,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Ubuntu','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:54:32','2020-08-12 11:54:32'),(71106,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:57:36','2020-08-12 11:57:36'),(71107,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:57:38','2020-08-12 11:57:38'),(71108,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','谷歌','172.19.0.2','Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)','Unknown','Robot/Spider','https://baracoero.com/',NULL,'2020-08-12 11:57:40','2020-08-12 11:57:40'),(71109,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:57:42','2020-08-12 11:57:42'),(71110,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 8.1','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:57:45','2020-08-12 11:57:45'),(71111,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:57:47','2020-08-12 11:57:47'),(71112,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:57:49','2020-08-12 11:57:49'),(71113,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G570Y Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36','Android 6.x','Chrome Mobile','https://baracoero.com/',NULL,'2020-08-12 11:57:52','2020-08-12 11:57:52'),(71114,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/77.0.3865.90 Chrome/77.0.3865.90 Safari/537.36','Ubuntu','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:57:53','2020-08-12 11:57:53'),(71115,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]','Windows 2000','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:57:54','2020-08-12 11:57:54'),(71116,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:57:57','2020-08-12 11:57:57'),(71117,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Linux','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:57:59','2020-08-12 11:57:59'),(71118,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0 Waterfox/56.2.14','Windows 10','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:58:03','2020-08-12 11:58:03'),(71119,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; U; Android 4.3; en-us; SM-N900T Build/JSS15J) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30','Android 4.x','Mobile Safari','https://baracoero.com/',NULL,'2020-08-12 11:58:07','2020-08-12 11:58:07'),(71120,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 11:58:11','2020-08-12 11:58:11'),(71121,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]','Windows 2000','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:58:15','2020-08-12 11:58:15'),(71122,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8','Ubuntu','Firefox 3','https://baracoero.com/',NULL,'2020-08-12 11:58:18','2020-08-12 11:58:18'),(71123,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 11:58:20','2020-08-12 11:58:20'),(71124,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:58:22','2020-08-12 11:58:22'),(71125,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]','Windows 2000','Internet Explorer 6','https://baracoero.com/',NULL,'2020-08-12 11:58:25','2020-08-12 11:58:25'),(71126,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 11:58:27','2020-08-12 11:58:27'),(71127,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:58:32','2020-08-12 11:58:32'),(71128,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 11:58:35','2020-08-12 11:58:35'),(71129,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8','Ubuntu','Firefox 3','https://baracoero.com/',NULL,'2020-08-12 11:58:37','2020-08-12 11:58:37'),(71130,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1','Windows XP','Firefox 13','https://baracoero.com/',NULL,'2020-08-12 11:58:40','2020-08-12 11:58:40'),(71131,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1','Windows XP','Firefox 13','https://baracoero.com/',NULL,'2020-08-12 12:00:01','2020-08-12 12:00:01'),(71132,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','curl','172.19.0.2','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn/',NULL,'2020-08-12 12:00:03','2020-08-12 12:00:03'),(71133,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 12:00:03','2020-08-12 12:00:03'),(71134,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=191faf0e-78fd-48d5-9c24-4998b048f6d2',NULL,'2020-08-12 12:00:04','2020-08-12 12:00:04'),(71135,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:69.0) Gecko/20100101 Firefox/69.0','Mac OS X','Firefox','https://baracoero.com/',NULL,'2020-08-12 12:00:06','2020-08-12 12:00:06'),(71136,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}','谷歌','172.19.0.2','Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)','Unknown','Robot/Spider','https://baracoero.com/',NULL,'2020-08-12 12:00:07','2020-08-12 12:00:07'),(71137,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 12:00:10','2020-08-12 12:00:10'),(71138,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134','Windows 10','Microsoft Edge','https://baracoero.com/',NULL,'2020-08-12 12:00:11','2020-08-12 12:00:11'),(71139,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:00:14','2020-08-12 12:00:14'),(71140,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 12:00:18','2020-08-12 12:00:18'),(71141,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 7','Firefox','https://baracoero.com/',NULL,'2020-08-12 12:00:19','2020-08-12 12:00:19'),(71142,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:00:21','2020-08-12 12:00:21'),(71143,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:00:25','2020-08-12 12:00:25'),(71144,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:00:27','2020-08-12 12:00:27'),(71145,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 12:00:28','2020-08-12 12:00:28'),(71146,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:00:30','2020-08-12 12:00:30'),(71147,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:69.0) Gecko/20100101 Firefox/69.0','Linux','Firefox','https://baracoero.com/',NULL,'2020-08-12 12:00:33','2020-08-12 12:00:33'),(71148,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:00:34','2020-08-12 12:00:34'),(71149,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:00:37','2020-08-12 12:00:37'),(71150,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 8.1','Firefox','https://baracoero.com/',NULL,'2020-08-12 12:00:42','2020-08-12 12:00:42'),(71151,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:00:43','2020-08-12 12:00:43'),(71152,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 7','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:00:52','2020-08-12 12:00:52'),(71153,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 12:00:56','2020-08-12 12:00:56'),(71154,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36','Mac OS X','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:01:02','2020-08-12 12:01:02'),(71155,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:01:04','2020-08-12 12:01:04'),(71156,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 12:01:08','2020-08-12 12:01:08'),(71157,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0','Linux','Firefox 7','https://baracoero.com/',NULL,'2020-08-12 12:01:09','2020-08-12 12:01:09'),(71158,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36','Windows 10','Chrome','https://baracoero.com/',NULL,'2020-08-12 12:01:13','2020-08-12 12:01:13'),(71159,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G570Y Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36','Android 6.x','Chrome Mobile','https://baracoero.com/',NULL,'2020-08-12 12:01:16','2020-08-12 12:01:16'),(71160,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko','Windows 8.1','Internet Explorer 11','https://baracoero.com/',NULL,'2020-08-12 12:01:19','2020-08-12 12:01:19'),(71161,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36','Windows 10','Chrome','https://www.lcools.cn/',NULL,'2020-08-12 12:02:06','2020-08-12 12:02:06'),(71162,NULL,'VISIT','INFO','访客: [129.145.2.238] | 操作: 进入首页','{}',NULL,'129.145.2.238','Go-http-client/1.1','Unknown','Unknown','https://118.24.120.220:8443/',NULL,'2020-08-12 12:02:49','2020-08-12 12:02:49'),(71163,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 9; SM-S10 Lite) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3626.121 Mobile Safari/537.36','Android Mobile','Chrome Mobile','https://www.danhaoniu.com/',NULL,'2020-08-12 12:03:39','2020-08-12 12:03:39'),(71164,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3950.1 Safari/537.36','Windows 10','Chrome 8','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:03:39','2020-08-12 12:03:39'),(71165,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0','Windows 10','Firefox 7','https://www.danhaoniu.com/',NULL,'2020-08-12 12:03:43','2020-08-12 12:03:43'),(71166,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 9; SM-S10 Lite) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3626.121 Mobile Safari/537.36','Android Mobile','Chrome Mobile','https://www.danhaoniu.com/',NULL,'2020-08-12 12:03:44','2020-08-12 12:03:44'),(71167,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3599.0 Safari/537.36','Windows 10','Chrome','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:03:46','2020-08-12 12:03:46'),(71168,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3950.1 Safari/537.36','Windows 10','Chrome 8','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:03:48','2020-08-12 12:03:48'),(71169,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://www.danhaoniu.com/',NULL,'2020-08-12 12:03:49','2020-08-12 12:03:49'),(71170,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0','Windows 10','Firefox','https://www.danhaoniu.com/',NULL,'2020-08-12 12:03:49','2020-08-12 12:03:49'),(71171,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36','Windows 10','Chrome','https://www.danhaoniu.com/',NULL,'2020-08-12 12:03:51','2020-08-12 12:03:51'),(71172,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36','Windows 10','Chrome','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:03:51','2020-08-12 12:03:51'),(71173,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36','Windows 10','Chrome','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:03:52','2020-08-12 12:03:52'),(71174,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:03:53','2020-08-12 12:03:53'),(71175,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36','Windows 10','Chrome','https://www.danhaoniu.com/',NULL,'2020-08-12 12:03:55','2020-08-12 12:03:55'),(71176,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/',NULL,'2020-08-12 12:03:55','2020-08-12 12:03:55'),(71177,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:01','2020-08-12 12:04:01'),(71178,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:01','2020-08-12 12:04:01'),(71179,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:02','2020-08-12 12:04:02'),(71180,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:03','2020-08-12 12:04:03'),(71181,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:06','2020-08-12 12:04:06'),(71182,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:08','2020-08-12 12:04:08'),(71183,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:11','2020-08-12 12:04:11'),(71184,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:14','2020-08-12 12:04:14'),(71185,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:19','2020-08-12 12:04:19'),(71186,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:22','2020-08-12 12:04:22'),(71187,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:28','2020-08-12 12:04:28'),(71188,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:29','2020-08-12 12:04:29'),(71189,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:33','2020-08-12 12:04:33'),(71190,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:38','2020-08-12 12:04:38'),(71191,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:41','2020-08-12 12:04:41'),(71192,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; rv:11.0) like Gecko','Windows 10','Internet Explorer 11','https://www.danhaoniu.com/',NULL,'2020-08-12 12:04:45','2020-08-12 12:04:45'),(71193,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:04:49','2020-08-12 12:04:49'),(71194,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG SM-G570Y Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36','Android 6.x','Chrome Mobile','https://baracoero.com/',NULL,'2020-08-12 12:04:57','2020-08-12 12:04:57'),(71195,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:04','2020-08-12 12:05:04'),(71196,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:05','2020-08-12 12:05:05'),(71197,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:13','2020-08-12 12:05:13'),(71198,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:15','2020-08-12 12:05:15'),(71199,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:16','2020-08-12 12:05:16'),(71200,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:22','2020-08-12 12:05:22'),(71201,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:24','2020-08-12 12:05:24'),(71202,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:26','2020-08-12 12:05:26'),(71203,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:30','2020-08-12 12:05:30'),(71204,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:32','2020-08-12 12:05:32'),(71205,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:34','2020-08-12 12:05:34'),(71206,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:38','2020-08-12 12:05:38'),(71207,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:45','2020-08-12 12:05:45'),(71208,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:47','2020-08-12 12:05:47'),(71209,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:47','2020-08-12 12:05:47'),(71210,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:05:50','2020-08-12 12:05:50'),(71211,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:06','2020-08-12 12:06:06'),(71212,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:10','2020-08-12 12:06:10'),(71213,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:18','2020-08-12 12:06:18'),(71214,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:21','2020-08-12 12:06:21'),(71215,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:34','2020-08-12 12:06:34'),(71216,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:37','2020-08-12 12:06:37'),(71217,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:40','2020-08-12 12:06:40'),(71218,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:42','2020-08-12 12:06:42'),(71219,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:46','2020-08-12 12:06:46'),(71220,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:47','2020-08-12 12:06:47'),(71221,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:48','2020-08-12 12:06:48'),(71222,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:52','2020-08-12 12:06:52'),(71223,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:06:53','2020-08-12 12:06:53'),(71224,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Safari/605.1.15','Mac OS X','Safari','https://baracoero.com/',NULL,'2020-08-12 12:06:54','2020-08-12 12:06:54'),(71225,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:07:05','2020-08-12 12:07:05'),(71226,NULL,'VISIT','INFO','访客: [172.19.0.2] | 操作: 进入首页','{}',NULL,'172.19.0.2','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36 OPR/66.0.3515.103','Windows 10','Opera','https://www.danhaoniu.com/','http://www.danhaoniu.com/','2020-08-12 12:07:09','2020-08-12 12:07:09'),(71227,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=add312c9-df52-47ed-904a-9bb5eb0fdbe6',NULL,'2020-08-12 12:21:02','2020-08-12 12:21:02'),(71228,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=cfe65fb0-26f3-4576-b615-e0bbc68a239e',NULL,'2020-08-12 12:41:02','2020-08-12 12:41:02'),(71229,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=4adcd525-7757-42fa-a34f-38a90cfb33aa',NULL,'2020-08-12 13:01:02','2020-08-12 13:01:02'),(71230,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=ab977a55-c8de-4283-91c4-d80f9c8db62c',NULL,'2020-08-12 13:21:02','2020-08-12 13:21:02'),(71231,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=0bd47d96-ebc7-4a8f-b657-b4740a23409f',NULL,'2020-08-12 13:41:02','2020-08-12 13:41:02'),(71232,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=3ecfe61b-b983-463c-8278-dfa0ac6655c3',NULL,'2020-08-12 14:01:03','2020-08-12 14:01:03'),(71233,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=ca2dde50-fb2f-402e-be99-e650aac7d523',NULL,'2020-08-12 14:21:02','2020-08-12 14:21:02'),(71234,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=2c952a6e-e8c3-4cb5-8cd8-06951e71c493',NULL,'2020-08-12 14:41:02','2020-08-12 14:41:02'),(71235,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=440e28ab-060e-465d-9ced-a730aabd2d25',NULL,'2020-08-12 15:01:02','2020-08-12 15:01:02'),(71236,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=399c7360-a240-450b-8d72-8364e6a89519',NULL,'2020-08-12 15:21:03','2020-08-12 15:21:03'),(71237,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=06528b25-9364-4107-85ee-e8761a9b14dd',NULL,'2020-08-12 15:41:02','2020-08-12 15:41:02'),(71238,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=3f17a156-e635-4706-9860-07389d1d7d95',NULL,'2020-08-12 16:01:03','2020-08-12 16:01:03'),(71239,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=e9d01fb0-20c4-492e-9847-80ffa8374aa6',NULL,'2020-08-12 16:21:03','2020-08-12 16:21:03'),(71240,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=7fecacb6-aaa6-43fe-a26a-6767946900d9',NULL,'2020-08-12 16:41:02','2020-08-12 16:41:02'),(71241,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=1d22c9e6-e6b8-4b6d-ba5f-0f1138c4164b',NULL,'2020-08-12 17:01:03','2020-08-12 17:01:03'),(71242,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=fd56509b-7ae8-452b-95d3-4e54574ef16c',NULL,'2020-08-12 17:21:02','2020-08-12 17:21:02'),(71243,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=5cd7220a-87c3-4fdd-976b-dff1a7736531',NULL,'2020-08-12 17:41:02','2020-08-12 17:41:02'),(71244,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=49e844f5-112b-443b-ad61-fd59e6d4a078',NULL,'2020-08-12 18:01:02','2020-08-12 18:01:02'),(71245,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=1f1658b7-dc87-4558-890a-76d2120f0bf4',NULL,'2020-08-12 18:21:02','2020-08-12 18:21:02'),(71246,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=bb6ee446-3e49-4b77-a6b6-63f09af2f796',NULL,'2020-08-12 18:41:03','2020-08-12 18:41:03'),(71247,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=4e63406e-6595-4738-80fb-1832e9908b9c',NULL,'2020-08-12 19:01:03','2020-08-12 19:01:03'),(71248,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=4598bd30-1226-492d-b606-1560cf05d889',NULL,'2020-08-12 19:21:02','2020-08-12 19:21:02'),(71249,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=7919aef5-251d-42f3-9f87-24ac43c84d09',NULL,'2020-08-12 19:41:02','2020-08-12 19:41:02'),(71250,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=82e5a89c-7816-401b-8f2a-8dd2eea7c3e7',NULL,'2020-08-12 20:01:02','2020-08-12 20:01:02'),(71251,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=807354c6-db48-435b-b14f-b63215cc8aed',NULL,'2020-08-12 20:21:02','2020-08-12 20:21:02'),(71252,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=2a1d7b50-2462-488f-9cde-c0483f1fb4e0',NULL,'2020-08-12 20:41:02','2020-08-12 20:41:02'),(71253,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=6ee2a3ba-c6ea-4014-acba-f2b393f0e754',NULL,'2020-08-12 21:01:02','2020-08-12 21:01:02'),(71254,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=df5396c0-04a6-47df-a0e4-a545eba56d58',NULL,'2020-08-12 21:21:02','2020-08-12 21:21:02'),(71255,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=929889f0-2d27-4350-b271-07fb749bdc59',NULL,'2020-08-12 21:41:02','2020-08-12 21:41:02'),(71256,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=6398b2a4-dc31-4324-9f9d-2b8abcbf28f1',NULL,'2020-08-12 22:01:03','2020-08-12 22:01:03'),(71257,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=d9ccd7f9-f2c9-40f7-a30f-3cd700fd919d',NULL,'2020-08-12 22:21:03','2020-08-12 22:21:03'),(71258,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=15f7e41a-3087-4c0e-b548-638e5353a4a7',NULL,'2020-08-12 22:41:03','2020-08-12 22:41:03'),(71259,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=43c1d9a1-35ed-41ec-8399-a6b81c516e4a',NULL,'2020-08-12 23:01:02','2020-08-12 23:01:02'),(71260,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=37dc933c-266f-4e69-b719-95a87dbd838f',NULL,'2020-08-12 23:21:02','2020-08-12 23:21:02'),(71261,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=3f5f393a-8ded-4e49-8dbb-6ecce61889d5',NULL,'2020-08-12 23:41:02','2020-08-12 23:41:02'),(71262,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=0a76d147-0a9f-4335-a6d3-381ddedb8e00',NULL,'2020-08-13 00:01:02','2020-08-13 00:01:02'),(71263,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=15281b80-36c6-4419-a085-d40507c6e0ee',NULL,'2020-08-13 00:21:03','2020-08-13 00:21:03'),(71264,NULL,'SYSTEM','INFO','访客: [49.233.52.50] | 操作: 进入登录页面','{}',NULL,'49.233.52.50','colly - https://github.com/gocolly/colly/v2','Unknown','Unknown','https://www.lcools.cn:8085/passport/login/;JSESSIONID=edf1e454-2fa0-4e99-8d7a-25bb1b37fb14','https://www.lcools.cn:8085','2020-08-13 00:37:59','2020-08-13 00:37:59'),(71265,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=ed1e814f-5f57-4269-99c4-3218fd616286',NULL,'2020-08-13 00:41:02','2020-08-13 00:41:02'),(71266,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=5544a100-aae3-4dcd-ab01-8aff33954f39',NULL,'2020-08-13 01:01:03','2020-08-13 01:01:03'),(71267,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=ebef6334-09d7-4cbe-b7aa-10c8244e877f',NULL,'2020-08-13 01:21:03','2020-08-13 01:21:03'),(71268,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=06294c03-bcda-49b7-9945-70730bbcb946',NULL,'2020-08-13 01:41:02','2020-08-13 01:41:02'),(71269,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=2bbb5c32-e538-45a4-a497-0d1b9467b226',NULL,'2020-08-13 02:01:02','2020-08-13 02:01:02'),(71270,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=6ebbe5a2-ad69-4dbf-a645-b1c5c25b3002',NULL,'2020-08-13 02:21:03','2020-08-13 02:21:03'),(71271,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=2b19dfb1-123c-40aa-9bea-3f30da64b6cb',NULL,'2020-08-13 02:41:02','2020-08-13 02:41:02'),(71272,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=40174791-1579-444f-ad7c-16ea5b40a371',NULL,'2020-08-13 03:01:02','2020-08-13 03:01:02'),(71273,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=1d014e3a-4a07-45e2-bf3f-5e884f9159f0',NULL,'2020-08-13 03:21:04','2020-08-13 03:21:04'),(71274,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=9037d6b6-4d1c-4b53-8bc3-7126710292f4',NULL,'2020-08-13 03:41:03','2020-08-13 03:41:03'),(71275,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=63390e2f-c125-4d27-a5cc-c7780ad11acb',NULL,'2020-08-13 04:01:03','2020-08-13 04:01:03'),(71276,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=bb72c3ac-0e73-4218-9fda-d419f495f1ef',NULL,'2020-08-13 04:21:04','2020-08-13 04:21:04'),(71277,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=423669f3-6ee9-4b9b-8fb0-4bc4fcf9a30f',NULL,'2020-08-13 04:41:02','2020-08-13 04:41:02'),(71278,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=3882e1be-73e6-4647-9eab-a29fa8a3e848',NULL,'2020-08-13 05:01:03','2020-08-13 05:01:03'),(71279,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=da653f08-883b-4425-af79-28ea57a2c632',NULL,'2020-08-13 05:21:03','2020-08-13 05:21:03'),(71280,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=0c5561d9-2632-4649-9545-40391efaf93c',NULL,'2020-08-13 05:41:02','2020-08-13 05:41:02'),(71281,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=b838f4af-a160-4942-bebe-8ccebc884855',NULL,'2020-08-13 06:01:03','2020-08-13 06:01:03'),(71282,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=c803bf4e-174c-4a81-9f9c-c713525697d2',NULL,'2020-08-13 06:21:02','2020-08-13 06:21:02'),(71283,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=52925eb7-e978-454c-9bae-13fd4fa578b8',NULL,'2020-08-13 06:41:03','2020-08-13 06:41:03'),(71284,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=f3c2c2fb-715d-4dd4-8595-d8bdd4725227',NULL,'2020-08-13 07:01:02','2020-08-13 07:01:02'),(71285,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=929e1ec1-b5d8-49e0-a267-9e8303b52453',NULL,'2020-08-13 07:21:02','2020-08-13 07:21:02'),(71286,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=2bad220d-dd9b-48d7-816f-4a2c519cabf6',NULL,'2020-08-13 07:41:02','2020-08-13 07:41:02'),(71287,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=77a5e6f2-a706-49b8-b393-f36c71ea1a03',NULL,'2020-08-13 08:01:03','2020-08-13 08:01:03'),(71288,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=0a0553e7-3135-47a1-b9fd-0f8398778b95',NULL,'2020-08-13 08:21:02','2020-08-13 08:21:02'),(71289,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=b97bb2a0-91e7-494c-b78e-d697394c6d81',NULL,'2020-08-13 08:41:02','2020-08-13 08:41:02'),(71290,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=a9a06cb0-b9bf-4036-b148-0db050e71d3f',NULL,'2020-08-13 09:01:02','2020-08-13 09:01:02'),(71291,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=cc6e20f9-23a1-42cc-a2da-3c3599955399',NULL,'2020-08-13 09:21:03','2020-08-13 09:21:03'),(71292,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=68c22787-829a-4d4a-899d-639d1fdd1ca8',NULL,'2020-08-13 09:41:03','2020-08-13 09:41:03'),(71293,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=7b49589c-6fe3-44b1-bfca-99bbad7a12e9',NULL,'2020-08-13 10:01:02','2020-08-13 10:01:02'),(71294,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=149385de-d6fa-46dc-abff-fa443a99274b',NULL,'2020-08-13 10:21:02','2020-08-13 10:21:02'),(71295,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=0b49c8bb-8d25-4824-b34f-e0d126de9281',NULL,'2020-08-13 10:41:02','2020-08-13 10:41:02'),(71296,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=913791fd-8e82-480e-a066-c27293cefbd6',NULL,'2020-08-13 11:01:03','2020-08-13 11:01:03'),(71297,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=4937b683-e305-45c1-a920-8d2f14d67c20',NULL,'2020-08-13 11:21:02','2020-08-13 11:21:02'),(71298,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=861e98fd-875c-422f-887c-8ac542f6c16a',NULL,'2020-08-13 11:41:02','2020-08-13 11:41:02'),(71299,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=f71d7a4e-db52-49ea-8096-0b60ad2579d2',NULL,'2020-08-13 12:01:03','2020-08-13 12:01:03'),(71300,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=9b436e9f-5a5f-4515-bb44-fdbd7b1b438d',NULL,'2020-08-13 12:21:02','2020-08-13 12:21:02'),(71301,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=4fe26011-b682-4054-9c8a-6c086f927499',NULL,'2020-08-13 12:41:02','2020-08-13 12:41:02'),(71302,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=289faa2e-3fd1-4a5f-a3aa-b6cc66325f58',NULL,'2020-08-13 13:01:02','2020-08-13 13:01:02'),(71303,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=899022a9-747b-4eb4-870f-ffde62bd8527',NULL,'2020-08-13 13:21:02','2020-08-13 13:21:02'),(71304,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=b62c04a9-2345-4c10-841a-4e7c5f95db72',NULL,'2020-08-13 13:41:02','2020-08-13 13:41:02'),(71305,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=b75b8ac7-6faa-44c5-81ae-5081d3243d85',NULL,'2020-08-13 14:01:03','2020-08-13 14:01:03'),(71306,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=d7695ec7-845b-4706-ae09-882ac02c2a0d',NULL,'2020-08-13 14:21:02','2020-08-13 14:21:02'),(71307,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=25fe2a15-e114-4070-88b7-0ceba7b53f15',NULL,'2020-08-13 14:41:02','2020-08-13 14:41:02'),(71308,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=2d346927-7a07-4788-9fd8-2ee1a3f8de82',NULL,'2020-08-13 15:01:02','2020-08-13 15:01:02'),(71309,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=3646d5ff-2ec3-4d4d-96b4-7edbb6727e90',NULL,'2020-08-13 15:21:02','2020-08-13 15:21:02'),(71310,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=3b803805-b76b-46d6-8113-1763496d36a4',NULL,'2020-08-13 15:41:02','2020-08-13 15:41:02'),(71311,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=f8dc7825-326a-4e0d-af9c-ce81f583605e',NULL,'2020-08-13 16:01:02','2020-08-13 16:01:02'),(71312,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=ca69be69-10e3-4b14-bfb1-46465692d305',NULL,'2020-08-13 16:21:02','2020-08-13 16:21:02'),(71313,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=ab702c5f-838c-48c5-aecc-e30468b654ac',NULL,'2020-08-13 16:41:03','2020-08-13 16:41:03'),(71314,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=be939f0b-af1f-4fff-b9ad-0c69812d6300',NULL,'2020-08-13 17:01:02','2020-08-13 17:01:02'),(71315,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=16a3d3eb-dc67-4bc3-a91a-7454f6760165',NULL,'2020-08-13 17:21:02','2020-08-13 17:21:02'),(71316,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=bdbc18ba-316a-4a9e-9548-b75a44f04a0c',NULL,'2020-08-13 17:41:02','2020-08-13 17:41:02'),(71317,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=8fe20bc0-57f8-4d1f-b9be-01b1fd2f8f61',NULL,'2020-08-13 18:01:02','2020-08-13 18:01:02'),(71318,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=0aecb052-d39a-4e12-ac0f-d87f6a5161a9',NULL,'2020-08-13 18:21:02','2020-08-13 18:21:02'),(71319,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=38b61647-a778-494b-b9f9-0884c26bb1f4',NULL,'2020-08-13 18:41:02','2020-08-13 18:41:02'),(71320,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=3bfbf933-1676-408f-a2c7-0c6472c0b7f0',NULL,'2020-08-13 19:01:03','2020-08-13 19:01:03'),(71321,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=3860533a-0b7b-4fa2-9c30-04f00cb4fbbb',NULL,'2020-08-13 19:21:02','2020-08-13 19:21:02'),(71322,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=cbc2415c-8df6-441d-94c7-83579facd56f',NULL,'2020-08-13 19:41:03','2020-08-13 19:41:03'),(71323,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=d04c28a0-d50d-473f-9946-53a4ea504cb6',NULL,'2020-08-13 20:01:02','2020-08-13 20:01:02'),(71324,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=38225da8-2290-4b1e-b11e-617b1e3fe7ff',NULL,'2020-08-13 20:21:02','2020-08-13 20:21:02'),(71325,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=504c61fb-49a1-43f3-bf2e-c9a9824036fb',NULL,'2020-08-13 20:41:02','2020-08-13 20:41:02'),(71326,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=ab789d7f-7494-4705-b750-3c5ce5dac361',NULL,'2020-08-13 21:01:02','2020-08-13 21:01:02'),(71327,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=29ef4c94-a327-43e8-b270-4d6215fb3cc1',NULL,'2020-08-13 21:21:03','2020-08-13 21:21:03'),(71328,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=61d056f9-f068-459f-8c61-da4aa1e56117',NULL,'2020-08-13 21:41:03','2020-08-13 21:41:03'),(71329,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=0a4c6007-a482-4a72-bece-efa1d3f094fa',NULL,'2020-08-13 22:01:02','2020-08-13 22:01:02'),(71330,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=35d9a647-7197-4254-8b0f-b3b992bb44ea',NULL,'2020-08-13 22:21:02','2020-08-13 22:21:02'),(71331,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=e5c962d6-61fb-4fee-b2c2-b50eb59276af',NULL,'2020-08-13 22:41:02','2020-08-13 22:41:02'),(71332,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=eab81451-22e2-450a-bb8d-d586ecdeadf7',NULL,'2020-08-13 23:01:03','2020-08-13 23:01:03'),(71333,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=21420f47-3082-4d72-991c-6fb2e7795c53',NULL,'2020-08-13 23:21:02','2020-08-13 23:21:02'),(71334,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=e287bf99-ce5e-405a-959c-41696a51fd4e',NULL,'2020-08-13 23:41:02','2020-08-13 23:41:02'),(71335,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=f9cddeb4-b8e6-4c54-b7af-7311a12ea741',NULL,'2020-08-14 00:01:03','2020-08-14 00:01:03'),(71336,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=7080d603-bc7d-432d-a058-98eb016e61f3',NULL,'2020-08-14 00:21:02','2020-08-14 00:21:02'),(71337,NULL,'SYSTEM','INFO','访客: [49.233.52.50] | 操作: 进入登录页面','{}',NULL,'49.233.52.50','colly - https://github.com/gocolly/colly/v2','Unknown','Unknown','https://www.lcools.cn:8085/passport/login/;JSESSIONID=a9b2ab87-2653-4dde-8b05-3146c64b492c','https://www.lcools.cn:8085','2020-08-14 00:24:31','2020-08-14 00:24:31'),(71338,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=f0f2b47a-c8fd-4c93-b95c-ca640161cb86',NULL,'2020-08-14 00:41:03','2020-08-14 00:41:03'),(71339,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=e66f0adc-a2c9-4deb-b947-27a8694f7375',NULL,'2020-08-14 01:01:02','2020-08-14 01:01:02'),(71340,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=8fb1f03e-9b58-4b51-ab8d-c94f3ec9cb2c',NULL,'2020-08-14 01:21:03','2020-08-14 01:21:03'),(71341,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=f018429e-2667-48a0-a5e3-0ee29a9089f5',NULL,'2020-08-14 01:41:02','2020-08-14 01:41:02'),(71342,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=aeced54b-496e-4571-aaa3-ebd4e2c12f99',NULL,'2020-08-14 02:01:02','2020-08-14 02:01:02'),(71343,NULL,'SYSTEM','INFO','访客: [118.24.120.220] | 操作: 进入登录页面','{}','curl','118.24.120.220','curl/7.47.0','Unknown','Downloading Tool','https://www.lcools.cn:8085/passport/login/;JSESSIONID=068c2f8a-f90f-46a3-9a12-4252f3f6503f',NULL,'2020-08-14 02:21:03','2020-08-14 02:21:03');
/*!40000 ALTER TABLE `sys_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_notice`
--

DROP TABLE IF EXISTS `sys_notice`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_notice` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL COMMENT '被通知的用户ID',
  `status` enum('RELEASE','NOT_RELEASE') DEFAULT 'NOT_RELEASE' COMMENT '通知状态',
  `title` varchar(200) DEFAULT NULL COMMENT '通知的标题',
  `content` varchar(2000) DEFAULT NULL COMMENT '通知的内容',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_notice`
--

LOCK TABLES `sys_notice` WRITE;
/*!40000 ALTER TABLE `sys_notice` DISABLE KEYS */;
INSERT INTO `sys_notice` VALUES (1,1,'NOT_RELEASE','OneBlog开源博客','OneBlog开源博客，一款超好用的Java版开源博客','2019-09-06 01:21:57','2019-10-24 20:50:22');
/*!40000 ALTER TABLE `sys_notice` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_resources`
--

DROP TABLE IF EXISTS `sys_resources`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_resources` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(100) DEFAULT NULL,
  `type` varchar(50) DEFAULT NULL,
  `url` varchar(200) DEFAULT NULL,
  `permission` varchar(100) DEFAULT NULL,
  `parent_id` bigint(20) unsigned DEFAULT '0',
  `sort` int(10) unsigned DEFAULT NULL,
  `external` tinyint(1) unsigned DEFAULT NULL COMMENT '是否外部链接',
  `available` tinyint(1) unsigned DEFAULT '0',
  `icon` varchar(100) DEFAULT NULL COMMENT '菜单图标',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE,
  KEY `idx_sys_resource_parent_id` (`parent_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=85 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_resources`
--

LOCK TABLES `sys_resources` WRITE;
/*!40000 ALTER TABLE `sys_resources` DISABLE KEYS */;
INSERT INTO `sys_resources` VALUES (1,'用户管理','menu','','',0,4,0,1,'fa fa-users','2019-09-06 01:21:57','2019-09-06 01:21:57'),(2,'用户列表','menu','/users','users',1,1,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(3,'新增用户','button',NULL,'user:add',2,2,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(4,'批量删除用户','button',NULL,'user:batchDelete',2,3,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(5,'编辑用户','button',NULL,'user:edit,user:get',2,4,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(6,'删除用户','button',NULL,'user:delete',2,5,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(7,'分配用户角色','button',NULL,'user:allotRole',2,6,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(8,'权限管理','menu','','',0,3,0,1,'fa fa-cogs','2019-09-06 01:21:57','2019-09-06 01:21:57'),(9,'资源管理','menu','/resources','resources',8,1,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(10,'新增资源','button',NULL,'resource:add',9,2,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(11,'批量删除资源','button',NULL,'resource:batchDelete',9,3,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(12,'编辑资源','button',NULL,'resource:edit,resource:get',9,4,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(13,'删除资源','button',NULL,'resource:delete',9,5,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(14,'角色管理','menu','/roles','roles',8,2,0,1,'','2019-09-06 01:21:57','2019-09-06 01:21:57'),(15,'新增角色','button',NULL,'role:add',14,2,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(16,'批量删除角色','button',NULL,'role:batchDelete',14,3,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(17,'编辑角色','button',NULL,'role:edit,role:get',14,4,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(18,'删除角色','button',NULL,'role:delete',14,5,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(19,'分配角色资源','button',NULL,'role:allotResource',14,6,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(20,'文章管理','menu','','',0,1,0,1,'fa fa-list','2019-09-06 01:21:57','2019-09-06 01:21:57'),(21,'文章列表','menu','/articles','articles',20,1,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(22,'发表文章','button',NULL,'article:publish',21,2,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(23,'批量删除文章','button',NULL,'article:batchDelete',21,3,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(24,'批量推送文章','button',NULL,'article:batchPush',21,4,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(25,'推送文章','button',NULL,'article:push',21,5,0,1,NULL,'2019-09-06 01:21:57','2019-09-06 01:21:57'),(26,'置顶文章','button',NULL,'article:top',21,6,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(27,'推荐文章','button',NULL,'article:recommend',21,7,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(28,'编辑文章','button',NULL,'article:edit,article:get',21,8,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(29,'删除文章','button',NULL,'article:delete',21,9,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(30,'分类列表','menu','/article/types','types',20,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(31,'添加分类','button',NULL,'type:add',30,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(32,'批量删除分类','button',NULL,'type:batchDelete',30,3,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(33,'编辑分类','button',NULL,'type:edit,type:get',30,4,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(34,'删除分类','button',NULL,'type:delete',30,5,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(35,'标签列表','menu','/article/tags','tags',20,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(36,'添加标签','button',NULL,'tag:add',35,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(37,'批量删除标签','button',NULL,'tag:batchDelete',35,3,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(38,'编辑标签','button',NULL,'tag:edit,tag:get',35,4,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(39,'删除标签','button',NULL,'tag:delete',35,5,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(40,'网站管理','menu','','',0,2,0,1,'fa fa-globe','2019-09-06 01:21:58','2019-09-06 01:21:58'),(41,'友情链接','menu','/links','links',40,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(42,'添加友情链接','button',NULL,'link:add',41,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(43,'批量删除友情链接','button',NULL,'link:batchDelete',41,3,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(44,'编辑友情链接','button',NULL,'link:edit,link:get',41,4,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(45,'删除友情链接','button',NULL,'link:delete',41,5,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(46,'评论管理','menu','/comments','comments',40,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(47,'批量删除评论','button',NULL,'comment:batchDelete',46,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(48,'回复评论','button',NULL,'comment:reply',46,3,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(49,'审核评论','button',NULL,'comment:audit',46,4,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(50,'删除评论','button',NULL,'comment:delete',46,5,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(51,'模板管理','menu','/templates','templates',40,3,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(52,'添加模板','button',NULL,'template:add',51,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(53,'批量删除模板','button',NULL,'template:batchDelete',51,3,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(54,'编辑模板','button',NULL,'template:edit,template:get',51,4,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(55,'删除模板','button',NULL,'template:delete',51,5,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(56,'更新日志','menu','/updates','updateLogs',40,4,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(57,'添加更新日志','button',NULL,'updateLog:add',51,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(58,'批量删除更新日志','button',NULL,'updateLog:batchDelete',51,3,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(59,'编辑更新日志','button',NULL,'updateLog:edit,updateLog:get',51,4,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(60,'删除更新日志','button',NULL,'updateLog:delete',51,5,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(61,'公告管理','menu','/notices','notices',40,5,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(62,'添加公告','button',NULL,'notice:add',61,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(63,'批量删除公告','button',NULL,'notice:batchDelete',61,3,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(64,'编辑公告','button',NULL,'notice:edit,notice:get',61,4,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(65,'删除公告','button',NULL,'notice:delete',61,5,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(66,'发布公告','button',NULL,'notice:release',61,6,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(67,'撤回公告','button',NULL,'notice:withdraw',61,7,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(68,'测试页面','menu','','',0,6,0,1,'fa fa-desktop','2019-09-06 01:21:58','2019-09-06 01:21:58'),(69,'icons图标','menu','/icons','icons',68,2,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(70,'shiro测试','menu','/shiro','shiro',68,3,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(71,'推送消息','menu','/notice','notice',72,NULL,0,1,'','2019-09-06 01:21:58','2019-09-06 01:21:58'),(72,'实验室','menu','','',0,5,0,1,'fa fa-flask','2019-09-06 01:21:58','2019-09-06 01:21:58'),(73,'文章搬运工','menu','/remover','remover',72,NULL,0,1,'','2019-09-06 01:21:58','2019-09-06 01:21:58'),(74,'编辑器','menu','/editor','editor',68,NULL,0,1,'','2019-09-06 01:21:58','2019-09-06 01:21:58'),(75,'文件管理','menu','/files','files',40,6,0,1,NULL,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(77,'添加文件','button','','file:add',75,1,0,1,'','2019-09-16 11:47:59','2019-09-16 11:47:59'),(78,'文件列表','button','','file:list',75,1,0,1,'','2019-09-16 14:29:19','2019-09-16 14:29:19'),(80,'删除文件','button','','file:remove',75,1,0,1,'','2019-09-16 14:33:19','2019-09-16 14:33:19'),(81,'评论','button','','article:comment',21,1,0,1,'','2019-09-16 17:41:06','2019-09-16 17:41:06'),(82,'上传头像','button','','file:list,file:add',NULL,1,0,1,'','2019-09-16 18:01:54','2019-09-16 18:01:54'),(83,'导入选品库数据','button','','import:add',NULL,NULL,0,1,'','2020-03-11 14:53:07','2020-03-11 14:53:07'),(84,'选品库','menu','/import','imports',20,NULL,0,1,'','2020-03-12 15:52:26','2020-03-12 16:34:33');
/*!40000 ALTER TABLE `sys_resources` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_role`
--

DROP TABLE IF EXISTS `sys_role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_role` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(100) DEFAULT NULL COMMENT '角色名',
  `description` varchar(100) DEFAULT NULL,
  `available` tinyint(1) DEFAULT '0',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_role`
--

LOCK TABLES `sys_role` WRITE;
/*!40000 ALTER TABLE `sys_role` DISABLE KEYS */;
INSERT INTO `sys_role` VALUES (1,'role:root','超级管理员',1,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(2,'role:admin','管理员',1,'2019-09-06 01:21:58','2020-06-05 10:27:35'),(3,'role:comment','评论审核管理员',1,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(4,'role:user','普通用户',1,'2019-09-16 11:03:57','2019-09-16 16:26:30');
/*!40000 ALTER TABLE `sys_role` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_role_resources`
--

DROP TABLE IF EXISTS `sys_role_resources`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_role_resources` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `role_id` bigint(20) unsigned NOT NULL,
  `resources_id` bigint(20) unsigned NOT NULL,
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=662 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_role_resources`
--

LOCK TABLES `sys_role_resources` WRITE;
/*!40000 ALTER TABLE `sys_role_resources` DISABLE KEYS */;
INSERT INTO `sys_role_resources` VALUES (1,1,1,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(2,1,2,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(3,1,3,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(4,1,4,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(5,1,5,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(6,1,6,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(7,1,7,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(8,1,8,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(9,1,9,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(10,1,10,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(11,1,11,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(12,1,12,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(13,1,13,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(14,1,14,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(15,1,15,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(16,1,16,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(17,1,17,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(18,1,18,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(19,1,19,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(20,1,20,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(21,1,21,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(22,1,22,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(23,1,23,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(24,1,24,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(25,1,25,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(26,1,26,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(27,1,27,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(28,1,28,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(29,1,29,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(30,1,30,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(31,1,31,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(32,1,32,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(33,1,33,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(34,1,34,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(35,1,35,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(36,1,36,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(37,1,37,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(38,1,38,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(39,1,39,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(40,1,40,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(41,1,41,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(42,1,42,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(43,1,43,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(44,1,44,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(45,1,45,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(46,1,46,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(47,1,47,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(48,1,48,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(49,1,49,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(50,1,50,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(51,1,51,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(52,1,52,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(53,1,57,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(54,1,53,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(55,1,58,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(56,1,54,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(57,1,59,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(58,1,55,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(59,1,60,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(60,1,56,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(61,1,61,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(62,1,62,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(63,1,63,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(64,1,64,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(65,1,65,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(66,1,66,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(67,1,67,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(68,1,68,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(93,3,40,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(94,3,46,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(95,3,48,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(96,3,49,'2019-09-06 01:21:58','2019-09-06 01:21:58'),(350,4,20,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(351,4,21,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(352,4,81,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(353,4,22,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(354,4,23,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(355,4,24,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(356,4,25,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(357,4,28,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(358,4,29,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(359,4,82,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(360,4,72,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(361,4,73,'2019-09-18 17:34:49','2019-09-18 17:34:49'),(616,2,20,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(617,2,21,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(618,2,81,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(619,2,22,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(620,2,23,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(621,2,24,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(622,2,25,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(623,2,26,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(624,2,27,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(625,2,28,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(626,2,29,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(627,2,30,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(628,2,31,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(629,2,32,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(630,2,33,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(631,2,34,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(632,2,35,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(633,2,36,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(634,2,37,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(635,2,38,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(636,2,39,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(637,2,82,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(638,2,40,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(639,2,46,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(640,2,47,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(641,2,48,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(642,2,49,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(643,2,50,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(644,2,61,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(645,2,62,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(646,2,63,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(647,2,64,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(648,2,65,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(649,2,66,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(650,2,67,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(651,2,75,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(652,2,77,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(653,2,78,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(654,2,80,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(655,2,72,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(656,2,71,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(657,2,73,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(658,2,68,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(659,2,74,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(660,2,69,'2020-06-05 10:27:53','2020-06-05 10:27:53'),(661,2,70,'2020-06-05 10:27:53','2020-06-05 10:27:53');
/*!40000 ALTER TABLE `sys_role_resources` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_template`
--

DROP TABLE IF EXISTS `sys_template`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_template` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `ref_key` varchar(100) DEFAULT NULL COMMENT '键',
  `ref_value` text COMMENT '模板内容',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_template`
--

LOCK TABLES `sys_template` WRITE;
/*!40000 ALTER TABLE `sys_template` DISABLE KEYS */;
INSERT INTO `sys_template` VALUES (1,'TM_SITEMAP_XML','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<urlset xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\">\r\n	<url>\r\n		<loc>${config.siteUrl}</loc>\r\n		<priority>1.0</priority>\r\n		<lastmod>${.now?string(\"yyyy-MM-dd\")}</lastmod>\r\n		<changefreq>daily</changefreq>\r\n	</url>\r\n	<url>\r\n		<loc>${config.siteUrl}/about</loc>\r\n		<priority>0.6</priority>\r\n		<lastmod>${.now?string(\"yyyy-MM-dd\")}</lastmod>\r\n		<changefreq>daily</changefreq>\r\n	</url>\r\n	<url>\r\n		<loc>${config.siteUrl}/links</loc>\r\n		<priority>0.6</priority>\r\n		<lastmod>${.now?string(\"yyyy-MM-dd\")}</lastmod>\r\n		<changefreq>daily</changefreq>\r\n	</url>\r\n	<url>\r\n		<loc>${config.siteUrl}/guestbook</loc>\r\n		<priority>0.6</priority>\r\n		<lastmod>${.now?string(\"yyyy-MM-dd\")}</lastmod>\r\n		<changefreq>daily</changefreq>\r\n	</url>\r\n	<url>\r\n		<loc>${config.siteUrl}/updateLog</loc>\r\n		<priority>0.6</priority>\r\n		<lastmod>${.now?string(\"yyyy-MM-dd\")}</lastmod>\r\n		<changefreq>daily</changefreq>\r\n	</url>\r\n	<url>\r\n		<loc>${config.siteUrl}/recommended</loc>\r\n		<priority>0.6</priority>\r\n		<lastmod>${.now?string(\"yyyy-MM-dd\")}</lastmod>\r\n		<changefreq>daily</changefreq>\r\n	</url>\r\n	<#list articleList as item>\r\n		<url>\r\n			<loc>${config.siteUrl}/article/${item.id}</loc>\r\n			<priority>0.6</priority>\r\n			<lastmod>${item.updateTime?string(\"yyyy-MM-dd\")}</lastmod>\r\n			<changefreq>daily</changefreq>\r\n		</url>\r\n	</#list>\r\n	<#list articleTypeList as item>\r\n	   <url>\r\n			<loc>${config.siteUrl}/type/${item.id}</loc>\r\n			<priority>0.6</priority>\r\n			<lastmod>${item.updateTime?string(\"yyyy-MM-dd\")}</lastmod>\r\n			<changefreq>daily</changefreq>\r\n		</url>\r\n	</#list>\r\n	\r\n	<#list articleTagsList as item>\r\n	   <url>\r\n			<loc>${config.siteUrl}/tag/${item.id}</loc>\r\n			<priority>0.6</priority>\r\n			<lastmod>${item.updateTime?string(\"yyyy-MM-dd\")}</lastmod>\r\n			<changefreq>daily</changefreq>\r\n		</url>\r\n	</#list>\r\n</urlset>','2019-09-06 01:21:57','2019-09-06 01:21:57'),(2,'TM_SITEMAP_TXT','${config.siteUrl}\r\n${config.siteUrl}/about\r\n${config.siteUrl}/links\r\n${config.siteUrl}/guestbook\r\n${config.siteUrl}/updateLog\r\n${config.siteUrl}/recommended\r\n<#list articleList as item>\r\n${config.siteUrl}/article/${item.id}\r\n</#list>\r\n<#list articleTypeList as item>\r\n${config.siteUrl}/type/${item.id}\r\n</#list>\r\n<#list articleTagsList as item>\r\n${config.siteUrl}/tag/${item.id}\r\n</#list>','2019-09-06 01:21:57','2019-09-06 01:21:57'),(3,'TM_SITEMAP_HTML','<!DOCTYPE html>\r\n<html lang=\"zh-CN\">\r\n<head>\r\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n    <title>${config.siteName} 网站地图</title>\r\n    <meta name=\"author\" content=\"SiteMapX.com\"/>\r\n    <meta name=\"robots\" content=\"index,follow\"/>\r\n    <style type=\"text/css\">\r\n        body {\r\n            color: #000000;\r\n            background: #ffffff;\r\n            margin: 20px;\r\n            font-family: Verdana, Arial, Helvetica, sans-serif;\r\n            font-size: 12px;\r\n        }\r\n\r\n        #myTable {\r\n            list-style: none;\r\n            margin: 10px 0px 10px 0px;\r\n            padding: 0px;\r\n            width: 100%;\r\n            min-width: 804px;\r\n        }\r\n\r\n        #myTable li {\r\n            list-style-type: none;\r\n            width: 100%;\r\n            min-width: 404px;\r\n            height: 20px;\r\n            line-height: 20px;\r\n        }\r\n\r\n        .pull-left{\r\n            float: left!important;\r\n        }\r\n        .pull-right{\r\n            float: right!important;\r\n        }\r\n\r\n        #myTable li .T1-h {\r\n            font-weight: bold;\r\n            min-width: 300px;\r\n        }\r\n\r\n        #myTable li .T2-h {\r\n            width: 200px;\r\n            font-weight: bold;\r\n        }\r\n\r\n        #myTable li .T3-h {\r\n            width: 200px;\r\n            font-weight: bold;\r\n        }\r\n\r\n        #myTable li .T4-h {\r\n            width: 100px;\r\n            font-weight: bold;\r\n        }\r\n\r\n        #myTable li .T1 {\r\n            min-width: 300px;\r\n        }\r\n\r\n        #myTable li .T2 {\r\n            width: 200px;\r\n        }\r\n\r\n        #myTable li .T3 {\r\n            width: 200px;\r\n        }\r\n\r\n        #myTable li .T4 {\r\n            width: 100px;\r\n        }\r\n\r\n        #footer {\r\n            padding: 2px;\r\n            margin: 0px;\r\n            font-size: 8pt;\r\n            color: gray;\r\n            min-width: 900px;\r\n        }\r\n\r\n        #footer a {\r\n            color: gray;\r\n        }\r\n\r\n        .myClear {\r\n            clear: both;\r\n        }\r\n\r\n        #nav, #content, #footer {padding: 8px; border: 1px solid #EEEEEE; clear: both; width: 95%; margin: auto; margin-top: 10px;}\r\n\r\n    </style>\r\n</head>\r\n<body>\r\n<h2 style=\"text-align: center; margin-top: 20px\">${config.siteName?if_exists} 网站地图 </h2>\r\n<div id=\"nav\"><a href=\"${config.siteUrl?if_exists}\"><strong>${config.siteName?if_exists}</strong></a> &raquo; <a href=\"${config.siteUrl?if_exists}/sitemap.html\">站点地图</a></div>\r\n<div id=\"content\">\r\n    <h3>最新文章</h3>\r\n    <ul id=\"myTable\">\r\n        <li>\r\n            <div class=\"T1-h pull-left\">URL</div>\r\n            <div class=\"T2-h pull-right\">Last Change</div>\r\n            <div class=\"T3-h pull-right\">Change Frequency</div>\r\n            <div class=\"T4-h pull-right\">Priority</div>\r\n        </li>\r\n        <div class=\"myClear\"></div>\r\n        <li>\r\n            <div class=\"T1 pull-left\"><a href=\"${config.siteUrl}\" title=\"${config.siteName}\">${config.siteName} | 一个程序员的个人博客</a></div>\r\n            <div class=\"T2 pull-right\">${.now?string(\"yyyy-MM-dd\")}</div>\r\n            <div class=\"T3 pull-right\">daily</div>\r\n            <div class=\"T4 pull-right\">1</div>\r\n        </li>\r\n        <div class=\"myClear\"></div>\r\n        <li>\r\n            <div class=\"T1 pull-left\"><a href=\"${config.siteUrl}/about\" title=\"${config.siteName}\">关于 | ${config.siteName}</a></div>\r\n            <div class=\"T2 pull-right\">${.now?string(\"yyyy-MM-dd\")}</div>\r\n            <div class=\"T3 pull-right\">daily</div>\r\n            <div class=\"T4 pull-right\">0.6</div>\r\n        </li>\r\n        <div class=\"myClear\"></div>\r\n        <li>\r\n            <div class=\"T1 pull-left\"><a href=\"${config.siteUrl}/links\" title=\"${config.siteName}\">友情链接 | ${config.siteName}</a></div>\r\n            <div class=\"T2 pull-right\">${.now?string(\"yyyy-MM-dd\")}</div>\r\n            <div class=\"T3 pull-right\">daily</div>\r\n            <div class=\"T4 pull-right\">0.6</div>\r\n        </li>\r\n        <div class=\"myClear\"></div>\r\n        <li>\r\n            <div class=\"T1 pull-left\"><a href=\"${config.siteUrl}/guestbook\" title=\"${config.siteName}\">留言板 | ${config.siteName}</a></div>\r\n            <div class=\"T2 pull-right\">${.now?string(\"yyyy-MM-dd\")}</div>\r\n            <div class=\"T3 pull-right\">daily</div>\r\n            <div class=\"T4 pull-right\">0.6</div>\r\n        </li>\r\n        <div class=\"myClear\"></div>\r\n        <li>\r\n            <div class=\"T1 pull-left\"><a href=\"${config.siteUrl}/updateLog\" title=\"${config.siteName}\">网站更新记录 | ${config.siteName}</a></div>\r\n            <div class=\"T2 pull-right\">${.now?string(\"yyyy-MM-dd\")}</div>\r\n            <div class=\"T3 pull-right\">daily</div>\r\n            <div class=\"T4 pull-right\">0.6</div>\r\n        </li>\r\n		<div class=\"myClear\"></div>\r\n        <li>\r\n            <div class=\"T1 pull-left\"><a href=\"${config.siteUrl}/recommended\" title=\"${config.siteName}\">站长推荐 | ${config.siteName}</a></div>\r\n            <div class=\"T2 pull-right\">${.now?string(\"yyyy-MM-dd\")}</div>\r\n            <div class=\"T3 pull-right\">daily</div>\r\n            <div class=\"T4 pull-right\">0.6</div>\r\n        </li>\r\n        <div class=\"myClear\"></div>\r\n        <#list articleList as item>\r\n            <li>\r\n                <div class=\"T1 pull-left\"><a href=\"${config.siteUrl}/article/${item.id}\" title=\"${item.title}\">${item.title} | ${config.siteName}</a></div>\r\n                <div class=\"T2 pull-right\">${item.updateTime?string(\"yyyy-MM-dd\")}</div>\r\n                <div class=\"T3 pull-right\">daily</div>\r\n                <div class=\"T4 pull-right\">0.6</div>\r\n            </li>\r\n            <div class=\"myClear\"></div>\r\n        </#list>\r\n    </ul>\r\n</div>\r\n<div id=\"content\">\r\n    <h3>分类目录</h3>\r\n    <ul id=\"myTable\">\r\n        <#list articleTypeList as item>\r\n            <li>\r\n                <div class=\"T1 pull-left\"><a href=\"${config.siteUrl}/type/${item.id}\" title=\"${item.name}\">${item.name} | ${config.siteName}</a></div>\r\n                <div class=\"T2 pull-right\">${item.updateTime?string(\"yyyy-MM-dd\")}</div>\r\n                <div class=\"T3 pull-right\">daily</div>\r\n                <div class=\"T4 pull-right\">0.6</div>\r\n            </li>\r\n            <div class=\"myClear\"></div>\r\n        </#list>\r\n    </ul>\r\n</div>\r\n<div id=\"content\">\r\n    <h3>标签目录</h3>\r\n    <ul id=\"myTable\">\r\n        <#list articleTagsList as item>\r\n            <li>\r\n                <div class=\"T1 pull-left\"><a href=\"${config.siteUrl}/tag/${item.id}\" title=\"${item.name}\">${item.name} | ${config.siteName}</a></div>\r\n                <div class=\"T2 pull-right\">${item.updateTime?string(\"yyyy-MM-dd\")}</div>\r\n                <div class=\"T3 pull-right\">daily</div>\r\n                <div class=\"T4 pull-right\">0.6</div>\r\n            </li>\r\n            <div class=\"myClear\"></div>\r\n        </#list>\r\n    </ul>\r\n</div>\r\n<div id=\"footer\">\r\n    该文件由<a href=\"${config.siteUrl}\" title=\"${config.siteName}\">${config.siteName}</a>网站自动生成。\r\n</div>\r\n</body>\r\n</html>','2019-09-06 01:21:57','2019-09-06 01:21:57'),(4,'TM_ROBOTS','Crawl-delay: 5\r\nSitemap: ${config.cmsUrl}/sitemap.txt\r\nSitemap: ${config.cmsUrl}/sitemap.xml\r\nSitemap: ${config.cmsUrl}/sitemap.html\r\n','2019-09-06 01:21:57','2019-09-06 01:21:57'),(5,'TM_LINKS','<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>友情链接操作通知</title>\r\n</head>\r\n<body>\r\n<div style=\"border-radius:5px;font-size:13px;width:680px;font-family:微软雅黑,\'Helvetica Neue\',Arial,sans-serif;margin:10px auto 0px;border:1px solid #eee;max-width:100%\">\r\n    <div style=\"width:100%;background:#2f889a;color:#ffffff;border-radius:5px 5px 0 0\">\r\n        <p style=\"font-size:15px;word-break:break-all;padding:20px 32px;margin:0\">\r\n            友情链接操作通知\r\n        </p>\r\n    </div>\r\n    <div style=\"margin:0px auto;width:90%\">\r\n        <p>站长<a href=\"${link.url?if_exists}\" target=\"_blank\">${link.name?if_exists}</a>，您好!</p>\r\n        <p>您于 ${link.createTime?string(\'yyyy-MM-dd HH:mm:ss\')} 提交的友链申请已通过系统审核。以下为您提交的信息，请确认（如有误，请联系我）！</p>\r\n        <p>\r\n        <ul>\r\n            <li>${link.name?if_exists}</li>\r\n            <li>${link.url?if_exists}</li>\r\n            <li>${link.description?if_exists}</li>\r\n            <li>${link.email?if_exists}</li>\r\n            <li>${link.qq?if_exists}</li>\r\n            <li><img src=\"${link.favicon?if_exists}\" width=\"100\" alt=\"LOGO\"></li>\r\n        </ul>\r\n        </p>\r\n        <p>本站会不定期检查连接有效性，如果因为贵站改版、服务到期等原因导致无法正常访问的，我会暂时停掉贵站友链，待贵站可以正常访问后，本站会继续启用贵站友链。</p>\r\n        <p>特别注意：以下情况，本站将在不做任何通知下，<strong>取消友链</strong>！</p>\r\n        <ul>\r\n            <li>私自取消本站友情链接</li>\r\n            <li>更换域名且未通知本站</li>\r\n            <li>网站内容长期不更新</li>\r\n            <li>友链上使用诸如nofollow之类的属性</li>\r\n        </ul>\r\n        <p>感谢您对 <a style=\"text-decoration:none;\" href=\"${config.siteUrl?if_exists}\" target=\"_blank\">${config.siteName?if_exists}</a> 的关注，如您有任何疑问，欢迎来我网站<a style=\"text-decoration:none;\" href=\"${config.siteUrl}/guestbook\" target=\"_blank\">留言</a>。</p>\r\n        <p>（注：此邮件由系统自动发出，请勿回复。）</p>\r\n    </div>\r\n    <div class=\"adL\">\r\n    </div>\r\n</div>\r\n</body>\r\n</html>','2019-09-06 01:21:57','2019-09-06 01:21:57'),(6,'TM_COMMENT_AUDIT','<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>评论审核结果通知</title>\r\n</head>\r\n<body>\r\n<div style=\"border-radius:5px;font-size:13px;width:680px;font-family:微软雅黑,\'Helvetica Neue\',Arial,sans-serif;margin:10px auto 0px;border:1px solid #eee;max-width:100%\">\r\n    <div style=\"width:100%;background:#2f889a;color:#ffffff;border-radius:5px 5px 0 0\">\r\n        <p style=\"font-size:15px;word-break:break-all;padding:20px 32px;margin:0\">\r\n            评论审核结果通知\r\n        </p>\r\n    </div>\r\n    <div style=\"margin:0px auto;width:90%\">\r\n        <p>${comment.nickname?if_exists}，您好!</p>\r\n        <p>\r\n            您于 ${comment.createTime?string(\'yyyy-MM-dd HH:mm:ss\')} 在文章《${config.siteUrl?if_exists}${comment.sourceUrl?if_exists}》 上发表的<span class=\"il\">评论</span>：\r\n        </p>\r\n        <div style=\"background:#efefef;margin:15px 0px;padding:1px 15px;border-radius:5px;font-size:14px;color:#333\">${comment.content}</div>\r\n        <#if comment.status == \'APPROVED\'>\r\n        <p>已通过管理员审核并显示。</p>\r\n        <p>\r\n            您可以点击 <a style=\"text-decoration:none;\" href=\"${config.siteUrl}${comment.sourceUrl}\" target=\"_blank\">链接</a>查看回复的完整內容。\r\n        </p>\r\n        <#elseif comment.status == \'REJECT\'>\r\n        <p>审核失败！失败原因：</p>\r\n        <p style=\"background:#efefef;margin:15px 0px;padding:1px 15px;border-radius:5px;font-size:14px;color:#333\">${comment.remark}</p>\r\n        <#elseif comment.status == \'DELETED\'>\r\n        <p>已被管理员删除！删除原因：</p>\r\n        <p style=\"background:#efefef;margin:15px 0px;padding:1px 15px;border-radius:5px;font-size:14px;color:#333\">${comment.remark}</p>\r\n        <#else>\r\n        <p>管理员正在审核中！审核通过后将给您及时发送通知！</p>\r\n        </#if>\r\n        <p>感谢您对 <a style=\"text-decoration:none;\" href=\"${config.siteUrl}\" target=\"_blank\">${config.siteName}</a> 的关注，如您有任何疑问，欢迎来我网站<a style=\"text-decoration:none;\" href=\"${config.siteUrl}/guestbook\" target=\"_blank\">留言</a>。</p>\r\n        <p>（注：此邮件由系统自动发出，请勿回复。）</p>\r\n    </div>\r\n    <div class=\"adL\">\r\n    </div>\r\n</div>\r\n</body>\r\n</html>','2019-09-06 01:21:57','2019-09-06 01:21:57'),(7,'TM_COMMENT_REPLY','<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>评论回复通知</title>\r\n</head>\r\n<body>\r\n<div style=\"border-radius:5px;font-size:13px;width:680px;font-family:微软雅黑,\'Helvetica Neue\',Arial,sans-serif;margin:10px auto 0px;border:1px solid #eee;max-width:100%\">\r\n    <div style=\"width:100%;background:#2f889a;color:#ffffff;border-radius:5px 5px 0 0\">\r\n        <p style=\"font-size:15px;word-break:break-all;padding:20px 32px;margin:0\">\r\n            评论回复通知\r\n        </p>\r\n    </div>\r\n    <div style=\"margin:0px auto;width:90%\">\r\n        <p>${comment.nickname}，您好!</p>\r\n        <p>\r\n            您于 ${comment.createTime?string(\'yyyy-MM-dd HH:mm:ss\')} 在文章《${config.siteUrl}${comment.sourceUrl}》 上发表的<span class=\"il\">评论</span>：\r\n        </p>\r\n        <div style=\"background:#efefef;margin:15px 0px;padding:1px 15px;border-radius:5px;font-size:14px;color:#333\">${comment.content}</div>\r\n        <p>\r\n            有了 <strong>新的回复</strong>！您可以点击 <a style=\"text-decoration:none;\" href=\"${config.siteUrl}${comment.sourceUrl}\" target=\"_blank\">链接</a>查看回复的完整內容。\r\n        </p>\r\n        <p>感谢您对 <a style=\"text-decoration:none;\" href=\"${config.siteUrl}\" target=\"_blank\">${config.siteName}</a> 的关注，如您有任何疑问，欢迎来我网站<a style=\"text-decoration:none;\" href=\"${config.siteUrl}/guestbook\" target=\"_blank\">留言</a>。</p>\r\n        <p>（注：此邮件由系统自动发出，请勿回复。）</p>\r\n    </div>\r\n    <div class=\"adL\">\r\n    </div>\r\n</div>\r\n</body>\r\n</html>','2019-09-06 01:21:57','2019-09-06 01:21:57'),(8,'TM_LINKS_TO_ADMIN','<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>友情链接操作通知</title>\r\n</head>\r\n<body>\r\n<div style=\"border-radius:5px;font-size:13px;width:680px;font-family:微软雅黑,\'Helvetica Neue\',Arial,sans-serif;margin:10px auto 0px;border:1px solid #eee;max-width:100%\">\r\n    <div style=\"width:100%;background:#2f889a;color:#ffffff;border-radius:5px 5px 0 0\">\r\n        <p style=\"font-size:15px;word-break:break-all;padding:20px 32px;margin:0\">\r\n            友情链接操作通知\r\n        </p>\r\n    </div>\r\n    <div style=\"margin:0px auto;width:90%\">\r\n        <p>有新的友情链接加入，信息如下</p>\r\n        <p>\r\n        <ul>\r\n            <li>${link.name?if_exists}</li>\r\n            <li>${link.url?if_exists}</li>\r\n            <li>${link.description?if_exists}</li>\r\n            <#if link.favicon?exists><li><img src=\"${link.favicon?if_exists}\" width=\"100\" alt=\"LOGO\"></li></#if>\r\n        </ul>\r\n        </p>\r\n        <p><a style=\"text-decoration:none;\" href=\"${config.cmsUrl}\" target=\"_blank\">去后台继续审核</a>。</p>\r\n        <p>（注：此邮件由系统自动发出，请勿回复。）</p>\r\n    </div>\r\n    <div class=\"adL\">\r\n    </div>\r\n</div>\r\n</body>\r\n</html>','2019-09-06 01:21:57','2019-09-06 01:21:57'),(9,'TM_NEW_COMMENT','<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>新评论通知</title>\r\n</head>\r\n<body>\r\n<div style=\"border-radius:5px;font-size:13px;width:680px;font-family:微软雅黑,\'Helvetica Neue\',Arial,sans-serif;margin:10px auto 0px;border:1px solid #eee;max-width:100%\">\r\n    <div style=\"width:100%;background:#2f889a;color:#ffffff;border-radius:5px 5px 0 0\">\r\n        <p style=\"font-size:15px;word-break:break-all;padding:20px 32px;margin:0\">\r\n            新评论通知\r\n        </p>\r\n    </div>\r\n    <div style=\"margin:0px auto;width:90%\">\r\n        <p>\r\n            评论内容：\r\n        </p>\r\n        <div style=\"background:#efefef;margin:15px 0px;padding:1px 15px;border-radius:5px;font-size:14px;color:#333\"><#if comment?exists>${comment.content}<#else>**无评论内容**</#if></div>\r\n        <p>\r\n            <a style=\"text-decoration:none;\" href=\"${config.siteUrl}${comment.sourceUrl}\" target=\"_blank\">查看完整评论</a>\r\n        </p>\r\n        <p>（注：此邮件由系统自动发出，请勿回复。）</p>\r\n    </div>\r\n    <div class=\"adL\">\r\n    </div>\r\n</div>\r\n</body>\r\n</html>','2019-09-06 01:21:57','2019-09-06 01:21:57'),(10,'TM_NGINX_FILE_SERVER','server {\r\n    listen 80;\r\n    server_name serverName;\r\n    root serverPath;\r\n	error_page 403 /error.html;\r\n	location = /error.html {\r\n		return 404;\r\n	}\r\n	autoindex off; \r\n	autoindex_exact_size off; \r\n	autoindex_localtime off; \r\n	\r\n	location ^~ / {\r\n		proxy_set_header Host $host:$server_port;\r\n    }\r\n	\r\n	location ~*\\.(jpg|gif|png|swf|flv|wma|wmv|asf|mp3|mmf|zip|rar|js|css)$ {\r\n		expires 30d;\r\n		valid_referers serverReferers;\r\n		if ($invalid_referer) {\r\n			rewrite ^/ serverLogoPath;\r\n		}\r\n    }\r\n}\r\n','2019-09-06 01:21:57','2019-09-06 01:21:57');
/*!40000 ALTER TABLE `sys_template` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_update_recorde`
--

DROP TABLE IF EXISTS `sys_update_recorde`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_update_recorde` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `version` varchar(20) DEFAULT NULL COMMENT '更新版本',
  `description` varchar(2500) DEFAULT NULL COMMENT '更新记录备注',
  `recorde_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '项目更新时间',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_update_recorde`
--

LOCK TABLES `sys_update_recorde` WRITE;
/*!40000 ALTER TABLE `sys_update_recorde` DISABLE KEYS */;
INSERT INTO `sys_update_recorde` VALUES (1,'1.0.1','第一版','2019-09-06 01:21:57','2019-09-06 01:21:57','2019-09-06 01:21:57');
/*!40000 ALTER TABLE `sys_update_recorde` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_user`
--

DROP TABLE IF EXISTS `sys_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_user` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(100) DEFAULT NULL,
  `password` varchar(100) DEFAULT NULL COMMENT '登录密码',
  `nickname` varchar(30) DEFAULT '' COMMENT '昵称',
  `mobile` varchar(30) DEFAULT NULL COMMENT '手机号',
  `email` varchar(100) DEFAULT NULL COMMENT '邮箱地址',
  `qq` varchar(20) DEFAULT NULL COMMENT 'QQ',
  `birthday` date DEFAULT NULL COMMENT '生日',
  `gender` smallint(2) DEFAULT NULL COMMENT '性别',
  `avatar` varchar(255) DEFAULT NULL COMMENT '头像地址',
  `user_type` enum('ROOT','ADMIN','USER') DEFAULT 'ADMIN' COMMENT '超级管理员、管理员、普通用户',
  `company` varchar(100) DEFAULT NULL COMMENT '公司',
  `blog` varchar(255) DEFAULT NULL COMMENT '个人博客地址',
  `location` varchar(255) DEFAULT NULL COMMENT '地址',
  `source` enum('GITHUB','GITEE','WEIBO','DINGTALK','BAIDU','CSDN','CODING','OSCHINA','TENCENT_CLOUD','ALIPAY','TAOBAO','QQ','WECHAT','GOOGLE','FACEBOOK') DEFAULT NULL COMMENT '用户来源',
  `uuid` varchar(50) DEFAULT NULL COMMENT '用户唯一表示(第三方网站)',
  `privacy` tinyint(2) DEFAULT NULL COMMENT '隐私（1：公开，0：不公开）',
  `notification` tinyint(2) unsigned DEFAULT NULL COMMENT '通知：(1：通知显示消息详情，2：通知不显示详情)',
  `score` int(10) unsigned DEFAULT '0' COMMENT '金币值',
  `experience` int(10) unsigned DEFAULT '0' COMMENT '经验值',
  `reg_ip` varchar(30) DEFAULT NULL COMMENT '注册IP',
  `last_login_ip` varchar(30) DEFAULT NULL COMMENT '最近登录IP',
  `last_login_time` datetime DEFAULT NULL COMMENT '最近登录时间',
  `login_count` int(10) unsigned DEFAULT '0' COMMENT '登录次数',
  `remark` varchar(100) DEFAULT NULL COMMENT '用户备注',
  `status` int(1) unsigned DEFAULT NULL COMMENT '用户状态',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '注册时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_user`
--

LOCK TABLES `sys_user` WRITE;
/*!40000 ALTER TABLE `sys_user` DISABLE KEYS */;
INSERT INTO `sys_user` VALUES (1,'root','jcO6Vuy9TByPv+6olUAagA==','超级管理员','18408234575','1432678620@qq.com','1432678620',NULL,NULL,'https://lcools.cn/static/imgs/favicon.ico','ROOT',NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,NULL,'0:0:0:0:0:0:0:1','2020-07-19 11:39:51',492,NULL,1,'2019-09-06 01:21:59','2020-07-19 11:39:51'),(11,'liushuai','ufbHLDxJZbO5uguBmW17rw==','liushuai','18408234575','1432678620@qq.com','1432678620',NULL,NULL,NULL,'ADMIN',NULL,NULL,NULL,NULL,NULL,1,1,0,0,'117.157.99.114','171.221.254.160','2020-06-05 10:32:54',8,NULL,1,'2019-09-18 17:41:48','2020-06-05 10:32:54'),(13,'type','xlCQzNolKyJ5XwKtRuP5Iw==','菜的抠脚','18180573083','2550225937@qq.com','2550225938',NULL,NULL,NULL,'ADMIN',NULL,NULL,NULL,NULL,NULL,1,1,0,0,'117.157.99.114','118.113.134.19','2020-06-05 10:19:22',3,NULL,1,'2019-10-11 09:36:15','2020-06-05 10:19:22'),(23,'远逐的梦',NULL,'远逐的梦',NULL,NULL,NULL,NULL,1,'http://thirdqq.qlogo.cn/g?b=oidb&k=Q3gECFKbzv3weg86a02gcA&s=100&t=1577958271','USER',NULL,NULL,'四川-成都','QQ','A2219DD257DA9A799461914448B2B665',1,1,0,0,'42.91.162.9','171.221.254.160','2020-06-05 10:39:33',11,NULL,1,'2019-10-13 00:50:43','2020-06-05 10:39:33'),(24,'徐红婴',NULL,'徐红婴',NULL,NULL,NULL,NULL,1,'http://thirdqq.qlogo.cn/g?b=oidb&k=C9B39VuCuKCRl9Vn1qT5Lw&s=100&t=1556858453','USER',NULL,NULL,'四川-','QQ','CB59A3181811099995F4885C9BAE31C7',1,1,0,0,'182.150.55.8','182.150.55.8','2019-10-14 10:38:36',1,NULL,1,'2019-10-14 10:38:35','2019-10-14 10:38:36'),(25,'Sy',NULL,'Sy',NULL,NULL,NULL,NULL,0,'http://thirdqq.qlogo.cn/g?b=oidb&k=tySnsrp4MA4YjgrOPplj6w&s=100&t=1577073128','USER',NULL,NULL,'广东-深圳','QQ','3BFBECAFA2AD408FF6618D448245E76D',1,1,0,0,'27.38.4.141','27.38.4.141','2019-12-26 22:19:20',1,NULL,1,'2019-12-26 22:19:20','2019-12-26 22:19:20'),(26,'辰',NULL,'辰',NULL,NULL,NULL,NULL,0,'http://thirdqq.qlogo.cn/g?b=oidb&k=ZGDoc4cVE94DvfN2fsAkzg&s=100&t=1569374313','USER',NULL,NULL,'-赫拉特','QQ','87E4728FEC08083D1C291FA49F60990F',1,1,0,0,'116.6.99.221','116.6.99.221','2019-12-27 11:13:46',1,NULL,1,'2019-12-27 11:13:46','2019-12-27 11:13:46');
/*!40000 ALTER TABLE `sys_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sys_user_role`
--

DROP TABLE IF EXISTS `sys_user_role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_user_role` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL,
  `role_id` bigint(20) unsigned NOT NULL,
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sys_user_role`
--

LOCK TABLES `sys_user_role` WRITE;
/*!40000 ALTER TABLE `sys_user_role` DISABLE KEYS */;
INSERT INTO `sys_user_role` VALUES (1,1,1,'2019-09-06 01:21:59','2019-09-06 01:21:59'),(13,17,4,'2019-10-12 22:59:32','2019-10-12 22:59:32'),(14,18,4,'2019-10-12 23:18:21','2019-10-12 23:18:21'),(15,19,4,'2019-10-13 00:13:19','2019-10-13 00:13:19'),(16,20,4,'2019-10-13 00:22:20','2019-10-13 00:22:20'),(20,24,4,'2019-10-14 10:38:35','2019-10-14 10:38:35'),(21,23,1,'2019-10-22 19:18:05','2019-10-22 19:18:05'),(26,25,4,'2019-12-26 22:19:20','2019-12-26 22:19:20'),(27,26,4,'2019-12-27 11:13:46','2019-12-27 11:13:46'),(28,13,2,'2020-06-05 10:28:36','2020-06-05 10:28:36'),(29,11,2,'2020-06-05 10:28:53','2020-06-05 10:28:53');
/*!40000 ALTER TABLE `sys_user_role` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-08-14  2:32:27
